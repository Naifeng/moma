
/*
 * This code was generated by Spiral 8.5.1, www.spiral.net
 */

#include <stdint.h>
__device__ uint64_t P2[67108864];
__device__ uint64_t P1[67108864];

__device__ void MPMulQDD_L3(uint64_t &t8905, uint64_t &t8906, uint64_t &t8907, uint64_t &t8908, uint64_t &t8895, uint64_t &t8896, uint64_t &t8897, uint64_t &t8898, uint64_t &t8885, uint64_t &t8886, uint64_t &t8887, uint64_t &t8888, uint64_t &t5263, uint64_t &t5260, uint64_t &t5255, uint64_t &t5256, uint64_t t7199, uint64_t t7200, uint64_t t7201, uint64_t t7202, uint64_t t7195, uint64_t t7196, uint64_t t7197, uint64_t t7198, uint64_t t7191, uint64_t t7192, uint64_t t7193, uint64_t t7194, uint64_t t7187, uint64_t t7188, uint64_t t7189, uint64_t t7190) {
    int a35429, a35431, a35432, a35442, a35444, a35445, a35450, a35473, 
            a35475, a35476, a35486, a35488, a35489, a35494, a35517, a35519, 
            a35520, a35530, a35532, a35533, a35538, a35561, a35563, a35564, 
            a35574, a35576, a35577, a35582, a35589, a35591, a35592, a35597, 
            a35599, a35600, a35605, a35606, a35607, a35608, a35609, a35610, 
            a35611, a35615, a35617, a35618, a35623, a35624, a35625, a35630, 
            a35632, a35633, a35638, a35639, a35640, a35641, a35642, a35643, 
            a35644, a35645, a35646, a35647, c740, c741, c742, c743, 
            c744, c745, c746, c747, c748, c749, c750, c751, 
            c752, c753, c754, c755, c756, c757, c758, c759, 
            c760, c761, c762, c763, c764, c766, c767, c768, 
            c769, c770, c771, c772, c773, c774, c775, c776, 
            c777, c778, c779, c780, c781, c782, c783, c784, 
            c785, c786, c787, c788, c789, c790, c792, c793, 
            c794, c795, c796, c797, c798, c799, c800, c801, 
            c802, c803, c804, c805, c806, c807, c808, c809, 
            c810, c811, c812, c813, c814, c815, c816, c818, 
            c819, c820, c821, c822, c823, c824, c825, c826, 
            c827, c828, c829, c830, c831, c832, c833, c834, 
            c835, c836, c837, c838, c839, c840, c841, c842, 
            c844, c845, c846, c847, c848, c849, c850, c851, 
            c852, c853, c854, c855, c856, c857, c858, c859, 
            c860, c861, c862, c863, c864, c865, c866, c867, 
            c868, c869, c871, c872;
    uint64_t a35430, a35433, a35443, a35446, a35451, a35474, a35477, a35487, 
            a35490, a35495, a35518, a35521, a35531, a35534, a35539, a35562, 
            a35565, a35575, a35578, a35583, a35590, a35593, a35598, a35601, 
            a35616, a35619, a35631, a35634, t11337, t11338, t11339, t11340, 
            t11341, t11342, t11343, t11344, t11345, t11346, t11347, t11348, 
            t11349, t11350, t11351, t11352, t11353, t11354, t11355, t11356, 
            t11357, t11358, t11359, t11360, t11361, t11362, t11363, t11364, 
            t11365, t11366, t11367, t11368, t11369, t11370, t11371, t11372, 
            t11373, t11374, t11375, t11376, t11377, t11378, t11379, t11380, 
            t11381, t11382, t11383, t11384, t11385, t11386, t11387, t11388, 
            t11389, t11390, t11391, t11392, t11393, t11394, t11395, t11396, 
            t11397, t11398, t11399, t11401, t11402, t11403, t11404, t11405, 
            t11406, t11407, t11408, t11409, t11411, t11412, t11413, t11414, 
            t11417, t11418, t11419, t11420, t11421, t11422, t11423, t11424, 
            t11425, t11426, t11427, t11428, t11429, t11430, t11431, t11432, 
            t11433, t11434, t11435, t11436, t11437, t11438, t11439, t11440, 
            t11441, t11442, t11443, t11444, t11445, t11446, t11447, t11448, 
            t11449, t11450, t11451, t11452, t11453, t11454, t11455, t11456, 
            t11457, t11458, t11459, t11460, t11461, t11462, t11463, t11464, 
            t11465, t11466, t11467, t11468, t11469, t11470, t11471, t11472, 
            t11473, t11474, t11475, t11476, t11477, t11478, t11479, t11481, 
            t11482, t11483, t11484, t11485, t11486, t11487, t11488, t11489, 
            t11491, t11492, t11493, t11494, t11497, t11498, t11499, t11500, 
            t11501, t11502, t11503, t11504, t11505, t11506, t11507, t11508, 
            t11509, t11510, t11511, t11512, t11513, t11514, t11515, t11516, 
            t11517, t11518, t11519, t11520, t11521, t11522, t11523, t11524, 
            t11525, t11526, t11527, t11528, t11529, t11530, t11531, t11532, 
            t11533, t11534, t11535, t11536, t11537, t11538, t11539, t11540, 
            t11541, t11542, t11543, t11544, t11545, t11546, t11547, t11548, 
            t11549, t11550, t11551, t11552, t11553, t11554, t11555, t11556, 
            t11557, t11558, t11559, t11561, t11562, t11563, t11564, t11565, 
            t11566, t11567, t11568, t11569, t11571, t11572, t11573, t11574, 
            t11577, t11578, t11579, t11580, t11581, t11582, t11583, t11584, 
            t11585, t11586, t11587, t11588, t11589, t11590, t11591, t11592, 
            t11593, t11594, t11595, t11596, t11597, t11598, t11599, t11600, 
            t11601, t11602, t11603, t11604, t11605, t11606, t11607, t11608, 
            t11609, t11610, t11611, t11612, t11613, t11614, t11615, t11616, 
            t11617, t11618, t11619, t11620, t11621, t11622, t11623, t11624, 
            t11625, t11626, t11627, t11628, t11629, t11630, t11631, t11632, 
            t11633, t11634, t11635, t11636, t11637, t11638, t11639, t11641, 
            t11642, t11643, t11644, t11645, t11646, t11647, t11648, t11649, 
            t11651, t11652, t11653, t11654, t11657, t11658, t11659, t11660, 
            t11661, t11662, t11663, t11665, t11666, t11667, t11668, t11669, 
            t11670, t11671, t11673, t11674, t11675, t11676, t11677, t11678, 
            t11679, t11680, t11681, t11682, t11683, t11684, t11685, t11686, 
            t11687, t11688, t11690, t11691, t11692, t11693, t11694, t11695, 
            t11696, t11697, t11698, t11700, t11701, t11702, t11703, t11704, 
            t11705, t11706, t11707, t11708, t11709, t11710, t11711;
    uint128_t a35413, a35414, a35415, a35416, a35417, a35418, a35419, a35420, 
            a35421, a35422, a35423, a35424, a35425, a35426, a35427, a35428, 
            a35457, a35458, a35459, a35460, a35461, a35462, a35463, a35464, 
            a35465, a35466, a35467, a35468, a35469, a35470, a35471, a35472, 
            a35501, a35502, a35503, a35504, a35505, a35506, a35507, a35508, 
            a35509, a35510, a35511, a35512, a35513, a35514, a35515, a35516, 
            a35545, a35546, a35547, a35548, a35549, a35550, a35551, a35552, 
            a35553, a35554, a35555, a35556, a35557, a35558, a35559, a35560, 
            s1514, s1515, s1516, s1517, s1518, s1519, s1520, s1521, 
            s1522, s1523, s1524, s1525, s1526, s1527, s1528, s1529, 
            s1530, s1531, s1532, s1533, s1534, s1535, s1536, s1537, 
            s1538, s1539, s1540, s1541, s1542, s1543, s1544, s1545, 
            s1546, s1547, s1548, s1549, s1550, s1551, s1552, s1553, 
            s1554, s1555, s1556, s1557, s1558, s1559, s1560, s1561, 
            s1562, s1563, s1564, s1565, s1566, s1567, s1568, s1569, 
            s1570, s1571, s1572, s1573, s1574, s1575, s1576, s1577, 
            s1578, s1579, s1580, s1581, s1582, s1583, s1584, s1585, 
            s1586, s1587, s1588, s1589, s1590, s1591, s1592, s1593, 
            s1594, s1595, s1596, s1597, s1598, s1599, s1600, s1601, 
            s1602, s1603, s1604, s1605, s1606, s1607, s1608, s1609, 
            s1610, s1611, s1612, s1613, s1614, s1615, s1616, s1617, 
            s1618, s1619, s1620, s1621, s1622, s1623, s1624, s1625, 
            s1626, s1627, s1628, s1629, s1630, s1631, s1632, s1633, 
            s1634, s1635, s1636, s1637, s1638, s1639, s1640, s1641, 
            s1642, s1643, s1644, s1645, s1646, s1647, s1648, s1649, 
            s1650, s1651, s1652, s1653, s1654, s1655, s1656, s1657, 
            s1658, s1659, s1660, s1661, s1662, s1663, s1664, s1665, 
            s1666, s1667, s1668, s1669, s1670, s1671, s1672, s1673, 
            s1674, s1675, s1676, s1677, s1678, s1679, s1680, s1681, 
            s1682, s1683, s1684, s1685, s1686, s1687, s1688, s1689, 
            s1690, s1691, s1692, s1693, s1694, s1695, s1696, s1697, 
            s1698, s1699, s1700, s1701, s1702, s1703, s1704, s1705, 
            s1706, s1707, s1708, s1709, s1710, s1711, s1712, s1713, 
            s1714, s1715, s1716, s1717, s1718, s1719, s1720, s1721, 
            s1722, s1723, s1724, s1725, s1726, s1727, s1728, s1729, 
            s1730, s1731, s1732, s1733, s1734, s1735, s1736, s1737, 
            s1738, s1739, s1740, s1741, s1742, s1743;
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35413 = (((uint128_t ) t7198)*((uint128_t ) t7190));
    t11337 = (a35413 >> 64);
    t11338 = ((uint64_t ) a35413);
    a35414 = (((uint128_t ) t7197)*((uint128_t ) t7189));
    t11339 = (a35414 >> 64);
    t11340 = ((uint64_t ) a35414);
    a35415 = (((uint128_t ) t7197)*((uint128_t ) t7190));
    t11341 = (a35415 >> 64);
    t11342 = ((uint64_t ) a35415);
    a35416 = (((uint128_t ) t7198)*((uint128_t ) t7189));
    t11343 = (a35416 >> 64);
    t11344 = ((uint64_t ) a35416);
    /* MPAddQDD 64 */
    s1514 = (((uint128_t ) t11342) + ((uint128_t ) t11344));
    t11345 = ((uint64_t ) s1514);
    c740 = (s1514 >> 64);
    s1515 = (((uint128_t ) t11341) + ((uint128_t ) t11343));
    s1516 = (((uint128_t ) s1515) + ((uint128_t ) c740));
    t11346 = ((uint64_t ) s1516);
    c741 = (s1516 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11347 = ((uint64_t ) t11338);
    s1517 = (((uint128_t ) t11337) + ((uint128_t ) t11345));
    t11348 = ((uint64_t ) s1517);
    c742 = (s1517 >> 64);
    s1518 = (((uint128_t ) t11340) + ((uint128_t ) t11346));
    s1519 = (((uint128_t ) s1518) + ((uint128_t ) c742));
    t11349 = ((uint64_t ) s1519);
    c743 = (s1519 >> 64);
    s1520 = (((uint128_t ) t11339) + ((uint128_t ) c741));
    s1521 = (((uint128_t ) s1520) + ((uint128_t ) c743));
    t11350 = ((uint64_t ) s1521);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35417 = (((uint128_t ) t7196)*((uint128_t ) t7188));
    t11351 = (a35417 >> 64);
    t11352 = ((uint64_t ) a35417);
    a35418 = (((uint128_t ) t7195)*((uint128_t ) t7187));
    t11353 = (a35418 >> 64);
    t11354 = ((uint64_t ) a35418);
    a35419 = (((uint128_t ) t7195)*((uint128_t ) t7188));
    t11355 = (a35419 >> 64);
    t11356 = ((uint64_t ) a35419);
    a35420 = (((uint128_t ) t7196)*((uint128_t ) t7187));
    t11357 = (a35420 >> 64);
    t11358 = ((uint64_t ) a35420);
    /* MPAddQDD 64 */
    s1522 = (((uint128_t ) t11356) + ((uint128_t ) t11358));
    t11359 = ((uint64_t ) s1522);
    c744 = (s1522 >> 64);
    s1523 = (((uint128_t ) t11355) + ((uint128_t ) t11357));
    s1524 = (((uint128_t ) s1523) + ((uint128_t ) c744));
    t11360 = ((uint64_t ) s1524);
    c745 = (s1524 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11361 = ((uint64_t ) t11352);
    s1525 = (((uint128_t ) t11351) + ((uint128_t ) t11359));
    t11362 = ((uint64_t ) s1525);
    c746 = (s1525 >> 64);
    s1526 = (((uint128_t ) t11354) + ((uint128_t ) t11360));
    s1527 = (((uint128_t ) s1526) + ((uint128_t ) c746));
    t11363 = ((uint64_t ) s1527);
    c747 = (s1527 >> 64);
    s1528 = (((uint128_t ) t11353) + ((uint128_t ) c745));
    s1529 = (((uint128_t ) s1528) + ((uint128_t ) c747));
    t11364 = ((uint64_t ) s1529);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35421 = (((uint128_t ) t7196)*((uint128_t ) t7190));
    t11365 = (a35421 >> 64);
    t11366 = ((uint64_t ) a35421);
    a35422 = (((uint128_t ) t7195)*((uint128_t ) t7189));
    t11367 = (a35422 >> 64);
    t11368 = ((uint64_t ) a35422);
    a35423 = (((uint128_t ) t7195)*((uint128_t ) t7190));
    t11369 = (a35423 >> 64);
    t11370 = ((uint64_t ) a35423);
    a35424 = (((uint128_t ) t7196)*((uint128_t ) t7189));
    t11371 = (a35424 >> 64);
    t11372 = ((uint64_t ) a35424);
    /* MPAddQDD 64 */
    s1530 = (((uint128_t ) t11370) + ((uint128_t ) t11372));
    t11373 = ((uint64_t ) s1530);
    c748 = (s1530 >> 64);
    s1531 = (((uint128_t ) t11369) + ((uint128_t ) t11371));
    s1532 = (((uint128_t ) s1531) + ((uint128_t ) c748));
    t11374 = ((uint64_t ) s1532);
    c749 = (s1532 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11375 = ((uint64_t ) t11366);
    s1533 = (((uint128_t ) t11365) + ((uint128_t ) t11373));
    t11376 = ((uint64_t ) s1533);
    c750 = (s1533 >> 64);
    s1534 = (((uint128_t ) t11368) + ((uint128_t ) t11374));
    s1535 = (((uint128_t ) s1534) + ((uint128_t ) c750));
    t11377 = ((uint64_t ) s1535);
    c751 = (s1535 >> 64);
    s1536 = (((uint128_t ) t11367) + ((uint128_t ) c749));
    s1537 = (((uint128_t ) s1536) + ((uint128_t ) c751));
    t11378 = ((uint64_t ) s1537);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35425 = (((uint128_t ) t7198)*((uint128_t ) t7188));
    t11379 = (a35425 >> 64);
    t11380 = ((uint64_t ) a35425);
    a35426 = (((uint128_t ) t7197)*((uint128_t ) t7187));
    t11381 = (a35426 >> 64);
    t11382 = ((uint64_t ) a35426);
    a35427 = (((uint128_t ) t7197)*((uint128_t ) t7188));
    t11383 = (a35427 >> 64);
    t11384 = ((uint64_t ) a35427);
    a35428 = (((uint128_t ) t7198)*((uint128_t ) t7187));
    t11385 = (a35428 >> 64);
    t11386 = ((uint64_t ) a35428);
    /* MPAddQDD 64 */
    s1538 = (((uint128_t ) t11384) + ((uint128_t ) t11386));
    t11387 = ((uint64_t ) s1538);
    c752 = (s1538 >> 64);
    s1539 = (((uint128_t ) t11383) + ((uint128_t ) t11385));
    s1540 = (((uint128_t ) s1539) + ((uint128_t ) c752));
    t11388 = ((uint64_t ) s1540);
    c753 = (s1540 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11389 = ((uint64_t ) t11380);
    s1541 = (((uint128_t ) t11379) + ((uint128_t ) t11387));
    t11390 = ((uint64_t ) s1541);
    c754 = (s1541 >> 64);
    s1542 = (((uint128_t ) t11382) + ((uint128_t ) t11388));
    s1543 = (((uint128_t ) s1542) + ((uint128_t ) c754));
    t11391 = ((uint64_t ) s1543);
    c755 = (s1543 >> 64);
    s1544 = (((uint128_t ) t11381) + ((uint128_t ) c753));
    s1545 = (((uint128_t ) s1544) + ((uint128_t ) c755));
    t11392 = ((uint64_t ) s1545);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1546 = (((uint128_t ) t11375) + ((uint128_t ) t11389));
    t11393 = ((uint64_t ) s1546);
    c756 = (s1546 >> 64);
    s1547 = (((uint128_t ) t11376) + ((uint128_t ) t11390));
    s1548 = (((uint128_t ) s1547) + ((uint128_t ) c756));
    t11394 = ((uint64_t ) s1548);
    c757 = (s1548 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1549 = (((uint128_t ) t11377) + ((uint128_t ) t11391));
    t11395 = ((uint64_t ) s1549);
    c758 = (s1549 >> 64);
    s1550 = (((uint128_t ) t11378) + ((uint128_t ) t11392));
    s1551 = (((uint128_t ) s1550) + ((uint128_t ) c758));
    t11396 = ((uint64_t ) s1551);
    c759 = (s1551 >> 64);
    /* MPPropagateCarry 64 */
    t11397 = (t11395 + c757);
    a35429 = ((t11397 == 0));
    a35430 = (t11396 + c757);
    t11398 = ((a35429) ? (a35430) : (t11396));
    a35431 = ((t11398 == 0));
    a35432 = ((a35431) && (a35429));
    a35433 = (c759 + c757);
    t11399 = ((a35432) ? (a35433) : (c759));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t11401 = ((uint64_t ) t11347);
    t11402 = ((uint64_t ) t11348);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1552 = (((uint128_t ) t11349) + ((uint128_t ) t11393));
    t11403 = ((uint64_t ) s1552);
    c760 = (s1552 >> 64);
    s1553 = (((uint128_t ) t11350) + ((uint128_t ) t11394));
    s1554 = (((uint128_t ) s1553) + ((uint128_t ) c760));
    t11404 = ((uint64_t ) s1554);
    c761 = (s1554 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1555 = (((uint128_t ) t11361) + ((uint128_t ) t11397));
    t11405 = ((uint64_t ) s1555);
    c762 = (s1555 >> 64);
    s1556 = (((uint128_t ) t11362) + ((uint128_t ) t11398));
    s1557 = (((uint128_t ) s1556) + ((uint128_t ) c762));
    t11406 = ((uint64_t ) s1557);
    c763 = (s1557 >> 64);
    /* MPPropagateCarry 64 */
    t11407 = (t11405 + c761);
    a35442 = ((t11407 == 0));
    a35443 = (t11406 + c761);
    t11408 = ((a35442) ? (a35443) : (t11406));
    a35444 = ((t11408 == 0));
    a35445 = ((a35444) && (a35442));
    a35446 = (c763 + c761);
    t11409 = ((a35445) ? (a35446) : (c763));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1558 = (((uint128_t ) t11363) + ((uint128_t ) t11399));
    t11411 = ((uint64_t ) s1558);
    c764 = (s1558 >> 64);
    s1559 = (((uint128_t ) t11364) + ((uint128_t ) c764));
    t11412 = ((uint64_t ) s1559);
    /* MPPropagateCarry 64 */
    t11413 = (t11411 + t11409);
    a35450 = ((t11413 == 0));
    a35451 = (t11412 + t11409);
    t11414 = ((a35450) ? (a35451) : (t11412));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35457 = (((uint128_t ) t7202)*((uint128_t ) t7194));
    t11417 = (a35457 >> 64);
    t11418 = ((uint64_t ) a35457);
    a35458 = (((uint128_t ) t7201)*((uint128_t ) t7193));
    t11419 = (a35458 >> 64);
    t11420 = ((uint64_t ) a35458);
    a35459 = (((uint128_t ) t7201)*((uint128_t ) t7194));
    t11421 = (a35459 >> 64);
    t11422 = ((uint64_t ) a35459);
    a35460 = (((uint128_t ) t7202)*((uint128_t ) t7193));
    t11423 = (a35460 >> 64);
    t11424 = ((uint64_t ) a35460);
    /* MPAddQDD 64 */
    s1560 = (((uint128_t ) t11422) + ((uint128_t ) t11424));
    t11425 = ((uint64_t ) s1560);
    c766 = (s1560 >> 64);
    s1561 = (((uint128_t ) t11421) + ((uint128_t ) t11423));
    s1562 = (((uint128_t ) s1561) + ((uint128_t ) c766));
    t11426 = ((uint64_t ) s1562);
    c767 = (s1562 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11427 = ((uint64_t ) t11418);
    s1563 = (((uint128_t ) t11417) + ((uint128_t ) t11425));
    t11428 = ((uint64_t ) s1563);
    c768 = (s1563 >> 64);
    s1564 = (((uint128_t ) t11420) + ((uint128_t ) t11426));
    s1565 = (((uint128_t ) s1564) + ((uint128_t ) c768));
    t11429 = ((uint64_t ) s1565);
    c769 = (s1565 >> 64);
    s1566 = (((uint128_t ) t11419) + ((uint128_t ) c767));
    s1567 = (((uint128_t ) s1566) + ((uint128_t ) c769));
    t11430 = ((uint64_t ) s1567);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35461 = (((uint128_t ) t7200)*((uint128_t ) t7192));
    t11431 = (a35461 >> 64);
    t11432 = ((uint64_t ) a35461);
    a35462 = (((uint128_t ) t7199)*((uint128_t ) t7191));
    t11433 = (a35462 >> 64);
    t11434 = ((uint64_t ) a35462);
    a35463 = (((uint128_t ) t7199)*((uint128_t ) t7192));
    t11435 = (a35463 >> 64);
    t11436 = ((uint64_t ) a35463);
    a35464 = (((uint128_t ) t7200)*((uint128_t ) t7191));
    t11437 = (a35464 >> 64);
    t11438 = ((uint64_t ) a35464);
    /* MPAddQDD 64 */
    s1568 = (((uint128_t ) t11436) + ((uint128_t ) t11438));
    t11439 = ((uint64_t ) s1568);
    c770 = (s1568 >> 64);
    s1569 = (((uint128_t ) t11435) + ((uint128_t ) t11437));
    s1570 = (((uint128_t ) s1569) + ((uint128_t ) c770));
    t11440 = ((uint64_t ) s1570);
    c771 = (s1570 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11441 = ((uint64_t ) t11432);
    s1571 = (((uint128_t ) t11431) + ((uint128_t ) t11439));
    t11442 = ((uint64_t ) s1571);
    c772 = (s1571 >> 64);
    s1572 = (((uint128_t ) t11434) + ((uint128_t ) t11440));
    s1573 = (((uint128_t ) s1572) + ((uint128_t ) c772));
    t11443 = ((uint64_t ) s1573);
    c773 = (s1573 >> 64);
    s1574 = (((uint128_t ) t11433) + ((uint128_t ) c771));
    s1575 = (((uint128_t ) s1574) + ((uint128_t ) c773));
    t11444 = ((uint64_t ) s1575);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35465 = (((uint128_t ) t7200)*((uint128_t ) t7194));
    t11445 = (a35465 >> 64);
    t11446 = ((uint64_t ) a35465);
    a35466 = (((uint128_t ) t7199)*((uint128_t ) t7193));
    t11447 = (a35466 >> 64);
    t11448 = ((uint64_t ) a35466);
    a35467 = (((uint128_t ) t7199)*((uint128_t ) t7194));
    t11449 = (a35467 >> 64);
    t11450 = ((uint64_t ) a35467);
    a35468 = (((uint128_t ) t7200)*((uint128_t ) t7193));
    t11451 = (a35468 >> 64);
    t11452 = ((uint64_t ) a35468);
    /* MPAddQDD 64 */
    s1576 = (((uint128_t ) t11450) + ((uint128_t ) t11452));
    t11453 = ((uint64_t ) s1576);
    c774 = (s1576 >> 64);
    s1577 = (((uint128_t ) t11449) + ((uint128_t ) t11451));
    s1578 = (((uint128_t ) s1577) + ((uint128_t ) c774));
    t11454 = ((uint64_t ) s1578);
    c775 = (s1578 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11455 = ((uint64_t ) t11446);
    s1579 = (((uint128_t ) t11445) + ((uint128_t ) t11453));
    t11456 = ((uint64_t ) s1579);
    c776 = (s1579 >> 64);
    s1580 = (((uint128_t ) t11448) + ((uint128_t ) t11454));
    s1581 = (((uint128_t ) s1580) + ((uint128_t ) c776));
    t11457 = ((uint64_t ) s1581);
    c777 = (s1581 >> 64);
    s1582 = (((uint128_t ) t11447) + ((uint128_t ) c775));
    s1583 = (((uint128_t ) s1582) + ((uint128_t ) c777));
    t11458 = ((uint64_t ) s1583);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35469 = (((uint128_t ) t7202)*((uint128_t ) t7192));
    t11459 = (a35469 >> 64);
    t11460 = ((uint64_t ) a35469);
    a35470 = (((uint128_t ) t7201)*((uint128_t ) t7191));
    t11461 = (a35470 >> 64);
    t11462 = ((uint64_t ) a35470);
    a35471 = (((uint128_t ) t7201)*((uint128_t ) t7192));
    t11463 = (a35471 >> 64);
    t11464 = ((uint64_t ) a35471);
    a35472 = (((uint128_t ) t7202)*((uint128_t ) t7191));
    t11465 = (a35472 >> 64);
    t11466 = ((uint64_t ) a35472);
    /* MPAddQDD 64 */
    s1584 = (((uint128_t ) t11464) + ((uint128_t ) t11466));
    t11467 = ((uint64_t ) s1584);
    c778 = (s1584 >> 64);
    s1585 = (((uint128_t ) t11463) + ((uint128_t ) t11465));
    s1586 = (((uint128_t ) s1585) + ((uint128_t ) c778));
    t11468 = ((uint64_t ) s1586);
    c779 = (s1586 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11469 = ((uint64_t ) t11460);
    s1587 = (((uint128_t ) t11459) + ((uint128_t ) t11467));
    t11470 = ((uint64_t ) s1587);
    c780 = (s1587 >> 64);
    s1588 = (((uint128_t ) t11462) + ((uint128_t ) t11468));
    s1589 = (((uint128_t ) s1588) + ((uint128_t ) c780));
    t11471 = ((uint64_t ) s1589);
    c781 = (s1589 >> 64);
    s1590 = (((uint128_t ) t11461) + ((uint128_t ) c779));
    s1591 = (((uint128_t ) s1590) + ((uint128_t ) c781));
    t11472 = ((uint64_t ) s1591);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1592 = (((uint128_t ) t11455) + ((uint128_t ) t11469));
    t11473 = ((uint64_t ) s1592);
    c782 = (s1592 >> 64);
    s1593 = (((uint128_t ) t11456) + ((uint128_t ) t11470));
    s1594 = (((uint128_t ) s1593) + ((uint128_t ) c782));
    t11474 = ((uint64_t ) s1594);
    c783 = (s1594 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1595 = (((uint128_t ) t11457) + ((uint128_t ) t11471));
    t11475 = ((uint64_t ) s1595);
    c784 = (s1595 >> 64);
    s1596 = (((uint128_t ) t11458) + ((uint128_t ) t11472));
    s1597 = (((uint128_t ) s1596) + ((uint128_t ) c784));
    t11476 = ((uint64_t ) s1597);
    c785 = (s1597 >> 64);
    /* MPPropagateCarry 64 */
    t11477 = (t11475 + c783);
    a35473 = ((t11477 == 0));
    a35474 = (t11476 + c783);
    t11478 = ((a35473) ? (a35474) : (t11476));
    a35475 = ((t11478 == 0));
    a35476 = ((a35475) && (a35473));
    a35477 = (c785 + c783);
    t11479 = ((a35476) ? (a35477) : (c785));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t11481 = ((uint64_t ) t11427);
    t11482 = ((uint64_t ) t11428);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1598 = (((uint128_t ) t11429) + ((uint128_t ) t11473));
    t11483 = ((uint64_t ) s1598);
    c786 = (s1598 >> 64);
    s1599 = (((uint128_t ) t11430) + ((uint128_t ) t11474));
    s1600 = (((uint128_t ) s1599) + ((uint128_t ) c786));
    t11484 = ((uint64_t ) s1600);
    c787 = (s1600 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1601 = (((uint128_t ) t11441) + ((uint128_t ) t11477));
    t11485 = ((uint64_t ) s1601);
    c788 = (s1601 >> 64);
    s1602 = (((uint128_t ) t11442) + ((uint128_t ) t11478));
    s1603 = (((uint128_t ) s1602) + ((uint128_t ) c788));
    t11486 = ((uint64_t ) s1603);
    c789 = (s1603 >> 64);
    /* MPPropagateCarry 64 */
    t11487 = (t11485 + c787);
    a35486 = ((t11487 == 0));
    a35487 = (t11486 + c787);
    t11488 = ((a35486) ? (a35487) : (t11486));
    a35488 = ((t11488 == 0));
    a35489 = ((a35488) && (a35486));
    a35490 = (c789 + c787);
    t11489 = ((a35489) ? (a35490) : (c789));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1604 = (((uint128_t ) t11443) + ((uint128_t ) t11479));
    t11491 = ((uint64_t ) s1604);
    c790 = (s1604 >> 64);
    s1605 = (((uint128_t ) t11444) + ((uint128_t ) c790));
    t11492 = ((uint64_t ) s1605);
    /* MPPropagateCarry 64 */
    t11493 = (t11491 + t11489);
    a35494 = ((t11493 == 0));
    a35495 = (t11492 + t11489);
    t11494 = ((a35494) ? (a35495) : (t11492));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35501 = (((uint128_t ) t7202)*((uint128_t ) t7190));
    t11497 = (a35501 >> 64);
    t11498 = ((uint64_t ) a35501);
    a35502 = (((uint128_t ) t7201)*((uint128_t ) t7189));
    t11499 = (a35502 >> 64);
    t11500 = ((uint64_t ) a35502);
    a35503 = (((uint128_t ) t7201)*((uint128_t ) t7190));
    t11501 = (a35503 >> 64);
    t11502 = ((uint64_t ) a35503);
    a35504 = (((uint128_t ) t7202)*((uint128_t ) t7189));
    t11503 = (a35504 >> 64);
    t11504 = ((uint64_t ) a35504);
    /* MPAddQDD 64 */
    s1606 = (((uint128_t ) t11502) + ((uint128_t ) t11504));
    t11505 = ((uint64_t ) s1606);
    c792 = (s1606 >> 64);
    s1607 = (((uint128_t ) t11501) + ((uint128_t ) t11503));
    s1608 = (((uint128_t ) s1607) + ((uint128_t ) c792));
    t11506 = ((uint64_t ) s1608);
    c793 = (s1608 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11507 = ((uint64_t ) t11498);
    s1609 = (((uint128_t ) t11497) + ((uint128_t ) t11505));
    t11508 = ((uint64_t ) s1609);
    c794 = (s1609 >> 64);
    s1610 = (((uint128_t ) t11500) + ((uint128_t ) t11506));
    s1611 = (((uint128_t ) s1610) + ((uint128_t ) c794));
    t11509 = ((uint64_t ) s1611);
    c795 = (s1611 >> 64);
    s1612 = (((uint128_t ) t11499) + ((uint128_t ) c793));
    s1613 = (((uint128_t ) s1612) + ((uint128_t ) c795));
    t11510 = ((uint64_t ) s1613);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35505 = (((uint128_t ) t7200)*((uint128_t ) t7188));
    t11511 = (a35505 >> 64);
    t11512 = ((uint64_t ) a35505);
    a35506 = (((uint128_t ) t7199)*((uint128_t ) t7187));
    t11513 = (a35506 >> 64);
    t11514 = ((uint64_t ) a35506);
    a35507 = (((uint128_t ) t7199)*((uint128_t ) t7188));
    t11515 = (a35507 >> 64);
    t11516 = ((uint64_t ) a35507);
    a35508 = (((uint128_t ) t7200)*((uint128_t ) t7187));
    t11517 = (a35508 >> 64);
    t11518 = ((uint64_t ) a35508);
    /* MPAddQDD 64 */
    s1614 = (((uint128_t ) t11516) + ((uint128_t ) t11518));
    t11519 = ((uint64_t ) s1614);
    c796 = (s1614 >> 64);
    s1615 = (((uint128_t ) t11515) + ((uint128_t ) t11517));
    s1616 = (((uint128_t ) s1615) + ((uint128_t ) c796));
    t11520 = ((uint64_t ) s1616);
    c797 = (s1616 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11521 = ((uint64_t ) t11512);
    s1617 = (((uint128_t ) t11511) + ((uint128_t ) t11519));
    t11522 = ((uint64_t ) s1617);
    c798 = (s1617 >> 64);
    s1618 = (((uint128_t ) t11514) + ((uint128_t ) t11520));
    s1619 = (((uint128_t ) s1618) + ((uint128_t ) c798));
    t11523 = ((uint64_t ) s1619);
    c799 = (s1619 >> 64);
    s1620 = (((uint128_t ) t11513) + ((uint128_t ) c797));
    s1621 = (((uint128_t ) s1620) + ((uint128_t ) c799));
    t11524 = ((uint64_t ) s1621);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35509 = (((uint128_t ) t7200)*((uint128_t ) t7190));
    t11525 = (a35509 >> 64);
    t11526 = ((uint64_t ) a35509);
    a35510 = (((uint128_t ) t7199)*((uint128_t ) t7189));
    t11527 = (a35510 >> 64);
    t11528 = ((uint64_t ) a35510);
    a35511 = (((uint128_t ) t7199)*((uint128_t ) t7190));
    t11529 = (a35511 >> 64);
    t11530 = ((uint64_t ) a35511);
    a35512 = (((uint128_t ) t7200)*((uint128_t ) t7189));
    t11531 = (a35512 >> 64);
    t11532 = ((uint64_t ) a35512);
    /* MPAddQDD 64 */
    s1622 = (((uint128_t ) t11530) + ((uint128_t ) t11532));
    t11533 = ((uint64_t ) s1622);
    c800 = (s1622 >> 64);
    s1623 = (((uint128_t ) t11529) + ((uint128_t ) t11531));
    s1624 = (((uint128_t ) s1623) + ((uint128_t ) c800));
    t11534 = ((uint64_t ) s1624);
    c801 = (s1624 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11535 = ((uint64_t ) t11526);
    s1625 = (((uint128_t ) t11525) + ((uint128_t ) t11533));
    t11536 = ((uint64_t ) s1625);
    c802 = (s1625 >> 64);
    s1626 = (((uint128_t ) t11528) + ((uint128_t ) t11534));
    s1627 = (((uint128_t ) s1626) + ((uint128_t ) c802));
    t11537 = ((uint64_t ) s1627);
    c803 = (s1627 >> 64);
    s1628 = (((uint128_t ) t11527) + ((uint128_t ) c801));
    s1629 = (((uint128_t ) s1628) + ((uint128_t ) c803));
    t11538 = ((uint64_t ) s1629);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35513 = (((uint128_t ) t7202)*((uint128_t ) t7188));
    t11539 = (a35513 >> 64);
    t11540 = ((uint64_t ) a35513);
    a35514 = (((uint128_t ) t7201)*((uint128_t ) t7187));
    t11541 = (a35514 >> 64);
    t11542 = ((uint64_t ) a35514);
    a35515 = (((uint128_t ) t7201)*((uint128_t ) t7188));
    t11543 = (a35515 >> 64);
    t11544 = ((uint64_t ) a35515);
    a35516 = (((uint128_t ) t7202)*((uint128_t ) t7187));
    t11545 = (a35516 >> 64);
    t11546 = ((uint64_t ) a35516);
    /* MPAddQDD 64 */
    s1630 = (((uint128_t ) t11544) + ((uint128_t ) t11546));
    t11547 = ((uint64_t ) s1630);
    c804 = (s1630 >> 64);
    s1631 = (((uint128_t ) t11543) + ((uint128_t ) t11545));
    s1632 = (((uint128_t ) s1631) + ((uint128_t ) c804));
    t11548 = ((uint64_t ) s1632);
    c805 = (s1632 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11549 = ((uint64_t ) t11540);
    s1633 = (((uint128_t ) t11539) + ((uint128_t ) t11547));
    t11550 = ((uint64_t ) s1633);
    c806 = (s1633 >> 64);
    s1634 = (((uint128_t ) t11542) + ((uint128_t ) t11548));
    s1635 = (((uint128_t ) s1634) + ((uint128_t ) c806));
    t11551 = ((uint64_t ) s1635);
    c807 = (s1635 >> 64);
    s1636 = (((uint128_t ) t11541) + ((uint128_t ) c805));
    s1637 = (((uint128_t ) s1636) + ((uint128_t ) c807));
    t11552 = ((uint64_t ) s1637);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1638 = (((uint128_t ) t11535) + ((uint128_t ) t11549));
    t11553 = ((uint64_t ) s1638);
    c808 = (s1638 >> 64);
    s1639 = (((uint128_t ) t11536) + ((uint128_t ) t11550));
    s1640 = (((uint128_t ) s1639) + ((uint128_t ) c808));
    t11554 = ((uint64_t ) s1640);
    c809 = (s1640 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1641 = (((uint128_t ) t11537) + ((uint128_t ) t11551));
    t11555 = ((uint64_t ) s1641);
    c810 = (s1641 >> 64);
    s1642 = (((uint128_t ) t11538) + ((uint128_t ) t11552));
    s1643 = (((uint128_t ) s1642) + ((uint128_t ) c810));
    t11556 = ((uint64_t ) s1643);
    c811 = (s1643 >> 64);
    /* MPPropagateCarry 64 */
    t11557 = (t11555 + c809);
    a35517 = ((t11557 == 0));
    a35518 = (t11556 + c809);
    t11558 = ((a35517) ? (a35518) : (t11556));
    a35519 = ((t11558 == 0));
    a35520 = ((a35519) && (a35517));
    a35521 = (c811 + c809);
    t11559 = ((a35520) ? (a35521) : (c811));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t11561 = ((uint64_t ) t11507);
    t11562 = ((uint64_t ) t11508);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1644 = (((uint128_t ) t11509) + ((uint128_t ) t11553));
    t11563 = ((uint64_t ) s1644);
    c812 = (s1644 >> 64);
    s1645 = (((uint128_t ) t11510) + ((uint128_t ) t11554));
    s1646 = (((uint128_t ) s1645) + ((uint128_t ) c812));
    t11564 = ((uint64_t ) s1646);
    c813 = (s1646 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1647 = (((uint128_t ) t11521) + ((uint128_t ) t11557));
    t11565 = ((uint64_t ) s1647);
    c814 = (s1647 >> 64);
    s1648 = (((uint128_t ) t11522) + ((uint128_t ) t11558));
    s1649 = (((uint128_t ) s1648) + ((uint128_t ) c814));
    t11566 = ((uint64_t ) s1649);
    c815 = (s1649 >> 64);
    /* MPPropagateCarry 64 */
    t11567 = (t11565 + c813);
    a35530 = ((t11567 == 0));
    a35531 = (t11566 + c813);
    t11568 = ((a35530) ? (a35531) : (t11566));
    a35532 = ((t11568 == 0));
    a35533 = ((a35532) && (a35530));
    a35534 = (c815 + c813);
    t11569 = ((a35533) ? (a35534) : (c815));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1650 = (((uint128_t ) t11523) + ((uint128_t ) t11559));
    t11571 = ((uint64_t ) s1650);
    c816 = (s1650 >> 64);
    s1651 = (((uint128_t ) t11524) + ((uint128_t ) c816));
    t11572 = ((uint64_t ) s1651);
    /* MPPropagateCarry 64 */
    t11573 = (t11571 + t11569);
    a35538 = ((t11573 == 0));
    a35539 = (t11572 + t11569);
    t11574 = ((a35538) ? (a35539) : (t11572));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35545 = (((uint128_t ) t7198)*((uint128_t ) t7194));
    t11577 = (a35545 >> 64);
    t11578 = ((uint64_t ) a35545);
    a35546 = (((uint128_t ) t7197)*((uint128_t ) t7193));
    t11579 = (a35546 >> 64);
    t11580 = ((uint64_t ) a35546);
    a35547 = (((uint128_t ) t7197)*((uint128_t ) t7194));
    t11581 = (a35547 >> 64);
    t11582 = ((uint64_t ) a35547);
    a35548 = (((uint128_t ) t7198)*((uint128_t ) t7193));
    t11583 = (a35548 >> 64);
    t11584 = ((uint64_t ) a35548);
    /* MPAddQDD 64 */
    s1652 = (((uint128_t ) t11582) + ((uint128_t ) t11584));
    t11585 = ((uint64_t ) s1652);
    c818 = (s1652 >> 64);
    s1653 = (((uint128_t ) t11581) + ((uint128_t ) t11583));
    s1654 = (((uint128_t ) s1653) + ((uint128_t ) c818));
    t11586 = ((uint64_t ) s1654);
    c819 = (s1654 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11587 = ((uint64_t ) t11578);
    s1655 = (((uint128_t ) t11577) + ((uint128_t ) t11585));
    t11588 = ((uint64_t ) s1655);
    c820 = (s1655 >> 64);
    s1656 = (((uint128_t ) t11580) + ((uint128_t ) t11586));
    s1657 = (((uint128_t ) s1656) + ((uint128_t ) c820));
    t11589 = ((uint64_t ) s1657);
    c821 = (s1657 >> 64);
    s1658 = (((uint128_t ) t11579) + ((uint128_t ) c819));
    s1659 = (((uint128_t ) s1658) + ((uint128_t ) c821));
    t11590 = ((uint64_t ) s1659);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35549 = (((uint128_t ) t7196)*((uint128_t ) t7192));
    t11591 = (a35549 >> 64);
    t11592 = ((uint64_t ) a35549);
    a35550 = (((uint128_t ) t7195)*((uint128_t ) t7191));
    t11593 = (a35550 >> 64);
    t11594 = ((uint64_t ) a35550);
    a35551 = (((uint128_t ) t7195)*((uint128_t ) t7192));
    t11595 = (a35551 >> 64);
    t11596 = ((uint64_t ) a35551);
    a35552 = (((uint128_t ) t7196)*((uint128_t ) t7191));
    t11597 = (a35552 >> 64);
    t11598 = ((uint64_t ) a35552);
    /* MPAddQDD 64 */
    s1660 = (((uint128_t ) t11596) + ((uint128_t ) t11598));
    t11599 = ((uint64_t ) s1660);
    c822 = (s1660 >> 64);
    s1661 = (((uint128_t ) t11595) + ((uint128_t ) t11597));
    s1662 = (((uint128_t ) s1661) + ((uint128_t ) c822));
    t11600 = ((uint64_t ) s1662);
    c823 = (s1662 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11601 = ((uint64_t ) t11592);
    s1663 = (((uint128_t ) t11591) + ((uint128_t ) t11599));
    t11602 = ((uint64_t ) s1663);
    c824 = (s1663 >> 64);
    s1664 = (((uint128_t ) t11594) + ((uint128_t ) t11600));
    s1665 = (((uint128_t ) s1664) + ((uint128_t ) c824));
    t11603 = ((uint64_t ) s1665);
    c825 = (s1665 >> 64);
    s1666 = (((uint128_t ) t11593) + ((uint128_t ) c823));
    s1667 = (((uint128_t ) s1666) + ((uint128_t ) c825));
    t11604 = ((uint64_t ) s1667);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35553 = (((uint128_t ) t7196)*((uint128_t ) t7194));
    t11605 = (a35553 >> 64);
    t11606 = ((uint64_t ) a35553);
    a35554 = (((uint128_t ) t7195)*((uint128_t ) t7193));
    t11607 = (a35554 >> 64);
    t11608 = ((uint64_t ) a35554);
    a35555 = (((uint128_t ) t7195)*((uint128_t ) t7194));
    t11609 = (a35555 >> 64);
    t11610 = ((uint64_t ) a35555);
    a35556 = (((uint128_t ) t7196)*((uint128_t ) t7193));
    t11611 = (a35556 >> 64);
    t11612 = ((uint64_t ) a35556);
    /* MPAddQDD 64 */
    s1668 = (((uint128_t ) t11610) + ((uint128_t ) t11612));
    t11613 = ((uint64_t ) s1668);
    c826 = (s1668 >> 64);
    s1669 = (((uint128_t ) t11609) + ((uint128_t ) t11611));
    s1670 = (((uint128_t ) s1669) + ((uint128_t ) c826));
    t11614 = ((uint64_t ) s1670);
    c827 = (s1670 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11615 = ((uint64_t ) t11606);
    s1671 = (((uint128_t ) t11605) + ((uint128_t ) t11613));
    t11616 = ((uint64_t ) s1671);
    c828 = (s1671 >> 64);
    s1672 = (((uint128_t ) t11608) + ((uint128_t ) t11614));
    s1673 = (((uint128_t ) s1672) + ((uint128_t ) c828));
    t11617 = ((uint64_t ) s1673);
    c829 = (s1673 >> 64);
    s1674 = (((uint128_t ) t11607) + ((uint128_t ) c827));
    s1675 = (((uint128_t ) s1674) + ((uint128_t ) c829));
    t11618 = ((uint64_t ) s1675);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35557 = (((uint128_t ) t7198)*((uint128_t ) t7192));
    t11619 = (a35557 >> 64);
    t11620 = ((uint64_t ) a35557);
    a35558 = (((uint128_t ) t7197)*((uint128_t ) t7191));
    t11621 = (a35558 >> 64);
    t11622 = ((uint64_t ) a35558);
    a35559 = (((uint128_t ) t7197)*((uint128_t ) t7192));
    t11623 = (a35559 >> 64);
    t11624 = ((uint64_t ) a35559);
    a35560 = (((uint128_t ) t7198)*((uint128_t ) t7191));
    t11625 = (a35560 >> 64);
    t11626 = ((uint64_t ) a35560);
    /* MPAddQDD 64 */
    s1676 = (((uint128_t ) t11624) + ((uint128_t ) t11626));
    t11627 = ((uint64_t ) s1676);
    c830 = (s1676 >> 64);
    s1677 = (((uint128_t ) t11623) + ((uint128_t ) t11625));
    s1678 = (((uint128_t ) s1677) + ((uint128_t ) c830));
    t11628 = ((uint64_t ) s1678);
    c831 = (s1678 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11629 = ((uint64_t ) t11620);
    s1679 = (((uint128_t ) t11619) + ((uint128_t ) t11627));
    t11630 = ((uint64_t ) s1679);
    c832 = (s1679 >> 64);
    s1680 = (((uint128_t ) t11622) + ((uint128_t ) t11628));
    s1681 = (((uint128_t ) s1680) + ((uint128_t ) c832));
    t11631 = ((uint64_t ) s1681);
    c833 = (s1681 >> 64);
    s1682 = (((uint128_t ) t11621) + ((uint128_t ) c831));
    s1683 = (((uint128_t ) s1682) + ((uint128_t ) c833));
    t11632 = ((uint64_t ) s1683);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1684 = (((uint128_t ) t11615) + ((uint128_t ) t11629));
    t11633 = ((uint64_t ) s1684);
    c834 = (s1684 >> 64);
    s1685 = (((uint128_t ) t11616) + ((uint128_t ) t11630));
    s1686 = (((uint128_t ) s1685) + ((uint128_t ) c834));
    t11634 = ((uint64_t ) s1686);
    c835 = (s1686 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1687 = (((uint128_t ) t11617) + ((uint128_t ) t11631));
    t11635 = ((uint64_t ) s1687);
    c836 = (s1687 >> 64);
    s1688 = (((uint128_t ) t11618) + ((uint128_t ) t11632));
    s1689 = (((uint128_t ) s1688) + ((uint128_t ) c836));
    t11636 = ((uint64_t ) s1689);
    c837 = (s1689 >> 64);
    /* MPPropagateCarry 64 */
    t11637 = (t11635 + c835);
    a35561 = ((t11637 == 0));
    a35562 = (t11636 + c835);
    t11638 = ((a35561) ? (a35562) : (t11636));
    a35563 = ((t11638 == 0));
    a35564 = ((a35563) && (a35561));
    a35565 = (c837 + c835);
    t11639 = ((a35564) ? (a35565) : (c837));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t11641 = ((uint64_t ) t11587);
    t11642 = ((uint64_t ) t11588);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1690 = (((uint128_t ) t11589) + ((uint128_t ) t11633));
    t11643 = ((uint64_t ) s1690);
    c838 = (s1690 >> 64);
    s1691 = (((uint128_t ) t11590) + ((uint128_t ) t11634));
    s1692 = (((uint128_t ) s1691) + ((uint128_t ) c838));
    t11644 = ((uint64_t ) s1692);
    c839 = (s1692 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1693 = (((uint128_t ) t11601) + ((uint128_t ) t11637));
    t11645 = ((uint64_t ) s1693);
    c840 = (s1693 >> 64);
    s1694 = (((uint128_t ) t11602) + ((uint128_t ) t11638));
    s1695 = (((uint128_t ) s1694) + ((uint128_t ) c840));
    t11646 = ((uint64_t ) s1695);
    c841 = (s1695 >> 64);
    /* MPPropagateCarry 64 */
    t11647 = (t11645 + c839);
    a35574 = ((t11647 == 0));
    a35575 = (t11646 + c839);
    t11648 = ((a35574) ? (a35575) : (t11646));
    a35576 = ((t11648 == 0));
    a35577 = ((a35576) && (a35574));
    a35578 = (c841 + c839);
    t11649 = ((a35577) ? (a35578) : (c841));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1696 = (((uint128_t ) t11603) + ((uint128_t ) t11639));
    t11651 = ((uint64_t ) s1696);
    c842 = (s1696 >> 64);
    s1697 = (((uint128_t ) t11604) + ((uint128_t ) c842));
    t11652 = ((uint64_t ) s1697);
    /* MPPropagateCarry 64 */
    t11653 = (t11651 + t11649);
    a35582 = ((t11653 == 0));
    a35583 = (t11652 + t11649);
    t11654 = ((a35582) ? (a35583) : (t11652));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* MPAddQDD 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1698 = (((uint128_t ) t11561) + ((uint128_t ) t11641));
    t11657 = ((uint64_t ) s1698);
    c844 = (s1698 >> 64);
    s1699 = (((uint128_t ) t11562) + ((uint128_t ) t11642));
    s1700 = (((uint128_t ) s1699) + ((uint128_t ) c844));
    t11658 = ((uint64_t ) s1700);
    c845 = (s1700 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1701 = (((uint128_t ) t11563) + ((uint128_t ) t11643));
    t11659 = ((uint64_t ) s1701);
    c846 = (s1701 >> 64);
    s1702 = (((uint128_t ) t11564) + ((uint128_t ) t11644));
    s1703 = (((uint128_t ) s1702) + ((uint128_t ) c846));
    t11660 = ((uint64_t ) s1703);
    c847 = (s1703 >> 64);
    /* MPPropagateCarry 64 */
    t11661 = (t11659 + c845);
    a35589 = ((t11661 == 0));
    a35590 = (t11660 + c845);
    t11662 = ((a35589) ? (a35590) : (t11660));
    a35591 = ((t11662 == 0));
    a35592 = ((a35591) && (a35589));
    a35593 = (c847 + c845);
    t11663 = ((a35592) ? (a35593) : (c847));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1704 = (((uint128_t ) t11567) + ((uint128_t ) t11647));
    t11665 = ((uint64_t ) s1704);
    c848 = (s1704 >> 64);
    s1705 = (((uint128_t ) t11568) + ((uint128_t ) t11648));
    s1706 = (((uint128_t ) s1705) + ((uint128_t ) c848));
    t11666 = ((uint64_t ) s1706);
    c849 = (s1706 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1707 = (((uint128_t ) t11573) + ((uint128_t ) t11653));
    t11667 = ((uint64_t ) s1707);
    c850 = (s1707 >> 64);
    s1708 = (((uint128_t ) t11574) + ((uint128_t ) t11654));
    s1709 = (((uint128_t ) s1708) + ((uint128_t ) c850));
    t11668 = ((uint64_t ) s1709);
    c851 = (s1709 >> 64);
    /* MPPropagateCarry 64 */
    t11669 = (t11667 + c849);
    a35597 = ((t11669 == 0));
    a35598 = (t11668 + c849);
    t11670 = ((a35597) ? (a35598) : (t11668));
    a35599 = ((t11670 == 0));
    a35600 = ((a35599) && (a35597));
    a35601 = (c851 + c849);
    t11671 = ((a35600) ? (a35601) : (c851));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    s1710 = (((uint128_t ) t11665) + ((uint128_t ) t11663));
    t11673 = ((uint64_t ) s1710);
    c852 = (s1710 >> 64);
    s1711 = (((uint128_t ) t11666) + ((uint128_t ) c852));
    t11674 = ((uint64_t ) s1711);
    /* MPEqualDI 64 */
    a35605 = ((t11674 == 0));
    a35606 = ((t11673 == 0));
    a35607 = ((a35605) && (a35606));
    /* MPAddDDI 64 */
    s1712 = (((uint128_t ) t11669) + ((uint128_t ) t11663));
    t11675 = ((uint64_t ) s1712);
    c853 = (s1712 >> 64);
    s1713 = (((uint128_t ) t11670) + ((uint128_t ) c853));
    t11676 = ((uint64_t ) s1713);
    /* MPCondD 64 */
    t11677 = ((a35607) ? (t11676) : (t11670));
    t11678 = ((a35607) ? (t11675) : (t11669));
    /* MPEqualDI 64 */
    a35608 = ((t11677 == 0));
    a35609 = ((t11678 == 0));
    a35610 = ((a35608) && (a35609));
    /* MPEqualDI 64 */
    a35611 = ((a35610) && (a35607));
    /* MPAddDII 64 */
    t11679 = (t11671 + t11663);
    /* MPCondDDI 64 */
    t11680 = ((a35611) ? (t11679) : (t11671));
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPTypeCastDI 128 */
    /* MPTypeCastDI 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    t5256 = ((uint64_t ) t11401);
    t5255 = ((uint64_t ) t11402);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    t5260 = ((uint64_t ) t11403);
    t11681 = ((uint64_t ) t11404);
    /* MPPropagateCarry 64 */
    t5263 = t11681;
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1714 = (((uint128_t ) t11407) + ((uint128_t ) t11657));
    t11682 = ((uint64_t ) s1714);
    c854 = (s1714 >> 64);
    s1715 = (((uint128_t ) t11408) + ((uint128_t ) t11658));
    s1716 = (((uint128_t ) s1715) + ((uint128_t ) c854));
    t11683 = ((uint64_t ) s1716);
    c855 = (s1716 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1717 = (((uint128_t ) t11413) + ((uint128_t ) t11661));
    t11684 = ((uint64_t ) s1717);
    c856 = (s1717 >> 64);
    s1718 = (((uint128_t ) t11414) + ((uint128_t ) t11662));
    s1719 = (((uint128_t ) s1718) + ((uint128_t ) c856));
    t11685 = ((uint64_t ) s1719);
    c857 = (s1719 >> 64);
    /* MPPropagateCarry 64 */
    t11686 = (t11684 + c855);
    a35615 = ((t11686 == 0));
    a35616 = (t11685 + c855);
    t11687 = ((a35615) ? (a35616) : (t11685));
    a35617 = ((t11687 == 0));
    a35618 = ((a35617) && (a35615));
    a35619 = (c857 + c855);
    t11688 = ((a35618) ? (a35619) : (c857));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    t8888 = ((uint64_t ) t11682);
    c858 = (t11682 >> 64);
    s1720 = (((uint128_t ) t11683) + ((uint128_t ) c858));
    t8887 = ((uint64_t ) s1720);
    /* MPEqualDI 64 */
    a35623 = ((t8887 == 0));
    a35624 = ((t8888 == 0));
    a35625 = ((a35623) && (a35624));
    /* MPAddDDI 64 */
    t11690 = ((uint64_t ) t11686);
    c859 = (t11686 >> 64);
    s1721 = (((uint128_t ) t11687) + ((uint128_t ) c859));
    t11691 = ((uint64_t ) s1721);
    /* MPCondD 64 */
    t8885 = ((a35625) ? (t11691) : (t11687));
    t8886 = ((a35625) ? (t11690) : (t11686));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDII 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1722 = (((uint128_t ) t11481) + ((uint128_t ) t11673));
    t11692 = ((uint64_t ) s1722);
    c860 = (s1722 >> 64);
    s1723 = (((uint128_t ) t11482) + ((uint128_t ) t11674));
    s1724 = (((uint128_t ) s1723) + ((uint128_t ) c860));
    t11693 = ((uint64_t ) s1724);
    c861 = (s1724 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1725 = (((uint128_t ) t11483) + ((uint128_t ) t11678));
    t11694 = ((uint64_t ) s1725);
    c862 = (s1725 >> 64);
    s1726 = (((uint128_t ) t11484) + ((uint128_t ) t11677));
    s1727 = (((uint128_t ) s1726) + ((uint128_t ) c862));
    t11695 = ((uint64_t ) s1727);
    c863 = (s1727 >> 64);
    /* MPPropagateCarry 64 */
    t11696 = (t11694 + c861);
    a35630 = ((t11696 == 0));
    a35631 = (t11695 + c861);
    t11697 = ((a35630) ? (a35631) : (t11695));
    a35632 = ((t11697 == 0));
    a35633 = ((a35632) && (a35630));
    a35634 = (c863 + c861);
    t11698 = ((a35633) ? (a35634) : (c863));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1728 = (((uint128_t ) t11692) + ((uint128_t ) t11688));
    t8898 = ((uint64_t ) s1728);
    c864 = (s1728 >> 64);
    s1729 = (((uint128_t ) t11693) + ((uint128_t ) c864));
    t8897 = ((uint64_t ) s1729);
    /* MPEqualDI 64 */
    a35638 = ((t8897 == 0));
    a35639 = ((t8898 == 0));
    a35640 = ((a35638) && (a35639));
    /* MPAddDDD 64 */
    s1730 = (((uint128_t ) t11696) + ((uint128_t ) t11688));
    t11700 = ((uint64_t ) s1730);
    c865 = (s1730 >> 64);
    s1731 = (((uint128_t ) t11697) + ((uint128_t ) c865));
    t11701 = ((uint64_t ) s1731);
    /* MPCondD 64 */
    t8895 = ((a35640) ? (t11701) : (t11697));
    t8896 = ((a35640) ? (t11700) : (t11696));
    /* MPEqualDI 64 */
    a35641 = ((t8895 == 0));
    a35642 = ((t8896 == 0));
    a35643 = ((a35641) && (a35642));
    /* MPEqualDI 64 */
    a35644 = ((a35643) && (a35640));
    /* MPAddDDI 64 */
    s1732 = (((uint128_t ) t11688) + ((uint128_t ) t11698));
    t11702 = ((uint64_t ) s1732);
    c866 = (s1732 >> 64);
    s1733 = (((uint128_t ) 0) + ((uint128_t ) c866));
    t11703 = ((uint64_t ) s1733);
    /* MPCondDDI 64 */
    t11704 = ((a35644) ? (t11703) : (0));
    t11705 = ((a35644) ? (t11702) : (t11698));
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQID 128 */
    /* MPAddQDD 64 */
    s1734 = (((uint128_t ) t11487) + ((uint128_t ) t11680));
    t11706 = ((uint64_t ) s1734);
    c867 = (s1734 >> 64);
    s1735 = (((uint128_t ) t11488) + ((uint128_t ) c867));
    t11707 = ((uint64_t ) s1735);
    c868 = (s1735 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1736 = (((uint128_t ) t11493) + ((uint128_t ) c868));
    t11708 = ((uint64_t ) s1736);
    c869 = (s1736 >> 64);
    s1737 = (((uint128_t ) t11494) + ((uint128_t ) c869));
    t11709 = ((uint64_t ) s1737);
    /* MPExtractLow 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1738 = (((uint128_t ) t11706) + ((uint128_t ) t11705));
    t8908 = ((uint64_t ) s1738);
    c871 = (s1738 >> 64);
    s1739 = (((uint128_t ) t11707) + ((uint128_t ) t11704));
    s1740 = (((uint128_t ) s1739) + ((uint128_t ) c871));
    t8907 = ((uint64_t ) s1740);
    /* MPEqualDI 64 */
    a35645 = ((t8907 == 0));
    a35646 = ((t8908 == 0));
    a35647 = ((a35645) && (a35646));
    /* MPAddDDD 64 */
    s1741 = (((uint128_t ) t11708) + ((uint128_t ) t11705));
    t11710 = ((uint64_t ) s1741);
    c872 = (s1741 >> 64);
    s1742 = (((uint128_t ) t11709) + ((uint128_t ) t11704));
    s1743 = (((uint128_t ) s1742) + ((uint128_t ) c872));
    t11711 = ((uint64_t ) s1743);
    /* MPCondD 64 */
    t8905 = ((a35647) ? (t11711) : (t11709));
    t8906 = ((a35647) ? (t11710) : (t11708));
    /* MPExtractLow 128 */
    /* End of MPAddQQQ 256 */
    /* End of MPMulQDD_Schoolbook_Full */
}

__device__ void MPMulQDD_L3_1(uint64_t &t8905, uint64_t &t8906, uint64_t &t8907, uint64_t &t8908, uint64_t &t8895, uint64_t &t8896, uint64_t &t8897, uint64_t &t8898, uint64_t &t8885, uint64_t &t8886, uint64_t &t8887, uint64_t &t8888, uint64_t &t5263, uint64_t &t5260, uint64_t &t5255, uint64_t &t5256, uint64_t t7199, uint64_t t7200, uint64_t t7201, uint64_t t7202, uint64_t t7195, uint64_t t7196, uint64_t t7197, uint64_t t7198, uint64_t t7191, uint64_t t7192, uint64_t t7193, uint64_t t7194, uint64_t t7187, uint64_t t7188, uint64_t t7189, uint64_t t7190) {
    int a35664, a35666, a35667, a35677, a35679, a35680, a35685, a35700, 
            a35713, a35744, a35746, a35747, a35757, a35759, a35760, a35765, 
            a35780, a35782, a35783, a35793, a35795, a35796, a35801, a35808, 
            a35810, a35811, a35816, a35818, a35819, a35824, a35825, a35826, 
            a35827, a35828, a35829, a35830, a35834, a35836, a35837, a35842, 
            a35843, a35844, a35849, a35851, a35852, a35857, a35858, a35859, 
            a35860, a35861, a35862, a35863, c873, c874, c875, c876, 
            c877, c878, c879, c880, c881, c882, c883, c884, 
            c885, c886, c887, c888, c889, c890, c891, c892, 
            c893, c894, c895, c896, c897, c899, c900, c901, 
            c902, c903, c904, c905, c906, c907, c908, c909, 
            c910, c911, c912, c913, c915, c916, c917, c921, 
            c922, c923, c924, c925, c926, c927, c928, c929, 
            c930, c931, c932, c933, c934, c935, c936, c937, 
            c938, c939, c940, c941, c942, c943, c944, c945, 
            c947, c948, c949, c950, c951, c952, c953, c954, 
            c955, c956, c957, c958, c959, c960, c961, c962, 
            c963, c965, c966, c967, c968, c969, c970, c971, 
            c972, c973, c974, c975, c976, c977, c978, c979, 
            c980, c981, c982, c983, c984, c985, c986, c987, 
            c988, c992;
    uint64_t a35665, a35668, a35678, a35681, a35686, a35701, a35714, a35745, 
            a35748, a35758, a35761, a35766, a35781, a35784, a35794, a35797, 
            a35802, a35809, a35812, a35817, a35820, a35835, a35838, a35850, 
            a35853, t11712, t11713, t11714, t11715, t11716, t11717, t11718, 
            t11719, t11720, t11721, t11722, t11723, t11724, t11725, t11726, 
            t11727, t11728, t11729, t11730, t11731, t11732, t11733, t11734, 
            t11735, t11736, t11737, t11738, t11739, t11740, t11741, t11742, 
            t11743, t11744, t11745, t11746, t11747, t11748, t11749, t11750, 
            t11751, t11752, t11753, t11754, t11755, t11756, t11757, t11758, 
            t11759, t11760, t11761, t11762, t11763, t11764, t11765, t11766, 
            t11767, t11768, t11769, t11770, t11771, t11772, t11773, t11774, 
            t11776, t11777, t11778, t11779, t11780, t11781, t11782, t11783, 
            t11784, t11786, t11787, t11788, t11789, t11792, t11793, t11794, 
            t11795, t11796, t11797, t11798, t11799, t11800, t11801, t11802, 
            t11803, t11804, t11805, t11806, t11807, t11808, t11809, t11810, 
            t11811, t11812, t11813, t11814, t11815, t11816, t11817, t11818, 
            t11819, t11820, t11821, t11822, t11823, t11824, t11825, t11826, 
            t11827, t11828, t11829, t11830, t11831, t11832, t11835, t11836, 
            t11837, t11838, t11839, t11840, t11841, t11842, t11851, t11852, 
            t11853, t11854, t11855, t11856, t11857, t11858, t11859, t11860, 
            t11861, t11862, t11863, t11864, t11865, t11866, t11867, t11868, 
            t11869, t11870, t11871, t11872, t11873, t11874, t11875, t11876, 
            t11877, t11878, t11879, t11880, t11881, t11882, t11883, t11884, 
            t11885, t11886, t11887, t11888, t11889, t11890, t11891, t11892, 
            t11893, t11894, t11895, t11896, t11897, t11898, t11899, t11900, 
            t11901, t11902, t11903, t11904, t11905, t11906, t11907, t11908, 
            t11909, t11910, t11911, t11912, t11913, t11915, t11916, t11917, 
            t11918, t11919, t11920, t11921, t11922, t11923, t11925, t11926, 
            t11927, t11928, t11931, t11932, t11933, t11934, t11935, t11936, 
            t11937, t11938, t11939, t11940, t11941, t11942, t11943, t11944, 
            t11945, t11946, t11947, t11948, t11949, t11950, t11951, t11952, 
            t11953, t11954, t11955, t11956, t11957, t11958, t11959, t11960, 
            t11961, t11962, t11963, t11964, t11965, t11967, t11968, t11969, 
            t11970, t11971, t11972, t11973, t11974, t11975, t11977, t11978, 
            t11979, t11980, t11983, t11984, t11985, t11986, t11987, t11988, 
            t11989, t11991, t11992, t11993, t11994, t11995, t11996, t11997, 
            t11999, t12000, t12001, t12002, t12003, t12004, t12005, t12006, 
            t12007, t12008, t12009, t12010, t12011, t12012, t12013, t12014, 
            t12016, t12017, t12018, t12019, t12020, t12021, t12022, t12023, 
            t12024, t12026, t12027, t12028, t12029, t12030, t12031, t12032, 
            t12033;
    uint128_t a35648, a35649, a35650, a35651, a35652, a35653, a35654, a35655, 
            a35656, a35657, a35658, a35659, a35660, a35661, a35662, a35663, 
            a35692, a35693, a35694, a35695, a35696, a35697, a35698, a35699, 
            a35728, a35729, a35730, a35731, a35732, a35733, a35734, a35735, 
            a35736, a35737, a35738, a35739, a35740, a35741, a35742, a35743, 
            a35772, a35773, a35774, a35775, a35776, a35777, a35778, a35779, 
            s1744, s1745, s1746, s1747, s1748, s1749, s1750, s1751, 
            s1752, s1753, s1754, s1755, s1756, s1757, s1758, s1759, 
            s1760, s1761, s1762, s1763, s1764, s1765, s1766, s1767, 
            s1768, s1769, s1770, s1771, s1772, s1773, s1774, s1775, 
            s1776, s1777, s1778, s1779, s1780, s1781, s1782, s1783, 
            s1784, s1785, s1786, s1787, s1788, s1789, s1790, s1791, 
            s1792, s1793, s1794, s1795, s1796, s1797, s1798, s1799, 
            s1800, s1801, s1802, s1803, s1804, s1805, s1806, s1807, 
            s1808, s1809, s1810, s1811, s1812, s1813, s1814, s1815, 
            s1816, s1817, s1818, s1819, s1820, s1821, s1822, s1823, 
            s1826, s1827, s1828, s1829, s1830, s1831, s1832, s1833, 
            s1834, s1835, s1836, s1837, s1838, s1839, s1840, s1841, 
            s1842, s1843, s1844, s1845, s1846, s1847, s1848, s1849, 
            s1850, s1851, s1852, s1853, s1854, s1855, s1856, s1857, 
            s1858, s1859, s1860, s1861, s1862, s1863, s1864, s1865, 
            s1866, s1867, s1868, s1869, s1870, s1871, s1872, s1873, 
            s1874, s1875, s1876, s1877, s1878, s1879, s1880, s1881, 
            s1882, s1883, s1884, s1885, s1886, s1887, s1888, s1889, 
            s1890, s1891, s1892, s1893, s1894, s1895, s1896, s1897, 
            s1898, s1899, s1900, s1901, s1902, s1903, s1904, s1905, 
            s1906, s1907, s1908, s1909, s1910, s1911, s1912, s1913, 
            s1914, s1915, s1916, s1917, s1918, s1919, s1920, s1921, 
            s1922, s1923, s1924, s1925, s1926, s1927, s1928, s1929, 
            s1930, s1931, s1932, s1933, s1934, s1935, s1936, s1937, 
            s1938, s1939, s1942, s1943, s1944;
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35648 = (((uint128_t ) t7198)*((uint128_t ) t7190));
    t11712 = (a35648 >> 64);
    t11713 = ((uint64_t ) a35648);
    a35649 = (((uint128_t ) t7197)*((uint128_t ) t7189));
    t11714 = (a35649 >> 64);
    t11715 = ((uint64_t ) a35649);
    a35650 = (((uint128_t ) t7197)*((uint128_t ) t7190));
    t11716 = (a35650 >> 64);
    t11717 = ((uint64_t ) a35650);
    a35651 = (((uint128_t ) t7198)*((uint128_t ) t7189));
    t11718 = (a35651 >> 64);
    t11719 = ((uint64_t ) a35651);
    /* MPAddQDD 64 */
    s1744 = (((uint128_t ) t11717) + ((uint128_t ) t11719));
    t11720 = ((uint64_t ) s1744);
    c873 = (s1744 >> 64);
    s1745 = (((uint128_t ) t11716) + ((uint128_t ) t11718));
    s1746 = (((uint128_t ) s1745) + ((uint128_t ) c873));
    t11721 = ((uint64_t ) s1746);
    c874 = (s1746 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11722 = ((uint64_t ) t11713);
    s1747 = (((uint128_t ) t11712) + ((uint128_t ) t11720));
    t11723 = ((uint64_t ) s1747);
    c875 = (s1747 >> 64);
    s1748 = (((uint128_t ) t11715) + ((uint128_t ) t11721));
    s1749 = (((uint128_t ) s1748) + ((uint128_t ) c875));
    t11724 = ((uint64_t ) s1749);
    c876 = (s1749 >> 64);
    s1750 = (((uint128_t ) t11714) + ((uint128_t ) c874));
    s1751 = (((uint128_t ) s1750) + ((uint128_t ) c876));
    t11725 = ((uint64_t ) s1751);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35652 = (((uint128_t ) t7196)*((uint128_t ) t7188));
    t11726 = (a35652 >> 64);
    t11727 = ((uint64_t ) a35652);
    a35653 = (((uint128_t ) t7195)*((uint128_t ) t7187));
    t11728 = (a35653 >> 64);
    t11729 = ((uint64_t ) a35653);
    a35654 = (((uint128_t ) t7195)*((uint128_t ) t7188));
    t11730 = (a35654 >> 64);
    t11731 = ((uint64_t ) a35654);
    a35655 = (((uint128_t ) t7196)*((uint128_t ) t7187));
    t11732 = (a35655 >> 64);
    t11733 = ((uint64_t ) a35655);
    /* MPAddQDD 64 */
    s1752 = (((uint128_t ) t11731) + ((uint128_t ) t11733));
    t11734 = ((uint64_t ) s1752);
    c877 = (s1752 >> 64);
    s1753 = (((uint128_t ) t11730) + ((uint128_t ) t11732));
    s1754 = (((uint128_t ) s1753) + ((uint128_t ) c877));
    t11735 = ((uint64_t ) s1754);
    c878 = (s1754 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11736 = ((uint64_t ) t11727);
    s1755 = (((uint128_t ) t11726) + ((uint128_t ) t11734));
    t11737 = ((uint64_t ) s1755);
    c879 = (s1755 >> 64);
    s1756 = (((uint128_t ) t11729) + ((uint128_t ) t11735));
    s1757 = (((uint128_t ) s1756) + ((uint128_t ) c879));
    t11738 = ((uint64_t ) s1757);
    c880 = (s1757 >> 64);
    s1758 = (((uint128_t ) t11728) + ((uint128_t ) c878));
    s1759 = (((uint128_t ) s1758) + ((uint128_t ) c880));
    t11739 = ((uint64_t ) s1759);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35656 = (((uint128_t ) t7196)*((uint128_t ) t7190));
    t11740 = (a35656 >> 64);
    t11741 = ((uint64_t ) a35656);
    a35657 = (((uint128_t ) t7195)*((uint128_t ) t7189));
    t11742 = (a35657 >> 64);
    t11743 = ((uint64_t ) a35657);
    a35658 = (((uint128_t ) t7195)*((uint128_t ) t7190));
    t11744 = (a35658 >> 64);
    t11745 = ((uint64_t ) a35658);
    a35659 = (((uint128_t ) t7196)*((uint128_t ) t7189));
    t11746 = (a35659 >> 64);
    t11747 = ((uint64_t ) a35659);
    /* MPAddQDD 64 */
    s1760 = (((uint128_t ) t11745) + ((uint128_t ) t11747));
    t11748 = ((uint64_t ) s1760);
    c881 = (s1760 >> 64);
    s1761 = (((uint128_t ) t11744) + ((uint128_t ) t11746));
    s1762 = (((uint128_t ) s1761) + ((uint128_t ) c881));
    t11749 = ((uint64_t ) s1762);
    c882 = (s1762 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11750 = ((uint64_t ) t11741);
    s1763 = (((uint128_t ) t11740) + ((uint128_t ) t11748));
    t11751 = ((uint64_t ) s1763);
    c883 = (s1763 >> 64);
    s1764 = (((uint128_t ) t11743) + ((uint128_t ) t11749));
    s1765 = (((uint128_t ) s1764) + ((uint128_t ) c883));
    t11752 = ((uint64_t ) s1765);
    c884 = (s1765 >> 64);
    s1766 = (((uint128_t ) t11742) + ((uint128_t ) c882));
    s1767 = (((uint128_t ) s1766) + ((uint128_t ) c884));
    t11753 = ((uint64_t ) s1767);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35660 = (((uint128_t ) t7198)*((uint128_t ) t7188));
    t11754 = (a35660 >> 64);
    t11755 = ((uint64_t ) a35660);
    a35661 = (((uint128_t ) t7197)*((uint128_t ) t7187));
    t11756 = (a35661 >> 64);
    t11757 = ((uint64_t ) a35661);
    a35662 = (((uint128_t ) t7197)*((uint128_t ) t7188));
    t11758 = (a35662 >> 64);
    t11759 = ((uint64_t ) a35662);
    a35663 = (((uint128_t ) t7198)*((uint128_t ) t7187));
    t11760 = (a35663 >> 64);
    t11761 = ((uint64_t ) a35663);
    /* MPAddQDD 64 */
    s1768 = (((uint128_t ) t11759) + ((uint128_t ) t11761));
    t11762 = ((uint64_t ) s1768);
    c885 = (s1768 >> 64);
    s1769 = (((uint128_t ) t11758) + ((uint128_t ) t11760));
    s1770 = (((uint128_t ) s1769) + ((uint128_t ) c885));
    t11763 = ((uint64_t ) s1770);
    c886 = (s1770 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11764 = ((uint64_t ) t11755);
    s1771 = (((uint128_t ) t11754) + ((uint128_t ) t11762));
    t11765 = ((uint64_t ) s1771);
    c887 = (s1771 >> 64);
    s1772 = (((uint128_t ) t11757) + ((uint128_t ) t11763));
    s1773 = (((uint128_t ) s1772) + ((uint128_t ) c887));
    t11766 = ((uint64_t ) s1773);
    c888 = (s1773 >> 64);
    s1774 = (((uint128_t ) t11756) + ((uint128_t ) c886));
    s1775 = (((uint128_t ) s1774) + ((uint128_t ) c888));
    t11767 = ((uint64_t ) s1775);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1776 = (((uint128_t ) t11750) + ((uint128_t ) t11764));
    t11768 = ((uint64_t ) s1776);
    c889 = (s1776 >> 64);
    s1777 = (((uint128_t ) t11751) + ((uint128_t ) t11765));
    s1778 = (((uint128_t ) s1777) + ((uint128_t ) c889));
    t11769 = ((uint64_t ) s1778);
    c890 = (s1778 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1779 = (((uint128_t ) t11752) + ((uint128_t ) t11766));
    t11770 = ((uint64_t ) s1779);
    c891 = (s1779 >> 64);
    s1780 = (((uint128_t ) t11753) + ((uint128_t ) t11767));
    s1781 = (((uint128_t ) s1780) + ((uint128_t ) c891));
    t11771 = ((uint64_t ) s1781);
    c892 = (s1781 >> 64);
    /* MPPropagateCarry 64 */
    t11772 = (t11770 + c890);
    a35664 = ((t11772 == 0));
    a35665 = (t11771 + c890);
    t11773 = ((a35664) ? (a35665) : (t11771));
    a35666 = ((t11773 == 0));
    a35667 = ((a35666) && (a35664));
    a35668 = (c892 + c890);
    t11774 = ((a35667) ? (a35668) : (c892));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t11776 = ((uint64_t ) t11722);
    t11777 = ((uint64_t ) t11723);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1782 = (((uint128_t ) t11724) + ((uint128_t ) t11768));
    t11778 = ((uint64_t ) s1782);
    c893 = (s1782 >> 64);
    s1783 = (((uint128_t ) t11725) + ((uint128_t ) t11769));
    s1784 = (((uint128_t ) s1783) + ((uint128_t ) c893));
    t11779 = ((uint64_t ) s1784);
    c894 = (s1784 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1785 = (((uint128_t ) t11736) + ((uint128_t ) t11772));
    t11780 = ((uint64_t ) s1785);
    c895 = (s1785 >> 64);
    s1786 = (((uint128_t ) t11737) + ((uint128_t ) t11773));
    s1787 = (((uint128_t ) s1786) + ((uint128_t ) c895));
    t11781 = ((uint64_t ) s1787);
    c896 = (s1787 >> 64);
    /* MPPropagateCarry 64 */
    t11782 = (t11780 + c894);
    a35677 = ((t11782 == 0));
    a35678 = (t11781 + c894);
    t11783 = ((a35677) ? (a35678) : (t11781));
    a35679 = ((t11783 == 0));
    a35680 = ((a35679) && (a35677));
    a35681 = (c896 + c894);
    t11784 = ((a35680) ? (a35681) : (c896));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1788 = (((uint128_t ) t11738) + ((uint128_t ) t11774));
    t11786 = ((uint64_t ) s1788);
    c897 = (s1788 >> 64);
    s1789 = (((uint128_t ) t11739) + ((uint128_t ) c897));
    t11787 = ((uint64_t ) s1789);
    /* MPPropagateCarry 64 */
    t11788 = (t11786 + t11784);
    a35685 = ((t11788 == 0));
    a35686 = (t11787 + t11784);
    t11789 = ((a35685) ? (a35686) : (t11787));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35692 = (((uint128_t ) t7202)*((uint128_t ) t7194));
    t11792 = (a35692 >> 64);
    t11793 = ((uint64_t ) a35692);
    a35693 = (((uint128_t ) t7201)*((uint128_t ) t7193));
    t11794 = (a35693 >> 64);
    t11795 = ((uint64_t ) a35693);
    a35694 = (((uint128_t ) t7201)*((uint128_t ) t7194));
    t11796 = (a35694 >> 64);
    t11797 = ((uint64_t ) a35694);
    a35695 = (((uint128_t ) t7202)*((uint128_t ) t7193));
    t11798 = (a35695 >> 64);
    t11799 = ((uint64_t ) a35695);
    /* MPAddQDD 64 */
    s1790 = (((uint128_t ) t11797) + ((uint128_t ) t11799));
    t11800 = ((uint64_t ) s1790);
    c899 = (s1790 >> 64);
    s1791 = (((uint128_t ) t11796) + ((uint128_t ) t11798));
    s1792 = (((uint128_t ) s1791) + ((uint128_t ) c899));
    t11801 = ((uint64_t ) s1792);
    c900 = (s1792 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11802 = ((uint64_t ) t11793);
    s1793 = (((uint128_t ) t11792) + ((uint128_t ) t11800));
    t11803 = ((uint64_t ) s1793);
    c901 = (s1793 >> 64);
    s1794 = (((uint128_t ) t11795) + ((uint128_t ) t11801));
    s1795 = (((uint128_t ) s1794) + ((uint128_t ) c901));
    t11804 = ((uint64_t ) s1795);
    c902 = (s1795 >> 64);
    s1796 = (((uint128_t ) t11794) + ((uint128_t ) c900));
    s1797 = (((uint128_t ) s1796) + ((uint128_t ) c902));
    t11805 = ((uint64_t ) s1797);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    t11806 = ((uint64_t ) 0);
    /* MPAddQDD 64 */
    s1798 = (((uint128_t ) t11806) + ((uint128_t ) t11806));
    t11807 = ((uint64_t ) s1798);
    c903 = (s1798 >> 64);
    s1799 = (((uint128_t ) 0) + ((uint128_t ) c903));
    t11808 = ((uint64_t ) s1799);
    c904 = (s1799 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11809 = ((uint64_t ) t11806);
    t11810 = ((uint64_t ) t11807);
    c905 = (t11807 >> 64);
    s1800 = (((uint128_t ) t11806) + ((uint128_t ) t11808));
    s1801 = (((uint128_t ) s1800) + ((uint128_t ) c905));
    t11811 = ((uint64_t ) s1801);
    c906 = (s1801 >> 64);
    s1802 = (((uint128_t ) 0) + ((uint128_t ) c904));
    s1803 = (((uint128_t ) s1802) + ((uint128_t ) c906));
    t11812 = ((uint64_t ) s1803);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35696 = (((uint128_t ) t7200)*((uint128_t ) t7194));
    t11813 = (a35696 >> 64);
    t11814 = ((uint64_t ) a35696);
    a35697 = (((uint128_t ) t7199)*((uint128_t ) t7193));
    t11815 = (a35697 >> 64);
    t11816 = ((uint64_t ) a35697);
    a35698 = (((uint128_t ) t7199)*((uint128_t ) t7194));
    t11817 = (a35698 >> 64);
    t11818 = ((uint64_t ) a35698);
    a35699 = (((uint128_t ) t7200)*((uint128_t ) t7193));
    t11819 = (a35699 >> 64);
    t11820 = ((uint64_t ) a35699);
    /* MPAddQDD 64 */
    s1804 = (((uint128_t ) t11818) + ((uint128_t ) t11820));
    t11821 = ((uint64_t ) s1804);
    c907 = (s1804 >> 64);
    s1805 = (((uint128_t ) t11817) + ((uint128_t ) t11819));
    s1806 = (((uint128_t ) s1805) + ((uint128_t ) c907));
    t11822 = ((uint64_t ) s1806);
    c908 = (s1806 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11823 = ((uint64_t ) t11814);
    s1807 = (((uint128_t ) t11813) + ((uint128_t ) t11821));
    t11824 = ((uint64_t ) s1807);
    c909 = (s1807 >> 64);
    s1808 = (((uint128_t ) t11816) + ((uint128_t ) t11822));
    s1809 = (((uint128_t ) s1808) + ((uint128_t ) c909));
    t11825 = ((uint64_t ) s1809);
    c910 = (s1809 >> 64);
    s1810 = (((uint128_t ) t11815) + ((uint128_t ) c908));
    s1811 = (((uint128_t ) s1810) + ((uint128_t ) c910));
    t11826 = ((uint64_t ) s1811);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1812 = (((uint128_t ) t11823) + ((uint128_t ) t11809));
    t11827 = ((uint64_t ) s1812);
    c911 = (s1812 >> 64);
    s1813 = (((uint128_t ) t11824) + ((uint128_t ) t11810));
    s1814 = (((uint128_t ) s1813) + ((uint128_t ) c911));
    t11828 = ((uint64_t ) s1814);
    c912 = (s1814 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1815 = (((uint128_t ) t11825) + ((uint128_t ) t11811));
    t11829 = ((uint64_t ) s1815);
    c913 = (s1815 >> 64);
    s1816 = (((uint128_t ) t11826) + ((uint128_t ) t11812));
    s1817 = (((uint128_t ) s1816) + ((uint128_t ) c913));
    t11830 = ((uint64_t ) s1817);
    /* MPPropagateCarry 64 */
    t11831 = (t11829 + c912);
    a35700 = ((t11831 == 0));
    a35701 = (t11830 + c912);
    t11832 = ((a35700) ? (a35701) : (t11830));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t11835 = ((uint64_t ) t11802);
    t11836 = ((uint64_t ) t11803);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1818 = (((uint128_t ) t11804) + ((uint128_t ) t11827));
    t11837 = ((uint64_t ) s1818);
    c915 = (s1818 >> 64);
    s1819 = (((uint128_t ) t11805) + ((uint128_t ) t11828));
    s1820 = (((uint128_t ) s1819) + ((uint128_t ) c915));
    t11838 = ((uint64_t ) s1820);
    c916 = (s1820 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1821 = (((uint128_t ) t11809) + ((uint128_t ) t11831));
    t11839 = ((uint64_t ) s1821);
    c917 = (s1821 >> 64);
    s1822 = (((uint128_t ) t11810) + ((uint128_t ) t11832));
    s1823 = (((uint128_t ) s1822) + ((uint128_t ) c917));
    t11840 = ((uint64_t ) s1823);
    /* MPPropagateCarry 64 */
    t11841 = (t11839 + c916);
    a35713 = ((t11841 == 0));
    a35714 = (t11840 + c916);
    t11842 = ((a35713) ? (a35714) : (t11840));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35728 = (((uint128_t ) t7202)*((uint128_t ) t7190));
    t11851 = (a35728 >> 64);
    t11852 = ((uint64_t ) a35728);
    a35729 = (((uint128_t ) t7201)*((uint128_t ) t7189));
    t11853 = (a35729 >> 64);
    t11854 = ((uint64_t ) a35729);
    a35730 = (((uint128_t ) t7201)*((uint128_t ) t7190));
    t11855 = (a35730 >> 64);
    t11856 = ((uint64_t ) a35730);
    a35731 = (((uint128_t ) t7202)*((uint128_t ) t7189));
    t11857 = (a35731 >> 64);
    t11858 = ((uint64_t ) a35731);
    /* MPAddQDD 64 */
    s1826 = (((uint128_t ) t11856) + ((uint128_t ) t11858));
    t11859 = ((uint64_t ) s1826);
    c921 = (s1826 >> 64);
    s1827 = (((uint128_t ) t11855) + ((uint128_t ) t11857));
    s1828 = (((uint128_t ) s1827) + ((uint128_t ) c921));
    t11860 = ((uint64_t ) s1828);
    c922 = (s1828 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11861 = ((uint64_t ) t11852);
    s1829 = (((uint128_t ) t11851) + ((uint128_t ) t11859));
    t11862 = ((uint64_t ) s1829);
    c923 = (s1829 >> 64);
    s1830 = (((uint128_t ) t11854) + ((uint128_t ) t11860));
    s1831 = (((uint128_t ) s1830) + ((uint128_t ) c923));
    t11863 = ((uint64_t ) s1831);
    c924 = (s1831 >> 64);
    s1832 = (((uint128_t ) t11853) + ((uint128_t ) c922));
    s1833 = (((uint128_t ) s1832) + ((uint128_t ) c924));
    t11864 = ((uint64_t ) s1833);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35732 = (((uint128_t ) t7200)*((uint128_t ) t7188));
    t11865 = (a35732 >> 64);
    t11866 = ((uint64_t ) a35732);
    a35733 = (((uint128_t ) t7199)*((uint128_t ) t7187));
    t11867 = (a35733 >> 64);
    t11868 = ((uint64_t ) a35733);
    a35734 = (((uint128_t ) t7199)*((uint128_t ) t7188));
    t11869 = (a35734 >> 64);
    t11870 = ((uint64_t ) a35734);
    a35735 = (((uint128_t ) t7200)*((uint128_t ) t7187));
    t11871 = (a35735 >> 64);
    t11872 = ((uint64_t ) a35735);
    /* MPAddQDD 64 */
    s1834 = (((uint128_t ) t11870) + ((uint128_t ) t11872));
    t11873 = ((uint64_t ) s1834);
    c925 = (s1834 >> 64);
    s1835 = (((uint128_t ) t11869) + ((uint128_t ) t11871));
    s1836 = (((uint128_t ) s1835) + ((uint128_t ) c925));
    t11874 = ((uint64_t ) s1836);
    c926 = (s1836 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11875 = ((uint64_t ) t11866);
    s1837 = (((uint128_t ) t11865) + ((uint128_t ) t11873));
    t11876 = ((uint64_t ) s1837);
    c927 = (s1837 >> 64);
    s1838 = (((uint128_t ) t11868) + ((uint128_t ) t11874));
    s1839 = (((uint128_t ) s1838) + ((uint128_t ) c927));
    t11877 = ((uint64_t ) s1839);
    c928 = (s1839 >> 64);
    s1840 = (((uint128_t ) t11867) + ((uint128_t ) c926));
    s1841 = (((uint128_t ) s1840) + ((uint128_t ) c928));
    t11878 = ((uint64_t ) s1841);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35736 = (((uint128_t ) t7200)*((uint128_t ) t7190));
    t11879 = (a35736 >> 64);
    t11880 = ((uint64_t ) a35736);
    a35737 = (((uint128_t ) t7199)*((uint128_t ) t7189));
    t11881 = (a35737 >> 64);
    t11882 = ((uint64_t ) a35737);
    a35738 = (((uint128_t ) t7199)*((uint128_t ) t7190));
    t11883 = (a35738 >> 64);
    t11884 = ((uint64_t ) a35738);
    a35739 = (((uint128_t ) t7200)*((uint128_t ) t7189));
    t11885 = (a35739 >> 64);
    t11886 = ((uint64_t ) a35739);
    /* MPAddQDD 64 */
    s1842 = (((uint128_t ) t11884) + ((uint128_t ) t11886));
    t11887 = ((uint64_t ) s1842);
    c929 = (s1842 >> 64);
    s1843 = (((uint128_t ) t11883) + ((uint128_t ) t11885));
    s1844 = (((uint128_t ) s1843) + ((uint128_t ) c929));
    t11888 = ((uint64_t ) s1844);
    c930 = (s1844 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11889 = ((uint64_t ) t11880);
    s1845 = (((uint128_t ) t11879) + ((uint128_t ) t11887));
    t11890 = ((uint64_t ) s1845);
    c931 = (s1845 >> 64);
    s1846 = (((uint128_t ) t11882) + ((uint128_t ) t11888));
    s1847 = (((uint128_t ) s1846) + ((uint128_t ) c931));
    t11891 = ((uint64_t ) s1847);
    c932 = (s1847 >> 64);
    s1848 = (((uint128_t ) t11881) + ((uint128_t ) c930));
    s1849 = (((uint128_t ) s1848) + ((uint128_t ) c932));
    t11892 = ((uint64_t ) s1849);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35740 = (((uint128_t ) t7202)*((uint128_t ) t7188));
    t11893 = (a35740 >> 64);
    t11894 = ((uint64_t ) a35740);
    a35741 = (((uint128_t ) t7201)*((uint128_t ) t7187));
    t11895 = (a35741 >> 64);
    t11896 = ((uint64_t ) a35741);
    a35742 = (((uint128_t ) t7201)*((uint128_t ) t7188));
    t11897 = (a35742 >> 64);
    t11898 = ((uint64_t ) a35742);
    a35743 = (((uint128_t ) t7202)*((uint128_t ) t7187));
    t11899 = (a35743 >> 64);
    t11900 = ((uint64_t ) a35743);
    /* MPAddQDD 64 */
    s1850 = (((uint128_t ) t11898) + ((uint128_t ) t11900));
    t11901 = ((uint64_t ) s1850);
    c933 = (s1850 >> 64);
    s1851 = (((uint128_t ) t11897) + ((uint128_t ) t11899));
    s1852 = (((uint128_t ) s1851) + ((uint128_t ) c933));
    t11902 = ((uint64_t ) s1852);
    c934 = (s1852 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11903 = ((uint64_t ) t11894);
    s1853 = (((uint128_t ) t11893) + ((uint128_t ) t11901));
    t11904 = ((uint64_t ) s1853);
    c935 = (s1853 >> 64);
    s1854 = (((uint128_t ) t11896) + ((uint128_t ) t11902));
    s1855 = (((uint128_t ) s1854) + ((uint128_t ) c935));
    t11905 = ((uint64_t ) s1855);
    c936 = (s1855 >> 64);
    s1856 = (((uint128_t ) t11895) + ((uint128_t ) c934));
    s1857 = (((uint128_t ) s1856) + ((uint128_t ) c936));
    t11906 = ((uint64_t ) s1857);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1858 = (((uint128_t ) t11889) + ((uint128_t ) t11903));
    t11907 = ((uint64_t ) s1858);
    c937 = (s1858 >> 64);
    s1859 = (((uint128_t ) t11890) + ((uint128_t ) t11904));
    s1860 = (((uint128_t ) s1859) + ((uint128_t ) c937));
    t11908 = ((uint64_t ) s1860);
    c938 = (s1860 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1861 = (((uint128_t ) t11891) + ((uint128_t ) t11905));
    t11909 = ((uint64_t ) s1861);
    c939 = (s1861 >> 64);
    s1862 = (((uint128_t ) t11892) + ((uint128_t ) t11906));
    s1863 = (((uint128_t ) s1862) + ((uint128_t ) c939));
    t11910 = ((uint64_t ) s1863);
    c940 = (s1863 >> 64);
    /* MPPropagateCarry 64 */
    t11911 = (t11909 + c938);
    a35744 = ((t11911 == 0));
    a35745 = (t11910 + c938);
    t11912 = ((a35744) ? (a35745) : (t11910));
    a35746 = ((t11912 == 0));
    a35747 = ((a35746) && (a35744));
    a35748 = (c940 + c938);
    t11913 = ((a35747) ? (a35748) : (c940));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t11915 = ((uint64_t ) t11861);
    t11916 = ((uint64_t ) t11862);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1864 = (((uint128_t ) t11863) + ((uint128_t ) t11907));
    t11917 = ((uint64_t ) s1864);
    c941 = (s1864 >> 64);
    s1865 = (((uint128_t ) t11864) + ((uint128_t ) t11908));
    s1866 = (((uint128_t ) s1865) + ((uint128_t ) c941));
    t11918 = ((uint64_t ) s1866);
    c942 = (s1866 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1867 = (((uint128_t ) t11875) + ((uint128_t ) t11911));
    t11919 = ((uint64_t ) s1867);
    c943 = (s1867 >> 64);
    s1868 = (((uint128_t ) t11876) + ((uint128_t ) t11912));
    s1869 = (((uint128_t ) s1868) + ((uint128_t ) c943));
    t11920 = ((uint64_t ) s1869);
    c944 = (s1869 >> 64);
    /* MPPropagateCarry 64 */
    t11921 = (t11919 + c942);
    a35757 = ((t11921 == 0));
    a35758 = (t11920 + c942);
    t11922 = ((a35757) ? (a35758) : (t11920));
    a35759 = ((t11922 == 0));
    a35760 = ((a35759) && (a35757));
    a35761 = (c944 + c942);
    t11923 = ((a35760) ? (a35761) : (c944));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1870 = (((uint128_t ) t11877) + ((uint128_t ) t11913));
    t11925 = ((uint64_t ) s1870);
    c945 = (s1870 >> 64);
    s1871 = (((uint128_t ) t11878) + ((uint128_t ) c945));
    t11926 = ((uint64_t ) s1871);
    /* MPPropagateCarry 64 */
    t11927 = (t11925 + t11923);
    a35765 = ((t11927 == 0));
    a35766 = (t11926 + t11923);
    t11928 = ((a35765) ? (a35766) : (t11926));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35772 = (((uint128_t ) t7198)*((uint128_t ) t7194));
    t11931 = (a35772 >> 64);
    t11932 = ((uint64_t ) a35772);
    a35773 = (((uint128_t ) t7197)*((uint128_t ) t7193));
    t11933 = (a35773 >> 64);
    t11934 = ((uint64_t ) a35773);
    a35774 = (((uint128_t ) t7197)*((uint128_t ) t7194));
    t11935 = (a35774 >> 64);
    t11936 = ((uint64_t ) a35774);
    a35775 = (((uint128_t ) t7198)*((uint128_t ) t7193));
    t11937 = (a35775 >> 64);
    t11938 = ((uint64_t ) a35775);
    /* MPAddQDD 64 */
    s1872 = (((uint128_t ) t11936) + ((uint128_t ) t11938));
    t11939 = ((uint64_t ) s1872);
    c947 = (s1872 >> 64);
    s1873 = (((uint128_t ) t11935) + ((uint128_t ) t11937));
    s1874 = (((uint128_t ) s1873) + ((uint128_t ) c947));
    t11940 = ((uint64_t ) s1874);
    c948 = (s1874 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11941 = ((uint64_t ) t11932);
    s1875 = (((uint128_t ) t11931) + ((uint128_t ) t11939));
    t11942 = ((uint64_t ) s1875);
    c949 = (s1875 >> 64);
    s1876 = (((uint128_t ) t11934) + ((uint128_t ) t11940));
    s1877 = (((uint128_t ) s1876) + ((uint128_t ) c949));
    t11943 = ((uint64_t ) s1877);
    c950 = (s1877 >> 64);
    s1878 = (((uint128_t ) t11933) + ((uint128_t ) c948));
    s1879 = (((uint128_t ) s1878) + ((uint128_t ) c950));
    t11944 = ((uint64_t ) s1879);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35776 = (((uint128_t ) t7196)*((uint128_t ) t7194));
    t11945 = (a35776 >> 64);
    t11946 = ((uint64_t ) a35776);
    a35777 = (((uint128_t ) t7195)*((uint128_t ) t7193));
    t11947 = (a35777 >> 64);
    t11948 = ((uint64_t ) a35777);
    a35778 = (((uint128_t ) t7195)*((uint128_t ) t7194));
    t11949 = (a35778 >> 64);
    t11950 = ((uint64_t ) a35778);
    a35779 = (((uint128_t ) t7196)*((uint128_t ) t7193));
    t11951 = (a35779 >> 64);
    t11952 = ((uint64_t ) a35779);
    /* MPAddQDD 64 */
    s1880 = (((uint128_t ) t11950) + ((uint128_t ) t11952));
    t11953 = ((uint64_t ) s1880);
    c951 = (s1880 >> 64);
    s1881 = (((uint128_t ) t11949) + ((uint128_t ) t11951));
    s1882 = (((uint128_t ) s1881) + ((uint128_t ) c951));
    t11954 = ((uint64_t ) s1882);
    c952 = (s1882 >> 64);
    /* Begin of MPAddQQQ 64 */
    t11955 = ((uint64_t ) t11946);
    s1883 = (((uint128_t ) t11945) + ((uint128_t ) t11953));
    t11956 = ((uint64_t ) s1883);
    c953 = (s1883 >> 64);
    s1884 = (((uint128_t ) t11948) + ((uint128_t ) t11954));
    s1885 = (((uint128_t ) s1884) + ((uint128_t ) c953));
    t11957 = ((uint64_t ) s1885);
    c954 = (s1885 >> 64);
    s1886 = (((uint128_t ) t11947) + ((uint128_t ) c952));
    s1887 = (((uint128_t ) s1886) + ((uint128_t ) c954));
    t11958 = ((uint64_t ) s1887);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1888 = (((uint128_t ) t11955) + ((uint128_t ) t11809));
    t11959 = ((uint64_t ) s1888);
    c955 = (s1888 >> 64);
    s1889 = (((uint128_t ) t11956) + ((uint128_t ) t11810));
    s1890 = (((uint128_t ) s1889) + ((uint128_t ) c955));
    t11960 = ((uint64_t ) s1890);
    c956 = (s1890 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1891 = (((uint128_t ) t11957) + ((uint128_t ) t11811));
    t11961 = ((uint64_t ) s1891);
    c957 = (s1891 >> 64);
    s1892 = (((uint128_t ) t11958) + ((uint128_t ) t11812));
    s1893 = (((uint128_t ) s1892) + ((uint128_t ) c957));
    t11962 = ((uint64_t ) s1893);
    c958 = (s1893 >> 64);
    /* MPPropagateCarry 64 */
    t11963 = (t11961 + c956);
    a35780 = ((t11963 == 0));
    a35781 = (t11962 + c956);
    t11964 = ((a35780) ? (a35781) : (t11962));
    a35782 = ((t11964 == 0));
    a35783 = ((a35782) && (a35780));
    a35784 = (c958 + c956);
    t11965 = ((a35783) ? (a35784) : (c958));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t11967 = ((uint64_t ) t11941);
    t11968 = ((uint64_t ) t11942);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1894 = (((uint128_t ) t11943) + ((uint128_t ) t11959));
    t11969 = ((uint64_t ) s1894);
    c959 = (s1894 >> 64);
    s1895 = (((uint128_t ) t11944) + ((uint128_t ) t11960));
    s1896 = (((uint128_t ) s1895) + ((uint128_t ) c959));
    t11970 = ((uint64_t ) s1896);
    c960 = (s1896 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1897 = (((uint128_t ) t11809) + ((uint128_t ) t11963));
    t11971 = ((uint64_t ) s1897);
    c961 = (s1897 >> 64);
    s1898 = (((uint128_t ) t11810) + ((uint128_t ) t11964));
    s1899 = (((uint128_t ) s1898) + ((uint128_t ) c961));
    t11972 = ((uint64_t ) s1899);
    c962 = (s1899 >> 64);
    /* MPPropagateCarry 64 */
    t11973 = (t11971 + c960);
    a35793 = ((t11973 == 0));
    a35794 = (t11972 + c960);
    t11974 = ((a35793) ? (a35794) : (t11972));
    a35795 = ((t11974 == 0));
    a35796 = ((a35795) && (a35793));
    a35797 = (c962 + c960);
    t11975 = ((a35796) ? (a35797) : (c962));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1900 = (((uint128_t ) t11811) + ((uint128_t ) t11965));
    t11977 = ((uint64_t ) s1900);
    c963 = (s1900 >> 64);
    s1901 = (((uint128_t ) t11812) + ((uint128_t ) c963));
    t11978 = ((uint64_t ) s1901);
    /* MPPropagateCarry 64 */
    t11979 = (t11977 + t11975);
    a35801 = ((t11979 == 0));
    a35802 = (t11978 + t11975);
    t11980 = ((a35801) ? (a35802) : (t11978));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* MPAddQDD 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1902 = (((uint128_t ) t11915) + ((uint128_t ) t11967));
    t11983 = ((uint64_t ) s1902);
    c965 = (s1902 >> 64);
    s1903 = (((uint128_t ) t11916) + ((uint128_t ) t11968));
    s1904 = (((uint128_t ) s1903) + ((uint128_t ) c965));
    t11984 = ((uint64_t ) s1904);
    c966 = (s1904 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1905 = (((uint128_t ) t11917) + ((uint128_t ) t11969));
    t11985 = ((uint64_t ) s1905);
    c967 = (s1905 >> 64);
    s1906 = (((uint128_t ) t11918) + ((uint128_t ) t11970));
    s1907 = (((uint128_t ) s1906) + ((uint128_t ) c967));
    t11986 = ((uint64_t ) s1907);
    c968 = (s1907 >> 64);
    /* MPPropagateCarry 64 */
    t11987 = (t11985 + c966);
    a35808 = ((t11987 == 0));
    a35809 = (t11986 + c966);
    t11988 = ((a35808) ? (a35809) : (t11986));
    a35810 = ((t11988 == 0));
    a35811 = ((a35810) && (a35808));
    a35812 = (c968 + c966);
    t11989 = ((a35811) ? (a35812) : (c968));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1908 = (((uint128_t ) t11921) + ((uint128_t ) t11973));
    t11991 = ((uint64_t ) s1908);
    c969 = (s1908 >> 64);
    s1909 = (((uint128_t ) t11922) + ((uint128_t ) t11974));
    s1910 = (((uint128_t ) s1909) + ((uint128_t ) c969));
    t11992 = ((uint64_t ) s1910);
    c970 = (s1910 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1911 = (((uint128_t ) t11927) + ((uint128_t ) t11979));
    t11993 = ((uint64_t ) s1911);
    c971 = (s1911 >> 64);
    s1912 = (((uint128_t ) t11928) + ((uint128_t ) t11980));
    s1913 = (((uint128_t ) s1912) + ((uint128_t ) c971));
    t11994 = ((uint64_t ) s1913);
    c972 = (s1913 >> 64);
    /* MPPropagateCarry 64 */
    t11995 = (t11993 + c970);
    a35816 = ((t11995 == 0));
    a35817 = (t11994 + c970);
    t11996 = ((a35816) ? (a35817) : (t11994));
    a35818 = ((t11996 == 0));
    a35819 = ((a35818) && (a35816));
    a35820 = (c972 + c970);
    t11997 = ((a35819) ? (a35820) : (c972));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    s1914 = (((uint128_t ) t11991) + ((uint128_t ) t11989));
    t11999 = ((uint64_t ) s1914);
    c973 = (s1914 >> 64);
    s1915 = (((uint128_t ) t11992) + ((uint128_t ) c973));
    t12000 = ((uint64_t ) s1915);
    /* MPEqualDI 64 */
    a35824 = ((t12000 == 0));
    a35825 = ((t11999 == 0));
    a35826 = ((a35824) && (a35825));
    /* MPAddDDI 64 */
    s1916 = (((uint128_t ) t11995) + ((uint128_t ) t11989));
    t12001 = ((uint64_t ) s1916);
    c974 = (s1916 >> 64);
    s1917 = (((uint128_t ) t11996) + ((uint128_t ) c974));
    t12002 = ((uint64_t ) s1917);
    /* MPCondD 64 */
    t12003 = ((a35826) ? (t12002) : (t11996));
    t12004 = ((a35826) ? (t12001) : (t11995));
    /* MPEqualDI 64 */
    a35827 = ((t12003 == 0));
    a35828 = ((t12004 == 0));
    a35829 = ((a35827) && (a35828));
    /* MPEqualDI 64 */
    a35830 = ((a35829) && (a35826));
    /* MPAddDII 64 */
    t12005 = (t11997 + t11989);
    /* MPCondDDI 64 */
    t12006 = ((a35830) ? (t12005) : (t11997));
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPTypeCastDI 128 */
    /* MPTypeCastDI 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    t5256 = ((uint64_t ) t11776);
    t5255 = ((uint64_t ) t11777);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    t5260 = ((uint64_t ) t11778);
    t12007 = ((uint64_t ) t11779);
    /* MPPropagateCarry 64 */
    t5263 = t12007;
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1918 = (((uint128_t ) t11782) + ((uint128_t ) t11983));
    t12008 = ((uint64_t ) s1918);
    c975 = (s1918 >> 64);
    s1919 = (((uint128_t ) t11783) + ((uint128_t ) t11984));
    s1920 = (((uint128_t ) s1919) + ((uint128_t ) c975));
    t12009 = ((uint64_t ) s1920);
    c976 = (s1920 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1921 = (((uint128_t ) t11788) + ((uint128_t ) t11987));
    t12010 = ((uint64_t ) s1921);
    c977 = (s1921 >> 64);
    s1922 = (((uint128_t ) t11789) + ((uint128_t ) t11988));
    s1923 = (((uint128_t ) s1922) + ((uint128_t ) c977));
    t12011 = ((uint64_t ) s1923);
    c978 = (s1923 >> 64);
    /* MPPropagateCarry 64 */
    t12012 = (t12010 + c976);
    a35834 = ((t12012 == 0));
    a35835 = (t12011 + c976);
    t12013 = ((a35834) ? (a35835) : (t12011));
    a35836 = ((t12013 == 0));
    a35837 = ((a35836) && (a35834));
    a35838 = (c978 + c976);
    t12014 = ((a35837) ? (a35838) : (c978));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    t8888 = ((uint64_t ) t12008);
    c979 = (t12008 >> 64);
    s1924 = (((uint128_t ) t12009) + ((uint128_t ) c979));
    t8887 = ((uint64_t ) s1924);
    /* MPEqualDI 64 */
    a35842 = ((t8887 == 0));
    a35843 = ((t8888 == 0));
    a35844 = ((a35842) && (a35843));
    /* MPAddDDI 64 */
    t12016 = ((uint64_t ) t12012);
    c980 = (t12012 >> 64);
    s1925 = (((uint128_t ) t12013) + ((uint128_t ) c980));
    t12017 = ((uint64_t ) s1925);
    /* MPCondD 64 */
    t8885 = ((a35844) ? (t12017) : (t12013));
    t8886 = ((a35844) ? (t12016) : (t12012));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDII 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1926 = (((uint128_t ) t11835) + ((uint128_t ) t11999));
    t12018 = ((uint64_t ) s1926);
    c981 = (s1926 >> 64);
    s1927 = (((uint128_t ) t11836) + ((uint128_t ) t12000));
    s1928 = (((uint128_t ) s1927) + ((uint128_t ) c981));
    t12019 = ((uint64_t ) s1928);
    c982 = (s1928 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1929 = (((uint128_t ) t11837) + ((uint128_t ) t12004));
    t12020 = ((uint64_t ) s1929);
    c983 = (s1929 >> 64);
    s1930 = (((uint128_t ) t11838) + ((uint128_t ) t12003));
    s1931 = (((uint128_t ) s1930) + ((uint128_t ) c983));
    t12021 = ((uint64_t ) s1931);
    c984 = (s1931 >> 64);
    /* MPPropagateCarry 64 */
    t12022 = (t12020 + c982);
    a35849 = ((t12022 == 0));
    a35850 = (t12021 + c982);
    t12023 = ((a35849) ? (a35850) : (t12021));
    a35851 = ((t12023 == 0));
    a35852 = ((a35851) && (a35849));
    a35853 = (c984 + c982);
    t12024 = ((a35852) ? (a35853) : (c984));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1932 = (((uint128_t ) t12018) + ((uint128_t ) t12014));
    t8898 = ((uint64_t ) s1932);
    c985 = (s1932 >> 64);
    s1933 = (((uint128_t ) t12019) + ((uint128_t ) c985));
    t8897 = ((uint64_t ) s1933);
    /* MPEqualDI 64 */
    a35857 = ((t8897 == 0));
    a35858 = ((t8898 == 0));
    a35859 = ((a35857) && (a35858));
    /* MPAddDDD 64 */
    s1934 = (((uint128_t ) t12022) + ((uint128_t ) t12014));
    t12026 = ((uint64_t ) s1934);
    c986 = (s1934 >> 64);
    s1935 = (((uint128_t ) t12023) + ((uint128_t ) c986));
    t12027 = ((uint64_t ) s1935);
    /* MPCondD 64 */
    t8895 = ((a35859) ? (t12027) : (t12023));
    t8896 = ((a35859) ? (t12026) : (t12022));
    /* MPEqualDI 64 */
    a35860 = ((t8895 == 0));
    a35861 = ((t8896 == 0));
    a35862 = ((a35860) && (a35861));
    /* MPEqualDI 64 */
    a35863 = ((a35862) && (a35859));
    /* MPAddDDI 64 */
    s1936 = (((uint128_t ) t12014) + ((uint128_t ) t12024));
    t12028 = ((uint64_t ) s1936);
    c987 = (s1936 >> 64);
    s1937 = (((uint128_t ) 0) + ((uint128_t ) c987));
    t12029 = ((uint64_t ) s1937);
    /* MPCondDDI 64 */
    t12030 = ((a35863) ? (t12029) : (0));
    t12031 = ((a35863) ? (t12028) : (t12024));
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQID 128 */
    /* MPAddQDD 64 */
    s1938 = (((uint128_t ) t11841) + ((uint128_t ) t12006));
    t12032 = ((uint64_t ) s1938);
    c988 = (s1938 >> 64);
    s1939 = (((uint128_t ) t11842) + ((uint128_t ) c988));
    t12033 = ((uint64_t ) s1939);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    /* MPExtractLow 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1942 = (((uint128_t ) t12032) + ((uint128_t ) t12031));
    t8908 = ((uint64_t ) s1942);
    c992 = (s1942 >> 64);
    s1943 = (((uint128_t ) t12033) + ((uint128_t ) t12030));
    s1944 = (((uint128_t ) s1943) + ((uint128_t ) c992));
    t8907 = ((uint64_t ) s1944);
    /* MPEqualDI 64 */
    /* MPAddDDD 64 */
    /* MPCondD 64 */
    /* MPExtractLow 128 */
    /* End of MPAddQQQ 256 */
    /* End of MPMulQDD_Schoolbook_Full */
}

__device__ void MPMulQDD_L3_2(uint64_t &t8905, uint64_t &t8906, uint64_t &t8907, uint64_t &t8908, uint64_t &t8895, uint64_t &t8896, uint64_t &t8897, uint64_t &t8898, uint64_t &t8885, uint64_t &t8886, uint64_t &t8887, uint64_t &t8888, uint64_t &t5263, uint64_t &t5260, uint64_t &t5255, uint64_t &t5256, uint64_t t7199, uint64_t t7200, uint64_t t7201, uint64_t t7202, uint64_t t7195, uint64_t t7196, uint64_t t7197, uint64_t t7198, uint64_t t7191, uint64_t t7192, uint64_t t7193, uint64_t t7194, uint64_t t7187, uint64_t t7188, uint64_t t7189, uint64_t t7190) {
    int a35883, a35885, a35886, a35896, a35898, a35899, a35904, a35951, 
            a35953, a35954, a35964, a35966, a35967, a35972, a35987, a35989, 
            a35990, a36000, a36002, a36003, a36008, a36015, a36017, a36018, 
            a36023, a36031, a36032, a36033, a36041, a36043, a36044, a36049, 
            a36050, a36051, a36056, a36064, a36065, a36066, c1000, c1001, 
            c1002, c1003, c1004, c1005, c1006, c1007, c1008, c1009, 
            c1010, c1011, c1012, c1013, c1014, c1015, c1016, c1017, 
            c1018, c1020, c1021, c1022, c1023, c1024, c1025, c1026, 
            c1027, c1028, c1032, c1038, c1039, c1040, c1041, c1042, 
            c1043, c1044, c1045, c1046, c1047, c1048, c1049, c1050, 
            c1051, c1052, c1053, c1054, c1056, c1057, c1058, c1059, 
            c1060, c1061, c1062, c1063, c1064, c1065, c1066, c1067, 
            c1068, c1069, c1070, c1071, c1072, c1074, c1075, c1076, 
            c1077, c1078, c1079, c1080, c1082, c1083, c1084, c1085, 
            c1086, c1087, c1088, c1089, c1090, c1091, c1092, c1094, 
            c1095, c994, c995, c996, c997, c998, c999;
    uint64_t a35884, a35887, a35897, a35900, a35905, a35952, a35955, a35965, 
            a35968, a35973, a35988, a35991, a36001, a36004, a36009, a36016, 
            a36019, a36024, a36042, a36045, a36057, t12038, t12039, t12040, 
            t12041, t12042, t12043, t12044, t12045, t12046, t12047, t12048, 
            t12049, t12050, t12051, t12052, t12053, t12054, t12055, t12056, 
            t12057, t12058, t12059, t12060, t12061, t12062, t12063, t12064, 
            t12065, t12066, t12067, t12068, t12069, t12070, t12071, t12072, 
            t12073, t12074, t12075, t12076, t12077, t12078, t12079, t12080, 
            t12081, t12082, t12083, t12084, t12085, t12086, t12087, t12088, 
            t12089, t12090, t12091, t12092, t12093, t12094, t12095, t12096, 
            t12097, t12098, t12099, t12100, t12102, t12103, t12104, t12105, 
            t12106, t12107, t12108, t12109, t12110, t12112, t12113, t12114, 
            t12115, t12118, t12119, t12120, t12121, t12122, t12123, t12124, 
            t12125, t12126, t12127, t12128, t12129, t12130, t12131, t12132, 
            t12133, t12134, t12135, t12136, t12137, t12138, t12139, t12140, 
            t12147, t12148, t12149, t12150, t12163, t12164, t12165, t12166, 
            t12167, t12168, t12169, t12170, t12171, t12172, t12173, t12174, 
            t12175, t12176, t12177, t12178, t12179, t12180, t12181, t12182, 
            t12183, t12184, t12185, t12186, t12187, t12188, t12189, t12190, 
            t12191, t12192, t12193, t12194, t12195, t12196, t12197, t12199, 
            t12200, t12201, t12202, t12203, t12204, t12205, t12206, t12207, 
            t12209, t12210, t12211, t12212, t12215, t12216, t12217, t12218, 
            t12219, t12220, t12221, t12222, t12223, t12224, t12225, t12226, 
            t12227, t12228, t12229, t12230, t12231, t12232, t12233, t12234, 
            t12235, t12236, t12237, t12238, t12239, t12240, t12241, t12242, 
            t12243, t12244, t12245, t12246, t12247, t12248, t12249, t12251, 
            t12252, t12253, t12254, t12255, t12256, t12257, t12258, t12259, 
            t12261, t12262, t12263, t12264, t12267, t12268, t12269, t12270, 
            t12271, t12272, t12273, t12275, t12276, t12277, t12278, t12279, 
            t12280, t12283, t12284, t12285, t12286, t12287, t12288, t12291, 
            t12292, t12293, t12294, t12295, t12296, t12297, t12298, t12300, 
            t12301, t12302, t12303, t12304, t12305, t12306, t12307, t12310, 
            t12311;
    uint128_t a35867, a35868, a35869, a35870, a35871, a35872, a35873, a35874, 
            a35875, a35876, a35877, a35878, a35879, a35880, a35881, a35882, 
            a35911, a35912, a35913, a35914, a35943, a35944, a35945, a35946, 
            a35947, a35948, a35949, a35950, a35979, a35980, a35981, a35982, 
            a35983, a35984, a35985, a35986, s1948, s1949, s1950, s1951, 
            s1952, s1953, s1954, s1955, s1956, s1957, s1958, s1959, 
            s1960, s1961, s1962, s1963, s1964, s1965, s1966, s1967, 
            s1968, s1969, s1970, s1971, s1972, s1973, s1974, s1975, 
            s1976, s1977, s1978, s1979, s1980, s1981, s1982, s1983, 
            s1984, s1985, s1986, s1987, s1988, s1989, s1990, s1991, 
            s1992, s1993, s1994, s1995, s1996, s1997, s1998, s1999, 
            s2000, s2001, s2002, s2003, s2004, s2005, s2006, s2007, 
            s2008, s2009, s2010, s2014, s2015, s2016, s2022, s2023, 
            s2024, s2025, s2026, s2027, s2028, s2029, s2030, s2031, 
            s2032, s2033, s2034, s2035, s2036, s2037, s2038, s2039, 
            s2040, s2041, s2042, s2043, s2044, s2045, s2046, s2047, 
            s2048, s2049, s2050, s2051, s2052, s2053, s2054, s2055, 
            s2056, s2057, s2058, s2059, s2060, s2061, s2062, s2063, 
            s2064, s2065, s2066, s2067, s2068, s2069, s2070, s2071, 
            s2072, s2073, s2074, s2075, s2076, s2077, s2078, s2079, 
            s2080, s2081, s2082, s2083, s2084, s2085, s2086, s2087, 
            s2088, s2089, s2090, s2091, s2092, s2093, s2094, s2095, 
            s2096, s2097, s2098, s2099, s2100, s2101, s2102, s2103, 
            s2104, s2105, s2106, s2107, s2108, s2109, s2110, s2111, 
            s2112, s2113, s2114, s2115;
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35867 = (((uint128_t ) t7198)*((uint128_t ) t7190));
    t12038 = (a35867 >> 64);
    t12039 = ((uint64_t ) a35867);
    a35868 = (((uint128_t ) t7197)*((uint128_t ) t7189));
    t12040 = (a35868 >> 64);
    t12041 = ((uint64_t ) a35868);
    a35869 = (((uint128_t ) t7197)*((uint128_t ) t7190));
    t12042 = (a35869 >> 64);
    t12043 = ((uint64_t ) a35869);
    a35870 = (((uint128_t ) t7198)*((uint128_t ) t7189));
    t12044 = (a35870 >> 64);
    t12045 = ((uint64_t ) a35870);
    /* MPAddQDD 64 */
    s1948 = (((uint128_t ) t12043) + ((uint128_t ) t12045));
    t12046 = ((uint64_t ) s1948);
    c994 = (s1948 >> 64);
    s1949 = (((uint128_t ) t12042) + ((uint128_t ) t12044));
    s1950 = (((uint128_t ) s1949) + ((uint128_t ) c994));
    t12047 = ((uint64_t ) s1950);
    c995 = (s1950 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12048 = ((uint64_t ) t12039);
    s1951 = (((uint128_t ) t12038) + ((uint128_t ) t12046));
    t12049 = ((uint64_t ) s1951);
    c996 = (s1951 >> 64);
    s1952 = (((uint128_t ) t12041) + ((uint128_t ) t12047));
    s1953 = (((uint128_t ) s1952) + ((uint128_t ) c996));
    t12050 = ((uint64_t ) s1953);
    c997 = (s1953 >> 64);
    s1954 = (((uint128_t ) t12040) + ((uint128_t ) c995));
    s1955 = (((uint128_t ) s1954) + ((uint128_t ) c997));
    t12051 = ((uint64_t ) s1955);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35871 = (((uint128_t ) t7196)*((uint128_t ) t7188));
    t12052 = (a35871 >> 64);
    t12053 = ((uint64_t ) a35871);
    a35872 = (((uint128_t ) t7195)*((uint128_t ) t7187));
    t12054 = (a35872 >> 64);
    t12055 = ((uint64_t ) a35872);
    a35873 = (((uint128_t ) t7195)*((uint128_t ) t7188));
    t12056 = (a35873 >> 64);
    t12057 = ((uint64_t ) a35873);
    a35874 = (((uint128_t ) t7196)*((uint128_t ) t7187));
    t12058 = (a35874 >> 64);
    t12059 = ((uint64_t ) a35874);
    /* MPAddQDD 64 */
    s1956 = (((uint128_t ) t12057) + ((uint128_t ) t12059));
    t12060 = ((uint64_t ) s1956);
    c998 = (s1956 >> 64);
    s1957 = (((uint128_t ) t12056) + ((uint128_t ) t12058));
    s1958 = (((uint128_t ) s1957) + ((uint128_t ) c998));
    t12061 = ((uint64_t ) s1958);
    c999 = (s1958 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12062 = ((uint64_t ) t12053);
    s1959 = (((uint128_t ) t12052) + ((uint128_t ) t12060));
    t12063 = ((uint64_t ) s1959);
    c1000 = (s1959 >> 64);
    s1960 = (((uint128_t ) t12055) + ((uint128_t ) t12061));
    s1961 = (((uint128_t ) s1960) + ((uint128_t ) c1000));
    t12064 = ((uint64_t ) s1961);
    c1001 = (s1961 >> 64);
    s1962 = (((uint128_t ) t12054) + ((uint128_t ) c999));
    s1963 = (((uint128_t ) s1962) + ((uint128_t ) c1001));
    t12065 = ((uint64_t ) s1963);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35875 = (((uint128_t ) t7196)*((uint128_t ) t7190));
    t12066 = (a35875 >> 64);
    t12067 = ((uint64_t ) a35875);
    a35876 = (((uint128_t ) t7195)*((uint128_t ) t7189));
    t12068 = (a35876 >> 64);
    t12069 = ((uint64_t ) a35876);
    a35877 = (((uint128_t ) t7195)*((uint128_t ) t7190));
    t12070 = (a35877 >> 64);
    t12071 = ((uint64_t ) a35877);
    a35878 = (((uint128_t ) t7196)*((uint128_t ) t7189));
    t12072 = (a35878 >> 64);
    t12073 = ((uint64_t ) a35878);
    /* MPAddQDD 64 */
    s1964 = (((uint128_t ) t12071) + ((uint128_t ) t12073));
    t12074 = ((uint64_t ) s1964);
    c1002 = (s1964 >> 64);
    s1965 = (((uint128_t ) t12070) + ((uint128_t ) t12072));
    s1966 = (((uint128_t ) s1965) + ((uint128_t ) c1002));
    t12075 = ((uint64_t ) s1966);
    c1003 = (s1966 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12076 = ((uint64_t ) t12067);
    s1967 = (((uint128_t ) t12066) + ((uint128_t ) t12074));
    t12077 = ((uint64_t ) s1967);
    c1004 = (s1967 >> 64);
    s1968 = (((uint128_t ) t12069) + ((uint128_t ) t12075));
    s1969 = (((uint128_t ) s1968) + ((uint128_t ) c1004));
    t12078 = ((uint64_t ) s1969);
    c1005 = (s1969 >> 64);
    s1970 = (((uint128_t ) t12068) + ((uint128_t ) c1003));
    s1971 = (((uint128_t ) s1970) + ((uint128_t ) c1005));
    t12079 = ((uint64_t ) s1971);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35879 = (((uint128_t ) t7198)*((uint128_t ) t7188));
    t12080 = (a35879 >> 64);
    t12081 = ((uint64_t ) a35879);
    a35880 = (((uint128_t ) t7197)*((uint128_t ) t7187));
    t12082 = (a35880 >> 64);
    t12083 = ((uint64_t ) a35880);
    a35881 = (((uint128_t ) t7197)*((uint128_t ) t7188));
    t12084 = (a35881 >> 64);
    t12085 = ((uint64_t ) a35881);
    a35882 = (((uint128_t ) t7198)*((uint128_t ) t7187));
    t12086 = (a35882 >> 64);
    t12087 = ((uint64_t ) a35882);
    /* MPAddQDD 64 */
    s1972 = (((uint128_t ) t12085) + ((uint128_t ) t12087));
    t12088 = ((uint64_t ) s1972);
    c1006 = (s1972 >> 64);
    s1973 = (((uint128_t ) t12084) + ((uint128_t ) t12086));
    s1974 = (((uint128_t ) s1973) + ((uint128_t ) c1006));
    t12089 = ((uint64_t ) s1974);
    c1007 = (s1974 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12090 = ((uint64_t ) t12081);
    s1975 = (((uint128_t ) t12080) + ((uint128_t ) t12088));
    t12091 = ((uint64_t ) s1975);
    c1008 = (s1975 >> 64);
    s1976 = (((uint128_t ) t12083) + ((uint128_t ) t12089));
    s1977 = (((uint128_t ) s1976) + ((uint128_t ) c1008));
    t12092 = ((uint64_t ) s1977);
    c1009 = (s1977 >> 64);
    s1978 = (((uint128_t ) t12082) + ((uint128_t ) c1007));
    s1979 = (((uint128_t ) s1978) + ((uint128_t ) c1009));
    t12093 = ((uint64_t ) s1979);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1980 = (((uint128_t ) t12076) + ((uint128_t ) t12090));
    t12094 = ((uint64_t ) s1980);
    c1010 = (s1980 >> 64);
    s1981 = (((uint128_t ) t12077) + ((uint128_t ) t12091));
    s1982 = (((uint128_t ) s1981) + ((uint128_t ) c1010));
    t12095 = ((uint64_t ) s1982);
    c1011 = (s1982 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1983 = (((uint128_t ) t12078) + ((uint128_t ) t12092));
    t12096 = ((uint64_t ) s1983);
    c1012 = (s1983 >> 64);
    s1984 = (((uint128_t ) t12079) + ((uint128_t ) t12093));
    s1985 = (((uint128_t ) s1984) + ((uint128_t ) c1012));
    t12097 = ((uint64_t ) s1985);
    c1013 = (s1985 >> 64);
    /* MPPropagateCarry 64 */
    t12098 = (t12096 + c1011);
    a35883 = ((t12098 == 0));
    a35884 = (t12097 + c1011);
    t12099 = ((a35883) ? (a35884) : (t12097));
    a35885 = ((t12099 == 0));
    a35886 = ((a35885) && (a35883));
    a35887 = (c1013 + c1011);
    t12100 = ((a35886) ? (a35887) : (c1013));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t12102 = ((uint64_t ) t12048);
    t12103 = ((uint64_t ) t12049);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1986 = (((uint128_t ) t12050) + ((uint128_t ) t12094));
    t12104 = ((uint64_t ) s1986);
    c1014 = (s1986 >> 64);
    s1987 = (((uint128_t ) t12051) + ((uint128_t ) t12095));
    s1988 = (((uint128_t ) s1987) + ((uint128_t ) c1014));
    t12105 = ((uint64_t ) s1988);
    c1015 = (s1988 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1989 = (((uint128_t ) t12062) + ((uint128_t ) t12098));
    t12106 = ((uint64_t ) s1989);
    c1016 = (s1989 >> 64);
    s1990 = (((uint128_t ) t12063) + ((uint128_t ) t12099));
    s1991 = (((uint128_t ) s1990) + ((uint128_t ) c1016));
    t12107 = ((uint64_t ) s1991);
    c1017 = (s1991 >> 64);
    /* MPPropagateCarry 64 */
    t12108 = (t12106 + c1015);
    a35896 = ((t12108 == 0));
    a35897 = (t12107 + c1015);
    t12109 = ((a35896) ? (a35897) : (t12107));
    a35898 = ((t12109 == 0));
    a35899 = ((a35898) && (a35896));
    a35900 = (c1017 + c1015);
    t12110 = ((a35899) ? (a35900) : (c1017));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1992 = (((uint128_t ) t12064) + ((uint128_t ) t12100));
    t12112 = ((uint64_t ) s1992);
    c1018 = (s1992 >> 64);
    s1993 = (((uint128_t ) t12065) + ((uint128_t ) c1018));
    t12113 = ((uint64_t ) s1993);
    /* MPPropagateCarry 64 */
    t12114 = (t12112 + t12110);
    a35904 = ((t12114 == 0));
    a35905 = (t12113 + t12110);
    t12115 = ((a35904) ? (a35905) : (t12113));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35911 = (((uint128_t ) t7202)*((uint128_t ) t7194));
    t12118 = (a35911 >> 64);
    t12119 = ((uint64_t ) a35911);
    a35912 = (((uint128_t ) t7201)*((uint128_t ) t7193));
    t12120 = (a35912 >> 64);
    t12121 = ((uint64_t ) a35912);
    a35913 = (((uint128_t ) t7201)*((uint128_t ) t7194));
    t12122 = (a35913 >> 64);
    t12123 = ((uint64_t ) a35913);
    a35914 = (((uint128_t ) t7202)*((uint128_t ) t7193));
    t12124 = (a35914 >> 64);
    t12125 = ((uint64_t ) a35914);
    /* MPAddQDD 64 */
    s1994 = (((uint128_t ) t12123) + ((uint128_t ) t12125));
    t12126 = ((uint64_t ) s1994);
    c1020 = (s1994 >> 64);
    s1995 = (((uint128_t ) t12122) + ((uint128_t ) t12124));
    s1996 = (((uint128_t ) s1995) + ((uint128_t ) c1020));
    t12127 = ((uint64_t ) s1996);
    c1021 = (s1996 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12128 = ((uint64_t ) t12119);
    s1997 = (((uint128_t ) t12118) + ((uint128_t ) t12126));
    t12129 = ((uint64_t ) s1997);
    c1022 = (s1997 >> 64);
    s1998 = (((uint128_t ) t12121) + ((uint128_t ) t12127));
    s1999 = (((uint128_t ) s1998) + ((uint128_t ) c1022));
    t12130 = ((uint64_t ) s1999);
    c1023 = (s1999 >> 64);
    s2000 = (((uint128_t ) t12120) + ((uint128_t ) c1021));
    s2001 = (((uint128_t ) s2000) + ((uint128_t ) c1023));
    t12131 = ((uint64_t ) s2001);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    t12132 = ((uint64_t ) 0);
    /* MPAddQDD 64 */
    s2002 = (((uint128_t ) t12132) + ((uint128_t ) t12132));
    t12133 = ((uint64_t ) s2002);
    c1024 = (s2002 >> 64);
    s2003 = (((uint128_t ) 0) + ((uint128_t ) c1024));
    t12134 = ((uint64_t ) s2003);
    c1025 = (s2003 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12135 = ((uint64_t ) t12132);
    t12136 = ((uint64_t ) t12133);
    c1026 = (t12133 >> 64);
    s2004 = (((uint128_t ) t12132) + ((uint128_t ) t12134));
    s2005 = (((uint128_t ) s2004) + ((uint128_t ) c1026));
    t12137 = ((uint64_t ) s2005);
    c1027 = (s2005 >> 64);
    s2006 = (((uint128_t ) 0) + ((uint128_t ) c1025));
    s2007 = (((uint128_t ) s2006) + ((uint128_t ) c1027));
    t12138 = ((uint64_t ) s2007);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s2008 = (((uint128_t ) t12135) + ((uint128_t ) t12135));
    t12139 = ((uint64_t ) s2008);
    c1028 = (s2008 >> 64);
    s2009 = (((uint128_t ) t12136) + ((uint128_t ) t12136));
    s2010 = (((uint128_t ) s2009) + ((uint128_t ) c1028));
    t12140 = ((uint64_t ) s2010);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t12147 = ((uint64_t ) t12128);
    t12148 = ((uint64_t ) t12129);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2014 = (((uint128_t ) t12130) + ((uint128_t ) t12139));
    t12149 = ((uint64_t ) s2014);
    c1032 = (s2014 >> 64);
    s2015 = (((uint128_t ) t12131) + ((uint128_t ) t12140));
    s2016 = (((uint128_t ) s2015) + ((uint128_t ) c1032));
    t12150 = ((uint64_t ) s2016);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35943 = (((uint128_t ) t7202)*((uint128_t ) t7190));
    t12163 = (a35943 >> 64);
    t12164 = ((uint64_t ) a35943);
    a35944 = (((uint128_t ) t7201)*((uint128_t ) t7189));
    t12165 = (a35944 >> 64);
    t12166 = ((uint64_t ) a35944);
    a35945 = (((uint128_t ) t7201)*((uint128_t ) t7190));
    t12167 = (a35945 >> 64);
    t12168 = ((uint64_t ) a35945);
    a35946 = (((uint128_t ) t7202)*((uint128_t ) t7189));
    t12169 = (a35946 >> 64);
    t12170 = ((uint64_t ) a35946);
    /* MPAddQDD 64 */
    s2022 = (((uint128_t ) t12168) + ((uint128_t ) t12170));
    t12171 = ((uint64_t ) s2022);
    c1038 = (s2022 >> 64);
    s2023 = (((uint128_t ) t12167) + ((uint128_t ) t12169));
    s2024 = (((uint128_t ) s2023) + ((uint128_t ) c1038));
    t12172 = ((uint64_t ) s2024);
    c1039 = (s2024 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12173 = ((uint64_t ) t12164);
    s2025 = (((uint128_t ) t12163) + ((uint128_t ) t12171));
    t12174 = ((uint64_t ) s2025);
    c1040 = (s2025 >> 64);
    s2026 = (((uint128_t ) t12166) + ((uint128_t ) t12172));
    s2027 = (((uint128_t ) s2026) + ((uint128_t ) c1040));
    t12175 = ((uint64_t ) s2027);
    c1041 = (s2027 >> 64);
    s2028 = (((uint128_t ) t12165) + ((uint128_t ) c1039));
    s2029 = (((uint128_t ) s2028) + ((uint128_t ) c1041));
    t12176 = ((uint64_t ) s2029);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35947 = (((uint128_t ) t7202)*((uint128_t ) t7188));
    t12177 = (a35947 >> 64);
    t12178 = ((uint64_t ) a35947);
    a35948 = (((uint128_t ) t7201)*((uint128_t ) t7187));
    t12179 = (a35948 >> 64);
    t12180 = ((uint64_t ) a35948);
    a35949 = (((uint128_t ) t7201)*((uint128_t ) t7188));
    t12181 = (a35949 >> 64);
    t12182 = ((uint64_t ) a35949);
    a35950 = (((uint128_t ) t7202)*((uint128_t ) t7187));
    t12183 = (a35950 >> 64);
    t12184 = ((uint64_t ) a35950);
    /* MPAddQDD 64 */
    s2030 = (((uint128_t ) t12182) + ((uint128_t ) t12184));
    t12185 = ((uint64_t ) s2030);
    c1042 = (s2030 >> 64);
    s2031 = (((uint128_t ) t12181) + ((uint128_t ) t12183));
    s2032 = (((uint128_t ) s2031) + ((uint128_t ) c1042));
    t12186 = ((uint64_t ) s2032);
    c1043 = (s2032 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12187 = ((uint64_t ) t12178);
    s2033 = (((uint128_t ) t12177) + ((uint128_t ) t12185));
    t12188 = ((uint64_t ) s2033);
    c1044 = (s2033 >> 64);
    s2034 = (((uint128_t ) t12180) + ((uint128_t ) t12186));
    s2035 = (((uint128_t ) s2034) + ((uint128_t ) c1044));
    t12189 = ((uint64_t ) s2035);
    c1045 = (s2035 >> 64);
    s2036 = (((uint128_t ) t12179) + ((uint128_t ) c1043));
    s2037 = (((uint128_t ) s2036) + ((uint128_t ) c1045));
    t12190 = ((uint64_t ) s2037);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s2038 = (((uint128_t ) t12135) + ((uint128_t ) t12187));
    t12191 = ((uint64_t ) s2038);
    c1046 = (s2038 >> 64);
    s2039 = (((uint128_t ) t12136) + ((uint128_t ) t12188));
    s2040 = (((uint128_t ) s2039) + ((uint128_t ) c1046));
    t12192 = ((uint64_t ) s2040);
    c1047 = (s2040 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2041 = (((uint128_t ) t12137) + ((uint128_t ) t12189));
    t12193 = ((uint64_t ) s2041);
    c1048 = (s2041 >> 64);
    s2042 = (((uint128_t ) t12138) + ((uint128_t ) t12190));
    s2043 = (((uint128_t ) s2042) + ((uint128_t ) c1048));
    t12194 = ((uint64_t ) s2043);
    c1049 = (s2043 >> 64);
    /* MPPropagateCarry 64 */
    t12195 = (t12193 + c1047);
    a35951 = ((t12195 == 0));
    a35952 = (t12194 + c1047);
    t12196 = ((a35951) ? (a35952) : (t12194));
    a35953 = ((t12196 == 0));
    a35954 = ((a35953) && (a35951));
    a35955 = (c1049 + c1047);
    t12197 = ((a35954) ? (a35955) : (c1049));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t12199 = ((uint64_t ) t12173);
    t12200 = ((uint64_t ) t12174);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2044 = (((uint128_t ) t12175) + ((uint128_t ) t12191));
    t12201 = ((uint64_t ) s2044);
    c1050 = (s2044 >> 64);
    s2045 = (((uint128_t ) t12176) + ((uint128_t ) t12192));
    s2046 = (((uint128_t ) s2045) + ((uint128_t ) c1050));
    t12202 = ((uint64_t ) s2046);
    c1051 = (s2046 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2047 = (((uint128_t ) t12135) + ((uint128_t ) t12195));
    t12203 = ((uint64_t ) s2047);
    c1052 = (s2047 >> 64);
    s2048 = (((uint128_t ) t12136) + ((uint128_t ) t12196));
    s2049 = (((uint128_t ) s2048) + ((uint128_t ) c1052));
    t12204 = ((uint64_t ) s2049);
    c1053 = (s2049 >> 64);
    /* MPPropagateCarry 64 */
    t12205 = (t12203 + c1051);
    a35964 = ((t12205 == 0));
    a35965 = (t12204 + c1051);
    t12206 = ((a35964) ? (a35965) : (t12204));
    a35966 = ((t12206 == 0));
    a35967 = ((a35966) && (a35964));
    a35968 = (c1053 + c1051);
    t12207 = ((a35967) ? (a35968) : (c1053));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s2050 = (((uint128_t ) t12137) + ((uint128_t ) t12197));
    t12209 = ((uint64_t ) s2050);
    c1054 = (s2050 >> 64);
    s2051 = (((uint128_t ) t12138) + ((uint128_t ) c1054));
    t12210 = ((uint64_t ) s2051);
    /* MPPropagateCarry 64 */
    t12211 = (t12209 + t12207);
    a35972 = ((t12211 == 0));
    a35973 = (t12210 + t12207);
    t12212 = ((a35972) ? (a35973) : (t12210));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35979 = (((uint128_t ) t7198)*((uint128_t ) t7194));
    t12215 = (a35979 >> 64);
    t12216 = ((uint64_t ) a35979);
    a35980 = (((uint128_t ) t7197)*((uint128_t ) t7193));
    t12217 = (a35980 >> 64);
    t12218 = ((uint64_t ) a35980);
    a35981 = (((uint128_t ) t7197)*((uint128_t ) t7194));
    t12219 = (a35981 >> 64);
    t12220 = ((uint64_t ) a35981);
    a35982 = (((uint128_t ) t7198)*((uint128_t ) t7193));
    t12221 = (a35982 >> 64);
    t12222 = ((uint64_t ) a35982);
    /* MPAddQDD 64 */
    s2052 = (((uint128_t ) t12220) + ((uint128_t ) t12222));
    t12223 = ((uint64_t ) s2052);
    c1056 = (s2052 >> 64);
    s2053 = (((uint128_t ) t12219) + ((uint128_t ) t12221));
    s2054 = (((uint128_t ) s2053) + ((uint128_t ) c1056));
    t12224 = ((uint64_t ) s2054);
    c1057 = (s2054 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12225 = ((uint64_t ) t12216);
    s2055 = (((uint128_t ) t12215) + ((uint128_t ) t12223));
    t12226 = ((uint64_t ) s2055);
    c1058 = (s2055 >> 64);
    s2056 = (((uint128_t ) t12218) + ((uint128_t ) t12224));
    s2057 = (((uint128_t ) s2056) + ((uint128_t ) c1058));
    t12227 = ((uint64_t ) s2057);
    c1059 = (s2057 >> 64);
    s2058 = (((uint128_t ) t12217) + ((uint128_t ) c1057));
    s2059 = (((uint128_t ) s2058) + ((uint128_t ) c1059));
    t12228 = ((uint64_t ) s2059);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a35983 = (((uint128_t ) t7196)*((uint128_t ) t7194));
    t12229 = (a35983 >> 64);
    t12230 = ((uint64_t ) a35983);
    a35984 = (((uint128_t ) t7195)*((uint128_t ) t7193));
    t12231 = (a35984 >> 64);
    t12232 = ((uint64_t ) a35984);
    a35985 = (((uint128_t ) t7195)*((uint128_t ) t7194));
    t12233 = (a35985 >> 64);
    t12234 = ((uint64_t ) a35985);
    a35986 = (((uint128_t ) t7196)*((uint128_t ) t7193));
    t12235 = (a35986 >> 64);
    t12236 = ((uint64_t ) a35986);
    /* MPAddQDD 64 */
    s2060 = (((uint128_t ) t12234) + ((uint128_t ) t12236));
    t12237 = ((uint64_t ) s2060);
    c1060 = (s2060 >> 64);
    s2061 = (((uint128_t ) t12233) + ((uint128_t ) t12235));
    s2062 = (((uint128_t ) s2061) + ((uint128_t ) c1060));
    t12238 = ((uint64_t ) s2062);
    c1061 = (s2062 >> 64);
    /* Begin of MPAddQQQ 64 */
    t12239 = ((uint64_t ) t12230);
    s2063 = (((uint128_t ) t12229) + ((uint128_t ) t12237));
    t12240 = ((uint64_t ) s2063);
    c1062 = (s2063 >> 64);
    s2064 = (((uint128_t ) t12232) + ((uint128_t ) t12238));
    s2065 = (((uint128_t ) s2064) + ((uint128_t ) c1062));
    t12241 = ((uint64_t ) s2065);
    c1063 = (s2065 >> 64);
    s2066 = (((uint128_t ) t12231) + ((uint128_t ) c1061));
    s2067 = (((uint128_t ) s2066) + ((uint128_t ) c1063));
    t12242 = ((uint64_t ) s2067);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s2068 = (((uint128_t ) t12239) + ((uint128_t ) t12135));
    t12243 = ((uint64_t ) s2068);
    c1064 = (s2068 >> 64);
    s2069 = (((uint128_t ) t12240) + ((uint128_t ) t12136));
    s2070 = (((uint128_t ) s2069) + ((uint128_t ) c1064));
    t12244 = ((uint64_t ) s2070);
    c1065 = (s2070 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2071 = (((uint128_t ) t12241) + ((uint128_t ) t12137));
    t12245 = ((uint64_t ) s2071);
    c1066 = (s2071 >> 64);
    s2072 = (((uint128_t ) t12242) + ((uint128_t ) t12138));
    s2073 = (((uint128_t ) s2072) + ((uint128_t ) c1066));
    t12246 = ((uint64_t ) s2073);
    c1067 = (s2073 >> 64);
    /* MPPropagateCarry 64 */
    t12247 = (t12245 + c1065);
    a35987 = ((t12247 == 0));
    a35988 = (t12246 + c1065);
    t12248 = ((a35987) ? (a35988) : (t12246));
    a35989 = ((t12248 == 0));
    a35990 = ((a35989) && (a35987));
    a35991 = (c1067 + c1065);
    t12249 = ((a35990) ? (a35991) : (c1067));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t12251 = ((uint64_t ) t12225);
    t12252 = ((uint64_t ) t12226);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2074 = (((uint128_t ) t12227) + ((uint128_t ) t12243));
    t12253 = ((uint64_t ) s2074);
    c1068 = (s2074 >> 64);
    s2075 = (((uint128_t ) t12228) + ((uint128_t ) t12244));
    s2076 = (((uint128_t ) s2075) + ((uint128_t ) c1068));
    t12254 = ((uint64_t ) s2076);
    c1069 = (s2076 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2077 = (((uint128_t ) t12135) + ((uint128_t ) t12247));
    t12255 = ((uint64_t ) s2077);
    c1070 = (s2077 >> 64);
    s2078 = (((uint128_t ) t12136) + ((uint128_t ) t12248));
    s2079 = (((uint128_t ) s2078) + ((uint128_t ) c1070));
    t12256 = ((uint64_t ) s2079);
    c1071 = (s2079 >> 64);
    /* MPPropagateCarry 64 */
    t12257 = (t12255 + c1069);
    a36000 = ((t12257 == 0));
    a36001 = (t12256 + c1069);
    t12258 = ((a36000) ? (a36001) : (t12256));
    a36002 = ((t12258 == 0));
    a36003 = ((a36002) && (a36000));
    a36004 = (c1071 + c1069);
    t12259 = ((a36003) ? (a36004) : (c1071));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s2080 = (((uint128_t ) t12137) + ((uint128_t ) t12249));
    t12261 = ((uint64_t ) s2080);
    c1072 = (s2080 >> 64);
    s2081 = (((uint128_t ) t12138) + ((uint128_t ) c1072));
    t12262 = ((uint64_t ) s2081);
    /* MPPropagateCarry 64 */
    t12263 = (t12261 + t12259);
    a36008 = ((t12263 == 0));
    a36009 = (t12262 + t12259);
    t12264 = ((a36008) ? (a36009) : (t12262));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* MPAddQDD 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s2082 = (((uint128_t ) t12199) + ((uint128_t ) t12251));
    t12267 = ((uint64_t ) s2082);
    c1074 = (s2082 >> 64);
    s2083 = (((uint128_t ) t12200) + ((uint128_t ) t12252));
    s2084 = (((uint128_t ) s2083) + ((uint128_t ) c1074));
    t12268 = ((uint64_t ) s2084);
    c1075 = (s2084 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2085 = (((uint128_t ) t12201) + ((uint128_t ) t12253));
    t12269 = ((uint64_t ) s2085);
    c1076 = (s2085 >> 64);
    s2086 = (((uint128_t ) t12202) + ((uint128_t ) t12254));
    s2087 = (((uint128_t ) s2086) + ((uint128_t ) c1076));
    t12270 = ((uint64_t ) s2087);
    c1077 = (s2087 >> 64);
    /* MPPropagateCarry 64 */
    t12271 = (t12269 + c1075);
    a36015 = ((t12271 == 0));
    a36016 = (t12270 + c1075);
    t12272 = ((a36015) ? (a36016) : (t12270));
    a36017 = ((t12272 == 0));
    a36018 = ((a36017) && (a36015));
    a36019 = (c1077 + c1075);
    t12273 = ((a36018) ? (a36019) : (c1077));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s2088 = (((uint128_t ) t12205) + ((uint128_t ) t12257));
    t12275 = ((uint64_t ) s2088);
    c1078 = (s2088 >> 64);
    s2089 = (((uint128_t ) t12206) + ((uint128_t ) t12258));
    s2090 = (((uint128_t ) s2089) + ((uint128_t ) c1078));
    t12276 = ((uint64_t ) s2090);
    c1079 = (s2090 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2091 = (((uint128_t ) t12211) + ((uint128_t ) t12263));
    t12277 = ((uint64_t ) s2091);
    c1080 = (s2091 >> 64);
    s2092 = (((uint128_t ) t12212) + ((uint128_t ) t12264));
    s2093 = (((uint128_t ) s2092) + ((uint128_t ) c1080));
    t12278 = ((uint64_t ) s2093);
    /* MPPropagateCarry 64 */
    t12279 = (t12277 + c1079);
    a36023 = ((t12279 == 0));
    a36024 = (t12278 + c1079);
    t12280 = ((a36023) ? (a36024) : (t12278));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    s2094 = (((uint128_t ) t12275) + ((uint128_t ) t12273));
    t12283 = ((uint64_t ) s2094);
    c1082 = (s2094 >> 64);
    s2095 = (((uint128_t ) t12276) + ((uint128_t ) c1082));
    t12284 = ((uint64_t ) s2095);
    /* MPEqualDI 64 */
    a36031 = ((t12284 == 0));
    a36032 = ((t12283 == 0));
    a36033 = ((a36031) && (a36032));
    /* MPAddDDI 64 */
    s2096 = (((uint128_t ) t12279) + ((uint128_t ) t12273));
    t12285 = ((uint64_t ) s2096);
    c1083 = (s2096 >> 64);
    s2097 = (((uint128_t ) t12280) + ((uint128_t ) c1083));
    t12286 = ((uint64_t ) s2097);
    /* MPCondD 64 */
    t12287 = ((a36033) ? (t12286) : (t12280));
    t12288 = ((a36033) ? (t12285) : (t12279));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDII 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPTypeCastDI 128 */
    /* MPTypeCastDI 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    t5256 = ((uint64_t ) t12102);
    t5255 = ((uint64_t ) t12103);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    t5260 = ((uint64_t ) t12104);
    t12291 = ((uint64_t ) t12105);
    /* MPPropagateCarry 64 */
    t5263 = t12291;
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s2098 = (((uint128_t ) t12108) + ((uint128_t ) t12267));
    t12292 = ((uint64_t ) s2098);
    c1084 = (s2098 >> 64);
    s2099 = (((uint128_t ) t12109) + ((uint128_t ) t12268));
    s2100 = (((uint128_t ) s2099) + ((uint128_t ) c1084));
    t12293 = ((uint64_t ) s2100);
    c1085 = (s2100 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2101 = (((uint128_t ) t12114) + ((uint128_t ) t12271));
    t12294 = ((uint64_t ) s2101);
    c1086 = (s2101 >> 64);
    s2102 = (((uint128_t ) t12115) + ((uint128_t ) t12272));
    s2103 = (((uint128_t ) s2102) + ((uint128_t ) c1086));
    t12295 = ((uint64_t ) s2103);
    c1087 = (s2103 >> 64);
    /* MPPropagateCarry 64 */
    t12296 = (t12294 + c1085);
    a36041 = ((t12296 == 0));
    a36042 = (t12295 + c1085);
    t12297 = ((a36041) ? (a36042) : (t12295));
    a36043 = ((t12297 == 0));
    a36044 = ((a36043) && (a36041));
    a36045 = (c1087 + c1085);
    t12298 = ((a36044) ? (a36045) : (c1087));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    t8888 = ((uint64_t ) t12292);
    c1088 = (t12292 >> 64);
    s2104 = (((uint128_t ) t12293) + ((uint128_t ) c1088));
    t8887 = ((uint64_t ) s2104);
    /* MPEqualDI 64 */
    a36049 = ((t8887 == 0));
    a36050 = ((t8888 == 0));
    a36051 = ((a36049) && (a36050));
    /* MPAddDDI 64 */
    t12300 = ((uint64_t ) t12296);
    c1089 = (t12296 >> 64);
    s2105 = (((uint128_t ) t12297) + ((uint128_t ) c1089));
    t12301 = ((uint64_t ) s2105);
    /* MPCondD 64 */
    t8885 = ((a36051) ? (t12301) : (t12297));
    t8886 = ((a36051) ? (t12300) : (t12296));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDII 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s2106 = (((uint128_t ) t12147) + ((uint128_t ) t12283));
    t12302 = ((uint64_t ) s2106);
    c1090 = (s2106 >> 64);
    s2107 = (((uint128_t ) t12148) + ((uint128_t ) t12284));
    s2108 = (((uint128_t ) s2107) + ((uint128_t ) c1090));
    t12303 = ((uint64_t ) s2108);
    c1091 = (s2108 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s2109 = (((uint128_t ) t12149) + ((uint128_t ) t12288));
    t12304 = ((uint64_t ) s2109);
    c1092 = (s2109 >> 64);
    s2110 = (((uint128_t ) t12150) + ((uint128_t ) t12287));
    s2111 = (((uint128_t ) s2110) + ((uint128_t ) c1092));
    t12305 = ((uint64_t ) s2111);
    /* MPPropagateCarry 64 */
    t12306 = (t12304 + c1091);
    a36056 = ((t12306 == 0));
    a36057 = (t12305 + c1091);
    t12307 = ((a36056) ? (a36057) : (t12305));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s2112 = (((uint128_t ) t12302) + ((uint128_t ) t12298));
    t8898 = ((uint64_t ) s2112);
    c1094 = (s2112 >> 64);
    s2113 = (((uint128_t ) t12303) + ((uint128_t ) c1094));
    t8897 = ((uint64_t ) s2113);
    /* MPEqualDI 64 */
    a36064 = ((t8897 == 0));
    a36065 = ((t8898 == 0));
    a36066 = ((a36064) && (a36065));
    /* MPAddDDD 64 */
    s2114 = (((uint128_t ) t12306) + ((uint128_t ) t12298));
    t12310 = ((uint64_t ) s2114);
    c1095 = (s2114 >> 64);
    s2115 = (((uint128_t ) t12307) + ((uint128_t ) c1095));
    t12311 = ((uint64_t ) s2115);
    /* MPCondD 64 */
    t8895 = ((a36066) ? (t12311) : (t12307));
    t8896 = ((a36066) ? (t12310) : (t12306));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDDI 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQID 128 */
    /* MPAddQDD 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    /* MPExtractLow 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    /* MPEqualDI 64 */
    /* MPAddDDD 64 */
    /* MPCondD 64 */
    /* MPExtractLow 128 */
    /* End of MPAddQQQ 256 */
    /* End of MPMulQDD_Schoolbook_Full */
}

void init_nttmpcuda() {
    /* skip */
}

__global__ void ker_code0(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a36074, a36075, a36076, a36077, a36078, a36079, a36080, a36081, 
            a36082, a36083, a36084, a36085, a36086, a36087, a36088, a36089, 
            a36108, a36109, a36110, a36114, a36115, a36116, a36117, a36118, 
            a36119, a36120, a36123, a36124, a36125, a36130, a36134, a36135, 
            a36136, a36140, a36141, a36142, a36143, a36144, a36145, a36146, 
            a36149, a36150, a36151, a36155, a36158, a36159, a36160, a36161, 
            a36162, a36163, a36164, a36165, a36166, a36167, a36168, a36169, 
            a36170, a36171, a36172, a36173, a36174, a36175, a36176, a36177, 
            a36179, a36180, a36185, a36186, a36187, a36188, a36189, a36197, 
            a36198, a36199, a36200, a36201, a36202, a36203, a36204, a36205, 
            a36206, a36207, a36208, a36209, a36210, a36211, a36212, a36213, 
            a36214, a36215, a36216, a36217, a36218, a36219, a36220, a36221, 
            a36222, a36223, a36224, a36225, a36226, a36227, a36228, a36229, 
            a36230, a36231, a36233, a36234, a36235, a36239, a36240, a36241, 
            a36242, a36243, a36244, a36245, a36249, a36250, a36251, a36252, 
            a36253, a36254, a36255, a36256, a36257, a36258, a36259, a36260, 
            a36261, a36263, a36264, a36265, a36269, a36270, a36271, a36272, 
            a36273, a36274, a36275, a36279, a36281, a36282, a36287, a36288, 
            a36289, a36290, a36291, a36292, a36293, a36294, a36295, a36296, 
            a36297, a36298, a36299, a36300, a36301, a36302, a36303, a36304, 
            a36305, a36306, a36307, a36308, a36309, a36310, a36311, a36312, 
            a36313, a36314, a36315, b1569, b1570, b1572, b1573, b1574, 
            b1575, b1576, b1577, b1578, b1579, b1580, b1581, b1582, 
            b1583, b1584, b1585, b1586, b1587, b1588, b1589, b1590, 
            b1591, b1592, b1593, b1594, b1595, b1596, b1597, b1598, 
            b1599, b1600, b1601, b1602, b1603, b1604, b1605, b1606, 
            b1607, b1608, b1609, c1103, c1104, c1105, c1106, c1107, 
            c1108, c1109, c1111, c1112, c1113, c1114, c1115, c1116, 
            c1117, c1119, i648, i649, i650;
    uint64_t a17326, a17327, a17328, a17329, a17330, a17331, a17431, a17432, 
            a17433, a17434, a17435, a17436, a36090, a36091, a36092, a36093, 
            a36094, a36095, a36096, a36097, a36098, a36099, a36101, a36102, 
            a36103, a36104, a36105, a36106, a36178, a36181, a36190, a36280, 
            a36283, d1982, d1983, d1984, d1985, d1986, d1987, d1988, 
            d1989, d1990, d1991, d1992, d1993, d1994, d1995, d1996, 
            d1997, d1998, d1999, d2000, d2001, d2002, d2003, d2004, 
            d2005, d2006, d2007, d2008, d2009, d2010, d2011, d2012, 
            d2013, d2014, d2015, d2016, d2017, d2018, d2019, d2020, 
            d2021, d2022, d2023, d2024, d2025, d2026, d2027, d2028, 
            d2029, d2030, d2031, d2032, d2033, t12322, t12323, t12324, 
            t12325, t12326, t12327, t12328, t12329, t12330, t12331, t12332, 
            t12333, t12334, t12335, t12336, t12337, t12338, t12339, t12340, 
            t12341, t12342, t12343, t12344, t12345, t12346, t12347, t12348, 
            t12349, t12352, t12353, t12354, t12355, t12356, t12357, t12358, 
            t12359, t12360, t12361, t12362, t12363, t12364, t12365, t12366, 
            t12367, t12368, t12369, t12370, t12371, t12372, t12373, t12374, 
            t12375, t12376, t12377, t12378, t12379, t12380, t12381, t12382, 
            t12383, t12384, t12385, t12386, t12387, t12388, t12389, t12390, 
            t12391, t12392, t12393, t12394, t12395, t12397, t12398, t12399, 
            t12400, t12401, t12402, t12403, t12404, t12407, t12408, t12409, 
            t12410, t12411, t12412, t12413, t12414, t12415, t12416, t12417, 
            t12418, t12419, t12420, t12421, t12422, t12423, t12425, t12426, 
            t12427, t12428, t7211, t7212, t7213, t7214, t7215, t7216, 
            t7217, t7218, t7219, t7220, t7221, t7222, t7223, t7224, 
            t7225, t7226, t7227, t7228, t7229, t7230, t7231, t7232, 
            t7233, t7234, t7235, t7236, t7237, t7238, t7239, t7240, 
            t7241, t7242, t7243, t7244, t7245, t7246, t7247, t7248, 
            t7249, t7250, t7251, t7252, t7253, t7254, t7255, t7256, 
            t7257, t7258;
    uint128_t s2128, s2129, s2130, s2131, s2132, s2133, s2134, s2135, 
            s2136, s2137, s2138, s2139, s2140, s2141, s2142, s2143, 
            s2144, s2145, s2146, s2147, s2148, s2149, s2150, s2151, 
            s2152;
    for(int i41 = 0; i41 <= 4095; i41++) {
        a36074 = (1048576*blockIdx.x);
        a36075 = (128*i41);
        b1569 = (a36074 + threadIdx.x);
        a36076 = (b1569 + a36075);
        a36077 = (a36076 + 524288);
        /* Begin of MPModMul 256 */
        a36078 = (2*a36077);
        a36079 = (a36078 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36080 = (2*a36078);
        a36081 = (a36080 + 1);
        /* MPAssignDD 64 */
        a36082 = (2*a36081);
        t12322 = X[a36082];
        a36083 = (a36082 + 1);
        t12323 = X[a36083];
        /* MPAssignDD 128 */
        a36084 = (2*a36079);
        /* MPAssignDD 64 */
        a36085 = (2*a36084);
        t12324 = X[a36085];
        a36086 = (a36085 + 1);
        t12325 = X[a36086];
        a36087 = (a36084 + 1);
        /* MPAssignDD 64 */
        a36088 = (2*a36087);
        t12326 = X[a36088];
        a36089 = (a36088 + 1);
        t12327 = X[a36089];
        MPMulQDD_L3_2(t7223, t7224, t7225, t7226, t7219, t7220, t7221, t7222, 
    t7215, t7216, t7217, t7218, t7211, t7212, t7213, t7214, 
    0, 0, twiddles[10], twiddles[11], twiddles[12], twiddles[13], twiddles[14], twiddles[15], 
    0, 0, t12322, t12323, t12324, t12325, t12326, t12327);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12328 = (t7215 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a36090 = (t7215 << 6);
        a36091 = (t7216 >> 58);
        t12329 = (((a36090)|(a36091)));
        t12330 = (t7216 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12331 = (t7217 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12332 = (((t12330)|(t12331)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1570 = ((int) 1);
        t12333 = (288230376151711744 - b1570);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12334 = (((t7225)&(t12333)));
        t12335 = (((t7226)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a36092 = (t12334 << 6);
        a36093 = (t12335 >> 58);
        t12336 = (((a36092)|(a36093)));
        t12337 = (t12335 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12338 = (t7219 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a36094 = (t7219 << 6);
        a36095 = (t7220 >> 58);
        t12339 = (((a36094)|(a36095)));
        t12340 = (t7220 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12341 = (t7221 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12342 = (((t12340)|(t12341)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12343 = (((t12337)|(t12338)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a36096 = (t7221 << 6);
        a36097 = (t7222 >> 58);
        t12344 = (((a36096)|(a36097)));
        t12345 = (t7222 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12346 = (((t12345)|(t12328)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a17326 = mu[2];
        a17327 = mu[3];
        a17328 = mu[4];
        a17329 = mu[5];
        a17330 = mu[6];
        a17331 = mu[7];
        MPMulQDD_L3_1(t7255, t7256, t7257, t7258, t7251, t7252, t7253, t7254, 
    t7247, t7248, t7249, t7250, t7243, t7244, t7245, t7246, 
    t12336, t12343, t12339, t12342, t12344, t12346, t12329, t12332, 
    0, 0, a17326, a17327, a17328, a17329, a17330, a17331);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12347 = (t7247 >> 1);
        a36098 = (t7247 << 63);
        a36099 = (t7248 >> 1);
        t12348 = (((a36098)|(a36099)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t12349 = (0 - b1570);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1982 = (2 - b1570);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12352 = (((t7256)&(d1982)));
        /* MPBinAndD 64 */
        t12353 = (((t7257)&(t12349)));
        t12354 = (((t7258)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12355 = (t12352 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12356 = (t12353 >> 1);
        a36101 = (t12353 << 63);
        a36102 = (t12354 >> 1);
        t12357 = (((a36101)|(a36102)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12358 = (((t12355)|(t12356)));
        /* Begin of MPShiftLeft1D */
        t12359 = (t12354 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12360 = (t7251 >> 1);
        a36103 = (t7251 << 63);
        a36104 = (t7252 >> 1);
        t12361 = (((a36103)|(a36104)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12362 = (((t12359)|(t12360)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12363 = (t7252 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12364 = (t7253 >> 1);
        a36105 = (t7253 << 63);
        a36106 = (t7254 >> 1);
        t12365 = (((a36105)|(a36106)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12366 = (((t12363)|(t12364)));
        /* Begin of MPShiftLeft1D */
        t12367 = (t7254 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12368 = (((t12367)|(t12347)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a17431 = modulus[2];
        a17432 = modulus[3];
        a17433 = modulus[4];
        a17434 = modulus[5];
        a17435 = modulus[6];
        a17436 = modulus[7];
        MPMulQDD_L3_1(t7239, t7240, t7241, t7242, t7235, t7236, t7237, t7238, 
    t7231, t7232, t7233, t7234, t7227, t7228, t7229, t7230, 
    t12358, t12357, t12362, t12361, t12366, t12365, t12368, t12348, 
    0, 0, a17431, a17432, a17433, a17434, a17435, a17436);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1983 = (t7214 - t7230);
        b1572 = ((t7214 < t7230));
        d1984 = (t7213 - t7229);
        d1985 = (d1984 - b1572);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36108 = ((t7213 < t7229));
        a36109 = ((t7213 == t7229));
        a36110 = ((a36109) && (b1572));
        b1573 = ((a36108) || (a36110));
        /* Begin of MPSubDDD 64 */
        d1986 = (t7212 - t7228);
        b1574 = ((t7212 < t7228));
        d1987 = (t7211 - t7227);
        d1988 = (d1987 - b1574);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1989 = (d1986 - b1573);
        b1575 = ((d1986 < b1573));
        t12369 = (d1988 - b1575);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36114 = ((t7211 < t7227));
        a36115 = ((t7211 == t7227));
        a36116 = ((a36115) && (b1574));
        a36117 = ((a36114) || (a36116));
        /* MPEqual 64 */
        a36118 = ((t7212 == t7228));
        a36119 = ((a36115) && (a36118));
        /* MPLessThan 64 */
        a36120 = ((a36119) && (b1573));
        b1576 = ((a36117) || (a36120));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1990 = (t7218 - t7234);
        b1577 = ((t7218 < t7234));
        d1991 = (t7217 - t7233);
        d1992 = (d1991 - b1577);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36123 = ((t7217 < t7233));
        a36124 = ((t7217 == t7233));
        a36125 = ((a36124) && (b1577));
        b1578 = ((a36123) || (a36125));
        /* Begin of MPSubDDD 64 */
        d1993 = (t7216 - t7232);
        b1579 = ((t7216 < t7232));
        d1994 = (t7215 - t7231);
        d1995 = (d1994 - b1579);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1996 = (d1993 - b1578);
        b1580 = ((d1993 < b1578));
        t12370 = (d1995 - b1580);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1997 = (d1990 - b1576);
        b1581 = ((d1990 < b1576));
        t12371 = (d1992 - b1581);
        /* MPLessThanDI 64 */
        a36130 = ((d1992 == 0));
        b1582 = ((a36130) && (b1581));
        /* MPSubDDI 64 */
        d1998 = (d1996 - b1582);
        b1583 = ((d1996 < b1582));
        t12372 = (t12370 - b1583);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1999 = (d1983 - a17436);
        b1584 = ((d1983 < a17436));
        d2000 = (d1985 - a17435);
        d2001 = (d2000 - b1584);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36134 = ((d1985 < a17435));
        a36135 = ((d1985 == a17435));
        a36136 = ((a36135) && (b1584));
        b1585 = ((a36134) || (a36136));
        /* Begin of MPSubDDD 64 */
        d2002 = (d1989 - a17434);
        b1586 = ((d1989 < a17434));
        d2003 = (t12369 - a17433);
        d2004 = (d2003 - b1586);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2005 = (d2002 - b1585);
        b1587 = ((d2002 < b1585));
        t12373 = (d2004 - b1587);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36140 = ((t12369 < a17433));
        a36141 = ((t12369 == a17433));
        a36142 = ((a36141) && (b1586));
        a36143 = ((a36140) || (a36142));
        /* MPEqual 64 */
        a36144 = ((d1989 == a17434));
        a36145 = ((a36141) && (a36144));
        /* MPLessThan 64 */
        a36146 = ((a36145) && (b1585));
        b1588 = ((a36143) || (a36146));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2006 = (d1997 - a17432);
        b1589 = ((d1997 < a17432));
        d2007 = (t12371 - a17431);
        d2008 = (d2007 - b1589);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36149 = ((t12371 < a17431));
        a36150 = ((t12371 == a17431));
        a36151 = ((a36150) && (b1589));
        b1590 = ((a36149) || (a36151));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2009 = (d1998 - b1590);
        b1591 = ((d1998 < b1590));
        t12374 = (t12372 - b1591);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2010 = (d2006 - b1588);
        b1592 = ((d2006 < b1588));
        t12375 = (d2008 - b1592);
        /* MPLessThanDI 64 */
        a36155 = ((d2008 == 0));
        b1593 = ((a36155) && (b1592));
        /* MPSubDDI 64 */
        d2011 = (d2009 - b1593);
        b1594 = ((d2009 < b1593));
        t12376 = (t12374 - b1594);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a36158 = ((t12372 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a36159 = ((d1998 == 0));
        a36160 = ((a36158) && (a36159));
        /* MPLessThan 64 */
        a36161 = ((a36160) && (b1590));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36162 = ((d1997 == a17432));
        a36163 = ((a36150) && (a36162));
        a36164 = ((a36160) && (a36163));
        /* MPLessThan 128 */
        a36165 = ((a36164) && (b1588));
        i648 = ((a36161) || (a36165));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12377 = ((i648) ? (t12372) : (t12376));
        t12378 = ((i648) ? (d1998) : (d2011));
        /* MPCondD 64 */
        t12379 = ((i648) ? (t12371) : (t12375));
        t12380 = ((i648) ? (d1997) : (d2010));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12381 = ((i648) ? (t12369) : (t12373));
        t12382 = ((i648) ? (d1989) : (d2005));
        /* MPCondD 64 */
        t12383 = ((i648) ? (d1985) : (d2001));
        t12384 = ((i648) ? (d1983) : (d1999));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a36166 = (256*i41);
        a36167 = (2*threadIdx.x);
        a36168 = (a36166 + a36167);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a36169 = (2*a36076);
        a36170 = (a36169 + 1);
        /* MPAssignDD 128 */
        a36171 = (2*a36170);
        /* MPAssignDD 64 */
        a36172 = (2*a36171);
        t12385 = X[a36172];
        a36173 = (a36172 + 1);
        t12386 = X[a36173];
        a36174 = (a36171 + 1);
        /* MPAssignDD 64 */
        a36175 = (2*a36174);
        t12387 = X[a36175];
        a36176 = (a36175 + 1);
        t12388 = X[a36176];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2128 = (((uint128_t ) t12388) + ((uint128_t ) t12384));
        t12389 = ((uint64_t ) s2128);
        c1103 = (s2128 >> 64);
        s2129 = (((uint128_t ) t12387) + ((uint128_t ) t12383));
        s2130 = (((uint128_t ) s2129) + ((uint128_t ) c1103));
        t12390 = ((uint64_t ) s2130);
        c1104 = (s2130 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2131 = (((uint128_t ) t12386) + ((uint128_t ) t12382));
        t12391 = ((uint64_t ) s2131);
        c1105 = (s2131 >> 64);
        s2132 = (((uint128_t ) t12385) + ((uint128_t ) t12381));
        s2133 = (((uint128_t ) s2132) + ((uint128_t ) c1105));
        t12392 = ((uint64_t ) s2133);
        c1106 = (s2133 >> 64);
        /* MPPropagateCarry 64 */
        t12393 = (t12391 + c1104);
        a36177 = ((t12393 == 0));
        a36178 = (t12392 + c1104);
        t12394 = ((a36177) ? (a36178) : (t12392));
        a36179 = ((t12394 == 0));
        a36180 = ((a36179) && (a36177));
        a36181 = (c1106 + c1104);
        t12395 = ((a36180) ? (a36181) : (c1106));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36185 = (2*a36169);
        a36186 = (a36185 + 1);
        /* MPAssignDD 64 */
        a36187 = (2*a36186);
        t12397 = X[a36187];
        a36188 = (a36187 + 1);
        t12398 = X[a36188];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2134 = (((uint128_t ) t12398) + ((uint128_t ) t12380));
        t12399 = ((uint64_t ) s2134);
        c1107 = (s2134 >> 64);
        s2135 = (((uint128_t ) t12397) + ((uint128_t ) t12379));
        s2136 = (((uint128_t ) s2135) + ((uint128_t ) c1107));
        t12400 = ((uint64_t ) s2136);
        c1108 = (s2136 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t12401 = ((uint64_t ) t12378);
        c1109 = (t12378 >> 64);
        s2137 = (((uint128_t ) t12377) + ((uint128_t ) c1109));
        t12402 = ((uint64_t ) s2137);
        /* MPPropagateCarry 64 */
        t12403 = (t12401 + c1108);
        a36189 = ((t12403 == 0));
        a36190 = (t12402 + c1108);
        t12404 = ((a36189) ? (a36190) : (t12402));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2138 = (((uint128_t ) t12399) + ((uint128_t ) t12395));
        t12407 = ((uint64_t ) s2138);
        c1111 = (s2138 >> 64);
        s2139 = (((uint128_t ) t12400) + ((uint128_t ) c1111));
        t12408 = ((uint64_t ) s2139);
        /* MPEqualDI 64 */
        a36197 = ((t12408 == 0));
        a36198 = ((t12407 == 0));
        a36199 = ((a36197) && (a36198));
        /* MPAddDDI 64 */
        s2140 = (((uint128_t ) t12403) + ((uint128_t ) t12395));
        t12409 = ((uint64_t ) s2140);
        c1112 = (s2140 >> 64);
        s2141 = (((uint128_t ) t12404) + ((uint128_t ) c1112));
        t12410 = ((uint64_t ) s2141);
        /* MPCondD 64 */
        t12411 = ((a36199) ? (t12410) : (t12404));
        t12412 = ((a36199) ? (t12409) : (t12403));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a36200 = ((0 < t12411));
        a36201 = ((0 == t12411));
        a36202 = ((0 < t12412));
        a36203 = ((a36201) && (a36202));
        a36204 = ((a36200) || (a36203));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a36205 = ((0 == t12412));
        a36206 = ((a36201) && (a36205));
        /* MPLessThan 64 */
        a36207 = ((a17431 < t12408));
        a36208 = ((a17431 == t12408));
        a36209 = ((a17432 < t12407));
        a36210 = ((a36208) && (a36209));
        a36211 = ((a36207) || (a36210));
        a36212 = ((a36206) && (a36211));
        a36213 = ((a36204) || (a36212));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36214 = ((a17432 == t12407));
        a36215 = ((a36208) && (a36214));
        a36216 = ((a36206) && (a36215));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36217 = ((a17433 < t12394));
        a36218 = ((a17433 == t12394));
        a36219 = ((a17434 < t12393));
        a36220 = ((a36218) && (a36219));
        a36221 = ((a36217) || (a36220));
        /* MPEqual 64 */
        a36222 = ((a17434 == t12393));
        a36223 = ((a36218) && (a36222));
        /* MPLessThan 64 */
        a36224 = ((a17435 < t12390));
        a36225 = ((a17435 == t12390));
        a36226 = ((a17436 < t12389));
        a36227 = ((a36225) && (a36226));
        a36228 = ((a36224) || (a36227));
        a36229 = ((a36223) && (a36228));
        a36230 = ((a36221) || (a36229));
        a36231 = ((a36216) && (a36230));
        i649 = ((a36213) || (a36231));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2012 = (t12389 - a17436);
        b1595 = ((t12389 < a17436));
        d2013 = (t12390 - a17435);
        d2014 = (d2013 - b1595);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36233 = ((t12390 < a17435));
        a36234 = ((t12390 == a17435));
        a36235 = ((a36234) && (b1595));
        b1596 = ((a36233) || (a36235));
        /* Begin of MPSubDDD 64 */
        d2015 = (t12393 - a17434);
        b1597 = ((t12393 < a17434));
        d2016 = (t12394 - a17433);
        d2017 = (d2016 - b1597);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2018 = (d2015 - b1596);
        b1598 = ((d2015 < b1596));
        t12413 = (d2017 - b1598);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36239 = ((t12394 < a17433));
        a36240 = ((t12394 == a17433));
        a36241 = ((a36240) && (b1597));
        a36242 = ((a36239) || (a36241));
        /* MPEqual 64 */
        a36243 = ((t12393 == a17434));
        a36244 = ((a36240) && (a36243));
        /* MPLessThan 64 */
        a36245 = ((a36244) && (b1596));
        b1599 = ((a36242) || (a36245));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2019 = (t12407 - a17432);
        b1600 = ((t12407 < a17432));
        d2020 = (t12408 - a17431);
        d2021 = (d2020 - b1600);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2022 = (d2019 - b1599);
        b1601 = ((d2019 < b1599));
        t12414 = (d2021 - b1601);
        /* End of MPSubDDD 256 */
        a36249 = (2*a36168);
        /* MPCondD 128 */
        a36250 = (2*a36249);
        a36251 = (a36250 + 1);
        /* MPCondD 64 */
        a36252 = (2*a36251);
        P1[a36252] = ((i649) ? (t12414) : (t12408));
        a36253 = (a36252 + 1);
        P1[a36253] = ((i649) ? (d2022) : (t12407));
        a36254 = (a36249 + 1);
        /* MPCondD 128 */
        a36255 = (2*a36254);
        /* MPCondD 64 */
        a36256 = (2*a36255);
        P1[a36256] = ((i649) ? (t12413) : (t12394));
        a36257 = (a36256 + 1);
        P1[a36257] = ((i649) ? (d2018) : (t12393));
        a36258 = (a36255 + 1);
        /* MPCondD 64 */
        a36259 = (2*a36258);
        P1[a36259] = ((i649) ? (d2014) : (t12390));
        a36260 = (a36259 + 1);
        P1[a36260] = ((i649) ? (d2012) : (t12389));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1602 = (a36167 + a36166);
        a36261 = (b1602 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2023 = (t12388 - t12384);
        b1603 = ((t12388 < t12384));
        d2024 = (t12387 - t12383);
        d2025 = (d2024 - b1603);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36263 = ((t12387 < t12383));
        a36264 = ((t12387 == t12383));
        a36265 = ((a36264) && (b1603));
        b1604 = ((a36263) || (a36265));
        /* Begin of MPSubDDD 64 */
        d2026 = (t12386 - t12382);
        b1605 = ((t12386 < t12382));
        d2027 = (t12385 - t12381);
        d2028 = (d2027 - b1605);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2029 = (d2026 - b1604);
        b1606 = ((d2026 < b1604));
        t12415 = (d2028 - b1606);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36269 = ((t12385 < t12381));
        a36270 = ((t12385 == t12381));
        a36271 = ((a36270) && (b1605));
        a36272 = ((a36269) || (a36271));
        /* MPEqual 64 */
        a36273 = ((t12386 == t12382));
        a36274 = ((a36270) && (a36273));
        /* MPLessThan 64 */
        a36275 = ((a36274) && (b1604));
        b1607 = ((a36272) || (a36275));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2030 = (t12398 - t12380);
        b1608 = ((t12398 < t12380));
        d2031 = (t12397 - t12379);
        d2032 = (d2031 - b1608);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2033 = (d2030 - b1607);
        b1609 = ((d2030 < b1607));
        t12416 = (d2032 - b1609);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2142 = (((uint128_t ) d2023) + ((uint128_t ) a17436));
        t12417 = ((uint64_t ) s2142);
        c1113 = (s2142 >> 64);
        s2143 = (((uint128_t ) d2025) + ((uint128_t ) a17435));
        s2144 = (((uint128_t ) s2143) + ((uint128_t ) c1113));
        t12418 = ((uint64_t ) s2144);
        c1114 = (s2144 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2145 = (((uint128_t ) d2029) + ((uint128_t ) a17434));
        t12419 = ((uint64_t ) s2145);
        c1115 = (s2145 >> 64);
        s2146 = (((uint128_t ) t12415) + ((uint128_t ) a17433));
        s2147 = (((uint128_t ) s2146) + ((uint128_t ) c1115));
        t12420 = ((uint64_t ) s2147);
        c1116 = (s2147 >> 64);
        /* MPPropagateCarry 64 */
        t12421 = (t12419 + c1114);
        a36279 = ((t12421 == 0));
        a36280 = (t12420 + c1114);
        t12422 = ((a36279) ? (a36280) : (t12420));
        a36281 = ((t12422 == 0));
        a36282 = ((a36281) && (a36279));
        a36283 = (c1116 + c1114);
        t12423 = ((a36282) ? (a36283) : (c1116));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2148 = (((uint128_t ) d2033) + ((uint128_t ) a17432));
        t12425 = ((uint64_t ) s2148);
        c1117 = (s2148 >> 64);
        s2149 = (((uint128_t ) t12416) + ((uint128_t ) a17431));
        s2150 = (((uint128_t ) s2149) + ((uint128_t ) c1117));
        t12426 = ((uint64_t ) s2150);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2151 = (((uint128_t ) t12425) + ((uint128_t ) t12423));
        t12427 = ((uint64_t ) s2151);
        c1119 = (s2151 >> 64);
        s2152 = (((uint128_t ) t12426) + ((uint128_t ) c1119));
        t12428 = ((uint64_t ) s2152);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36287 = ((0 < t12377));
        a36288 = ((0 == t12377));
        a36289 = ((0 < t12378));
        a36290 = ((a36288) && (a36289));
        a36291 = ((a36287) || (a36290));
        /* MPEqual 64 */
        a36292 = ((0 == t12378));
        a36293 = ((a36288) && (a36292));
        /* MPLessThan 64 */
        a36294 = ((t12397 < t12379));
        a36295 = ((t12397 == t12379));
        a36296 = ((a36295) && (b1608));
        a36297 = ((a36294) || (a36296));
        a36298 = ((a36293) && (a36297));
        a36299 = ((a36291) || (a36298));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36300 = ((t12398 == t12380));
        a36301 = ((a36295) && (a36300));
        a36302 = ((a36293) && (a36301));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a36303 = ((a36302) && (b1607));
        i650 = ((a36299) || (a36303));
        a36304 = (2*a36261);
        /* MPCondD 128 */
        a36305 = (2*a36304);
        a36306 = (a36305 + 1);
        /* MPCondD 64 */
        a36307 = (2*a36306);
        P1[a36307] = ((i650) ? (t12428) : (t12416));
        a36308 = (a36307 + 1);
        P1[a36308] = ((i650) ? (t12427) : (d2033));
        a36309 = (a36304 + 1);
        /* MPCondD 128 */
        a36310 = (2*a36309);
        /* MPCondD 64 */
        a36311 = (2*a36310);
        P1[a36311] = ((i650) ? (t12422) : (t12415));
        a36312 = (a36311 + 1);
        P1[a36312] = ((i650) ? (t12421) : (d2029));
        a36313 = (a36310 + 1);
        /* MPCondD 64 */
        a36314 = (2*a36313);
        P1[a36314] = ((i650) ? (t12418) : (d2025));
        a36315 = (a36314 + 1);
        P1[a36315] = ((i650) ? (t12417) : (d2023));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code1(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a36316, a36317, a36318, a36319, a36320, a36321, a36322, a36323, 
            a36324, a36325, a36326, a36327, a36328, a36329, a36330, a36331, 
            a36332, a36333, a36334, a36335, a36336, a36337, a36338, a36339, 
            a36340, a36341, a36342, a36343, a36344, a36363, a36364, a36365, 
            a36369, a36370, a36371, a36372, a36373, a36374, a36375, a36378, 
            a36379, a36380, a36385, a36389, a36390, a36391, a36395, a36396, 
            a36397, a36398, a36399, a36400, a36401, a36404, a36405, a36406, 
            a36410, a36413, a36414, a36415, a36416, a36417, a36418, a36419, 
            a36420, a36421, a36422, a36423, a36424, a36425, a36426, a36427, 
            a36428, a36429, a36430, a36431, a36432, a36434, a36435, a36440, 
            a36441, a36442, a36443, a36444, a36452, a36453, a36454, a36455, 
            a36456, a36457, a36458, a36459, a36460, a36461, a36462, a36463, 
            a36464, a36465, a36466, a36467, a36468, a36469, a36470, a36471, 
            a36472, a36473, a36474, a36475, a36476, a36477, a36478, a36479, 
            a36480, a36481, a36482, a36483, a36484, a36485, a36486, a36488, 
            a36489, a36490, a36494, a36495, a36496, a36497, a36498, a36499, 
            a36500, a36504, a36505, a36506, a36507, a36508, a36509, a36510, 
            a36511, a36512, a36513, a36514, a36515, a36516, a36518, a36519, 
            a36520, a36524, a36525, a36526, a36527, a36528, a36529, a36530, 
            a36534, a36536, a36537, a36542, a36543, a36544, a36545, a36546, 
            a36547, a36548, a36549, a36550, a36551, a36552, a36553, a36554, 
            a36555, a36556, a36557, a36558, a36559, a36560, a36561, a36562, 
            a36563, a36564, a36565, a36566, a36567, a36568, a36569, a36570, 
            b1610, b1611, b1613, b1614, b1615, b1616, b1617, b1618, 
            b1619, b1620, b1621, b1622, b1623, b1624, b1625, b1626, 
            b1627, b1628, b1629, b1630, b1631, b1632, b1633, b1634, 
            b1635, b1636, b1637, b1638, b1639, b1640, b1641, b1642, 
            b1643, b1644, b1645, b1646, b1647, b1648, b1649, b1650, 
            c1120, c1121, c1122, c1123, c1124, c1125, c1126, c1128, 
            c1129, c1130, c1131, c1132, c1133, c1134, c1136, i651, 
            i652, i653;
    uint64_t a18237, a18238, a18239, a18240, a18241, a18242, a18342, a18343, 
            a18344, a18345, a18346, a18347, a36345, a36346, a36347, a36348, 
            a36349, a36350, a36351, a36352, a36353, a36354, a36356, a36357, 
            a36358, a36359, a36360, a36361, a36433, a36436, a36445, a36535, 
            a36538, d2034, d2035, d2036, d2037, d2038, d2039, d2040, 
            d2041, d2042, d2043, d2044, d2045, d2046, d2047, d2048, 
            d2049, d2050, d2051, d2052, d2053, d2054, d2055, d2056, 
            d2057, d2058, d2059, d2060, d2061, d2062, d2063, d2064, 
            d2065, d2066, d2067, d2068, d2069, d2070, d2071, d2072, 
            d2073, d2074, d2075, d2076, d2077, d2078, d2079, d2080, 
            d2081, d2082, d2083, d2084, d2085, t12429, t12430, t12431, 
            t12432, t12433, t12434, t12435, t12436, t12437, t12438, t12439, 
            t12440, t12441, t12442, t12443, t12444, t12445, t12446, t12447, 
            t12448, t12449, t12450, t12451, t12452, t12453, t12454, t12455, 
            t12456, t12457, t12458, t12459, t12460, t12461, t12462, t12465, 
            t12466, t12467, t12468, t12469, t12470, t12471, t12472, t12473, 
            t12474, t12475, t12476, t12477, t12478, t12479, t12480, t12481, 
            t12482, t12483, t12484, t12485, t12486, t12487, t12488, t12489, 
            t12490, t12491, t12492, t12493, t12494, t12495, t12496, t12497, 
            t12498, t12499, t12500, t12501, t12502, t12503, t12504, t12505, 
            t12506, t12507, t12508, t12510, t12511, t12512, t12513, t12514, 
            t12515, t12516, t12517, t12520, t12521, t12522, t12523, t12524, 
            t12525, t12526, t12527, t12528, t12529, t12530, t12531, t12532, 
            t12533, t12534, t12535, t12536, t12538, t12539, t12540, t12541, 
            t7275, t7276, t7277, t7278, t7279, t7280, t7281, t7282, 
            t7283, t7284, t7285, t7286, t7287, t7288, t7289, t7290, 
            t7291, t7292, t7293, t7294, t7295, t7296, t7299, t7300, 
            t7301, t7302, t7303, t7304, t7305, t7306, t7307, t7308, 
            t7309, t7310, t7311, t7312, t7313, t7314, t7315, t7316, 
            t7317, t7318, t7319, t7320, t7321, t7322, t7323, t7324;
    uint128_t s2153, s2154, s2155, s2156, s2157, s2158, s2159, s2160, 
            s2161, s2162, s2163, s2164, s2165, s2166, s2167, s2168, 
            s2169, s2170, s2171, s2172, s2173, s2174, s2175, s2176, 
            s2177;
    for(int i39 = 0; i39 <= 4095; i39++) {
        a36316 = (128*i39);
        a36317 = (a36316 + threadIdx.x);
        b1610 = (threadIdx.x + a36316);
        a36318 = (b1610 + 524288);
        a36319 = (a36318 % 2);
        a36320 = (2 + a36319);
        /* Begin of MPModMul 256 */
        a36321 = (2*a36320);
        a36322 = (a36321 + 1);
        a36323 = (2*a36318);
        a36324 = (a36323 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36325 = (2*a36321);
        a36326 = (a36325 + 1);
        /* MPAssignDD 64 */
        a36327 = (2*a36326);
        t12429 = twiddles[a36327];
        a36328 = (a36327 + 1);
        t12430 = twiddles[a36328];
        /* MPAssignDD 128 */
        a36329 = (2*a36322);
        /* MPAssignDD 64 */
        a36330 = (2*a36329);
        t12431 = twiddles[a36330];
        a36331 = (a36330 + 1);
        t12432 = twiddles[a36331];
        a36332 = (a36329 + 1);
        /* MPAssignDD 64 */
        a36333 = (2*a36332);
        t12433 = twiddles[a36333];
        a36334 = (a36333 + 1);
        t12434 = twiddles[a36334];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36335 = (2*a36323);
        a36336 = (a36335 + 1);
        /* MPAssignDD 64 */
        a36337 = (2*a36336);
        t12435 = P1[a36337];
        a36338 = (a36337 + 1);
        t12436 = P1[a36338];
        /* MPAssignDD 128 */
        a36339 = (2*a36324);
        /* MPAssignDD 64 */
        a36340 = (2*a36339);
        t12437 = P1[a36340];
        a36341 = (a36340 + 1);
        t12438 = P1[a36341];
        a36342 = (a36339 + 1);
        /* MPAssignDD 64 */
        a36343 = (2*a36342);
        t12439 = P1[a36343];
        a36344 = (a36343 + 1);
        t12440 = P1[a36344];
        MPMulQDD_L3_2(t7287, t7288, t7289, t7290, t7283, t7284, t7285, t7286, 
    t7279, t7280, t7281, t7282, t7275, t7276, t7277, t7278, 
    0, 0, t12429, t12430, t12431, t12432, t12433, t12434, 
    0, 0, t12435, t12436, t12437, t12438, t12439, t12440);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12441 = (t7279 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a36345 = (t7279 << 6);
        a36346 = (t7280 >> 58);
        t12442 = (((a36345)|(a36346)));
        t12443 = (t7280 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12444 = (t7281 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12445 = (((t12443)|(t12444)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1611 = ((int) 1);
        t12446 = (288230376151711744 - b1611);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12447 = (((t7289)&(t12446)));
        t12448 = (((t7290)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a36347 = (t12447 << 6);
        a36348 = (t12448 >> 58);
        t12449 = (((a36347)|(a36348)));
        t12450 = (t12448 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12451 = (t7283 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a36349 = (t7283 << 6);
        a36350 = (t7284 >> 58);
        t12452 = (((a36349)|(a36350)));
        t12453 = (t7284 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12454 = (t7285 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12455 = (((t12453)|(t12454)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12456 = (((t12450)|(t12451)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a36351 = (t7285 << 6);
        a36352 = (t7286 >> 58);
        t12457 = (((a36351)|(a36352)));
        t12458 = (t7286 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12459 = (((t12458)|(t12441)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a18237 = mu[2];
        a18238 = mu[3];
        a18239 = mu[4];
        a18240 = mu[5];
        a18241 = mu[6];
        a18242 = mu[7];
        MPMulQDD_L3_1(t7321, t7322, t7323, t7324, t7317, t7318, t7319, t7320, 
    t7313, t7314, t7315, t7316, t7309, t7310, t7311, t7312, 
    t12449, t12456, t12452, t12455, t12457, t12459, t12442, t12445, 
    0, 0, a18237, a18238, a18239, a18240, a18241, a18242);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12460 = (t7313 >> 1);
        a36353 = (t7313 << 63);
        a36354 = (t7314 >> 1);
        t12461 = (((a36353)|(a36354)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t12462 = (0 - b1611);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2034 = (2 - b1611);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12465 = (((t7322)&(d2034)));
        /* MPBinAndD 64 */
        t12466 = (((t7323)&(t12462)));
        t12467 = (((t7324)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12468 = (t12465 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12469 = (t12466 >> 1);
        a36356 = (t12466 << 63);
        a36357 = (t12467 >> 1);
        t12470 = (((a36356)|(a36357)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12471 = (((t12468)|(t12469)));
        /* Begin of MPShiftLeft1D */
        t12472 = (t12467 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12473 = (t7317 >> 1);
        a36358 = (t7317 << 63);
        a36359 = (t7318 >> 1);
        t12474 = (((a36358)|(a36359)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12475 = (((t12472)|(t12473)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12476 = (t7318 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12477 = (t7319 >> 1);
        a36360 = (t7319 << 63);
        a36361 = (t7320 >> 1);
        t12478 = (((a36360)|(a36361)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12479 = (((t12476)|(t12477)));
        /* Begin of MPShiftLeft1D */
        t12480 = (t7320 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12481 = (((t12480)|(t12460)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a18342 = modulus[2];
        a18343 = modulus[3];
        a18344 = modulus[4];
        a18345 = modulus[5];
        a18346 = modulus[6];
        a18347 = modulus[7];
        MPMulQDD_L3_1(t7305, t7306, t7307, t7308, t7301, t7302, t7303, t7304, 
    t7295, t7296, t7299, t7300, t7291, t7292, t7293, t7294, 
    t12471, t12470, t12475, t12474, t12479, t12478, t12481, t12461, 
    0, 0, a18342, a18343, a18344, a18345, a18346, a18347);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2035 = (t7278 - t7294);
        b1613 = ((t7278 < t7294));
        d2036 = (t7277 - t7293);
        d2037 = (d2036 - b1613);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36363 = ((t7277 < t7293));
        a36364 = ((t7277 == t7293));
        a36365 = ((a36364) && (b1613));
        b1614 = ((a36363) || (a36365));
        /* Begin of MPSubDDD 64 */
        d2038 = (t7276 - t7292);
        b1615 = ((t7276 < t7292));
        d2039 = (t7275 - t7291);
        d2040 = (d2039 - b1615);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2041 = (d2038 - b1614);
        b1616 = ((d2038 < b1614));
        t12482 = (d2040 - b1616);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36369 = ((t7275 < t7291));
        a36370 = ((t7275 == t7291));
        a36371 = ((a36370) && (b1615));
        a36372 = ((a36369) || (a36371));
        /* MPEqual 64 */
        a36373 = ((t7276 == t7292));
        a36374 = ((a36370) && (a36373));
        /* MPLessThan 64 */
        a36375 = ((a36374) && (b1614));
        b1617 = ((a36372) || (a36375));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2042 = (t7282 - t7300);
        b1618 = ((t7282 < t7300));
        d2043 = (t7281 - t7299);
        d2044 = (d2043 - b1618);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36378 = ((t7281 < t7299));
        a36379 = ((t7281 == t7299));
        a36380 = ((a36379) && (b1618));
        b1619 = ((a36378) || (a36380));
        /* Begin of MPSubDDD 64 */
        d2045 = (t7280 - t7296);
        b1620 = ((t7280 < t7296));
        d2046 = (t7279 - t7295);
        d2047 = (d2046 - b1620);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2048 = (d2045 - b1619);
        b1621 = ((d2045 < b1619));
        t12483 = (d2047 - b1621);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2049 = (d2042 - b1617);
        b1622 = ((d2042 < b1617));
        t12484 = (d2044 - b1622);
        /* MPLessThanDI 64 */
        a36385 = ((d2044 == 0));
        b1623 = ((a36385) && (b1622));
        /* MPSubDDI 64 */
        d2050 = (d2048 - b1623);
        b1624 = ((d2048 < b1623));
        t12485 = (t12483 - b1624);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2051 = (d2035 - a18347);
        b1625 = ((d2035 < a18347));
        d2052 = (d2037 - a18346);
        d2053 = (d2052 - b1625);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36389 = ((d2037 < a18346));
        a36390 = ((d2037 == a18346));
        a36391 = ((a36390) && (b1625));
        b1626 = ((a36389) || (a36391));
        /* Begin of MPSubDDD 64 */
        d2054 = (d2041 - a18345);
        b1627 = ((d2041 < a18345));
        d2055 = (t12482 - a18344);
        d2056 = (d2055 - b1627);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2057 = (d2054 - b1626);
        b1628 = ((d2054 < b1626));
        t12486 = (d2056 - b1628);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36395 = ((t12482 < a18344));
        a36396 = ((t12482 == a18344));
        a36397 = ((a36396) && (b1627));
        a36398 = ((a36395) || (a36397));
        /* MPEqual 64 */
        a36399 = ((d2041 == a18345));
        a36400 = ((a36396) && (a36399));
        /* MPLessThan 64 */
        a36401 = ((a36400) && (b1626));
        b1629 = ((a36398) || (a36401));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2058 = (d2049 - a18343);
        b1630 = ((d2049 < a18343));
        d2059 = (t12484 - a18342);
        d2060 = (d2059 - b1630);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36404 = ((t12484 < a18342));
        a36405 = ((t12484 == a18342));
        a36406 = ((a36405) && (b1630));
        b1631 = ((a36404) || (a36406));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2061 = (d2050 - b1631);
        b1632 = ((d2050 < b1631));
        t12487 = (t12485 - b1632);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2062 = (d2058 - b1629);
        b1633 = ((d2058 < b1629));
        t12488 = (d2060 - b1633);
        /* MPLessThanDI 64 */
        a36410 = ((d2060 == 0));
        b1634 = ((a36410) && (b1633));
        /* MPSubDDI 64 */
        d2063 = (d2061 - b1634);
        b1635 = ((d2061 < b1634));
        t12489 = (t12487 - b1635);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a36413 = ((t12485 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a36414 = ((d2050 == 0));
        a36415 = ((a36413) && (a36414));
        /* MPLessThan 64 */
        a36416 = ((a36415) && (b1631));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36417 = ((d2049 == a18343));
        a36418 = ((a36405) && (a36417));
        a36419 = ((a36415) && (a36418));
        /* MPLessThan 128 */
        a36420 = ((a36419) && (b1629));
        i651 = ((a36416) || (a36420));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12490 = ((i651) ? (t12485) : (t12489));
        t12491 = ((i651) ? (d2050) : (d2063));
        /* MPCondD 64 */
        t12492 = ((i651) ? (t12484) : (t12488));
        t12493 = ((i651) ? (d2049) : (d2062));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12494 = ((i651) ? (t12482) : (t12486));
        t12495 = ((i651) ? (d2041) : (d2057));
        /* MPCondD 64 */
        t12496 = ((i651) ? (d2037) : (d2053));
        t12497 = ((i651) ? (d2035) : (d2051));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a36421 = (256*i39);
        a36422 = (2*threadIdx.x);
        a36423 = (a36421 + a36422);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a36424 = (2*a36317);
        a36425 = (a36424 + 1);
        /* MPAssignDD 128 */
        a36426 = (2*a36425);
        /* MPAssignDD 64 */
        a36427 = (2*a36426);
        t12498 = P1[a36427];
        a36428 = (a36427 + 1);
        t12499 = P1[a36428];
        a36429 = (a36426 + 1);
        /* MPAssignDD 64 */
        a36430 = (2*a36429);
        t12500 = P1[a36430];
        a36431 = (a36430 + 1);
        t12501 = P1[a36431];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2153 = (((uint128_t ) t12501) + ((uint128_t ) t12497));
        t12502 = ((uint64_t ) s2153);
        c1120 = (s2153 >> 64);
        s2154 = (((uint128_t ) t12500) + ((uint128_t ) t12496));
        s2155 = (((uint128_t ) s2154) + ((uint128_t ) c1120));
        t12503 = ((uint64_t ) s2155);
        c1121 = (s2155 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2156 = (((uint128_t ) t12499) + ((uint128_t ) t12495));
        t12504 = ((uint64_t ) s2156);
        c1122 = (s2156 >> 64);
        s2157 = (((uint128_t ) t12498) + ((uint128_t ) t12494));
        s2158 = (((uint128_t ) s2157) + ((uint128_t ) c1122));
        t12505 = ((uint64_t ) s2158);
        c1123 = (s2158 >> 64);
        /* MPPropagateCarry 64 */
        t12506 = (t12504 + c1121);
        a36432 = ((t12506 == 0));
        a36433 = (t12505 + c1121);
        t12507 = ((a36432) ? (a36433) : (t12505));
        a36434 = ((t12507 == 0));
        a36435 = ((a36434) && (a36432));
        a36436 = (c1123 + c1121);
        t12508 = ((a36435) ? (a36436) : (c1123));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36440 = (2*a36424);
        a36441 = (a36440 + 1);
        /* MPAssignDD 64 */
        a36442 = (2*a36441);
        t12510 = P1[a36442];
        a36443 = (a36442 + 1);
        t12511 = P1[a36443];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2159 = (((uint128_t ) t12511) + ((uint128_t ) t12493));
        t12512 = ((uint64_t ) s2159);
        c1124 = (s2159 >> 64);
        s2160 = (((uint128_t ) t12510) + ((uint128_t ) t12492));
        s2161 = (((uint128_t ) s2160) + ((uint128_t ) c1124));
        t12513 = ((uint64_t ) s2161);
        c1125 = (s2161 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t12514 = ((uint64_t ) t12491);
        c1126 = (t12491 >> 64);
        s2162 = (((uint128_t ) t12490) + ((uint128_t ) c1126));
        t12515 = ((uint64_t ) s2162);
        /* MPPropagateCarry 64 */
        t12516 = (t12514 + c1125);
        a36444 = ((t12516 == 0));
        a36445 = (t12515 + c1125);
        t12517 = ((a36444) ? (a36445) : (t12515));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2163 = (((uint128_t ) t12512) + ((uint128_t ) t12508));
        t12520 = ((uint64_t ) s2163);
        c1128 = (s2163 >> 64);
        s2164 = (((uint128_t ) t12513) + ((uint128_t ) c1128));
        t12521 = ((uint64_t ) s2164);
        /* MPEqualDI 64 */
        a36452 = ((t12521 == 0));
        a36453 = ((t12520 == 0));
        a36454 = ((a36452) && (a36453));
        /* MPAddDDI 64 */
        s2165 = (((uint128_t ) t12516) + ((uint128_t ) t12508));
        t12522 = ((uint64_t ) s2165);
        c1129 = (s2165 >> 64);
        s2166 = (((uint128_t ) t12517) + ((uint128_t ) c1129));
        t12523 = ((uint64_t ) s2166);
        /* MPCondD 64 */
        t12524 = ((a36454) ? (t12523) : (t12517));
        t12525 = ((a36454) ? (t12522) : (t12516));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a36455 = ((0 < t12524));
        a36456 = ((0 == t12524));
        a36457 = ((0 < t12525));
        a36458 = ((a36456) && (a36457));
        a36459 = ((a36455) || (a36458));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a36460 = ((0 == t12525));
        a36461 = ((a36456) && (a36460));
        /* MPLessThan 64 */
        a36462 = ((a18342 < t12521));
        a36463 = ((a18342 == t12521));
        a36464 = ((a18343 < t12520));
        a36465 = ((a36463) && (a36464));
        a36466 = ((a36462) || (a36465));
        a36467 = ((a36461) && (a36466));
        a36468 = ((a36459) || (a36467));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36469 = ((a18343 == t12520));
        a36470 = ((a36463) && (a36469));
        a36471 = ((a36461) && (a36470));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36472 = ((a18344 < t12507));
        a36473 = ((a18344 == t12507));
        a36474 = ((a18345 < t12506));
        a36475 = ((a36473) && (a36474));
        a36476 = ((a36472) || (a36475));
        /* MPEqual 64 */
        a36477 = ((a18345 == t12506));
        a36478 = ((a36473) && (a36477));
        /* MPLessThan 64 */
        a36479 = ((a18346 < t12503));
        a36480 = ((a18346 == t12503));
        a36481 = ((a18347 < t12502));
        a36482 = ((a36480) && (a36481));
        a36483 = ((a36479) || (a36482));
        a36484 = ((a36478) && (a36483));
        a36485 = ((a36476) || (a36484));
        a36486 = ((a36471) && (a36485));
        i652 = ((a36468) || (a36486));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2064 = (t12502 - a18347);
        b1636 = ((t12502 < a18347));
        d2065 = (t12503 - a18346);
        d2066 = (d2065 - b1636);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36488 = ((t12503 < a18346));
        a36489 = ((t12503 == a18346));
        a36490 = ((a36489) && (b1636));
        b1637 = ((a36488) || (a36490));
        /* Begin of MPSubDDD 64 */
        d2067 = (t12506 - a18345);
        b1638 = ((t12506 < a18345));
        d2068 = (t12507 - a18344);
        d2069 = (d2068 - b1638);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2070 = (d2067 - b1637);
        b1639 = ((d2067 < b1637));
        t12526 = (d2069 - b1639);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36494 = ((t12507 < a18344));
        a36495 = ((t12507 == a18344));
        a36496 = ((a36495) && (b1638));
        a36497 = ((a36494) || (a36496));
        /* MPEqual 64 */
        a36498 = ((t12506 == a18345));
        a36499 = ((a36495) && (a36498));
        /* MPLessThan 64 */
        a36500 = ((a36499) && (b1637));
        b1640 = ((a36497) || (a36500));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2071 = (t12520 - a18343);
        b1641 = ((t12520 < a18343));
        d2072 = (t12521 - a18342);
        d2073 = (d2072 - b1641);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2074 = (d2071 - b1640);
        b1642 = ((d2071 < b1640));
        t12527 = (d2073 - b1642);
        /* End of MPSubDDD 256 */
        a36504 = (2*a36423);
        /* MPCondD 128 */
        a36505 = (2*a36504);
        a36506 = (a36505 + 1);
        /* MPCondD 64 */
        a36507 = (2*a36506);
        P2[a36507] = ((i652) ? (t12527) : (t12521));
        a36508 = (a36507 + 1);
        P2[a36508] = ((i652) ? (d2074) : (t12520));
        a36509 = (a36504 + 1);
        /* MPCondD 128 */
        a36510 = (2*a36509);
        /* MPCondD 64 */
        a36511 = (2*a36510);
        P2[a36511] = ((i652) ? (t12526) : (t12507));
        a36512 = (a36511 + 1);
        P2[a36512] = ((i652) ? (d2070) : (t12506));
        a36513 = (a36510 + 1);
        /* MPCondD 64 */
        a36514 = (2*a36513);
        P2[a36514] = ((i652) ? (d2066) : (t12503));
        a36515 = (a36514 + 1);
        P2[a36515] = ((i652) ? (d2064) : (t12502));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1643 = (a36422 + a36421);
        a36516 = (b1643 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2075 = (t12501 - t12497);
        b1644 = ((t12501 < t12497));
        d2076 = (t12500 - t12496);
        d2077 = (d2076 - b1644);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36518 = ((t12500 < t12496));
        a36519 = ((t12500 == t12496));
        a36520 = ((a36519) && (b1644));
        b1645 = ((a36518) || (a36520));
        /* Begin of MPSubDDD 64 */
        d2078 = (t12499 - t12495);
        b1646 = ((t12499 < t12495));
        d2079 = (t12498 - t12494);
        d2080 = (d2079 - b1646);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2081 = (d2078 - b1645);
        b1647 = ((d2078 < b1645));
        t12528 = (d2080 - b1647);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36524 = ((t12498 < t12494));
        a36525 = ((t12498 == t12494));
        a36526 = ((a36525) && (b1646));
        a36527 = ((a36524) || (a36526));
        /* MPEqual 64 */
        a36528 = ((t12499 == t12495));
        a36529 = ((a36525) && (a36528));
        /* MPLessThan 64 */
        a36530 = ((a36529) && (b1645));
        b1648 = ((a36527) || (a36530));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2082 = (t12511 - t12493);
        b1649 = ((t12511 < t12493));
        d2083 = (t12510 - t12492);
        d2084 = (d2083 - b1649);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2085 = (d2082 - b1648);
        b1650 = ((d2082 < b1648));
        t12529 = (d2084 - b1650);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2167 = (((uint128_t ) d2075) + ((uint128_t ) a18347));
        t12530 = ((uint64_t ) s2167);
        c1130 = (s2167 >> 64);
        s2168 = (((uint128_t ) d2077) + ((uint128_t ) a18346));
        s2169 = (((uint128_t ) s2168) + ((uint128_t ) c1130));
        t12531 = ((uint64_t ) s2169);
        c1131 = (s2169 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2170 = (((uint128_t ) d2081) + ((uint128_t ) a18345));
        t12532 = ((uint64_t ) s2170);
        c1132 = (s2170 >> 64);
        s2171 = (((uint128_t ) t12528) + ((uint128_t ) a18344));
        s2172 = (((uint128_t ) s2171) + ((uint128_t ) c1132));
        t12533 = ((uint64_t ) s2172);
        c1133 = (s2172 >> 64);
        /* MPPropagateCarry 64 */
        t12534 = (t12532 + c1131);
        a36534 = ((t12534 == 0));
        a36535 = (t12533 + c1131);
        t12535 = ((a36534) ? (a36535) : (t12533));
        a36536 = ((t12535 == 0));
        a36537 = ((a36536) && (a36534));
        a36538 = (c1133 + c1131);
        t12536 = ((a36537) ? (a36538) : (c1133));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2173 = (((uint128_t ) d2085) + ((uint128_t ) a18343));
        t12538 = ((uint64_t ) s2173);
        c1134 = (s2173 >> 64);
        s2174 = (((uint128_t ) t12529) + ((uint128_t ) a18342));
        s2175 = (((uint128_t ) s2174) + ((uint128_t ) c1134));
        t12539 = ((uint64_t ) s2175);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2176 = (((uint128_t ) t12538) + ((uint128_t ) t12536));
        t12540 = ((uint64_t ) s2176);
        c1136 = (s2176 >> 64);
        s2177 = (((uint128_t ) t12539) + ((uint128_t ) c1136));
        t12541 = ((uint64_t ) s2177);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36542 = ((0 < t12490));
        a36543 = ((0 == t12490));
        a36544 = ((0 < t12491));
        a36545 = ((a36543) && (a36544));
        a36546 = ((a36542) || (a36545));
        /* MPEqual 64 */
        a36547 = ((0 == t12491));
        a36548 = ((a36543) && (a36547));
        /* MPLessThan 64 */
        a36549 = ((t12510 < t12492));
        a36550 = ((t12510 == t12492));
        a36551 = ((a36550) && (b1649));
        a36552 = ((a36549) || (a36551));
        a36553 = ((a36548) && (a36552));
        a36554 = ((a36546) || (a36553));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36555 = ((t12511 == t12493));
        a36556 = ((a36550) && (a36555));
        a36557 = ((a36548) && (a36556));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a36558 = ((a36557) && (b1648));
        i653 = ((a36554) || (a36558));
        a36559 = (2*a36516);
        /* MPCondD 128 */
        a36560 = (2*a36559);
        a36561 = (a36560 + 1);
        /* MPCondD 64 */
        a36562 = (2*a36561);
        P2[a36562] = ((i653) ? (t12541) : (t12529));
        a36563 = (a36562 + 1);
        P2[a36563] = ((i653) ? (t12540) : (d2085));
        a36564 = (a36559 + 1);
        /* MPCondD 128 */
        a36565 = (2*a36564);
        /* MPCondD 64 */
        a36566 = (2*a36565);
        P2[a36566] = ((i653) ? (t12535) : (t12528));
        a36567 = (a36566 + 1);
        P2[a36567] = ((i653) ? (t12534) : (d2081));
        a36568 = (a36565 + 1);
        /* MPCondD 64 */
        a36569 = (2*a36568);
        P2[a36569] = ((i653) ? (t12531) : (d2077));
        a36570 = (a36569 + 1);
        P2[a36570] = ((i653) ? (t12530) : (d2075));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code2(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a36571, a36572, a36573, a36574, a36575, a36576, a36577, a36578, 
            a36579, a36580, a36581, a36582, a36583, a36584, a36585, a36586, 
            a36587, a36588, a36589, a36590, a36591, a36592, a36593, a36594, 
            a36595, a36596, a36597, a36598, a36599, a36618, a36619, a36620, 
            a36624, a36625, a36626, a36627, a36628, a36629, a36630, a36633, 
            a36634, a36635, a36640, a36644, a36645, a36646, a36650, a36651, 
            a36652, a36653, a36654, a36655, a36656, a36659, a36660, a36661, 
            a36665, a36668, a36669, a36670, a36671, a36672, a36673, a36674, 
            a36675, a36676, a36677, a36678, a36679, a36680, a36681, a36682, 
            a36683, a36684, a36685, a36686, a36687, a36689, a36690, a36695, 
            a36696, a36697, a36698, a36699, a36707, a36708, a36709, a36710, 
            a36711, a36712, a36713, a36714, a36715, a36716, a36717, a36718, 
            a36719, a36720, a36721, a36722, a36723, a36724, a36725, a36726, 
            a36727, a36728, a36729, a36730, a36731, a36732, a36733, a36734, 
            a36735, a36736, a36737, a36738, a36739, a36740, a36741, a36743, 
            a36744, a36745, a36749, a36750, a36751, a36752, a36753, a36754, 
            a36755, a36759, a36760, a36761, a36762, a36763, a36764, a36765, 
            a36766, a36767, a36768, a36769, a36770, a36771, a36773, a36774, 
            a36775, a36779, a36780, a36781, a36782, a36783, a36784, a36785, 
            a36789, a36791, a36792, a36797, a36798, a36799, a36800, a36801, 
            a36802, a36803, a36804, a36805, a36806, a36807, a36808, a36809, 
            a36810, a36811, a36812, a36813, a36814, a36815, a36816, a36817, 
            a36818, a36819, a36820, a36821, a36822, a36823, a36824, a36825, 
            b1651, b1652, b1654, b1655, b1656, b1657, b1658, b1659, 
            b1660, b1661, b1662, b1663, b1664, b1665, b1666, b1667, 
            b1668, b1669, b1670, b1671, b1672, b1673, b1674, b1675, 
            b1676, b1677, b1678, b1679, b1680, b1681, b1682, b1683, 
            b1684, b1685, b1686, b1687, b1688, b1689, b1690, b1691, 
            c1137, c1138, c1139, c1140, c1141, c1142, c1143, c1145, 
            c1146, c1147, c1148, c1149, c1150, c1151, c1153, i654, 
            i655, i656;
    uint64_t a19148, a19149, a19150, a19151, a19152, a19153, a19253, a19254, 
            a19255, a19256, a19257, a19258, a36600, a36601, a36602, a36603, 
            a36604, a36605, a36606, a36607, a36608, a36609, a36611, a36612, 
            a36613, a36614, a36615, a36616, a36688, a36691, a36700, a36790, 
            a36793, d2086, d2087, d2088, d2089, d2090, d2091, d2092, 
            d2093, d2094, d2095, d2096, d2097, d2098, d2099, d2100, 
            d2101, d2102, d2103, d2104, d2105, d2106, d2107, d2108, 
            d2109, d2110, d2111, d2112, d2113, d2114, d2115, d2116, 
            d2117, d2118, d2119, d2120, d2121, d2122, d2123, d2124, 
            d2125, d2126, d2127, d2128, d2129, d2130, d2131, d2132, 
            d2133, d2134, d2135, d2136, d2137, t12542, t12543, t12544, 
            t12545, t12546, t12547, t12548, t12549, t12550, t12551, t12552, 
            t12553, t12554, t12555, t12556, t12557, t12558, t12559, t12560, 
            t12561, t12562, t12563, t12564, t12565, t12566, t12567, t12568, 
            t12569, t12570, t12571, t12572, t12573, t12574, t12575, t12578, 
            t12579, t12580, t12581, t12582, t12583, t12584, t12585, t12586, 
            t12587, t12588, t12589, t12590, t12591, t12592, t12593, t12594, 
            t12595, t12596, t12597, t12598, t12599, t12600, t12601, t12602, 
            t12603, t12604, t12605, t12606, t12607, t12608, t12609, t12610, 
            t12611, t12612, t12613, t12614, t12615, t12616, t12617, t12618, 
            t12619, t12620, t12621, t12623, t12624, t12625, t12626, t12627, 
            t12628, t12629, t12630, t12633, t12634, t12635, t12636, t12637, 
            t12638, t12639, t12640, t12641, t12642, t12643, t12644, t12645, 
            t12646, t12647, t12648, t12649, t12651, t12652, t12653, t12654, 
            t7341, t7342, t7343, t7344, t7345, t7346, t7347, t7348, 
            t7349, t7350, t7351, t7352, t7353, t7354, t7355, t7356, 
            t7357, t7358, t7359, t7360, t7361, t7362, t7363, t7364, 
            t7365, t7366, t7367, t7368, t7369, t7370, t7371, t7372, 
            t7373, t7374, t7375, t7376, t7377, t7378, t7379, t7380, 
            t7383, t7384, t7385, t7386, t7387, t7388, t7389, t7390;
    uint128_t s2178, s2179, s2180, s2181, s2182, s2183, s2184, s2185, 
            s2186, s2187, s2188, s2189, s2190, s2191, s2192, s2193, 
            s2194, s2195, s2196, s2197, s2198, s2199, s2200, s2201, 
            s2202;
    for(int i37 = 0; i37 <= 4095; i37++) {
        a36571 = (128*i37);
        a36572 = (a36571 + threadIdx.x);
        b1651 = (threadIdx.x + a36571);
        a36573 = (b1651 + 524288);
        a36574 = (a36573 % 4);
        a36575 = (4 + a36574);
        /* Begin of MPModMul 256 */
        a36576 = (2*a36575);
        a36577 = (a36576 + 1);
        a36578 = (2*a36573);
        a36579 = (a36578 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36580 = (2*a36576);
        a36581 = (a36580 + 1);
        /* MPAssignDD 64 */
        a36582 = (2*a36581);
        t12542 = twiddles[a36582];
        a36583 = (a36582 + 1);
        t12543 = twiddles[a36583];
        /* MPAssignDD 128 */
        a36584 = (2*a36577);
        /* MPAssignDD 64 */
        a36585 = (2*a36584);
        t12544 = twiddles[a36585];
        a36586 = (a36585 + 1);
        t12545 = twiddles[a36586];
        a36587 = (a36584 + 1);
        /* MPAssignDD 64 */
        a36588 = (2*a36587);
        t12546 = twiddles[a36588];
        a36589 = (a36588 + 1);
        t12547 = twiddles[a36589];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36590 = (2*a36578);
        a36591 = (a36590 + 1);
        /* MPAssignDD 64 */
        a36592 = (2*a36591);
        t12548 = P2[a36592];
        a36593 = (a36592 + 1);
        t12549 = P2[a36593];
        /* MPAssignDD 128 */
        a36594 = (2*a36579);
        /* MPAssignDD 64 */
        a36595 = (2*a36594);
        t12550 = P2[a36595];
        a36596 = (a36595 + 1);
        t12551 = P2[a36596];
        a36597 = (a36594 + 1);
        /* MPAssignDD 64 */
        a36598 = (2*a36597);
        t12552 = P2[a36598];
        a36599 = (a36598 + 1);
        t12553 = P2[a36599];
        MPMulQDD_L3_2(t7353, t7354, t7355, t7356, t7349, t7350, t7351, t7352, 
    t7345, t7346, t7347, t7348, t7341, t7342, t7343, t7344, 
    0, 0, t12542, t12543, t12544, t12545, t12546, t12547, 
    0, 0, t12548, t12549, t12550, t12551, t12552, t12553);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12554 = (t7345 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a36600 = (t7345 << 6);
        a36601 = (t7346 >> 58);
        t12555 = (((a36600)|(a36601)));
        t12556 = (t7346 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12557 = (t7347 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12558 = (((t12556)|(t12557)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1652 = ((int) 1);
        t12559 = (288230376151711744 - b1652);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12560 = (((t7355)&(t12559)));
        t12561 = (((t7356)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a36602 = (t12560 << 6);
        a36603 = (t12561 >> 58);
        t12562 = (((a36602)|(a36603)));
        t12563 = (t12561 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12564 = (t7349 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a36604 = (t7349 << 6);
        a36605 = (t7350 >> 58);
        t12565 = (((a36604)|(a36605)));
        t12566 = (t7350 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12567 = (t7351 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12568 = (((t12566)|(t12567)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12569 = (((t12563)|(t12564)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a36606 = (t7351 << 6);
        a36607 = (t7352 >> 58);
        t12570 = (((a36606)|(a36607)));
        t12571 = (t7352 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12572 = (((t12571)|(t12554)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a19148 = mu[2];
        a19149 = mu[3];
        a19150 = mu[4];
        a19151 = mu[5];
        a19152 = mu[6];
        a19153 = mu[7];
        MPMulQDD_L3_1(t7387, t7388, t7389, t7390, t7383, t7384, t7385, t7386, 
    t7377, t7378, t7379, t7380, t7375, t7376, t7373, t7374, 
    t12562, t12569, t12565, t12568, t12570, t12572, t12555, t12558, 
    0, 0, a19148, a19149, a19150, a19151, a19152, a19153);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12573 = (t7377 >> 1);
        a36608 = (t7377 << 63);
        a36609 = (t7378 >> 1);
        t12574 = (((a36608)|(a36609)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t12575 = (0 - b1652);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2086 = (2 - b1652);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12578 = (((t7388)&(d2086)));
        /* MPBinAndD 64 */
        t12579 = (((t7389)&(t12575)));
        t12580 = (((t7390)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12581 = (t12578 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12582 = (t12579 >> 1);
        a36611 = (t12579 << 63);
        a36612 = (t12580 >> 1);
        t12583 = (((a36611)|(a36612)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12584 = (((t12581)|(t12582)));
        /* Begin of MPShiftLeft1D */
        t12585 = (t12580 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12586 = (t7383 >> 1);
        a36613 = (t7383 << 63);
        a36614 = (t7384 >> 1);
        t12587 = (((a36613)|(a36614)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12588 = (((t12585)|(t12586)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12589 = (t7384 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12590 = (t7385 >> 1);
        a36615 = (t7385 << 63);
        a36616 = (t7386 >> 1);
        t12591 = (((a36615)|(a36616)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12592 = (((t12589)|(t12590)));
        /* Begin of MPShiftLeft1D */
        t12593 = (t7386 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12594 = (((t12593)|(t12573)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a19253 = modulus[2];
        a19254 = modulus[3];
        a19255 = modulus[4];
        a19256 = modulus[5];
        a19257 = modulus[6];
        a19258 = modulus[7];
        MPMulQDD_L3_1(t7369, t7370, t7371, t7372, t7365, t7366, t7367, t7368, 
    t7361, t7362, t7363, t7364, t7357, t7358, t7359, t7360, 
    t12584, t12583, t12588, t12587, t12592, t12591, t12594, t12574, 
    0, 0, a19253, a19254, a19255, a19256, a19257, a19258);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2087 = (t7344 - t7360);
        b1654 = ((t7344 < t7360));
        d2088 = (t7343 - t7359);
        d2089 = (d2088 - b1654);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36618 = ((t7343 < t7359));
        a36619 = ((t7343 == t7359));
        a36620 = ((a36619) && (b1654));
        b1655 = ((a36618) || (a36620));
        /* Begin of MPSubDDD 64 */
        d2090 = (t7342 - t7358);
        b1656 = ((t7342 < t7358));
        d2091 = (t7341 - t7357);
        d2092 = (d2091 - b1656);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2093 = (d2090 - b1655);
        b1657 = ((d2090 < b1655));
        t12595 = (d2092 - b1657);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36624 = ((t7341 < t7357));
        a36625 = ((t7341 == t7357));
        a36626 = ((a36625) && (b1656));
        a36627 = ((a36624) || (a36626));
        /* MPEqual 64 */
        a36628 = ((t7342 == t7358));
        a36629 = ((a36625) && (a36628));
        /* MPLessThan 64 */
        a36630 = ((a36629) && (b1655));
        b1658 = ((a36627) || (a36630));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2094 = (t7348 - t7364);
        b1659 = ((t7348 < t7364));
        d2095 = (t7347 - t7363);
        d2096 = (d2095 - b1659);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36633 = ((t7347 < t7363));
        a36634 = ((t7347 == t7363));
        a36635 = ((a36634) && (b1659));
        b1660 = ((a36633) || (a36635));
        /* Begin of MPSubDDD 64 */
        d2097 = (t7346 - t7362);
        b1661 = ((t7346 < t7362));
        d2098 = (t7345 - t7361);
        d2099 = (d2098 - b1661);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2100 = (d2097 - b1660);
        b1662 = ((d2097 < b1660));
        t12596 = (d2099 - b1662);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2101 = (d2094 - b1658);
        b1663 = ((d2094 < b1658));
        t12597 = (d2096 - b1663);
        /* MPLessThanDI 64 */
        a36640 = ((d2096 == 0));
        b1664 = ((a36640) && (b1663));
        /* MPSubDDI 64 */
        d2102 = (d2100 - b1664);
        b1665 = ((d2100 < b1664));
        t12598 = (t12596 - b1665);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2103 = (d2087 - a19258);
        b1666 = ((d2087 < a19258));
        d2104 = (d2089 - a19257);
        d2105 = (d2104 - b1666);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36644 = ((d2089 < a19257));
        a36645 = ((d2089 == a19257));
        a36646 = ((a36645) && (b1666));
        b1667 = ((a36644) || (a36646));
        /* Begin of MPSubDDD 64 */
        d2106 = (d2093 - a19256);
        b1668 = ((d2093 < a19256));
        d2107 = (t12595 - a19255);
        d2108 = (d2107 - b1668);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2109 = (d2106 - b1667);
        b1669 = ((d2106 < b1667));
        t12599 = (d2108 - b1669);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36650 = ((t12595 < a19255));
        a36651 = ((t12595 == a19255));
        a36652 = ((a36651) && (b1668));
        a36653 = ((a36650) || (a36652));
        /* MPEqual 64 */
        a36654 = ((d2093 == a19256));
        a36655 = ((a36651) && (a36654));
        /* MPLessThan 64 */
        a36656 = ((a36655) && (b1667));
        b1670 = ((a36653) || (a36656));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2110 = (d2101 - a19254);
        b1671 = ((d2101 < a19254));
        d2111 = (t12597 - a19253);
        d2112 = (d2111 - b1671);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36659 = ((t12597 < a19253));
        a36660 = ((t12597 == a19253));
        a36661 = ((a36660) && (b1671));
        b1672 = ((a36659) || (a36661));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2113 = (d2102 - b1672);
        b1673 = ((d2102 < b1672));
        t12600 = (t12598 - b1673);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2114 = (d2110 - b1670);
        b1674 = ((d2110 < b1670));
        t12601 = (d2112 - b1674);
        /* MPLessThanDI 64 */
        a36665 = ((d2112 == 0));
        b1675 = ((a36665) && (b1674));
        /* MPSubDDI 64 */
        d2115 = (d2113 - b1675);
        b1676 = ((d2113 < b1675));
        t12602 = (t12600 - b1676);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a36668 = ((t12598 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a36669 = ((d2102 == 0));
        a36670 = ((a36668) && (a36669));
        /* MPLessThan 64 */
        a36671 = ((a36670) && (b1672));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36672 = ((d2101 == a19254));
        a36673 = ((a36660) && (a36672));
        a36674 = ((a36670) && (a36673));
        /* MPLessThan 128 */
        a36675 = ((a36674) && (b1670));
        i654 = ((a36671) || (a36675));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12603 = ((i654) ? (t12598) : (t12602));
        t12604 = ((i654) ? (d2102) : (d2115));
        /* MPCondD 64 */
        t12605 = ((i654) ? (t12597) : (t12601));
        t12606 = ((i654) ? (d2101) : (d2114));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12607 = ((i654) ? (t12595) : (t12599));
        t12608 = ((i654) ? (d2093) : (d2109));
        /* MPCondD 64 */
        t12609 = ((i654) ? (d2089) : (d2105));
        t12610 = ((i654) ? (d2087) : (d2103));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a36676 = (256*i37);
        a36677 = (2*threadIdx.x);
        a36678 = (a36676 + a36677);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a36679 = (2*a36572);
        a36680 = (a36679 + 1);
        /* MPAssignDD 128 */
        a36681 = (2*a36680);
        /* MPAssignDD 64 */
        a36682 = (2*a36681);
        t12611 = P2[a36682];
        a36683 = (a36682 + 1);
        t12612 = P2[a36683];
        a36684 = (a36681 + 1);
        /* MPAssignDD 64 */
        a36685 = (2*a36684);
        t12613 = P2[a36685];
        a36686 = (a36685 + 1);
        t12614 = P2[a36686];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2178 = (((uint128_t ) t12614) + ((uint128_t ) t12610));
        t12615 = ((uint64_t ) s2178);
        c1137 = (s2178 >> 64);
        s2179 = (((uint128_t ) t12613) + ((uint128_t ) t12609));
        s2180 = (((uint128_t ) s2179) + ((uint128_t ) c1137));
        t12616 = ((uint64_t ) s2180);
        c1138 = (s2180 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2181 = (((uint128_t ) t12612) + ((uint128_t ) t12608));
        t12617 = ((uint64_t ) s2181);
        c1139 = (s2181 >> 64);
        s2182 = (((uint128_t ) t12611) + ((uint128_t ) t12607));
        s2183 = (((uint128_t ) s2182) + ((uint128_t ) c1139));
        t12618 = ((uint64_t ) s2183);
        c1140 = (s2183 >> 64);
        /* MPPropagateCarry 64 */
        t12619 = (t12617 + c1138);
        a36687 = ((t12619 == 0));
        a36688 = (t12618 + c1138);
        t12620 = ((a36687) ? (a36688) : (t12618));
        a36689 = ((t12620 == 0));
        a36690 = ((a36689) && (a36687));
        a36691 = (c1140 + c1138);
        t12621 = ((a36690) ? (a36691) : (c1140));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36695 = (2*a36679);
        a36696 = (a36695 + 1);
        /* MPAssignDD 64 */
        a36697 = (2*a36696);
        t12623 = P2[a36697];
        a36698 = (a36697 + 1);
        t12624 = P2[a36698];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2184 = (((uint128_t ) t12624) + ((uint128_t ) t12606));
        t12625 = ((uint64_t ) s2184);
        c1141 = (s2184 >> 64);
        s2185 = (((uint128_t ) t12623) + ((uint128_t ) t12605));
        s2186 = (((uint128_t ) s2185) + ((uint128_t ) c1141));
        t12626 = ((uint64_t ) s2186);
        c1142 = (s2186 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t12627 = ((uint64_t ) t12604);
        c1143 = (t12604 >> 64);
        s2187 = (((uint128_t ) t12603) + ((uint128_t ) c1143));
        t12628 = ((uint64_t ) s2187);
        /* MPPropagateCarry 64 */
        t12629 = (t12627 + c1142);
        a36699 = ((t12629 == 0));
        a36700 = (t12628 + c1142);
        t12630 = ((a36699) ? (a36700) : (t12628));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2188 = (((uint128_t ) t12625) + ((uint128_t ) t12621));
        t12633 = ((uint64_t ) s2188);
        c1145 = (s2188 >> 64);
        s2189 = (((uint128_t ) t12626) + ((uint128_t ) c1145));
        t12634 = ((uint64_t ) s2189);
        /* MPEqualDI 64 */
        a36707 = ((t12634 == 0));
        a36708 = ((t12633 == 0));
        a36709 = ((a36707) && (a36708));
        /* MPAddDDI 64 */
        s2190 = (((uint128_t ) t12629) + ((uint128_t ) t12621));
        t12635 = ((uint64_t ) s2190);
        c1146 = (s2190 >> 64);
        s2191 = (((uint128_t ) t12630) + ((uint128_t ) c1146));
        t12636 = ((uint64_t ) s2191);
        /* MPCondD 64 */
        t12637 = ((a36709) ? (t12636) : (t12630));
        t12638 = ((a36709) ? (t12635) : (t12629));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a36710 = ((0 < t12637));
        a36711 = ((0 == t12637));
        a36712 = ((0 < t12638));
        a36713 = ((a36711) && (a36712));
        a36714 = ((a36710) || (a36713));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a36715 = ((0 == t12638));
        a36716 = ((a36711) && (a36715));
        /* MPLessThan 64 */
        a36717 = ((a19253 < t12634));
        a36718 = ((a19253 == t12634));
        a36719 = ((a19254 < t12633));
        a36720 = ((a36718) && (a36719));
        a36721 = ((a36717) || (a36720));
        a36722 = ((a36716) && (a36721));
        a36723 = ((a36714) || (a36722));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36724 = ((a19254 == t12633));
        a36725 = ((a36718) && (a36724));
        a36726 = ((a36716) && (a36725));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36727 = ((a19255 < t12620));
        a36728 = ((a19255 == t12620));
        a36729 = ((a19256 < t12619));
        a36730 = ((a36728) && (a36729));
        a36731 = ((a36727) || (a36730));
        /* MPEqual 64 */
        a36732 = ((a19256 == t12619));
        a36733 = ((a36728) && (a36732));
        /* MPLessThan 64 */
        a36734 = ((a19257 < t12616));
        a36735 = ((a19257 == t12616));
        a36736 = ((a19258 < t12615));
        a36737 = ((a36735) && (a36736));
        a36738 = ((a36734) || (a36737));
        a36739 = ((a36733) && (a36738));
        a36740 = ((a36731) || (a36739));
        a36741 = ((a36726) && (a36740));
        i655 = ((a36723) || (a36741));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2116 = (t12615 - a19258);
        b1677 = ((t12615 < a19258));
        d2117 = (t12616 - a19257);
        d2118 = (d2117 - b1677);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36743 = ((t12616 < a19257));
        a36744 = ((t12616 == a19257));
        a36745 = ((a36744) && (b1677));
        b1678 = ((a36743) || (a36745));
        /* Begin of MPSubDDD 64 */
        d2119 = (t12619 - a19256);
        b1679 = ((t12619 < a19256));
        d2120 = (t12620 - a19255);
        d2121 = (d2120 - b1679);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2122 = (d2119 - b1678);
        b1680 = ((d2119 < b1678));
        t12639 = (d2121 - b1680);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36749 = ((t12620 < a19255));
        a36750 = ((t12620 == a19255));
        a36751 = ((a36750) && (b1679));
        a36752 = ((a36749) || (a36751));
        /* MPEqual 64 */
        a36753 = ((t12619 == a19256));
        a36754 = ((a36750) && (a36753));
        /* MPLessThan 64 */
        a36755 = ((a36754) && (b1678));
        b1681 = ((a36752) || (a36755));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2123 = (t12633 - a19254);
        b1682 = ((t12633 < a19254));
        d2124 = (t12634 - a19253);
        d2125 = (d2124 - b1682);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2126 = (d2123 - b1681);
        b1683 = ((d2123 < b1681));
        t12640 = (d2125 - b1683);
        /* End of MPSubDDD 256 */
        a36759 = (2*a36678);
        /* MPCondD 128 */
        a36760 = (2*a36759);
        a36761 = (a36760 + 1);
        /* MPCondD 64 */
        a36762 = (2*a36761);
        P1[a36762] = ((i655) ? (t12640) : (t12634));
        a36763 = (a36762 + 1);
        P1[a36763] = ((i655) ? (d2126) : (t12633));
        a36764 = (a36759 + 1);
        /* MPCondD 128 */
        a36765 = (2*a36764);
        /* MPCondD 64 */
        a36766 = (2*a36765);
        P1[a36766] = ((i655) ? (t12639) : (t12620));
        a36767 = (a36766 + 1);
        P1[a36767] = ((i655) ? (d2122) : (t12619));
        a36768 = (a36765 + 1);
        /* MPCondD 64 */
        a36769 = (2*a36768);
        P1[a36769] = ((i655) ? (d2118) : (t12616));
        a36770 = (a36769 + 1);
        P1[a36770] = ((i655) ? (d2116) : (t12615));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1684 = (a36677 + a36676);
        a36771 = (b1684 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2127 = (t12614 - t12610);
        b1685 = ((t12614 < t12610));
        d2128 = (t12613 - t12609);
        d2129 = (d2128 - b1685);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36773 = ((t12613 < t12609));
        a36774 = ((t12613 == t12609));
        a36775 = ((a36774) && (b1685));
        b1686 = ((a36773) || (a36775));
        /* Begin of MPSubDDD 64 */
        d2130 = (t12612 - t12608);
        b1687 = ((t12612 < t12608));
        d2131 = (t12611 - t12607);
        d2132 = (d2131 - b1687);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2133 = (d2130 - b1686);
        b1688 = ((d2130 < b1686));
        t12641 = (d2132 - b1688);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36779 = ((t12611 < t12607));
        a36780 = ((t12611 == t12607));
        a36781 = ((a36780) && (b1687));
        a36782 = ((a36779) || (a36781));
        /* MPEqual 64 */
        a36783 = ((t12612 == t12608));
        a36784 = ((a36780) && (a36783));
        /* MPLessThan 64 */
        a36785 = ((a36784) && (b1686));
        b1689 = ((a36782) || (a36785));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2134 = (t12624 - t12606);
        b1690 = ((t12624 < t12606));
        d2135 = (t12623 - t12605);
        d2136 = (d2135 - b1690);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2137 = (d2134 - b1689);
        b1691 = ((d2134 < b1689));
        t12642 = (d2136 - b1691);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2192 = (((uint128_t ) d2127) + ((uint128_t ) a19258));
        t12643 = ((uint64_t ) s2192);
        c1147 = (s2192 >> 64);
        s2193 = (((uint128_t ) d2129) + ((uint128_t ) a19257));
        s2194 = (((uint128_t ) s2193) + ((uint128_t ) c1147));
        t12644 = ((uint64_t ) s2194);
        c1148 = (s2194 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2195 = (((uint128_t ) d2133) + ((uint128_t ) a19256));
        t12645 = ((uint64_t ) s2195);
        c1149 = (s2195 >> 64);
        s2196 = (((uint128_t ) t12641) + ((uint128_t ) a19255));
        s2197 = (((uint128_t ) s2196) + ((uint128_t ) c1149));
        t12646 = ((uint64_t ) s2197);
        c1150 = (s2197 >> 64);
        /* MPPropagateCarry 64 */
        t12647 = (t12645 + c1148);
        a36789 = ((t12647 == 0));
        a36790 = (t12646 + c1148);
        t12648 = ((a36789) ? (a36790) : (t12646));
        a36791 = ((t12648 == 0));
        a36792 = ((a36791) && (a36789));
        a36793 = (c1150 + c1148);
        t12649 = ((a36792) ? (a36793) : (c1150));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2198 = (((uint128_t ) d2137) + ((uint128_t ) a19254));
        t12651 = ((uint64_t ) s2198);
        c1151 = (s2198 >> 64);
        s2199 = (((uint128_t ) t12642) + ((uint128_t ) a19253));
        s2200 = (((uint128_t ) s2199) + ((uint128_t ) c1151));
        t12652 = ((uint64_t ) s2200);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2201 = (((uint128_t ) t12651) + ((uint128_t ) t12649));
        t12653 = ((uint64_t ) s2201);
        c1153 = (s2201 >> 64);
        s2202 = (((uint128_t ) t12652) + ((uint128_t ) c1153));
        t12654 = ((uint64_t ) s2202);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36797 = ((0 < t12603));
        a36798 = ((0 == t12603));
        a36799 = ((0 < t12604));
        a36800 = ((a36798) && (a36799));
        a36801 = ((a36797) || (a36800));
        /* MPEqual 64 */
        a36802 = ((0 == t12604));
        a36803 = ((a36798) && (a36802));
        /* MPLessThan 64 */
        a36804 = ((t12623 < t12605));
        a36805 = ((t12623 == t12605));
        a36806 = ((a36805) && (b1690));
        a36807 = ((a36804) || (a36806));
        a36808 = ((a36803) && (a36807));
        a36809 = ((a36801) || (a36808));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36810 = ((t12624 == t12606));
        a36811 = ((a36805) && (a36810));
        a36812 = ((a36803) && (a36811));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a36813 = ((a36812) && (b1689));
        i656 = ((a36809) || (a36813));
        a36814 = (2*a36771);
        /* MPCondD 128 */
        a36815 = (2*a36814);
        a36816 = (a36815 + 1);
        /* MPCondD 64 */
        a36817 = (2*a36816);
        P1[a36817] = ((i656) ? (t12654) : (t12642));
        a36818 = (a36817 + 1);
        P1[a36818] = ((i656) ? (t12653) : (d2137));
        a36819 = (a36814 + 1);
        /* MPCondD 128 */
        a36820 = (2*a36819);
        /* MPCondD 64 */
        a36821 = (2*a36820);
        P1[a36821] = ((i656) ? (t12648) : (t12641));
        a36822 = (a36821 + 1);
        P1[a36822] = ((i656) ? (t12647) : (d2133));
        a36823 = (a36820 + 1);
        /* MPCondD 64 */
        a36824 = (2*a36823);
        P1[a36824] = ((i656) ? (t12644) : (d2129));
        a36825 = (a36824 + 1);
        P1[a36825] = ((i656) ? (t12643) : (d2127));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code3(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a36826, a36827, a36828, a36829, a36830, a36831, a36832, a36833, 
            a36834, a36835, a36836, a36837, a36838, a36839, a36840, a36841, 
            a36842, a36843, a36844, a36845, a36846, a36847, a36848, a36849, 
            a36850, a36851, a36852, a36853, a36854, a36873, a36874, a36875, 
            a36879, a36880, a36881, a36882, a36883, a36884, a36885, a36888, 
            a36889, a36890, a36895, a36899, a36900, a36901, a36905, a36906, 
            a36907, a36908, a36909, a36910, a36911, a36914, a36915, a36916, 
            a36920, a36923, a36924, a36925, a36926, a36927, a36928, a36929, 
            a36930, a36931, a36932, a36933, a36934, a36935, a36936, a36937, 
            a36938, a36939, a36940, a36941, a36942, a36944, a36945, a36950, 
            a36951, a36952, a36953, a36954, a36962, a36963, a36964, a36965, 
            a36966, a36967, a36968, a36969, a36970, a36971, a36972, a36973, 
            a36974, a36975, a36976, a36977, a36978, a36979, a36980, a36981, 
            a36982, a36983, a36984, a36985, a36986, a36987, a36988, a36989, 
            a36990, a36991, a36992, a36993, a36994, a36995, a36996, a36998, 
            a36999, a37000, a37004, a37005, a37006, a37007, a37008, a37009, 
            a37010, a37014, a37015, a37016, a37017, a37018, a37019, a37020, 
            a37021, a37022, a37023, a37024, a37025, a37026, a37028, a37029, 
            a37030, a37034, a37035, a37036, a37037, a37038, a37039, a37040, 
            a37044, a37046, a37047, a37052, a37053, a37054, a37055, a37056, 
            a37057, a37058, a37059, a37060, a37061, a37062, a37063, a37064, 
            a37065, a37066, a37067, a37068, a37069, a37070, a37071, a37072, 
            a37073, a37074, a37075, a37076, a37077, a37078, a37079, a37080, 
            b1692, b1693, b1695, b1696, b1697, b1698, b1699, b1700, 
            b1701, b1702, b1703, b1704, b1705, b1706, b1707, b1708, 
            b1709, b1710, b1711, b1712, b1713, b1714, b1715, b1716, 
            b1717, b1718, b1719, b1720, b1721, b1722, b1723, b1724, 
            b1725, b1726, b1727, b1728, b1729, b1730, b1731, b1732, 
            c1154, c1155, c1156, c1157, c1158, c1159, c1160, c1162, 
            c1163, c1164, c1165, c1166, c1167, c1168, c1170, i657, 
            i658, i659;
    uint64_t a20059, a20060, a20061, a20062, a20063, a20064, a20164, a20165, 
            a20166, a20167, a20168, a20169, a36855, a36856, a36857, a36858, 
            a36859, a36860, a36861, a36862, a36863, a36864, a36866, a36867, 
            a36868, a36869, a36870, a36871, a36943, a36946, a36955, a37045, 
            a37048, d2138, d2139, d2140, d2141, d2142, d2143, d2144, 
            d2145, d2146, d2147, d2148, d2149, d2150, d2151, d2152, 
            d2153, d2154, d2155, d2156, d2157, d2158, d2159, d2160, 
            d2161, d2162, d2163, d2164, d2165, d2166, d2167, d2168, 
            d2169, d2170, d2171, d2172, d2173, d2174, d2175, d2176, 
            d2177, d2178, d2179, d2180, d2181, d2182, d2183, d2184, 
            d2185, d2186, d2187, d2188, d2189, t12655, t12656, t12657, 
            t12658, t12659, t12660, t12661, t12662, t12663, t12664, t12665, 
            t12666, t12667, t12668, t12669, t12670, t12671, t12672, t12673, 
            t12674, t12675, t12676, t12677, t12678, t12679, t12680, t12681, 
            t12682, t12683, t12684, t12685, t12686, t12687, t12688, t12691, 
            t12692, t12693, t12694, t12695, t12696, t12697, t12698, t12699, 
            t12700, t12701, t12702, t12703, t12704, t12705, t12706, t12707, 
            t12708, t12709, t12710, t12711, t12712, t12713, t12714, t12715, 
            t12716, t12717, t12718, t12719, t12720, t12721, t12722, t12723, 
            t12724, t12725, t12726, t12727, t12728, t12729, t12730, t12731, 
            t12732, t12733, t12734, t12736, t12737, t12738, t12739, t12740, 
            t12741, t12742, t12743, t12746, t12747, t12748, t12749, t12750, 
            t12751, t12752, t12753, t12754, t12755, t12756, t12757, t12758, 
            t12759, t12760, t12761, t12762, t12764, t12765, t12766, t12767, 
            t7407, t7408, t7409, t7410, t7411, t7412, t7413, t7414, 
            t7415, t7416, t7417, t7418, t7419, t7420, t7421, t7422, 
            t7423, t7424, t7425, t7426, t7427, t7428, t7429, t7430, 
            t7431, t7432, t7433, t7434, t7435, t7436, t7437, t7438, 
            t7439, t7440, t7441, t7442, t7443, t7444, t7445, t7446, 
            t7447, t7448, t7449, t7450, t7451, t7452, t7453, t7454;
    uint128_t s2203, s2204, s2205, s2206, s2207, s2208, s2209, s2210, 
            s2211, s2212, s2213, s2214, s2215, s2216, s2217, s2218, 
            s2219, s2220, s2221, s2222, s2223, s2224, s2225, s2226, 
            s2227;
    for(int i35 = 0; i35 <= 4095; i35++) {
        a36826 = (128*i35);
        a36827 = (a36826 + threadIdx.x);
        b1692 = (threadIdx.x + a36826);
        a36828 = (b1692 + 524288);
        a36829 = (a36828 % 8);
        a36830 = (8 + a36829);
        /* Begin of MPModMul 256 */
        a36831 = (2*a36830);
        a36832 = (a36831 + 1);
        a36833 = (2*a36828);
        a36834 = (a36833 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36835 = (2*a36831);
        a36836 = (a36835 + 1);
        /* MPAssignDD 64 */
        a36837 = (2*a36836);
        t12655 = twiddles[a36837];
        a36838 = (a36837 + 1);
        t12656 = twiddles[a36838];
        /* MPAssignDD 128 */
        a36839 = (2*a36832);
        /* MPAssignDD 64 */
        a36840 = (2*a36839);
        t12657 = twiddles[a36840];
        a36841 = (a36840 + 1);
        t12658 = twiddles[a36841];
        a36842 = (a36839 + 1);
        /* MPAssignDD 64 */
        a36843 = (2*a36842);
        t12659 = twiddles[a36843];
        a36844 = (a36843 + 1);
        t12660 = twiddles[a36844];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36845 = (2*a36833);
        a36846 = (a36845 + 1);
        /* MPAssignDD 64 */
        a36847 = (2*a36846);
        t12661 = P1[a36847];
        a36848 = (a36847 + 1);
        t12662 = P1[a36848];
        /* MPAssignDD 128 */
        a36849 = (2*a36834);
        /* MPAssignDD 64 */
        a36850 = (2*a36849);
        t12663 = P1[a36850];
        a36851 = (a36850 + 1);
        t12664 = P1[a36851];
        a36852 = (a36849 + 1);
        /* MPAssignDD 64 */
        a36853 = (2*a36852);
        t12665 = P1[a36853];
        a36854 = (a36853 + 1);
        t12666 = P1[a36854];
        MPMulQDD_L3_2(t7419, t7420, t7421, t7422, t7415, t7416, t7417, t7418, 
    t7411, t7412, t7413, t7414, t7407, t7408, t7409, t7410, 
    0, 0, t12655, t12656, t12657, t12658, t12659, t12660, 
    0, 0, t12661, t12662, t12663, t12664, t12665, t12666);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12667 = (t7411 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a36855 = (t7411 << 6);
        a36856 = (t7412 >> 58);
        t12668 = (((a36855)|(a36856)));
        t12669 = (t7412 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12670 = (t7413 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12671 = (((t12669)|(t12670)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1693 = ((int) 1);
        t12672 = (288230376151711744 - b1693);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12673 = (((t7421)&(t12672)));
        t12674 = (((t7422)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a36857 = (t12673 << 6);
        a36858 = (t12674 >> 58);
        t12675 = (((a36857)|(a36858)));
        t12676 = (t12674 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12677 = (t7415 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a36859 = (t7415 << 6);
        a36860 = (t7416 >> 58);
        t12678 = (((a36859)|(a36860)));
        t12679 = (t7416 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12680 = (t7417 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12681 = (((t12679)|(t12680)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12682 = (((t12676)|(t12677)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a36861 = (t7417 << 6);
        a36862 = (t7418 >> 58);
        t12683 = (((a36861)|(a36862)));
        t12684 = (t7418 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12685 = (((t12684)|(t12667)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a20059 = mu[2];
        a20060 = mu[3];
        a20061 = mu[4];
        a20062 = mu[5];
        a20063 = mu[6];
        a20064 = mu[7];
        MPMulQDD_L3_1(t7451, t7452, t7453, t7454, t7447, t7448, t7449, t7450, 
    t7443, t7444, t7445, t7446, t7439, t7440, t7441, t7442, 
    t12675, t12682, t12678, t12681, t12683, t12685, t12668, t12671, 
    0, 0, a20059, a20060, a20061, a20062, a20063, a20064);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12686 = (t7443 >> 1);
        a36863 = (t7443 << 63);
        a36864 = (t7444 >> 1);
        t12687 = (((a36863)|(a36864)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t12688 = (0 - b1693);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2138 = (2 - b1693);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12691 = (((t7452)&(d2138)));
        /* MPBinAndD 64 */
        t12692 = (((t7453)&(t12688)));
        t12693 = (((t7454)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12694 = (t12691 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12695 = (t12692 >> 1);
        a36866 = (t12692 << 63);
        a36867 = (t12693 >> 1);
        t12696 = (((a36866)|(a36867)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12697 = (((t12694)|(t12695)));
        /* Begin of MPShiftLeft1D */
        t12698 = (t12693 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12699 = (t7447 >> 1);
        a36868 = (t7447 << 63);
        a36869 = (t7448 >> 1);
        t12700 = (((a36868)|(a36869)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12701 = (((t12698)|(t12699)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12702 = (t7448 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12703 = (t7449 >> 1);
        a36870 = (t7449 << 63);
        a36871 = (t7450 >> 1);
        t12704 = (((a36870)|(a36871)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12705 = (((t12702)|(t12703)));
        /* Begin of MPShiftLeft1D */
        t12706 = (t7450 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12707 = (((t12706)|(t12686)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a20164 = modulus[2];
        a20165 = modulus[3];
        a20166 = modulus[4];
        a20167 = modulus[5];
        a20168 = modulus[6];
        a20169 = modulus[7];
        MPMulQDD_L3_1(t7435, t7436, t7437, t7438, t7431, t7432, t7433, t7434, 
    t7427, t7428, t7429, t7430, t7423, t7424, t7425, t7426, 
    t12697, t12696, t12701, t12700, t12705, t12704, t12707, t12687, 
    0, 0, a20164, a20165, a20166, a20167, a20168, a20169);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2139 = (t7410 - t7426);
        b1695 = ((t7410 < t7426));
        d2140 = (t7409 - t7425);
        d2141 = (d2140 - b1695);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36873 = ((t7409 < t7425));
        a36874 = ((t7409 == t7425));
        a36875 = ((a36874) && (b1695));
        b1696 = ((a36873) || (a36875));
        /* Begin of MPSubDDD 64 */
        d2142 = (t7408 - t7424);
        b1697 = ((t7408 < t7424));
        d2143 = (t7407 - t7423);
        d2144 = (d2143 - b1697);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2145 = (d2142 - b1696);
        b1698 = ((d2142 < b1696));
        t12708 = (d2144 - b1698);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36879 = ((t7407 < t7423));
        a36880 = ((t7407 == t7423));
        a36881 = ((a36880) && (b1697));
        a36882 = ((a36879) || (a36881));
        /* MPEqual 64 */
        a36883 = ((t7408 == t7424));
        a36884 = ((a36880) && (a36883));
        /* MPLessThan 64 */
        a36885 = ((a36884) && (b1696));
        b1699 = ((a36882) || (a36885));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2146 = (t7414 - t7430);
        b1700 = ((t7414 < t7430));
        d2147 = (t7413 - t7429);
        d2148 = (d2147 - b1700);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36888 = ((t7413 < t7429));
        a36889 = ((t7413 == t7429));
        a36890 = ((a36889) && (b1700));
        b1701 = ((a36888) || (a36890));
        /* Begin of MPSubDDD 64 */
        d2149 = (t7412 - t7428);
        b1702 = ((t7412 < t7428));
        d2150 = (t7411 - t7427);
        d2151 = (d2150 - b1702);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2152 = (d2149 - b1701);
        b1703 = ((d2149 < b1701));
        t12709 = (d2151 - b1703);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2153 = (d2146 - b1699);
        b1704 = ((d2146 < b1699));
        t12710 = (d2148 - b1704);
        /* MPLessThanDI 64 */
        a36895 = ((d2148 == 0));
        b1705 = ((a36895) && (b1704));
        /* MPSubDDI 64 */
        d2154 = (d2152 - b1705);
        b1706 = ((d2152 < b1705));
        t12711 = (t12709 - b1706);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2155 = (d2139 - a20169);
        b1707 = ((d2139 < a20169));
        d2156 = (d2141 - a20168);
        d2157 = (d2156 - b1707);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36899 = ((d2141 < a20168));
        a36900 = ((d2141 == a20168));
        a36901 = ((a36900) && (b1707));
        b1708 = ((a36899) || (a36901));
        /* Begin of MPSubDDD 64 */
        d2158 = (d2145 - a20167);
        b1709 = ((d2145 < a20167));
        d2159 = (t12708 - a20166);
        d2160 = (d2159 - b1709);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2161 = (d2158 - b1708);
        b1710 = ((d2158 < b1708));
        t12712 = (d2160 - b1710);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36905 = ((t12708 < a20166));
        a36906 = ((t12708 == a20166));
        a36907 = ((a36906) && (b1709));
        a36908 = ((a36905) || (a36907));
        /* MPEqual 64 */
        a36909 = ((d2145 == a20167));
        a36910 = ((a36906) && (a36909));
        /* MPLessThan 64 */
        a36911 = ((a36910) && (b1708));
        b1711 = ((a36908) || (a36911));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2162 = (d2153 - a20165);
        b1712 = ((d2153 < a20165));
        d2163 = (t12710 - a20164);
        d2164 = (d2163 - b1712);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36914 = ((t12710 < a20164));
        a36915 = ((t12710 == a20164));
        a36916 = ((a36915) && (b1712));
        b1713 = ((a36914) || (a36916));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2165 = (d2154 - b1713);
        b1714 = ((d2154 < b1713));
        t12713 = (t12711 - b1714);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2166 = (d2162 - b1711);
        b1715 = ((d2162 < b1711));
        t12714 = (d2164 - b1715);
        /* MPLessThanDI 64 */
        a36920 = ((d2164 == 0));
        b1716 = ((a36920) && (b1715));
        /* MPSubDDI 64 */
        d2167 = (d2165 - b1716);
        b1717 = ((d2165 < b1716));
        t12715 = (t12713 - b1717);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a36923 = ((t12711 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a36924 = ((d2154 == 0));
        a36925 = ((a36923) && (a36924));
        /* MPLessThan 64 */
        a36926 = ((a36925) && (b1713));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36927 = ((d2153 == a20165));
        a36928 = ((a36915) && (a36927));
        a36929 = ((a36925) && (a36928));
        /* MPLessThan 128 */
        a36930 = ((a36929) && (b1711));
        i657 = ((a36926) || (a36930));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12716 = ((i657) ? (t12711) : (t12715));
        t12717 = ((i657) ? (d2154) : (d2167));
        /* MPCondD 64 */
        t12718 = ((i657) ? (t12710) : (t12714));
        t12719 = ((i657) ? (d2153) : (d2166));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12720 = ((i657) ? (t12708) : (t12712));
        t12721 = ((i657) ? (d2145) : (d2161));
        /* MPCondD 64 */
        t12722 = ((i657) ? (d2141) : (d2157));
        t12723 = ((i657) ? (d2139) : (d2155));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a36931 = (256*i35);
        a36932 = (2*threadIdx.x);
        a36933 = (a36931 + a36932);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a36934 = (2*a36827);
        a36935 = (a36934 + 1);
        /* MPAssignDD 128 */
        a36936 = (2*a36935);
        /* MPAssignDD 64 */
        a36937 = (2*a36936);
        t12724 = P1[a36937];
        a36938 = (a36937 + 1);
        t12725 = P1[a36938];
        a36939 = (a36936 + 1);
        /* MPAssignDD 64 */
        a36940 = (2*a36939);
        t12726 = P1[a36940];
        a36941 = (a36940 + 1);
        t12727 = P1[a36941];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2203 = (((uint128_t ) t12727) + ((uint128_t ) t12723));
        t12728 = ((uint64_t ) s2203);
        c1154 = (s2203 >> 64);
        s2204 = (((uint128_t ) t12726) + ((uint128_t ) t12722));
        s2205 = (((uint128_t ) s2204) + ((uint128_t ) c1154));
        t12729 = ((uint64_t ) s2205);
        c1155 = (s2205 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2206 = (((uint128_t ) t12725) + ((uint128_t ) t12721));
        t12730 = ((uint64_t ) s2206);
        c1156 = (s2206 >> 64);
        s2207 = (((uint128_t ) t12724) + ((uint128_t ) t12720));
        s2208 = (((uint128_t ) s2207) + ((uint128_t ) c1156));
        t12731 = ((uint64_t ) s2208);
        c1157 = (s2208 >> 64);
        /* MPPropagateCarry 64 */
        t12732 = (t12730 + c1155);
        a36942 = ((t12732 == 0));
        a36943 = (t12731 + c1155);
        t12733 = ((a36942) ? (a36943) : (t12731));
        a36944 = ((t12733 == 0));
        a36945 = ((a36944) && (a36942));
        a36946 = (c1157 + c1155);
        t12734 = ((a36945) ? (a36946) : (c1157));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a36950 = (2*a36934);
        a36951 = (a36950 + 1);
        /* MPAssignDD 64 */
        a36952 = (2*a36951);
        t12736 = P1[a36952];
        a36953 = (a36952 + 1);
        t12737 = P1[a36953];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2209 = (((uint128_t ) t12737) + ((uint128_t ) t12719));
        t12738 = ((uint64_t ) s2209);
        c1158 = (s2209 >> 64);
        s2210 = (((uint128_t ) t12736) + ((uint128_t ) t12718));
        s2211 = (((uint128_t ) s2210) + ((uint128_t ) c1158));
        t12739 = ((uint64_t ) s2211);
        c1159 = (s2211 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t12740 = ((uint64_t ) t12717);
        c1160 = (t12717 >> 64);
        s2212 = (((uint128_t ) t12716) + ((uint128_t ) c1160));
        t12741 = ((uint64_t ) s2212);
        /* MPPropagateCarry 64 */
        t12742 = (t12740 + c1159);
        a36954 = ((t12742 == 0));
        a36955 = (t12741 + c1159);
        t12743 = ((a36954) ? (a36955) : (t12741));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2213 = (((uint128_t ) t12738) + ((uint128_t ) t12734));
        t12746 = ((uint64_t ) s2213);
        c1162 = (s2213 >> 64);
        s2214 = (((uint128_t ) t12739) + ((uint128_t ) c1162));
        t12747 = ((uint64_t ) s2214);
        /* MPEqualDI 64 */
        a36962 = ((t12747 == 0));
        a36963 = ((t12746 == 0));
        a36964 = ((a36962) && (a36963));
        /* MPAddDDI 64 */
        s2215 = (((uint128_t ) t12742) + ((uint128_t ) t12734));
        t12748 = ((uint64_t ) s2215);
        c1163 = (s2215 >> 64);
        s2216 = (((uint128_t ) t12743) + ((uint128_t ) c1163));
        t12749 = ((uint64_t ) s2216);
        /* MPCondD 64 */
        t12750 = ((a36964) ? (t12749) : (t12743));
        t12751 = ((a36964) ? (t12748) : (t12742));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a36965 = ((0 < t12750));
        a36966 = ((0 == t12750));
        a36967 = ((0 < t12751));
        a36968 = ((a36966) && (a36967));
        a36969 = ((a36965) || (a36968));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a36970 = ((0 == t12751));
        a36971 = ((a36966) && (a36970));
        /* MPLessThan 64 */
        a36972 = ((a20164 < t12747));
        a36973 = ((a20164 == t12747));
        a36974 = ((a20165 < t12746));
        a36975 = ((a36973) && (a36974));
        a36976 = ((a36972) || (a36975));
        a36977 = ((a36971) && (a36976));
        a36978 = ((a36969) || (a36977));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a36979 = ((a20165 == t12746));
        a36980 = ((a36973) && (a36979));
        a36981 = ((a36971) && (a36980));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a36982 = ((a20166 < t12733));
        a36983 = ((a20166 == t12733));
        a36984 = ((a20167 < t12732));
        a36985 = ((a36983) && (a36984));
        a36986 = ((a36982) || (a36985));
        /* MPEqual 64 */
        a36987 = ((a20167 == t12732));
        a36988 = ((a36983) && (a36987));
        /* MPLessThan 64 */
        a36989 = ((a20168 < t12729));
        a36990 = ((a20168 == t12729));
        a36991 = ((a20169 < t12728));
        a36992 = ((a36990) && (a36991));
        a36993 = ((a36989) || (a36992));
        a36994 = ((a36988) && (a36993));
        a36995 = ((a36986) || (a36994));
        a36996 = ((a36981) && (a36995));
        i658 = ((a36978) || (a36996));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2168 = (t12728 - a20169);
        b1718 = ((t12728 < a20169));
        d2169 = (t12729 - a20168);
        d2170 = (d2169 - b1718);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a36998 = ((t12729 < a20168));
        a36999 = ((t12729 == a20168));
        a37000 = ((a36999) && (b1718));
        b1719 = ((a36998) || (a37000));
        /* Begin of MPSubDDD 64 */
        d2171 = (t12732 - a20167);
        b1720 = ((t12732 < a20167));
        d2172 = (t12733 - a20166);
        d2173 = (d2172 - b1720);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2174 = (d2171 - b1719);
        b1721 = ((d2171 < b1719));
        t12752 = (d2173 - b1721);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37004 = ((t12733 < a20166));
        a37005 = ((t12733 == a20166));
        a37006 = ((a37005) && (b1720));
        a37007 = ((a37004) || (a37006));
        /* MPEqual 64 */
        a37008 = ((t12732 == a20167));
        a37009 = ((a37005) && (a37008));
        /* MPLessThan 64 */
        a37010 = ((a37009) && (b1719));
        b1722 = ((a37007) || (a37010));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2175 = (t12746 - a20165);
        b1723 = ((t12746 < a20165));
        d2176 = (t12747 - a20164);
        d2177 = (d2176 - b1723);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2178 = (d2175 - b1722);
        b1724 = ((d2175 < b1722));
        t12753 = (d2177 - b1724);
        /* End of MPSubDDD 256 */
        a37014 = (2*a36933);
        /* MPCondD 128 */
        a37015 = (2*a37014);
        a37016 = (a37015 + 1);
        /* MPCondD 64 */
        a37017 = (2*a37016);
        P2[a37017] = ((i658) ? (t12753) : (t12747));
        a37018 = (a37017 + 1);
        P2[a37018] = ((i658) ? (d2178) : (t12746));
        a37019 = (a37014 + 1);
        /* MPCondD 128 */
        a37020 = (2*a37019);
        /* MPCondD 64 */
        a37021 = (2*a37020);
        P2[a37021] = ((i658) ? (t12752) : (t12733));
        a37022 = (a37021 + 1);
        P2[a37022] = ((i658) ? (d2174) : (t12732));
        a37023 = (a37020 + 1);
        /* MPCondD 64 */
        a37024 = (2*a37023);
        P2[a37024] = ((i658) ? (d2170) : (t12729));
        a37025 = (a37024 + 1);
        P2[a37025] = ((i658) ? (d2168) : (t12728));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1725 = (a36932 + a36931);
        a37026 = (b1725 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2179 = (t12727 - t12723);
        b1726 = ((t12727 < t12723));
        d2180 = (t12726 - t12722);
        d2181 = (d2180 - b1726);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37028 = ((t12726 < t12722));
        a37029 = ((t12726 == t12722));
        a37030 = ((a37029) && (b1726));
        b1727 = ((a37028) || (a37030));
        /* Begin of MPSubDDD 64 */
        d2182 = (t12725 - t12721);
        b1728 = ((t12725 < t12721));
        d2183 = (t12724 - t12720);
        d2184 = (d2183 - b1728);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2185 = (d2182 - b1727);
        b1729 = ((d2182 < b1727));
        t12754 = (d2184 - b1729);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37034 = ((t12724 < t12720));
        a37035 = ((t12724 == t12720));
        a37036 = ((a37035) && (b1728));
        a37037 = ((a37034) || (a37036));
        /* MPEqual 64 */
        a37038 = ((t12725 == t12721));
        a37039 = ((a37035) && (a37038));
        /* MPLessThan 64 */
        a37040 = ((a37039) && (b1727));
        b1730 = ((a37037) || (a37040));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2186 = (t12737 - t12719);
        b1731 = ((t12737 < t12719));
        d2187 = (t12736 - t12718);
        d2188 = (d2187 - b1731);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2189 = (d2186 - b1730);
        b1732 = ((d2186 < b1730));
        t12755 = (d2188 - b1732);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2217 = (((uint128_t ) d2179) + ((uint128_t ) a20169));
        t12756 = ((uint64_t ) s2217);
        c1164 = (s2217 >> 64);
        s2218 = (((uint128_t ) d2181) + ((uint128_t ) a20168));
        s2219 = (((uint128_t ) s2218) + ((uint128_t ) c1164));
        t12757 = ((uint64_t ) s2219);
        c1165 = (s2219 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2220 = (((uint128_t ) d2185) + ((uint128_t ) a20167));
        t12758 = ((uint64_t ) s2220);
        c1166 = (s2220 >> 64);
        s2221 = (((uint128_t ) t12754) + ((uint128_t ) a20166));
        s2222 = (((uint128_t ) s2221) + ((uint128_t ) c1166));
        t12759 = ((uint64_t ) s2222);
        c1167 = (s2222 >> 64);
        /* MPPropagateCarry 64 */
        t12760 = (t12758 + c1165);
        a37044 = ((t12760 == 0));
        a37045 = (t12759 + c1165);
        t12761 = ((a37044) ? (a37045) : (t12759));
        a37046 = ((t12761 == 0));
        a37047 = ((a37046) && (a37044));
        a37048 = (c1167 + c1165);
        t12762 = ((a37047) ? (a37048) : (c1167));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2223 = (((uint128_t ) d2189) + ((uint128_t ) a20165));
        t12764 = ((uint64_t ) s2223);
        c1168 = (s2223 >> 64);
        s2224 = (((uint128_t ) t12755) + ((uint128_t ) a20164));
        s2225 = (((uint128_t ) s2224) + ((uint128_t ) c1168));
        t12765 = ((uint64_t ) s2225);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2226 = (((uint128_t ) t12764) + ((uint128_t ) t12762));
        t12766 = ((uint64_t ) s2226);
        c1170 = (s2226 >> 64);
        s2227 = (((uint128_t ) t12765) + ((uint128_t ) c1170));
        t12767 = ((uint64_t ) s2227);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37052 = ((0 < t12716));
        a37053 = ((0 == t12716));
        a37054 = ((0 < t12717));
        a37055 = ((a37053) && (a37054));
        a37056 = ((a37052) || (a37055));
        /* MPEqual 64 */
        a37057 = ((0 == t12717));
        a37058 = ((a37053) && (a37057));
        /* MPLessThan 64 */
        a37059 = ((t12736 < t12718));
        a37060 = ((t12736 == t12718));
        a37061 = ((a37060) && (b1731));
        a37062 = ((a37059) || (a37061));
        a37063 = ((a37058) && (a37062));
        a37064 = ((a37056) || (a37063));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37065 = ((t12737 == t12719));
        a37066 = ((a37060) && (a37065));
        a37067 = ((a37058) && (a37066));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a37068 = ((a37067) && (b1730));
        i659 = ((a37064) || (a37068));
        a37069 = (2*a37026);
        /* MPCondD 128 */
        a37070 = (2*a37069);
        a37071 = (a37070 + 1);
        /* MPCondD 64 */
        a37072 = (2*a37071);
        P2[a37072] = ((i659) ? (t12767) : (t12755));
        a37073 = (a37072 + 1);
        P2[a37073] = ((i659) ? (t12766) : (d2189));
        a37074 = (a37069 + 1);
        /* MPCondD 128 */
        a37075 = (2*a37074);
        /* MPCondD 64 */
        a37076 = (2*a37075);
        P2[a37076] = ((i659) ? (t12761) : (t12754));
        a37077 = (a37076 + 1);
        P2[a37077] = ((i659) ? (t12760) : (d2185));
        a37078 = (a37075 + 1);
        /* MPCondD 64 */
        a37079 = (2*a37078);
        P2[a37079] = ((i659) ? (t12757) : (d2181));
        a37080 = (a37079 + 1);
        P2[a37080] = ((i659) ? (t12756) : (d2179));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code4(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a37081, a37082, a37083, a37084, a37085, a37086, a37087, a37088, 
            a37089, a37090, a37091, a37092, a37093, a37094, a37095, a37096, 
            a37097, a37098, a37099, a37100, a37101, a37102, a37103, a37104, 
            a37105, a37106, a37107, a37108, a37109, a37128, a37129, a37130, 
            a37134, a37135, a37136, a37137, a37138, a37139, a37140, a37143, 
            a37144, a37145, a37150, a37154, a37155, a37156, a37160, a37161, 
            a37162, a37163, a37164, a37165, a37166, a37169, a37170, a37171, 
            a37175, a37178, a37179, a37180, a37181, a37182, a37183, a37184, 
            a37185, a37186, a37187, a37188, a37189, a37190, a37191, a37192, 
            a37193, a37194, a37195, a37196, a37197, a37199, a37200, a37205, 
            a37206, a37207, a37208, a37209, a37217, a37218, a37219, a37220, 
            a37221, a37222, a37223, a37224, a37225, a37226, a37227, a37228, 
            a37229, a37230, a37231, a37232, a37233, a37234, a37235, a37236, 
            a37237, a37238, a37239, a37240, a37241, a37242, a37243, a37244, 
            a37245, a37246, a37247, a37248, a37249, a37250, a37251, a37253, 
            a37254, a37255, a37259, a37260, a37261, a37262, a37263, a37264, 
            a37265, a37269, a37270, a37271, a37272, a37273, a37274, a37275, 
            a37276, a37277, a37278, a37279, a37280, a37281, a37283, a37284, 
            a37285, a37289, a37290, a37291, a37292, a37293, a37294, a37295, 
            a37299, a37301, a37302, a37307, a37308, a37309, a37310, a37311, 
            a37312, a37313, a37314, a37315, a37316, a37317, a37318, a37319, 
            a37320, a37321, a37322, a37323, a37324, a37325, a37326, a37327, 
            a37328, a37329, a37330, a37331, a37332, a37333, a37334, a37335, 
            b1733, b1734, b1736, b1737, b1738, b1739, b1740, b1741, 
            b1742, b1743, b1744, b1745, b1746, b1747, b1748, b1749, 
            b1750, b1751, b1752, b1753, b1754, b1755, b1756, b1757, 
            b1758, b1759, b1760, b1761, b1762, b1763, b1764, b1765, 
            b1766, b1767, b1768, b1769, b1770, b1771, b1772, b1773, 
            c1171, c1172, c1173, c1174, c1175, c1176, c1177, c1179, 
            c1180, c1181, c1182, c1183, c1184, c1185, c1187, i660, 
            i661, i662;
    uint64_t a20970, a20971, a20972, a20973, a20974, a20975, a21075, a21076, 
            a21077, a21078, a21079, a21080, a37110, a37111, a37112, a37113, 
            a37114, a37115, a37116, a37117, a37118, a37119, a37121, a37122, 
            a37123, a37124, a37125, a37126, a37198, a37201, a37210, a37300, 
            a37303, d2190, d2191, d2192, d2193, d2194, d2195, d2196, 
            d2197, d2198, d2199, d2200, d2201, d2202, d2203, d2204, 
            d2205, d2206, d2207, d2208, d2209, d2210, d2211, d2212, 
            d2213, d2214, d2215, d2216, d2217, d2218, d2219, d2220, 
            d2221, d2222, d2223, d2224, d2225, d2226, d2227, d2228, 
            d2229, d2230, d2231, d2232, d2233, d2234, d2235, d2236, 
            d2237, d2238, d2239, d2240, d2241, t12768, t12769, t12770, 
            t12771, t12772, t12773, t12774, t12775, t12776, t12777, t12778, 
            t12779, t12780, t12781, t12782, t12783, t12784, t12785, t12786, 
            t12787, t12788, t12789, t12790, t12791, t12792, t12793, t12794, 
            t12795, t12796, t12797, t12798, t12799, t12800, t12801, t12804, 
            t12805, t12806, t12807, t12808, t12809, t12810, t12811, t12812, 
            t12813, t12814, t12815, t12816, t12817, t12818, t12819, t12820, 
            t12821, t12822, t12823, t12824, t12825, t12826, t12827, t12828, 
            t12829, t12830, t12831, t12832, t12833, t12834, t12835, t12836, 
            t12837, t12838, t12839, t12840, t12841, t12842, t12843, t12844, 
            t12845, t12846, t12847, t12849, t12850, t12851, t12852, t12853, 
            t12854, t12855, t12856, t12859, t12860, t12861, t12862, t12863, 
            t12864, t12865, t12866, t12867, t12868, t12869, t12870, t12871, 
            t12872, t12873, t12874, t12875, t12877, t12878, t12879, t12880, 
            t7471, t7472, t7473, t7474, t7475, t7476, t7477, t7478, 
            t7479, t7480, t7481, t7482, t7483, t7484, t7485, t7486, 
            t7487, t7488, t7489, t7490, t7491, t7492, t7493, t7494, 
            t7495, t7496, t7497, t7498, t7499, t7500, t7501, t7502, 
            t7503, t7504, t7505, t7506, t7507, t7508, t7509, t7510, 
            t7511, t7512, t7513, t7514, t7515, t7516, t7517, t7518;
    uint128_t s2228, s2229, s2230, s2231, s2232, s2233, s2234, s2235, 
            s2236, s2237, s2238, s2239, s2240, s2241, s2242, s2243, 
            s2244, s2245, s2246, s2247, s2248, s2249, s2250, s2251, 
            s2252;
    for(int i33 = 0; i33 <= 4095; i33++) {
        a37081 = (128*i33);
        a37082 = (a37081 + threadIdx.x);
        b1733 = (threadIdx.x + a37081);
        a37083 = (b1733 + 524288);
        a37084 = (a37083 % 16);
        a37085 = (16 + a37084);
        /* Begin of MPModMul 256 */
        a37086 = (2*a37085);
        a37087 = (a37086 + 1);
        a37088 = (2*a37083);
        a37089 = (a37088 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37090 = (2*a37086);
        a37091 = (a37090 + 1);
        /* MPAssignDD 64 */
        a37092 = (2*a37091);
        t12768 = twiddles[a37092];
        a37093 = (a37092 + 1);
        t12769 = twiddles[a37093];
        /* MPAssignDD 128 */
        a37094 = (2*a37087);
        /* MPAssignDD 64 */
        a37095 = (2*a37094);
        t12770 = twiddles[a37095];
        a37096 = (a37095 + 1);
        t12771 = twiddles[a37096];
        a37097 = (a37094 + 1);
        /* MPAssignDD 64 */
        a37098 = (2*a37097);
        t12772 = twiddles[a37098];
        a37099 = (a37098 + 1);
        t12773 = twiddles[a37099];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37100 = (2*a37088);
        a37101 = (a37100 + 1);
        /* MPAssignDD 64 */
        a37102 = (2*a37101);
        t12774 = P2[a37102];
        a37103 = (a37102 + 1);
        t12775 = P2[a37103];
        /* MPAssignDD 128 */
        a37104 = (2*a37089);
        /* MPAssignDD 64 */
        a37105 = (2*a37104);
        t12776 = P2[a37105];
        a37106 = (a37105 + 1);
        t12777 = P2[a37106];
        a37107 = (a37104 + 1);
        /* MPAssignDD 64 */
        a37108 = (2*a37107);
        t12778 = P2[a37108];
        a37109 = (a37108 + 1);
        t12779 = P2[a37109];
        MPMulQDD_L3_2(t7483, t7484, t7485, t7486, t7479, t7480, t7481, t7482, 
    t7475, t7476, t7477, t7478, t7471, t7472, t7473, t7474, 
    0, 0, t12768, t12769, t12770, t12771, t12772, t12773, 
    0, 0, t12774, t12775, t12776, t12777, t12778, t12779);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12780 = (t7475 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a37110 = (t7475 << 6);
        a37111 = (t7476 >> 58);
        t12781 = (((a37110)|(a37111)));
        t12782 = (t7476 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12783 = (t7477 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12784 = (((t12782)|(t12783)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1734 = ((int) 1);
        t12785 = (288230376151711744 - b1734);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12786 = (((t7485)&(t12785)));
        t12787 = (((t7486)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a37112 = (t12786 << 6);
        a37113 = (t12787 >> 58);
        t12788 = (((a37112)|(a37113)));
        t12789 = (t12787 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12790 = (t7479 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a37114 = (t7479 << 6);
        a37115 = (t7480 >> 58);
        t12791 = (((a37114)|(a37115)));
        t12792 = (t7480 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12793 = (t7481 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12794 = (((t12792)|(t12793)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12795 = (((t12789)|(t12790)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a37116 = (t7481 << 6);
        a37117 = (t7482 >> 58);
        t12796 = (((a37116)|(a37117)));
        t12797 = (t7482 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12798 = (((t12797)|(t12780)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a20970 = mu[2];
        a20971 = mu[3];
        a20972 = mu[4];
        a20973 = mu[5];
        a20974 = mu[6];
        a20975 = mu[7];
        MPMulQDD_L3_1(t7515, t7516, t7517, t7518, t7511, t7512, t7513, t7514, 
    t7507, t7508, t7509, t7510, t7503, t7504, t7505, t7506, 
    t12788, t12795, t12791, t12794, t12796, t12798, t12781, t12784, 
    0, 0, a20970, a20971, a20972, a20973, a20974, a20975);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12799 = (t7507 >> 1);
        a37118 = (t7507 << 63);
        a37119 = (t7508 >> 1);
        t12800 = (((a37118)|(a37119)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t12801 = (0 - b1734);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2190 = (2 - b1734);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12804 = (((t7516)&(d2190)));
        /* MPBinAndD 64 */
        t12805 = (((t7517)&(t12801)));
        t12806 = (((t7518)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12807 = (t12804 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12808 = (t12805 >> 1);
        a37121 = (t12805 << 63);
        a37122 = (t12806 >> 1);
        t12809 = (((a37121)|(a37122)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12810 = (((t12807)|(t12808)));
        /* Begin of MPShiftLeft1D */
        t12811 = (t12806 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12812 = (t7511 >> 1);
        a37123 = (t7511 << 63);
        a37124 = (t7512 >> 1);
        t12813 = (((a37123)|(a37124)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12814 = (((t12811)|(t12812)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12815 = (t7512 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12816 = (t7513 >> 1);
        a37125 = (t7513 << 63);
        a37126 = (t7514 >> 1);
        t12817 = (((a37125)|(a37126)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12818 = (((t12815)|(t12816)));
        /* Begin of MPShiftLeft1D */
        t12819 = (t7514 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12820 = (((t12819)|(t12799)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a21075 = modulus[2];
        a21076 = modulus[3];
        a21077 = modulus[4];
        a21078 = modulus[5];
        a21079 = modulus[6];
        a21080 = modulus[7];
        MPMulQDD_L3_1(t7499, t7500, t7501, t7502, t7495, t7496, t7497, t7498, 
    t7491, t7492, t7493, t7494, t7487, t7488, t7489, t7490, 
    t12810, t12809, t12814, t12813, t12818, t12817, t12820, t12800, 
    0, 0, a21075, a21076, a21077, a21078, a21079, a21080);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2191 = (t7474 - t7490);
        b1736 = ((t7474 < t7490));
        d2192 = (t7473 - t7489);
        d2193 = (d2192 - b1736);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37128 = ((t7473 < t7489));
        a37129 = ((t7473 == t7489));
        a37130 = ((a37129) && (b1736));
        b1737 = ((a37128) || (a37130));
        /* Begin of MPSubDDD 64 */
        d2194 = (t7472 - t7488);
        b1738 = ((t7472 < t7488));
        d2195 = (t7471 - t7487);
        d2196 = (d2195 - b1738);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2197 = (d2194 - b1737);
        b1739 = ((d2194 < b1737));
        t12821 = (d2196 - b1739);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37134 = ((t7471 < t7487));
        a37135 = ((t7471 == t7487));
        a37136 = ((a37135) && (b1738));
        a37137 = ((a37134) || (a37136));
        /* MPEqual 64 */
        a37138 = ((t7472 == t7488));
        a37139 = ((a37135) && (a37138));
        /* MPLessThan 64 */
        a37140 = ((a37139) && (b1737));
        b1740 = ((a37137) || (a37140));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2198 = (t7478 - t7494);
        b1741 = ((t7478 < t7494));
        d2199 = (t7477 - t7493);
        d2200 = (d2199 - b1741);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37143 = ((t7477 < t7493));
        a37144 = ((t7477 == t7493));
        a37145 = ((a37144) && (b1741));
        b1742 = ((a37143) || (a37145));
        /* Begin of MPSubDDD 64 */
        d2201 = (t7476 - t7492);
        b1743 = ((t7476 < t7492));
        d2202 = (t7475 - t7491);
        d2203 = (d2202 - b1743);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2204 = (d2201 - b1742);
        b1744 = ((d2201 < b1742));
        t12822 = (d2203 - b1744);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2205 = (d2198 - b1740);
        b1745 = ((d2198 < b1740));
        t12823 = (d2200 - b1745);
        /* MPLessThanDI 64 */
        a37150 = ((d2200 == 0));
        b1746 = ((a37150) && (b1745));
        /* MPSubDDI 64 */
        d2206 = (d2204 - b1746);
        b1747 = ((d2204 < b1746));
        t12824 = (t12822 - b1747);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2207 = (d2191 - a21080);
        b1748 = ((d2191 < a21080));
        d2208 = (d2193 - a21079);
        d2209 = (d2208 - b1748);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37154 = ((d2193 < a21079));
        a37155 = ((d2193 == a21079));
        a37156 = ((a37155) && (b1748));
        b1749 = ((a37154) || (a37156));
        /* Begin of MPSubDDD 64 */
        d2210 = (d2197 - a21078);
        b1750 = ((d2197 < a21078));
        d2211 = (t12821 - a21077);
        d2212 = (d2211 - b1750);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2213 = (d2210 - b1749);
        b1751 = ((d2210 < b1749));
        t12825 = (d2212 - b1751);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37160 = ((t12821 < a21077));
        a37161 = ((t12821 == a21077));
        a37162 = ((a37161) && (b1750));
        a37163 = ((a37160) || (a37162));
        /* MPEqual 64 */
        a37164 = ((d2197 == a21078));
        a37165 = ((a37161) && (a37164));
        /* MPLessThan 64 */
        a37166 = ((a37165) && (b1749));
        b1752 = ((a37163) || (a37166));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2214 = (d2205 - a21076);
        b1753 = ((d2205 < a21076));
        d2215 = (t12823 - a21075);
        d2216 = (d2215 - b1753);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37169 = ((t12823 < a21075));
        a37170 = ((t12823 == a21075));
        a37171 = ((a37170) && (b1753));
        b1754 = ((a37169) || (a37171));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2217 = (d2206 - b1754);
        b1755 = ((d2206 < b1754));
        t12826 = (t12824 - b1755);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2218 = (d2214 - b1752);
        b1756 = ((d2214 < b1752));
        t12827 = (d2216 - b1756);
        /* MPLessThanDI 64 */
        a37175 = ((d2216 == 0));
        b1757 = ((a37175) && (b1756));
        /* MPSubDDI 64 */
        d2219 = (d2217 - b1757);
        b1758 = ((d2217 < b1757));
        t12828 = (t12826 - b1758);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a37178 = ((t12824 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a37179 = ((d2206 == 0));
        a37180 = ((a37178) && (a37179));
        /* MPLessThan 64 */
        a37181 = ((a37180) && (b1754));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37182 = ((d2205 == a21076));
        a37183 = ((a37170) && (a37182));
        a37184 = ((a37180) && (a37183));
        /* MPLessThan 128 */
        a37185 = ((a37184) && (b1752));
        i660 = ((a37181) || (a37185));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12829 = ((i660) ? (t12824) : (t12828));
        t12830 = ((i660) ? (d2206) : (d2219));
        /* MPCondD 64 */
        t12831 = ((i660) ? (t12823) : (t12827));
        t12832 = ((i660) ? (d2205) : (d2218));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12833 = ((i660) ? (t12821) : (t12825));
        t12834 = ((i660) ? (d2197) : (d2213));
        /* MPCondD 64 */
        t12835 = ((i660) ? (d2193) : (d2209));
        t12836 = ((i660) ? (d2191) : (d2207));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a37186 = (256*i33);
        a37187 = (2*threadIdx.x);
        a37188 = (a37186 + a37187);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a37189 = (2*a37082);
        a37190 = (a37189 + 1);
        /* MPAssignDD 128 */
        a37191 = (2*a37190);
        /* MPAssignDD 64 */
        a37192 = (2*a37191);
        t12837 = P2[a37192];
        a37193 = (a37192 + 1);
        t12838 = P2[a37193];
        a37194 = (a37191 + 1);
        /* MPAssignDD 64 */
        a37195 = (2*a37194);
        t12839 = P2[a37195];
        a37196 = (a37195 + 1);
        t12840 = P2[a37196];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2228 = (((uint128_t ) t12840) + ((uint128_t ) t12836));
        t12841 = ((uint64_t ) s2228);
        c1171 = (s2228 >> 64);
        s2229 = (((uint128_t ) t12839) + ((uint128_t ) t12835));
        s2230 = (((uint128_t ) s2229) + ((uint128_t ) c1171));
        t12842 = ((uint64_t ) s2230);
        c1172 = (s2230 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2231 = (((uint128_t ) t12838) + ((uint128_t ) t12834));
        t12843 = ((uint64_t ) s2231);
        c1173 = (s2231 >> 64);
        s2232 = (((uint128_t ) t12837) + ((uint128_t ) t12833));
        s2233 = (((uint128_t ) s2232) + ((uint128_t ) c1173));
        t12844 = ((uint64_t ) s2233);
        c1174 = (s2233 >> 64);
        /* MPPropagateCarry 64 */
        t12845 = (t12843 + c1172);
        a37197 = ((t12845 == 0));
        a37198 = (t12844 + c1172);
        t12846 = ((a37197) ? (a37198) : (t12844));
        a37199 = ((t12846 == 0));
        a37200 = ((a37199) && (a37197));
        a37201 = (c1174 + c1172);
        t12847 = ((a37200) ? (a37201) : (c1174));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37205 = (2*a37189);
        a37206 = (a37205 + 1);
        /* MPAssignDD 64 */
        a37207 = (2*a37206);
        t12849 = P2[a37207];
        a37208 = (a37207 + 1);
        t12850 = P2[a37208];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2234 = (((uint128_t ) t12850) + ((uint128_t ) t12832));
        t12851 = ((uint64_t ) s2234);
        c1175 = (s2234 >> 64);
        s2235 = (((uint128_t ) t12849) + ((uint128_t ) t12831));
        s2236 = (((uint128_t ) s2235) + ((uint128_t ) c1175));
        t12852 = ((uint64_t ) s2236);
        c1176 = (s2236 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t12853 = ((uint64_t ) t12830);
        c1177 = (t12830 >> 64);
        s2237 = (((uint128_t ) t12829) + ((uint128_t ) c1177));
        t12854 = ((uint64_t ) s2237);
        /* MPPropagateCarry 64 */
        t12855 = (t12853 + c1176);
        a37209 = ((t12855 == 0));
        a37210 = (t12854 + c1176);
        t12856 = ((a37209) ? (a37210) : (t12854));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2238 = (((uint128_t ) t12851) + ((uint128_t ) t12847));
        t12859 = ((uint64_t ) s2238);
        c1179 = (s2238 >> 64);
        s2239 = (((uint128_t ) t12852) + ((uint128_t ) c1179));
        t12860 = ((uint64_t ) s2239);
        /* MPEqualDI 64 */
        a37217 = ((t12860 == 0));
        a37218 = ((t12859 == 0));
        a37219 = ((a37217) && (a37218));
        /* MPAddDDI 64 */
        s2240 = (((uint128_t ) t12855) + ((uint128_t ) t12847));
        t12861 = ((uint64_t ) s2240);
        c1180 = (s2240 >> 64);
        s2241 = (((uint128_t ) t12856) + ((uint128_t ) c1180));
        t12862 = ((uint64_t ) s2241);
        /* MPCondD 64 */
        t12863 = ((a37219) ? (t12862) : (t12856));
        t12864 = ((a37219) ? (t12861) : (t12855));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a37220 = ((0 < t12863));
        a37221 = ((0 == t12863));
        a37222 = ((0 < t12864));
        a37223 = ((a37221) && (a37222));
        a37224 = ((a37220) || (a37223));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a37225 = ((0 == t12864));
        a37226 = ((a37221) && (a37225));
        /* MPLessThan 64 */
        a37227 = ((a21075 < t12860));
        a37228 = ((a21075 == t12860));
        a37229 = ((a21076 < t12859));
        a37230 = ((a37228) && (a37229));
        a37231 = ((a37227) || (a37230));
        a37232 = ((a37226) && (a37231));
        a37233 = ((a37224) || (a37232));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37234 = ((a21076 == t12859));
        a37235 = ((a37228) && (a37234));
        a37236 = ((a37226) && (a37235));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37237 = ((a21077 < t12846));
        a37238 = ((a21077 == t12846));
        a37239 = ((a21078 < t12845));
        a37240 = ((a37238) && (a37239));
        a37241 = ((a37237) || (a37240));
        /* MPEqual 64 */
        a37242 = ((a21078 == t12845));
        a37243 = ((a37238) && (a37242));
        /* MPLessThan 64 */
        a37244 = ((a21079 < t12842));
        a37245 = ((a21079 == t12842));
        a37246 = ((a21080 < t12841));
        a37247 = ((a37245) && (a37246));
        a37248 = ((a37244) || (a37247));
        a37249 = ((a37243) && (a37248));
        a37250 = ((a37241) || (a37249));
        a37251 = ((a37236) && (a37250));
        i661 = ((a37233) || (a37251));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2220 = (t12841 - a21080);
        b1759 = ((t12841 < a21080));
        d2221 = (t12842 - a21079);
        d2222 = (d2221 - b1759);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37253 = ((t12842 < a21079));
        a37254 = ((t12842 == a21079));
        a37255 = ((a37254) && (b1759));
        b1760 = ((a37253) || (a37255));
        /* Begin of MPSubDDD 64 */
        d2223 = (t12845 - a21078);
        b1761 = ((t12845 < a21078));
        d2224 = (t12846 - a21077);
        d2225 = (d2224 - b1761);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2226 = (d2223 - b1760);
        b1762 = ((d2223 < b1760));
        t12865 = (d2225 - b1762);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37259 = ((t12846 < a21077));
        a37260 = ((t12846 == a21077));
        a37261 = ((a37260) && (b1761));
        a37262 = ((a37259) || (a37261));
        /* MPEqual 64 */
        a37263 = ((t12845 == a21078));
        a37264 = ((a37260) && (a37263));
        /* MPLessThan 64 */
        a37265 = ((a37264) && (b1760));
        b1763 = ((a37262) || (a37265));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2227 = (t12859 - a21076);
        b1764 = ((t12859 < a21076));
        d2228 = (t12860 - a21075);
        d2229 = (d2228 - b1764);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2230 = (d2227 - b1763);
        b1765 = ((d2227 < b1763));
        t12866 = (d2229 - b1765);
        /* End of MPSubDDD 256 */
        a37269 = (2*a37188);
        /* MPCondD 128 */
        a37270 = (2*a37269);
        a37271 = (a37270 + 1);
        /* MPCondD 64 */
        a37272 = (2*a37271);
        P1[a37272] = ((i661) ? (t12866) : (t12860));
        a37273 = (a37272 + 1);
        P1[a37273] = ((i661) ? (d2230) : (t12859));
        a37274 = (a37269 + 1);
        /* MPCondD 128 */
        a37275 = (2*a37274);
        /* MPCondD 64 */
        a37276 = (2*a37275);
        P1[a37276] = ((i661) ? (t12865) : (t12846));
        a37277 = (a37276 + 1);
        P1[a37277] = ((i661) ? (d2226) : (t12845));
        a37278 = (a37275 + 1);
        /* MPCondD 64 */
        a37279 = (2*a37278);
        P1[a37279] = ((i661) ? (d2222) : (t12842));
        a37280 = (a37279 + 1);
        P1[a37280] = ((i661) ? (d2220) : (t12841));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1766 = (a37187 + a37186);
        a37281 = (b1766 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2231 = (t12840 - t12836);
        b1767 = ((t12840 < t12836));
        d2232 = (t12839 - t12835);
        d2233 = (d2232 - b1767);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37283 = ((t12839 < t12835));
        a37284 = ((t12839 == t12835));
        a37285 = ((a37284) && (b1767));
        b1768 = ((a37283) || (a37285));
        /* Begin of MPSubDDD 64 */
        d2234 = (t12838 - t12834);
        b1769 = ((t12838 < t12834));
        d2235 = (t12837 - t12833);
        d2236 = (d2235 - b1769);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2237 = (d2234 - b1768);
        b1770 = ((d2234 < b1768));
        t12867 = (d2236 - b1770);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37289 = ((t12837 < t12833));
        a37290 = ((t12837 == t12833));
        a37291 = ((a37290) && (b1769));
        a37292 = ((a37289) || (a37291));
        /* MPEqual 64 */
        a37293 = ((t12838 == t12834));
        a37294 = ((a37290) && (a37293));
        /* MPLessThan 64 */
        a37295 = ((a37294) && (b1768));
        b1771 = ((a37292) || (a37295));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2238 = (t12850 - t12832);
        b1772 = ((t12850 < t12832));
        d2239 = (t12849 - t12831);
        d2240 = (d2239 - b1772);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2241 = (d2238 - b1771);
        b1773 = ((d2238 < b1771));
        t12868 = (d2240 - b1773);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2242 = (((uint128_t ) d2231) + ((uint128_t ) a21080));
        t12869 = ((uint64_t ) s2242);
        c1181 = (s2242 >> 64);
        s2243 = (((uint128_t ) d2233) + ((uint128_t ) a21079));
        s2244 = (((uint128_t ) s2243) + ((uint128_t ) c1181));
        t12870 = ((uint64_t ) s2244);
        c1182 = (s2244 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2245 = (((uint128_t ) d2237) + ((uint128_t ) a21078));
        t12871 = ((uint64_t ) s2245);
        c1183 = (s2245 >> 64);
        s2246 = (((uint128_t ) t12867) + ((uint128_t ) a21077));
        s2247 = (((uint128_t ) s2246) + ((uint128_t ) c1183));
        t12872 = ((uint64_t ) s2247);
        c1184 = (s2247 >> 64);
        /* MPPropagateCarry 64 */
        t12873 = (t12871 + c1182);
        a37299 = ((t12873 == 0));
        a37300 = (t12872 + c1182);
        t12874 = ((a37299) ? (a37300) : (t12872));
        a37301 = ((t12874 == 0));
        a37302 = ((a37301) && (a37299));
        a37303 = (c1184 + c1182);
        t12875 = ((a37302) ? (a37303) : (c1184));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2248 = (((uint128_t ) d2241) + ((uint128_t ) a21076));
        t12877 = ((uint64_t ) s2248);
        c1185 = (s2248 >> 64);
        s2249 = (((uint128_t ) t12868) + ((uint128_t ) a21075));
        s2250 = (((uint128_t ) s2249) + ((uint128_t ) c1185));
        t12878 = ((uint64_t ) s2250);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2251 = (((uint128_t ) t12877) + ((uint128_t ) t12875));
        t12879 = ((uint64_t ) s2251);
        c1187 = (s2251 >> 64);
        s2252 = (((uint128_t ) t12878) + ((uint128_t ) c1187));
        t12880 = ((uint64_t ) s2252);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37307 = ((0 < t12829));
        a37308 = ((0 == t12829));
        a37309 = ((0 < t12830));
        a37310 = ((a37308) && (a37309));
        a37311 = ((a37307) || (a37310));
        /* MPEqual 64 */
        a37312 = ((0 == t12830));
        a37313 = ((a37308) && (a37312));
        /* MPLessThan 64 */
        a37314 = ((t12849 < t12831));
        a37315 = ((t12849 == t12831));
        a37316 = ((a37315) && (b1772));
        a37317 = ((a37314) || (a37316));
        a37318 = ((a37313) && (a37317));
        a37319 = ((a37311) || (a37318));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37320 = ((t12850 == t12832));
        a37321 = ((a37315) && (a37320));
        a37322 = ((a37313) && (a37321));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a37323 = ((a37322) && (b1771));
        i662 = ((a37319) || (a37323));
        a37324 = (2*a37281);
        /* MPCondD 128 */
        a37325 = (2*a37324);
        a37326 = (a37325 + 1);
        /* MPCondD 64 */
        a37327 = (2*a37326);
        P1[a37327] = ((i662) ? (t12880) : (t12868));
        a37328 = (a37327 + 1);
        P1[a37328] = ((i662) ? (t12879) : (d2241));
        a37329 = (a37324 + 1);
        /* MPCondD 128 */
        a37330 = (2*a37329);
        /* MPCondD 64 */
        a37331 = (2*a37330);
        P1[a37331] = ((i662) ? (t12874) : (t12867));
        a37332 = (a37331 + 1);
        P1[a37332] = ((i662) ? (t12873) : (d2237));
        a37333 = (a37330 + 1);
        /* MPCondD 64 */
        a37334 = (2*a37333);
        P1[a37334] = ((i662) ? (t12870) : (d2233));
        a37335 = (a37334 + 1);
        P1[a37335] = ((i662) ? (t12869) : (d2231));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code5(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a37336, a37337, a37338, a37339, a37340, a37341, a37342, a37343, 
            a37344, a37345, a37346, a37347, a37348, a37349, a37350, a37351, 
            a37352, a37353, a37354, a37355, a37356, a37357, a37358, a37359, 
            a37360, a37361, a37362, a37363, a37364, a37383, a37384, a37385, 
            a37389, a37390, a37391, a37392, a37393, a37394, a37395, a37398, 
            a37399, a37400, a37405, a37409, a37410, a37411, a37415, a37416, 
            a37417, a37418, a37419, a37420, a37421, a37424, a37425, a37426, 
            a37430, a37433, a37434, a37435, a37436, a37437, a37438, a37439, 
            a37440, a37441, a37442, a37443, a37444, a37445, a37446, a37447, 
            a37448, a37449, a37450, a37451, a37452, a37454, a37455, a37460, 
            a37461, a37462, a37463, a37464, a37472, a37473, a37474, a37475, 
            a37476, a37477, a37478, a37479, a37480, a37481, a37482, a37483, 
            a37484, a37485, a37486, a37487, a37488, a37489, a37490, a37491, 
            a37492, a37493, a37494, a37495, a37496, a37497, a37498, a37499, 
            a37500, a37501, a37502, a37503, a37504, a37505, a37506, a37508, 
            a37509, a37510, a37514, a37515, a37516, a37517, a37518, a37519, 
            a37520, a37524, a37525, a37526, a37527, a37528, a37529, a37530, 
            a37531, a37532, a37533, a37534, a37535, a37536, a37538, a37539, 
            a37540, a37544, a37545, a37546, a37547, a37548, a37549, a37550, 
            a37554, a37556, a37557, a37562, a37563, a37564, a37565, a37566, 
            a37567, a37568, a37569, a37570, a37571, a37572, a37573, a37574, 
            a37575, a37576, a37577, a37578, a37579, a37580, a37581, a37582, 
            a37583, a37584, a37585, a37586, a37587, a37588, a37589, a37590, 
            b1774, b1775, b1777, b1778, b1779, b1780, b1781, b1782, 
            b1783, b1784, b1785, b1786, b1787, b1788, b1789, b1790, 
            b1791, b1792, b1793, b1794, b1795, b1796, b1797, b1798, 
            b1799, b1800, b1801, b1802, b1803, b1804, b1805, b1806, 
            b1807, b1808, b1809, b1810, b1811, b1812, b1813, b1814, 
            c1188, c1189, c1190, c1191, c1192, c1193, c1194, c1196, 
            c1197, c1198, c1199, c1200, c1201, c1202, c1204, i663, 
            i664, i665;
    uint64_t a21881, a21882, a21883, a21884, a21885, a21886, a21986, a21987, 
            a21988, a21989, a21990, a21991, a37365, a37366, a37367, a37368, 
            a37369, a37370, a37371, a37372, a37373, a37374, a37376, a37377, 
            a37378, a37379, a37380, a37381, a37453, a37456, a37465, a37555, 
            a37558, d2242, d2243, d2244, d2245, d2246, d2247, d2248, 
            d2249, d2250, d2251, d2252, d2253, d2254, d2255, d2256, 
            d2257, d2258, d2259, d2260, d2261, d2262, d2263, d2264, 
            d2265, d2266, d2267, d2268, d2269, d2270, d2271, d2272, 
            d2273, d2274, d2275, d2276, d2277, d2278, d2279, d2280, 
            d2281, d2282, d2283, d2284, d2285, d2286, d2287, d2288, 
            d2289, d2290, d2291, d2292, d2293, t12881, t12882, t12883, 
            t12884, t12885, t12886, t12887, t12888, t12889, t12890, t12891, 
            t12892, t12893, t12894, t12895, t12896, t12897, t12898, t12899, 
            t12900, t12901, t12902, t12903, t12904, t12905, t12906, t12907, 
            t12908, t12909, t12910, t12911, t12912, t12913, t12914, t12917, 
            t12918, t12919, t12920, t12921, t12922, t12923, t12924, t12925, 
            t12926, t12927, t12928, t12929, t12930, t12931, t12932, t12933, 
            t12934, t12935, t12936, t12937, t12938, t12939, t12940, t12941, 
            t12942, t12943, t12944, t12945, t12946, t12947, t12948, t12949, 
            t12950, t12951, t12952, t12953, t12954, t12955, t12956, t12957, 
            t12958, t12959, t12960, t12962, t12963, t12964, t12965, t12966, 
            t12967, t12968, t12969, t12972, t12973, t12974, t12975, t12976, 
            t12977, t12978, t12979, t12980, t12981, t12982, t12983, t12984, 
            t12985, t12986, t12987, t12988, t12990, t12991, t12992, t12993, 
            t7535, t7536, t7537, t7538, t7539, t7540, t7541, t7542, 
            t7543, t7544, t7545, t7546, t7547, t7548, t7549, t7550, 
            t7551, t7552, t7553, t7554, t7555, t7556, t7557, t7558, 
            t7559, t7560, t7561, t7562, t7563, t7564, t7565, t7566, 
            t7567, t7568, t7569, t7570, t7571, t7572, t7573, t7574, 
            t7575, t7576, t7579, t7580, t7581, t7582, t7583, t7584;
    uint128_t s2253, s2254, s2255, s2256, s2257, s2258, s2259, s2260, 
            s2261, s2262, s2263, s2264, s2265, s2266, s2267, s2268, 
            s2269, s2270, s2271, s2272, s2273, s2274, s2275, s2276, 
            s2277;
    for(int i31 = 0; i31 <= 4095; i31++) {
        a37336 = (128*i31);
        a37337 = (a37336 + threadIdx.x);
        b1774 = (threadIdx.x + a37336);
        a37338 = (b1774 + 524288);
        a37339 = (a37338 % 32);
        a37340 = (32 + a37339);
        /* Begin of MPModMul 256 */
        a37341 = (2*a37340);
        a37342 = (a37341 + 1);
        a37343 = (2*a37338);
        a37344 = (a37343 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37345 = (2*a37341);
        a37346 = (a37345 + 1);
        /* MPAssignDD 64 */
        a37347 = (2*a37346);
        t12881 = twiddles[a37347];
        a37348 = (a37347 + 1);
        t12882 = twiddles[a37348];
        /* MPAssignDD 128 */
        a37349 = (2*a37342);
        /* MPAssignDD 64 */
        a37350 = (2*a37349);
        t12883 = twiddles[a37350];
        a37351 = (a37350 + 1);
        t12884 = twiddles[a37351];
        a37352 = (a37349 + 1);
        /* MPAssignDD 64 */
        a37353 = (2*a37352);
        t12885 = twiddles[a37353];
        a37354 = (a37353 + 1);
        t12886 = twiddles[a37354];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37355 = (2*a37343);
        a37356 = (a37355 + 1);
        /* MPAssignDD 64 */
        a37357 = (2*a37356);
        t12887 = P1[a37357];
        a37358 = (a37357 + 1);
        t12888 = P1[a37358];
        /* MPAssignDD 128 */
        a37359 = (2*a37344);
        /* MPAssignDD 64 */
        a37360 = (2*a37359);
        t12889 = P1[a37360];
        a37361 = (a37360 + 1);
        t12890 = P1[a37361];
        a37362 = (a37359 + 1);
        /* MPAssignDD 64 */
        a37363 = (2*a37362);
        t12891 = P1[a37363];
        a37364 = (a37363 + 1);
        t12892 = P1[a37364];
        MPMulQDD_L3_2(t7547, t7548, t7549, t7550, t7543, t7544, t7545, t7546, 
    t7539, t7540, t7541, t7542, t7535, t7536, t7537, t7538, 
    0, 0, t12881, t12882, t12883, t12884, t12885, t12886, 
    0, 0, t12887, t12888, t12889, t12890, t12891, t12892);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12893 = (t7539 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a37365 = (t7539 << 6);
        a37366 = (t7540 >> 58);
        t12894 = (((a37365)|(a37366)));
        t12895 = (t7540 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12896 = (t7541 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12897 = (((t12895)|(t12896)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1775 = ((int) 1);
        t12898 = (288230376151711744 - b1775);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12899 = (((t7549)&(t12898)));
        t12900 = (((t7550)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a37367 = (t12899 << 6);
        a37368 = (t12900 >> 58);
        t12901 = (((a37367)|(a37368)));
        t12902 = (t12900 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t12903 = (t7543 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a37369 = (t7543 << 6);
        a37370 = (t7544 >> 58);
        t12904 = (((a37369)|(a37370)));
        t12905 = (t7544 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t12906 = (t7545 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t12907 = (((t12905)|(t12906)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12908 = (((t12902)|(t12903)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a37371 = (t7545 << 6);
        a37372 = (t7546 >> 58);
        t12909 = (((a37371)|(a37372)));
        t12910 = (t7546 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t12911 = (((t12910)|(t12893)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a21881 = mu[2];
        a21882 = mu[3];
        a21883 = mu[4];
        a21884 = mu[5];
        a21885 = mu[6];
        a21886 = mu[7];
        MPMulQDD_L3_1(t7581, t7582, t7583, t7584, t7575, t7576, t7579, t7580, 
    t7571, t7572, t7573, t7574, t7567, t7568, t7569, t7570, 
    t12901, t12908, t12904, t12907, t12909, t12911, t12894, t12897, 
    0, 0, a21881, a21882, a21883, a21884, a21885, a21886);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12912 = (t7571 >> 1);
        a37373 = (t7571 << 63);
        a37374 = (t7572 >> 1);
        t12913 = (((a37373)|(a37374)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t12914 = (0 - b1775);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2242 = (2 - b1775);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t12917 = (((t7582)&(d2242)));
        /* MPBinAndD 64 */
        t12918 = (((t7583)&(t12914)));
        t12919 = (((t7584)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12920 = (t12917 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12921 = (t12918 >> 1);
        a37376 = (t12918 << 63);
        a37377 = (t12919 >> 1);
        t12922 = (((a37376)|(a37377)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12923 = (((t12920)|(t12921)));
        /* Begin of MPShiftLeft1D */
        t12924 = (t12919 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t12925 = (t7575 >> 1);
        a37378 = (t7575 << 63);
        a37379 = (t7576 >> 1);
        t12926 = (((a37378)|(a37379)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12927 = (((t12924)|(t12925)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t12928 = (t7576 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t12929 = (t7579 >> 1);
        a37380 = (t7579 << 63);
        a37381 = (t7580 >> 1);
        t12930 = (((a37380)|(a37381)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t12931 = (((t12928)|(t12929)));
        /* Begin of MPShiftLeft1D */
        t12932 = (t7580 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t12933 = (((t12932)|(t12912)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a21986 = modulus[2];
        a21987 = modulus[3];
        a21988 = modulus[4];
        a21989 = modulus[5];
        a21990 = modulus[6];
        a21991 = modulus[7];
        MPMulQDD_L3_1(t7563, t7564, t7565, t7566, t7559, t7560, t7561, t7562, 
    t7555, t7556, t7557, t7558, t7551, t7552, t7553, t7554, 
    t12923, t12922, t12927, t12926, t12931, t12930, t12933, t12913, 
    0, 0, a21986, a21987, a21988, a21989, a21990, a21991);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2243 = (t7538 - t7554);
        b1777 = ((t7538 < t7554));
        d2244 = (t7537 - t7553);
        d2245 = (d2244 - b1777);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37383 = ((t7537 < t7553));
        a37384 = ((t7537 == t7553));
        a37385 = ((a37384) && (b1777));
        b1778 = ((a37383) || (a37385));
        /* Begin of MPSubDDD 64 */
        d2246 = (t7536 - t7552);
        b1779 = ((t7536 < t7552));
        d2247 = (t7535 - t7551);
        d2248 = (d2247 - b1779);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2249 = (d2246 - b1778);
        b1780 = ((d2246 < b1778));
        t12934 = (d2248 - b1780);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37389 = ((t7535 < t7551));
        a37390 = ((t7535 == t7551));
        a37391 = ((a37390) && (b1779));
        a37392 = ((a37389) || (a37391));
        /* MPEqual 64 */
        a37393 = ((t7536 == t7552));
        a37394 = ((a37390) && (a37393));
        /* MPLessThan 64 */
        a37395 = ((a37394) && (b1778));
        b1781 = ((a37392) || (a37395));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2250 = (t7542 - t7558);
        b1782 = ((t7542 < t7558));
        d2251 = (t7541 - t7557);
        d2252 = (d2251 - b1782);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37398 = ((t7541 < t7557));
        a37399 = ((t7541 == t7557));
        a37400 = ((a37399) && (b1782));
        b1783 = ((a37398) || (a37400));
        /* Begin of MPSubDDD 64 */
        d2253 = (t7540 - t7556);
        b1784 = ((t7540 < t7556));
        d2254 = (t7539 - t7555);
        d2255 = (d2254 - b1784);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2256 = (d2253 - b1783);
        b1785 = ((d2253 < b1783));
        t12935 = (d2255 - b1785);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2257 = (d2250 - b1781);
        b1786 = ((d2250 < b1781));
        t12936 = (d2252 - b1786);
        /* MPLessThanDI 64 */
        a37405 = ((d2252 == 0));
        b1787 = ((a37405) && (b1786));
        /* MPSubDDI 64 */
        d2258 = (d2256 - b1787);
        b1788 = ((d2256 < b1787));
        t12937 = (t12935 - b1788);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2259 = (d2243 - a21991);
        b1789 = ((d2243 < a21991));
        d2260 = (d2245 - a21990);
        d2261 = (d2260 - b1789);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37409 = ((d2245 < a21990));
        a37410 = ((d2245 == a21990));
        a37411 = ((a37410) && (b1789));
        b1790 = ((a37409) || (a37411));
        /* Begin of MPSubDDD 64 */
        d2262 = (d2249 - a21989);
        b1791 = ((d2249 < a21989));
        d2263 = (t12934 - a21988);
        d2264 = (d2263 - b1791);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2265 = (d2262 - b1790);
        b1792 = ((d2262 < b1790));
        t12938 = (d2264 - b1792);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37415 = ((t12934 < a21988));
        a37416 = ((t12934 == a21988));
        a37417 = ((a37416) && (b1791));
        a37418 = ((a37415) || (a37417));
        /* MPEqual 64 */
        a37419 = ((d2249 == a21989));
        a37420 = ((a37416) && (a37419));
        /* MPLessThan 64 */
        a37421 = ((a37420) && (b1790));
        b1793 = ((a37418) || (a37421));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2266 = (d2257 - a21987);
        b1794 = ((d2257 < a21987));
        d2267 = (t12936 - a21986);
        d2268 = (d2267 - b1794);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37424 = ((t12936 < a21986));
        a37425 = ((t12936 == a21986));
        a37426 = ((a37425) && (b1794));
        b1795 = ((a37424) || (a37426));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2269 = (d2258 - b1795);
        b1796 = ((d2258 < b1795));
        t12939 = (t12937 - b1796);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2270 = (d2266 - b1793);
        b1797 = ((d2266 < b1793));
        t12940 = (d2268 - b1797);
        /* MPLessThanDI 64 */
        a37430 = ((d2268 == 0));
        b1798 = ((a37430) && (b1797));
        /* MPSubDDI 64 */
        d2271 = (d2269 - b1798);
        b1799 = ((d2269 < b1798));
        t12941 = (t12939 - b1799);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a37433 = ((t12937 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a37434 = ((d2258 == 0));
        a37435 = ((a37433) && (a37434));
        /* MPLessThan 64 */
        a37436 = ((a37435) && (b1795));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37437 = ((d2257 == a21987));
        a37438 = ((a37425) && (a37437));
        a37439 = ((a37435) && (a37438));
        /* MPLessThan 128 */
        a37440 = ((a37439) && (b1793));
        i663 = ((a37436) || (a37440));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12942 = ((i663) ? (t12937) : (t12941));
        t12943 = ((i663) ? (d2258) : (d2271));
        /* MPCondD 64 */
        t12944 = ((i663) ? (t12936) : (t12940));
        t12945 = ((i663) ? (d2257) : (d2270));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t12946 = ((i663) ? (t12934) : (t12938));
        t12947 = ((i663) ? (d2249) : (d2265));
        /* MPCondD 64 */
        t12948 = ((i663) ? (d2245) : (d2261));
        t12949 = ((i663) ? (d2243) : (d2259));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a37441 = (256*i31);
        a37442 = (2*threadIdx.x);
        a37443 = (a37441 + a37442);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a37444 = (2*a37337);
        a37445 = (a37444 + 1);
        /* MPAssignDD 128 */
        a37446 = (2*a37445);
        /* MPAssignDD 64 */
        a37447 = (2*a37446);
        t12950 = P1[a37447];
        a37448 = (a37447 + 1);
        t12951 = P1[a37448];
        a37449 = (a37446 + 1);
        /* MPAssignDD 64 */
        a37450 = (2*a37449);
        t12952 = P1[a37450];
        a37451 = (a37450 + 1);
        t12953 = P1[a37451];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2253 = (((uint128_t ) t12953) + ((uint128_t ) t12949));
        t12954 = ((uint64_t ) s2253);
        c1188 = (s2253 >> 64);
        s2254 = (((uint128_t ) t12952) + ((uint128_t ) t12948));
        s2255 = (((uint128_t ) s2254) + ((uint128_t ) c1188));
        t12955 = ((uint64_t ) s2255);
        c1189 = (s2255 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2256 = (((uint128_t ) t12951) + ((uint128_t ) t12947));
        t12956 = ((uint64_t ) s2256);
        c1190 = (s2256 >> 64);
        s2257 = (((uint128_t ) t12950) + ((uint128_t ) t12946));
        s2258 = (((uint128_t ) s2257) + ((uint128_t ) c1190));
        t12957 = ((uint64_t ) s2258);
        c1191 = (s2258 >> 64);
        /* MPPropagateCarry 64 */
        t12958 = (t12956 + c1189);
        a37452 = ((t12958 == 0));
        a37453 = (t12957 + c1189);
        t12959 = ((a37452) ? (a37453) : (t12957));
        a37454 = ((t12959 == 0));
        a37455 = ((a37454) && (a37452));
        a37456 = (c1191 + c1189);
        t12960 = ((a37455) ? (a37456) : (c1191));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37460 = (2*a37444);
        a37461 = (a37460 + 1);
        /* MPAssignDD 64 */
        a37462 = (2*a37461);
        t12962 = P1[a37462];
        a37463 = (a37462 + 1);
        t12963 = P1[a37463];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2259 = (((uint128_t ) t12963) + ((uint128_t ) t12945));
        t12964 = ((uint64_t ) s2259);
        c1192 = (s2259 >> 64);
        s2260 = (((uint128_t ) t12962) + ((uint128_t ) t12944));
        s2261 = (((uint128_t ) s2260) + ((uint128_t ) c1192));
        t12965 = ((uint64_t ) s2261);
        c1193 = (s2261 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t12966 = ((uint64_t ) t12943);
        c1194 = (t12943 >> 64);
        s2262 = (((uint128_t ) t12942) + ((uint128_t ) c1194));
        t12967 = ((uint64_t ) s2262);
        /* MPPropagateCarry 64 */
        t12968 = (t12966 + c1193);
        a37464 = ((t12968 == 0));
        a37465 = (t12967 + c1193);
        t12969 = ((a37464) ? (a37465) : (t12967));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2263 = (((uint128_t ) t12964) + ((uint128_t ) t12960));
        t12972 = ((uint64_t ) s2263);
        c1196 = (s2263 >> 64);
        s2264 = (((uint128_t ) t12965) + ((uint128_t ) c1196));
        t12973 = ((uint64_t ) s2264);
        /* MPEqualDI 64 */
        a37472 = ((t12973 == 0));
        a37473 = ((t12972 == 0));
        a37474 = ((a37472) && (a37473));
        /* MPAddDDI 64 */
        s2265 = (((uint128_t ) t12968) + ((uint128_t ) t12960));
        t12974 = ((uint64_t ) s2265);
        c1197 = (s2265 >> 64);
        s2266 = (((uint128_t ) t12969) + ((uint128_t ) c1197));
        t12975 = ((uint64_t ) s2266);
        /* MPCondD 64 */
        t12976 = ((a37474) ? (t12975) : (t12969));
        t12977 = ((a37474) ? (t12974) : (t12968));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a37475 = ((0 < t12976));
        a37476 = ((0 == t12976));
        a37477 = ((0 < t12977));
        a37478 = ((a37476) && (a37477));
        a37479 = ((a37475) || (a37478));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a37480 = ((0 == t12977));
        a37481 = ((a37476) && (a37480));
        /* MPLessThan 64 */
        a37482 = ((a21986 < t12973));
        a37483 = ((a21986 == t12973));
        a37484 = ((a21987 < t12972));
        a37485 = ((a37483) && (a37484));
        a37486 = ((a37482) || (a37485));
        a37487 = ((a37481) && (a37486));
        a37488 = ((a37479) || (a37487));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37489 = ((a21987 == t12972));
        a37490 = ((a37483) && (a37489));
        a37491 = ((a37481) && (a37490));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37492 = ((a21988 < t12959));
        a37493 = ((a21988 == t12959));
        a37494 = ((a21989 < t12958));
        a37495 = ((a37493) && (a37494));
        a37496 = ((a37492) || (a37495));
        /* MPEqual 64 */
        a37497 = ((a21989 == t12958));
        a37498 = ((a37493) && (a37497));
        /* MPLessThan 64 */
        a37499 = ((a21990 < t12955));
        a37500 = ((a21990 == t12955));
        a37501 = ((a21991 < t12954));
        a37502 = ((a37500) && (a37501));
        a37503 = ((a37499) || (a37502));
        a37504 = ((a37498) && (a37503));
        a37505 = ((a37496) || (a37504));
        a37506 = ((a37491) && (a37505));
        i664 = ((a37488) || (a37506));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2272 = (t12954 - a21991);
        b1800 = ((t12954 < a21991));
        d2273 = (t12955 - a21990);
        d2274 = (d2273 - b1800);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37508 = ((t12955 < a21990));
        a37509 = ((t12955 == a21990));
        a37510 = ((a37509) && (b1800));
        b1801 = ((a37508) || (a37510));
        /* Begin of MPSubDDD 64 */
        d2275 = (t12958 - a21989);
        b1802 = ((t12958 < a21989));
        d2276 = (t12959 - a21988);
        d2277 = (d2276 - b1802);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2278 = (d2275 - b1801);
        b1803 = ((d2275 < b1801));
        t12978 = (d2277 - b1803);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37514 = ((t12959 < a21988));
        a37515 = ((t12959 == a21988));
        a37516 = ((a37515) && (b1802));
        a37517 = ((a37514) || (a37516));
        /* MPEqual 64 */
        a37518 = ((t12958 == a21989));
        a37519 = ((a37515) && (a37518));
        /* MPLessThan 64 */
        a37520 = ((a37519) && (b1801));
        b1804 = ((a37517) || (a37520));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2279 = (t12972 - a21987);
        b1805 = ((t12972 < a21987));
        d2280 = (t12973 - a21986);
        d2281 = (d2280 - b1805);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2282 = (d2279 - b1804);
        b1806 = ((d2279 < b1804));
        t12979 = (d2281 - b1806);
        /* End of MPSubDDD 256 */
        a37524 = (2*a37443);
        /* MPCondD 128 */
        a37525 = (2*a37524);
        a37526 = (a37525 + 1);
        /* MPCondD 64 */
        a37527 = (2*a37526);
        P2[a37527] = ((i664) ? (t12979) : (t12973));
        a37528 = (a37527 + 1);
        P2[a37528] = ((i664) ? (d2282) : (t12972));
        a37529 = (a37524 + 1);
        /* MPCondD 128 */
        a37530 = (2*a37529);
        /* MPCondD 64 */
        a37531 = (2*a37530);
        P2[a37531] = ((i664) ? (t12978) : (t12959));
        a37532 = (a37531 + 1);
        P2[a37532] = ((i664) ? (d2278) : (t12958));
        a37533 = (a37530 + 1);
        /* MPCondD 64 */
        a37534 = (2*a37533);
        P2[a37534] = ((i664) ? (d2274) : (t12955));
        a37535 = (a37534 + 1);
        P2[a37535] = ((i664) ? (d2272) : (t12954));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1807 = (a37442 + a37441);
        a37536 = (b1807 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2283 = (t12953 - t12949);
        b1808 = ((t12953 < t12949));
        d2284 = (t12952 - t12948);
        d2285 = (d2284 - b1808);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37538 = ((t12952 < t12948));
        a37539 = ((t12952 == t12948));
        a37540 = ((a37539) && (b1808));
        b1809 = ((a37538) || (a37540));
        /* Begin of MPSubDDD 64 */
        d2286 = (t12951 - t12947);
        b1810 = ((t12951 < t12947));
        d2287 = (t12950 - t12946);
        d2288 = (d2287 - b1810);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2289 = (d2286 - b1809);
        b1811 = ((d2286 < b1809));
        t12980 = (d2288 - b1811);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37544 = ((t12950 < t12946));
        a37545 = ((t12950 == t12946));
        a37546 = ((a37545) && (b1810));
        a37547 = ((a37544) || (a37546));
        /* MPEqual 64 */
        a37548 = ((t12951 == t12947));
        a37549 = ((a37545) && (a37548));
        /* MPLessThan 64 */
        a37550 = ((a37549) && (b1809));
        b1812 = ((a37547) || (a37550));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2290 = (t12963 - t12945);
        b1813 = ((t12963 < t12945));
        d2291 = (t12962 - t12944);
        d2292 = (d2291 - b1813);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2293 = (d2290 - b1812);
        b1814 = ((d2290 < b1812));
        t12981 = (d2292 - b1814);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2267 = (((uint128_t ) d2283) + ((uint128_t ) a21991));
        t12982 = ((uint64_t ) s2267);
        c1198 = (s2267 >> 64);
        s2268 = (((uint128_t ) d2285) + ((uint128_t ) a21990));
        s2269 = (((uint128_t ) s2268) + ((uint128_t ) c1198));
        t12983 = ((uint64_t ) s2269);
        c1199 = (s2269 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2270 = (((uint128_t ) d2289) + ((uint128_t ) a21989));
        t12984 = ((uint64_t ) s2270);
        c1200 = (s2270 >> 64);
        s2271 = (((uint128_t ) t12980) + ((uint128_t ) a21988));
        s2272 = (((uint128_t ) s2271) + ((uint128_t ) c1200));
        t12985 = ((uint64_t ) s2272);
        c1201 = (s2272 >> 64);
        /* MPPropagateCarry 64 */
        t12986 = (t12984 + c1199);
        a37554 = ((t12986 == 0));
        a37555 = (t12985 + c1199);
        t12987 = ((a37554) ? (a37555) : (t12985));
        a37556 = ((t12987 == 0));
        a37557 = ((a37556) && (a37554));
        a37558 = (c1201 + c1199);
        t12988 = ((a37557) ? (a37558) : (c1201));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2273 = (((uint128_t ) d2293) + ((uint128_t ) a21987));
        t12990 = ((uint64_t ) s2273);
        c1202 = (s2273 >> 64);
        s2274 = (((uint128_t ) t12981) + ((uint128_t ) a21986));
        s2275 = (((uint128_t ) s2274) + ((uint128_t ) c1202));
        t12991 = ((uint64_t ) s2275);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2276 = (((uint128_t ) t12990) + ((uint128_t ) t12988));
        t12992 = ((uint64_t ) s2276);
        c1204 = (s2276 >> 64);
        s2277 = (((uint128_t ) t12991) + ((uint128_t ) c1204));
        t12993 = ((uint64_t ) s2277);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37562 = ((0 < t12942));
        a37563 = ((0 == t12942));
        a37564 = ((0 < t12943));
        a37565 = ((a37563) && (a37564));
        a37566 = ((a37562) || (a37565));
        /* MPEqual 64 */
        a37567 = ((0 == t12943));
        a37568 = ((a37563) && (a37567));
        /* MPLessThan 64 */
        a37569 = ((t12962 < t12944));
        a37570 = ((t12962 == t12944));
        a37571 = ((a37570) && (b1813));
        a37572 = ((a37569) || (a37571));
        a37573 = ((a37568) && (a37572));
        a37574 = ((a37566) || (a37573));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37575 = ((t12963 == t12945));
        a37576 = ((a37570) && (a37575));
        a37577 = ((a37568) && (a37576));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a37578 = ((a37577) && (b1812));
        i665 = ((a37574) || (a37578));
        a37579 = (2*a37536);
        /* MPCondD 128 */
        a37580 = (2*a37579);
        a37581 = (a37580 + 1);
        /* MPCondD 64 */
        a37582 = (2*a37581);
        P2[a37582] = ((i665) ? (t12993) : (t12981));
        a37583 = (a37582 + 1);
        P2[a37583] = ((i665) ? (t12992) : (d2293));
        a37584 = (a37579 + 1);
        /* MPCondD 128 */
        a37585 = (2*a37584);
        /* MPCondD 64 */
        a37586 = (2*a37585);
        P2[a37586] = ((i665) ? (t12987) : (t12980));
        a37587 = (a37586 + 1);
        P2[a37587] = ((i665) ? (t12986) : (d2289));
        a37588 = (a37585 + 1);
        /* MPCondD 64 */
        a37589 = (2*a37588);
        P2[a37589] = ((i665) ? (t12983) : (d2285));
        a37590 = (a37589 + 1);
        P2[a37590] = ((i665) ? (t12982) : (d2283));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code6(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a37591, a37592, a37593, a37594, a37595, a37596, a37597, a37598, 
            a37599, a37600, a37601, a37602, a37603, a37604, a37605, a37606, 
            a37607, a37608, a37609, a37610, a37611, a37612, a37613, a37614, 
            a37615, a37616, a37617, a37618, a37619, a37638, a37639, a37640, 
            a37644, a37645, a37646, a37647, a37648, a37649, a37650, a37653, 
            a37654, a37655, a37660, a37664, a37665, a37666, a37670, a37671, 
            a37672, a37673, a37674, a37675, a37676, a37679, a37680, a37681, 
            a37685, a37688, a37689, a37690, a37691, a37692, a37693, a37694, 
            a37695, a37696, a37697, a37698, a37699, a37700, a37701, a37702, 
            a37703, a37704, a37705, a37706, a37707, a37709, a37710, a37715, 
            a37716, a37717, a37718, a37719, a37727, a37728, a37729, a37730, 
            a37731, a37732, a37733, a37734, a37735, a37736, a37737, a37738, 
            a37739, a37740, a37741, a37742, a37743, a37744, a37745, a37746, 
            a37747, a37748, a37749, a37750, a37751, a37752, a37753, a37754, 
            a37755, a37756, a37757, a37758, a37759, a37760, a37761, a37763, 
            a37764, a37765, a37769, a37770, a37771, a37772, a37773, a37774, 
            a37775, a37779, a37780, a37781, a37782, a37783, a37784, a37785, 
            a37786, a37787, a37788, a37789, a37790, a37791, a37793, a37794, 
            a37795, a37799, a37800, a37801, a37802, a37803, a37804, a37805, 
            a37809, a37811, a37812, a37817, a37818, a37819, a37820, a37821, 
            a37822, a37823, a37824, a37825, a37826, a37827, a37828, a37829, 
            a37830, a37831, a37832, a37833, a37834, a37835, a37836, a37837, 
            a37838, a37839, a37840, a37841, a37842, a37843, a37844, a37845, 
            b1815, b1816, b1818, b1819, b1820, b1821, b1822, b1823, 
            b1824, b1825, b1826, b1827, b1828, b1829, b1830, b1831, 
            b1832, b1833, b1834, b1835, b1836, b1837, b1838, b1839, 
            b1840, b1841, b1842, b1843, b1844, b1845, b1846, b1847, 
            b1848, b1849, b1850, b1851, b1852, b1853, b1854, b1855, 
            c1205, c1206, c1207, c1208, c1209, c1210, c1211, c1213, 
            c1214, c1215, c1216, c1217, c1218, c1219, c1221, i666, 
            i667, i668;
    uint64_t a22792, a22793, a22794, a22795, a22796, a22797, a22897, a22898, 
            a22899, a22900, a22901, a22902, a37620, a37621, a37622, a37623, 
            a37624, a37625, a37626, a37627, a37628, a37629, a37631, a37632, 
            a37633, a37634, a37635, a37636, a37708, a37711, a37720, a37810, 
            a37813, d2294, d2295, d2296, d2297, d2298, d2299, d2300, 
            d2301, d2302, d2303, d2304, d2305, d2306, d2307, d2308, 
            d2309, d2310, d2311, d2312, d2313, d2314, d2315, d2316, 
            d2317, d2318, d2319, d2320, d2321, d2322, d2323, d2324, 
            d2325, d2326, d2327, d2328, d2329, d2330, d2331, d2332, 
            d2333, d2334, d2335, d2336, d2337, d2338, d2339, d2340, 
            d2341, d2342, d2343, d2344, d2345, t12994, t12995, t12996, 
            t12997, t12998, t12999, t13000, t13001, t13002, t13003, t13004, 
            t13005, t13006, t13007, t13008, t13009, t13010, t13011, t13012, 
            t13013, t13014, t13015, t13016, t13017, t13018, t13019, t13020, 
            t13021, t13022, t13023, t13024, t13025, t13026, t13027, t13030, 
            t13031, t13032, t13033, t13034, t13035, t13036, t13037, t13038, 
            t13039, t13040, t13041, t13042, t13043, t13044, t13045, t13046, 
            t13047, t13048, t13049, t13050, t13051, t13052, t13053, t13054, 
            t13055, t13056, t13057, t13058, t13059, t13060, t13061, t13062, 
            t13063, t13064, t13065, t13066, t13067, t13068, t13069, t13070, 
            t13071, t13072, t13073, t13075, t13076, t13077, t13078, t13079, 
            t13080, t13081, t13082, t13085, t13086, t13087, t13088, t13089, 
            t13090, t13091, t13092, t13093, t13094, t13095, t13096, t13097, 
            t13098, t13099, t13100, t13101, t13103, t13104, t13105, t13106, 
            t7603, t7604, t7605, t7606, t7607, t7608, t7609, t7610, 
            t7611, t7612, t7613, t7614, t7615, t7616, t7617, t7618, 
            t7619, t7620, t7621, t7622, t7623, t7624, t7625, t7626, 
            t7627, t7628, t7629, t7630, t7631, t7632, t7633, t7634, 
            t7635, t7636, t7637, t7638, t7639, t7640, t7641, t7642, 
            t7643, t7644, t7645, t7646, t7647, t7648, t7651, t7652;
    uint128_t s2278, s2279, s2280, s2281, s2282, s2283, s2284, s2285, 
            s2286, s2287, s2288, s2289, s2290, s2291, s2292, s2293, 
            s2294, s2295, s2296, s2297, s2298, s2299, s2300, s2301, 
            s2302;
    for(int i29 = 0; i29 <= 4095; i29++) {
        a37591 = (128*i29);
        a37592 = (a37591 + threadIdx.x);
        b1815 = (threadIdx.x + a37591);
        a37593 = (b1815 + 524288);
        a37594 = (a37593 % 64);
        a37595 = (64 + a37594);
        /* Begin of MPModMul 256 */
        a37596 = (2*a37595);
        a37597 = (a37596 + 1);
        a37598 = (2*a37593);
        a37599 = (a37598 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37600 = (2*a37596);
        a37601 = (a37600 + 1);
        /* MPAssignDD 64 */
        a37602 = (2*a37601);
        t12994 = twiddles[a37602];
        a37603 = (a37602 + 1);
        t12995 = twiddles[a37603];
        /* MPAssignDD 128 */
        a37604 = (2*a37597);
        /* MPAssignDD 64 */
        a37605 = (2*a37604);
        t12996 = twiddles[a37605];
        a37606 = (a37605 + 1);
        t12997 = twiddles[a37606];
        a37607 = (a37604 + 1);
        /* MPAssignDD 64 */
        a37608 = (2*a37607);
        t12998 = twiddles[a37608];
        a37609 = (a37608 + 1);
        t12999 = twiddles[a37609];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37610 = (2*a37598);
        a37611 = (a37610 + 1);
        /* MPAssignDD 64 */
        a37612 = (2*a37611);
        t13000 = P2[a37612];
        a37613 = (a37612 + 1);
        t13001 = P2[a37613];
        /* MPAssignDD 128 */
        a37614 = (2*a37599);
        /* MPAssignDD 64 */
        a37615 = (2*a37614);
        t13002 = P2[a37615];
        a37616 = (a37615 + 1);
        t13003 = P2[a37616];
        a37617 = (a37614 + 1);
        /* MPAssignDD 64 */
        a37618 = (2*a37617);
        t13004 = P2[a37618];
        a37619 = (a37618 + 1);
        t13005 = P2[a37619];
        MPMulQDD_L3_2(t7615, t7616, t7617, t7618, t7611, t7612, t7613, t7614, 
    t7607, t7608, t7609, t7610, t7603, t7604, t7605, t7606, 
    0, 0, t12994, t12995, t12996, t12997, t12998, t12999, 
    0, 0, t13000, t13001, t13002, t13003, t13004, t13005);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13006 = (t7607 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a37620 = (t7607 << 6);
        a37621 = (t7608 >> 58);
        t13007 = (((a37620)|(a37621)));
        t13008 = (t7608 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13009 = (t7609 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13010 = (((t13008)|(t13009)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1816 = ((int) 1);
        t13011 = (288230376151711744 - b1816);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13012 = (((t7617)&(t13011)));
        t13013 = (((t7618)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a37622 = (t13012 << 6);
        a37623 = (t13013 >> 58);
        t13014 = (((a37622)|(a37623)));
        t13015 = (t13013 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13016 = (t7611 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a37624 = (t7611 << 6);
        a37625 = (t7612 >> 58);
        t13017 = (((a37624)|(a37625)));
        t13018 = (t7612 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13019 = (t7613 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13020 = (((t13018)|(t13019)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13021 = (((t13015)|(t13016)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a37626 = (t7613 << 6);
        a37627 = (t7614 >> 58);
        t13022 = (((a37626)|(a37627)));
        t13023 = (t7614 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13024 = (((t13023)|(t13006)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a22792 = mu[2];
        a22793 = mu[3];
        a22794 = mu[4];
        a22795 = mu[5];
        a22796 = mu[6];
        a22797 = mu[7];
        MPMulQDD_L3_1(t7647, t7648, t7651, t7652, t7643, t7644, t7645, t7646, 
    t7639, t7640, t7641, t7642, t7635, t7636, t7637, t7638, 
    t13014, t13021, t13017, t13020, t13022, t13024, t13007, t13010, 
    0, 0, a22792, a22793, a22794, a22795, a22796, a22797);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13025 = (t7639 >> 1);
        a37628 = (t7639 << 63);
        a37629 = (t7640 >> 1);
        t13026 = (((a37628)|(a37629)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13027 = (0 - b1816);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2294 = (2 - b1816);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13030 = (((t7648)&(d2294)));
        /* MPBinAndD 64 */
        t13031 = (((t7651)&(t13027)));
        t13032 = (((t7652)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13033 = (t13030 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13034 = (t13031 >> 1);
        a37631 = (t13031 << 63);
        a37632 = (t13032 >> 1);
        t13035 = (((a37631)|(a37632)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13036 = (((t13033)|(t13034)));
        /* Begin of MPShiftLeft1D */
        t13037 = (t13032 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13038 = (t7643 >> 1);
        a37633 = (t7643 << 63);
        a37634 = (t7644 >> 1);
        t13039 = (((a37633)|(a37634)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13040 = (((t13037)|(t13038)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13041 = (t7644 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13042 = (t7645 >> 1);
        a37635 = (t7645 << 63);
        a37636 = (t7646 >> 1);
        t13043 = (((a37635)|(a37636)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13044 = (((t13041)|(t13042)));
        /* Begin of MPShiftLeft1D */
        t13045 = (t7646 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13046 = (((t13045)|(t13025)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a22897 = modulus[2];
        a22898 = modulus[3];
        a22899 = modulus[4];
        a22900 = modulus[5];
        a22901 = modulus[6];
        a22902 = modulus[7];
        MPMulQDD_L3_1(t7631, t7632, t7633, t7634, t7627, t7628, t7629, t7630, 
    t7623, t7624, t7625, t7626, t7619, t7620, t7621, t7622, 
    t13036, t13035, t13040, t13039, t13044, t13043, t13046, t13026, 
    0, 0, a22897, a22898, a22899, a22900, a22901, a22902);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2295 = (t7606 - t7622);
        b1818 = ((t7606 < t7622));
        d2296 = (t7605 - t7621);
        d2297 = (d2296 - b1818);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37638 = ((t7605 < t7621));
        a37639 = ((t7605 == t7621));
        a37640 = ((a37639) && (b1818));
        b1819 = ((a37638) || (a37640));
        /* Begin of MPSubDDD 64 */
        d2298 = (t7604 - t7620);
        b1820 = ((t7604 < t7620));
        d2299 = (t7603 - t7619);
        d2300 = (d2299 - b1820);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2301 = (d2298 - b1819);
        b1821 = ((d2298 < b1819));
        t13047 = (d2300 - b1821);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37644 = ((t7603 < t7619));
        a37645 = ((t7603 == t7619));
        a37646 = ((a37645) && (b1820));
        a37647 = ((a37644) || (a37646));
        /* MPEqual 64 */
        a37648 = ((t7604 == t7620));
        a37649 = ((a37645) && (a37648));
        /* MPLessThan 64 */
        a37650 = ((a37649) && (b1819));
        b1822 = ((a37647) || (a37650));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2302 = (t7610 - t7626);
        b1823 = ((t7610 < t7626));
        d2303 = (t7609 - t7625);
        d2304 = (d2303 - b1823);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37653 = ((t7609 < t7625));
        a37654 = ((t7609 == t7625));
        a37655 = ((a37654) && (b1823));
        b1824 = ((a37653) || (a37655));
        /* Begin of MPSubDDD 64 */
        d2305 = (t7608 - t7624);
        b1825 = ((t7608 < t7624));
        d2306 = (t7607 - t7623);
        d2307 = (d2306 - b1825);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2308 = (d2305 - b1824);
        b1826 = ((d2305 < b1824));
        t13048 = (d2307 - b1826);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2309 = (d2302 - b1822);
        b1827 = ((d2302 < b1822));
        t13049 = (d2304 - b1827);
        /* MPLessThanDI 64 */
        a37660 = ((d2304 == 0));
        b1828 = ((a37660) && (b1827));
        /* MPSubDDI 64 */
        d2310 = (d2308 - b1828);
        b1829 = ((d2308 < b1828));
        t13050 = (t13048 - b1829);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2311 = (d2295 - a22902);
        b1830 = ((d2295 < a22902));
        d2312 = (d2297 - a22901);
        d2313 = (d2312 - b1830);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37664 = ((d2297 < a22901));
        a37665 = ((d2297 == a22901));
        a37666 = ((a37665) && (b1830));
        b1831 = ((a37664) || (a37666));
        /* Begin of MPSubDDD 64 */
        d2314 = (d2301 - a22900);
        b1832 = ((d2301 < a22900));
        d2315 = (t13047 - a22899);
        d2316 = (d2315 - b1832);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2317 = (d2314 - b1831);
        b1833 = ((d2314 < b1831));
        t13051 = (d2316 - b1833);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37670 = ((t13047 < a22899));
        a37671 = ((t13047 == a22899));
        a37672 = ((a37671) && (b1832));
        a37673 = ((a37670) || (a37672));
        /* MPEqual 64 */
        a37674 = ((d2301 == a22900));
        a37675 = ((a37671) && (a37674));
        /* MPLessThan 64 */
        a37676 = ((a37675) && (b1831));
        b1834 = ((a37673) || (a37676));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2318 = (d2309 - a22898);
        b1835 = ((d2309 < a22898));
        d2319 = (t13049 - a22897);
        d2320 = (d2319 - b1835);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37679 = ((t13049 < a22897));
        a37680 = ((t13049 == a22897));
        a37681 = ((a37680) && (b1835));
        b1836 = ((a37679) || (a37681));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2321 = (d2310 - b1836);
        b1837 = ((d2310 < b1836));
        t13052 = (t13050 - b1837);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2322 = (d2318 - b1834);
        b1838 = ((d2318 < b1834));
        t13053 = (d2320 - b1838);
        /* MPLessThanDI 64 */
        a37685 = ((d2320 == 0));
        b1839 = ((a37685) && (b1838));
        /* MPSubDDI 64 */
        d2323 = (d2321 - b1839);
        b1840 = ((d2321 < b1839));
        t13054 = (t13052 - b1840);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a37688 = ((t13050 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a37689 = ((d2310 == 0));
        a37690 = ((a37688) && (a37689));
        /* MPLessThan 64 */
        a37691 = ((a37690) && (b1836));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37692 = ((d2309 == a22898));
        a37693 = ((a37680) && (a37692));
        a37694 = ((a37690) && (a37693));
        /* MPLessThan 128 */
        a37695 = ((a37694) && (b1834));
        i666 = ((a37691) || (a37695));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13055 = ((i666) ? (t13050) : (t13054));
        t13056 = ((i666) ? (d2310) : (d2323));
        /* MPCondD 64 */
        t13057 = ((i666) ? (t13049) : (t13053));
        t13058 = ((i666) ? (d2309) : (d2322));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13059 = ((i666) ? (t13047) : (t13051));
        t13060 = ((i666) ? (d2301) : (d2317));
        /* MPCondD 64 */
        t13061 = ((i666) ? (d2297) : (d2313));
        t13062 = ((i666) ? (d2295) : (d2311));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a37696 = (256*i29);
        a37697 = (2*threadIdx.x);
        a37698 = (a37696 + a37697);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a37699 = (2*a37592);
        a37700 = (a37699 + 1);
        /* MPAssignDD 128 */
        a37701 = (2*a37700);
        /* MPAssignDD 64 */
        a37702 = (2*a37701);
        t13063 = P2[a37702];
        a37703 = (a37702 + 1);
        t13064 = P2[a37703];
        a37704 = (a37701 + 1);
        /* MPAssignDD 64 */
        a37705 = (2*a37704);
        t13065 = P2[a37705];
        a37706 = (a37705 + 1);
        t13066 = P2[a37706];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2278 = (((uint128_t ) t13066) + ((uint128_t ) t13062));
        t13067 = ((uint64_t ) s2278);
        c1205 = (s2278 >> 64);
        s2279 = (((uint128_t ) t13065) + ((uint128_t ) t13061));
        s2280 = (((uint128_t ) s2279) + ((uint128_t ) c1205));
        t13068 = ((uint64_t ) s2280);
        c1206 = (s2280 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2281 = (((uint128_t ) t13064) + ((uint128_t ) t13060));
        t13069 = ((uint64_t ) s2281);
        c1207 = (s2281 >> 64);
        s2282 = (((uint128_t ) t13063) + ((uint128_t ) t13059));
        s2283 = (((uint128_t ) s2282) + ((uint128_t ) c1207));
        t13070 = ((uint64_t ) s2283);
        c1208 = (s2283 >> 64);
        /* MPPropagateCarry 64 */
        t13071 = (t13069 + c1206);
        a37707 = ((t13071 == 0));
        a37708 = (t13070 + c1206);
        t13072 = ((a37707) ? (a37708) : (t13070));
        a37709 = ((t13072 == 0));
        a37710 = ((a37709) && (a37707));
        a37711 = (c1208 + c1206);
        t13073 = ((a37710) ? (a37711) : (c1208));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37715 = (2*a37699);
        a37716 = (a37715 + 1);
        /* MPAssignDD 64 */
        a37717 = (2*a37716);
        t13075 = P2[a37717];
        a37718 = (a37717 + 1);
        t13076 = P2[a37718];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2284 = (((uint128_t ) t13076) + ((uint128_t ) t13058));
        t13077 = ((uint64_t ) s2284);
        c1209 = (s2284 >> 64);
        s2285 = (((uint128_t ) t13075) + ((uint128_t ) t13057));
        s2286 = (((uint128_t ) s2285) + ((uint128_t ) c1209));
        t13078 = ((uint64_t ) s2286);
        c1210 = (s2286 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13079 = ((uint64_t ) t13056);
        c1211 = (t13056 >> 64);
        s2287 = (((uint128_t ) t13055) + ((uint128_t ) c1211));
        t13080 = ((uint64_t ) s2287);
        /* MPPropagateCarry 64 */
        t13081 = (t13079 + c1210);
        a37719 = ((t13081 == 0));
        a37720 = (t13080 + c1210);
        t13082 = ((a37719) ? (a37720) : (t13080));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2288 = (((uint128_t ) t13077) + ((uint128_t ) t13073));
        t13085 = ((uint64_t ) s2288);
        c1213 = (s2288 >> 64);
        s2289 = (((uint128_t ) t13078) + ((uint128_t ) c1213));
        t13086 = ((uint64_t ) s2289);
        /* MPEqualDI 64 */
        a37727 = ((t13086 == 0));
        a37728 = ((t13085 == 0));
        a37729 = ((a37727) && (a37728));
        /* MPAddDDI 64 */
        s2290 = (((uint128_t ) t13081) + ((uint128_t ) t13073));
        t13087 = ((uint64_t ) s2290);
        c1214 = (s2290 >> 64);
        s2291 = (((uint128_t ) t13082) + ((uint128_t ) c1214));
        t13088 = ((uint64_t ) s2291);
        /* MPCondD 64 */
        t13089 = ((a37729) ? (t13088) : (t13082));
        t13090 = ((a37729) ? (t13087) : (t13081));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a37730 = ((0 < t13089));
        a37731 = ((0 == t13089));
        a37732 = ((0 < t13090));
        a37733 = ((a37731) && (a37732));
        a37734 = ((a37730) || (a37733));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a37735 = ((0 == t13090));
        a37736 = ((a37731) && (a37735));
        /* MPLessThan 64 */
        a37737 = ((a22897 < t13086));
        a37738 = ((a22897 == t13086));
        a37739 = ((a22898 < t13085));
        a37740 = ((a37738) && (a37739));
        a37741 = ((a37737) || (a37740));
        a37742 = ((a37736) && (a37741));
        a37743 = ((a37734) || (a37742));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37744 = ((a22898 == t13085));
        a37745 = ((a37738) && (a37744));
        a37746 = ((a37736) && (a37745));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37747 = ((a22899 < t13072));
        a37748 = ((a22899 == t13072));
        a37749 = ((a22900 < t13071));
        a37750 = ((a37748) && (a37749));
        a37751 = ((a37747) || (a37750));
        /* MPEqual 64 */
        a37752 = ((a22900 == t13071));
        a37753 = ((a37748) && (a37752));
        /* MPLessThan 64 */
        a37754 = ((a22901 < t13068));
        a37755 = ((a22901 == t13068));
        a37756 = ((a22902 < t13067));
        a37757 = ((a37755) && (a37756));
        a37758 = ((a37754) || (a37757));
        a37759 = ((a37753) && (a37758));
        a37760 = ((a37751) || (a37759));
        a37761 = ((a37746) && (a37760));
        i667 = ((a37743) || (a37761));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2324 = (t13067 - a22902);
        b1841 = ((t13067 < a22902));
        d2325 = (t13068 - a22901);
        d2326 = (d2325 - b1841);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37763 = ((t13068 < a22901));
        a37764 = ((t13068 == a22901));
        a37765 = ((a37764) && (b1841));
        b1842 = ((a37763) || (a37765));
        /* Begin of MPSubDDD 64 */
        d2327 = (t13071 - a22900);
        b1843 = ((t13071 < a22900));
        d2328 = (t13072 - a22899);
        d2329 = (d2328 - b1843);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2330 = (d2327 - b1842);
        b1844 = ((d2327 < b1842));
        t13091 = (d2329 - b1844);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37769 = ((t13072 < a22899));
        a37770 = ((t13072 == a22899));
        a37771 = ((a37770) && (b1843));
        a37772 = ((a37769) || (a37771));
        /* MPEqual 64 */
        a37773 = ((t13071 == a22900));
        a37774 = ((a37770) && (a37773));
        /* MPLessThan 64 */
        a37775 = ((a37774) && (b1842));
        b1845 = ((a37772) || (a37775));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2331 = (t13085 - a22898);
        b1846 = ((t13085 < a22898));
        d2332 = (t13086 - a22897);
        d2333 = (d2332 - b1846);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2334 = (d2331 - b1845);
        b1847 = ((d2331 < b1845));
        t13092 = (d2333 - b1847);
        /* End of MPSubDDD 256 */
        a37779 = (2*a37698);
        /* MPCondD 128 */
        a37780 = (2*a37779);
        a37781 = (a37780 + 1);
        /* MPCondD 64 */
        a37782 = (2*a37781);
        P1[a37782] = ((i667) ? (t13092) : (t13086));
        a37783 = (a37782 + 1);
        P1[a37783] = ((i667) ? (d2334) : (t13085));
        a37784 = (a37779 + 1);
        /* MPCondD 128 */
        a37785 = (2*a37784);
        /* MPCondD 64 */
        a37786 = (2*a37785);
        P1[a37786] = ((i667) ? (t13091) : (t13072));
        a37787 = (a37786 + 1);
        P1[a37787] = ((i667) ? (d2330) : (t13071));
        a37788 = (a37785 + 1);
        /* MPCondD 64 */
        a37789 = (2*a37788);
        P1[a37789] = ((i667) ? (d2326) : (t13068));
        a37790 = (a37789 + 1);
        P1[a37790] = ((i667) ? (d2324) : (t13067));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1848 = (a37697 + a37696);
        a37791 = (b1848 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2335 = (t13066 - t13062);
        b1849 = ((t13066 < t13062));
        d2336 = (t13065 - t13061);
        d2337 = (d2336 - b1849);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37793 = ((t13065 < t13061));
        a37794 = ((t13065 == t13061));
        a37795 = ((a37794) && (b1849));
        b1850 = ((a37793) || (a37795));
        /* Begin of MPSubDDD 64 */
        d2338 = (t13064 - t13060);
        b1851 = ((t13064 < t13060));
        d2339 = (t13063 - t13059);
        d2340 = (d2339 - b1851);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2341 = (d2338 - b1850);
        b1852 = ((d2338 < b1850));
        t13093 = (d2340 - b1852);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37799 = ((t13063 < t13059));
        a37800 = ((t13063 == t13059));
        a37801 = ((a37800) && (b1851));
        a37802 = ((a37799) || (a37801));
        /* MPEqual 64 */
        a37803 = ((t13064 == t13060));
        a37804 = ((a37800) && (a37803));
        /* MPLessThan 64 */
        a37805 = ((a37804) && (b1850));
        b1853 = ((a37802) || (a37805));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2342 = (t13076 - t13058);
        b1854 = ((t13076 < t13058));
        d2343 = (t13075 - t13057);
        d2344 = (d2343 - b1854);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2345 = (d2342 - b1853);
        b1855 = ((d2342 < b1853));
        t13094 = (d2344 - b1855);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2292 = (((uint128_t ) d2335) + ((uint128_t ) a22902));
        t13095 = ((uint64_t ) s2292);
        c1215 = (s2292 >> 64);
        s2293 = (((uint128_t ) d2337) + ((uint128_t ) a22901));
        s2294 = (((uint128_t ) s2293) + ((uint128_t ) c1215));
        t13096 = ((uint64_t ) s2294);
        c1216 = (s2294 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2295 = (((uint128_t ) d2341) + ((uint128_t ) a22900));
        t13097 = ((uint64_t ) s2295);
        c1217 = (s2295 >> 64);
        s2296 = (((uint128_t ) t13093) + ((uint128_t ) a22899));
        s2297 = (((uint128_t ) s2296) + ((uint128_t ) c1217));
        t13098 = ((uint64_t ) s2297);
        c1218 = (s2297 >> 64);
        /* MPPropagateCarry 64 */
        t13099 = (t13097 + c1216);
        a37809 = ((t13099 == 0));
        a37810 = (t13098 + c1216);
        t13100 = ((a37809) ? (a37810) : (t13098));
        a37811 = ((t13100 == 0));
        a37812 = ((a37811) && (a37809));
        a37813 = (c1218 + c1216);
        t13101 = ((a37812) ? (a37813) : (c1218));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2298 = (((uint128_t ) d2345) + ((uint128_t ) a22898));
        t13103 = ((uint64_t ) s2298);
        c1219 = (s2298 >> 64);
        s2299 = (((uint128_t ) t13094) + ((uint128_t ) a22897));
        s2300 = (((uint128_t ) s2299) + ((uint128_t ) c1219));
        t13104 = ((uint64_t ) s2300);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2301 = (((uint128_t ) t13103) + ((uint128_t ) t13101));
        t13105 = ((uint64_t ) s2301);
        c1221 = (s2301 >> 64);
        s2302 = (((uint128_t ) t13104) + ((uint128_t ) c1221));
        t13106 = ((uint64_t ) s2302);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37817 = ((0 < t13055));
        a37818 = ((0 == t13055));
        a37819 = ((0 < t13056));
        a37820 = ((a37818) && (a37819));
        a37821 = ((a37817) || (a37820));
        /* MPEqual 64 */
        a37822 = ((0 == t13056));
        a37823 = ((a37818) && (a37822));
        /* MPLessThan 64 */
        a37824 = ((t13075 < t13057));
        a37825 = ((t13075 == t13057));
        a37826 = ((a37825) && (b1854));
        a37827 = ((a37824) || (a37826));
        a37828 = ((a37823) && (a37827));
        a37829 = ((a37821) || (a37828));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37830 = ((t13076 == t13058));
        a37831 = ((a37825) && (a37830));
        a37832 = ((a37823) && (a37831));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a37833 = ((a37832) && (b1853));
        i668 = ((a37829) || (a37833));
        a37834 = (2*a37791);
        /* MPCondD 128 */
        a37835 = (2*a37834);
        a37836 = (a37835 + 1);
        /* MPCondD 64 */
        a37837 = (2*a37836);
        P1[a37837] = ((i668) ? (t13106) : (t13094));
        a37838 = (a37837 + 1);
        P1[a37838] = ((i668) ? (t13105) : (d2345));
        a37839 = (a37834 + 1);
        /* MPCondD 128 */
        a37840 = (2*a37839);
        /* MPCondD 64 */
        a37841 = (2*a37840);
        P1[a37841] = ((i668) ? (t13100) : (t13093));
        a37842 = (a37841 + 1);
        P1[a37842] = ((i668) ? (t13099) : (d2341));
        a37843 = (a37840 + 1);
        /* MPCondD 64 */
        a37844 = (2*a37843);
        P1[a37844] = ((i668) ? (t13096) : (d2337));
        a37845 = (a37844 + 1);
        P1[a37845] = ((i668) ? (t13095) : (d2335));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code7(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a37846, a37847, a37848, a37849, a37850, a37851, a37852, a37853, 
            a37854, a37855, a37856, a37857, a37858, a37859, a37860, a37861, 
            a37862, a37863, a37864, a37865, a37866, a37867, a37868, a37869, 
            a37870, a37871, a37872, a37873, a37874, a37893, a37894, a37895, 
            a37899, a37900, a37901, a37902, a37903, a37904, a37905, a37908, 
            a37909, a37910, a37915, a37919, a37920, a37921, a37925, a37926, 
            a37927, a37928, a37929, a37930, a37931, a37934, a37935, a37936, 
            a37940, a37943, a37944, a37945, a37946, a37947, a37948, a37949, 
            a37950, a37951, a37952, a37953, a37954, a37955, a37956, a37957, 
            a37958, a37959, a37960, a37961, a37962, a37964, a37965, a37970, 
            a37971, a37972, a37973, a37974, a37982, a37983, a37984, a37985, 
            a37986, a37987, a37988, a37989, a37990, a37991, a37992, a37993, 
            a37994, a37995, a37996, a37997, a37998, a37999, a38000, a38001, 
            a38002, a38003, a38004, a38005, a38006, a38007, a38008, a38009, 
            a38010, a38011, a38012, a38013, a38014, a38015, a38016, a38018, 
            a38019, a38020, a38024, a38025, a38026, a38027, a38028, a38029, 
            a38030, a38034, a38035, a38036, a38037, a38038, a38039, a38040, 
            a38041, a38042, a38043, a38044, a38045, a38046, a38048, a38049, 
            a38050, a38054, a38055, a38056, a38057, a38058, a38059, a38060, 
            a38064, a38066, a38067, a38072, a38073, a38074, a38075, a38076, 
            a38077, a38078, a38079, a38080, a38081, a38082, a38083, a38084, 
            a38085, a38086, a38087, a38088, a38089, a38090, a38091, a38092, 
            a38093, a38094, a38095, a38096, a38097, a38098, a38099, a38100, 
            b1856, b1857, b1859, b1860, b1861, b1862, b1863, b1864, 
            b1865, b1866, b1867, b1868, b1869, b1870, b1871, b1872, 
            b1873, b1874, b1875, b1876, b1877, b1878, b1879, b1880, 
            b1881, b1882, b1883, b1884, b1885, b1886, b1887, b1888, 
            b1889, b1890, b1891, b1892, b1893, b1894, b1895, b1896, 
            c1222, c1223, c1224, c1225, c1226, c1227, c1228, c1230, 
            c1231, c1232, c1233, c1234, c1235, c1236, c1238, i669, 
            i670, i671;
    uint64_t a23703, a23704, a23705, a23706, a23707, a23708, a23808, a23809, 
            a23810, a23811, a23812, a23813, a37875, a37876, a37877, a37878, 
            a37879, a37880, a37881, a37882, a37883, a37884, a37886, a37887, 
            a37888, a37889, a37890, a37891, a37963, a37966, a37975, a38065, 
            a38068, d2346, d2347, d2348, d2349, d2350, d2351, d2352, 
            d2353, d2354, d2355, d2356, d2357, d2358, d2359, d2360, 
            d2361, d2362, d2363, d2364, d2365, d2366, d2367, d2368, 
            d2369, d2370, d2371, d2372, d2373, d2374, d2375, d2376, 
            d2377, d2378, d2379, d2380, d2381, d2382, d2383, d2384, 
            d2385, d2386, d2387, d2388, d2389, d2390, d2391, d2392, 
            d2393, d2394, d2395, d2396, d2397, t13107, t13108, t13109, 
            t13110, t13111, t13112, t13113, t13114, t13115, t13116, t13117, 
            t13118, t13119, t13120, t13121, t13122, t13123, t13124, t13125, 
            t13126, t13127, t13128, t13129, t13130, t13131, t13132, t13133, 
            t13134, t13135, t13136, t13137, t13138, t13139, t13140, t13143, 
            t13144, t13145, t13146, t13147, t13148, t13149, t13150, t13151, 
            t13152, t13153, t13154, t13155, t13156, t13157, t13158, t13159, 
            t13160, t13161, t13162, t13163, t13164, t13165, t13166, t13167, 
            t13168, t13169, t13170, t13171, t13172, t13173, t13174, t13175, 
            t13176, t13177, t13178, t13179, t13180, t13181, t13182, t13183, 
            t13184, t13185, t13186, t13188, t13189, t13190, t13191, t13192, 
            t13193, t13194, t13195, t13198, t13199, t13200, t13201, t13202, 
            t13203, t13204, t13205, t13206, t13207, t13208, t13209, t13210, 
            t13211, t13212, t13213, t13214, t13216, t13217, t13218, t13219, 
            t7671, t7672, t7673, t7674, t7675, t7676, t7677, t7678, 
            t7679, t7680, t7681, t7682, t7683, t7684, t7685, t7686, 
            t7687, t7688, t7689, t7690, t7691, t7692, t7693, t7694, 
            t7695, t7696, t7697, t7698, t7699, t7700, t7701, t7702, 
            t7703, t7704, t7707, t7708, t7709, t7710, t7711, t7712, 
            t7713, t7714, t7715, t7716, t7717, t7718, t7719, t7720;
    uint128_t s2303, s2304, s2305, s2306, s2307, s2308, s2309, s2310, 
            s2311, s2312, s2313, s2314, s2315, s2316, s2317, s2318, 
            s2319, s2320, s2321, s2322, s2323, s2324, s2325, s2326, 
            s2327;
    for(int i27 = 0; i27 <= 4095; i27++) {
        a37846 = (128*i27);
        a37847 = (a37846 + threadIdx.x);
        b1856 = (threadIdx.x + a37846);
        a37848 = (b1856 + 524288);
        a37849 = (a37848 % 128);
        a37850 = (128 + a37849);
        /* Begin of MPModMul 256 */
        a37851 = (2*a37850);
        a37852 = (a37851 + 1);
        a37853 = (2*a37848);
        a37854 = (a37853 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37855 = (2*a37851);
        a37856 = (a37855 + 1);
        /* MPAssignDD 64 */
        a37857 = (2*a37856);
        t13107 = twiddles[a37857];
        a37858 = (a37857 + 1);
        t13108 = twiddles[a37858];
        /* MPAssignDD 128 */
        a37859 = (2*a37852);
        /* MPAssignDD 64 */
        a37860 = (2*a37859);
        t13109 = twiddles[a37860];
        a37861 = (a37860 + 1);
        t13110 = twiddles[a37861];
        a37862 = (a37859 + 1);
        /* MPAssignDD 64 */
        a37863 = (2*a37862);
        t13111 = twiddles[a37863];
        a37864 = (a37863 + 1);
        t13112 = twiddles[a37864];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37865 = (2*a37853);
        a37866 = (a37865 + 1);
        /* MPAssignDD 64 */
        a37867 = (2*a37866);
        t13113 = P1[a37867];
        a37868 = (a37867 + 1);
        t13114 = P1[a37868];
        /* MPAssignDD 128 */
        a37869 = (2*a37854);
        /* MPAssignDD 64 */
        a37870 = (2*a37869);
        t13115 = P1[a37870];
        a37871 = (a37870 + 1);
        t13116 = P1[a37871];
        a37872 = (a37869 + 1);
        /* MPAssignDD 64 */
        a37873 = (2*a37872);
        t13117 = P1[a37873];
        a37874 = (a37873 + 1);
        t13118 = P1[a37874];
        MPMulQDD_L3_2(t7683, t7684, t7685, t7686, t7679, t7680, t7681, t7682, 
    t7675, t7676, t7677, t7678, t7671, t7672, t7673, t7674, 
    0, 0, t13107, t13108, t13109, t13110, t13111, t13112, 
    0, 0, t13113, t13114, t13115, t13116, t13117, t13118);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13119 = (t7675 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a37875 = (t7675 << 6);
        a37876 = (t7676 >> 58);
        t13120 = (((a37875)|(a37876)));
        t13121 = (t7676 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13122 = (t7677 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13123 = (((t13121)|(t13122)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1857 = ((int) 1);
        t13124 = (288230376151711744 - b1857);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13125 = (((t7685)&(t13124)));
        t13126 = (((t7686)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a37877 = (t13125 << 6);
        a37878 = (t13126 >> 58);
        t13127 = (((a37877)|(a37878)));
        t13128 = (t13126 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13129 = (t7679 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a37879 = (t7679 << 6);
        a37880 = (t7680 >> 58);
        t13130 = (((a37879)|(a37880)));
        t13131 = (t7680 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13132 = (t7681 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13133 = (((t13131)|(t13132)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13134 = (((t13128)|(t13129)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a37881 = (t7681 << 6);
        a37882 = (t7682 >> 58);
        t13135 = (((a37881)|(a37882)));
        t13136 = (t7682 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13137 = (((t13136)|(t13119)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a23703 = mu[2];
        a23704 = mu[3];
        a23705 = mu[4];
        a23706 = mu[5];
        a23707 = mu[6];
        a23708 = mu[7];
        MPMulQDD_L3_1(t7717, t7718, t7719, t7720, t7713, t7714, t7715, t7716, 
    t7709, t7710, t7711, t7712, t7703, t7704, t7707, t7708, 
    t13127, t13134, t13130, t13133, t13135, t13137, t13120, t13123, 
    0, 0, a23703, a23704, a23705, a23706, a23707, a23708);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13138 = (t7709 >> 1);
        a37883 = (t7709 << 63);
        a37884 = (t7710 >> 1);
        t13139 = (((a37883)|(a37884)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13140 = (0 - b1857);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2346 = (2 - b1857);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13143 = (((t7718)&(d2346)));
        /* MPBinAndD 64 */
        t13144 = (((t7719)&(t13140)));
        t13145 = (((t7720)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13146 = (t13143 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13147 = (t13144 >> 1);
        a37886 = (t13144 << 63);
        a37887 = (t13145 >> 1);
        t13148 = (((a37886)|(a37887)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13149 = (((t13146)|(t13147)));
        /* Begin of MPShiftLeft1D */
        t13150 = (t13145 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13151 = (t7713 >> 1);
        a37888 = (t7713 << 63);
        a37889 = (t7714 >> 1);
        t13152 = (((a37888)|(a37889)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13153 = (((t13150)|(t13151)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13154 = (t7714 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13155 = (t7715 >> 1);
        a37890 = (t7715 << 63);
        a37891 = (t7716 >> 1);
        t13156 = (((a37890)|(a37891)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13157 = (((t13154)|(t13155)));
        /* Begin of MPShiftLeft1D */
        t13158 = (t7716 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13159 = (((t13158)|(t13138)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a23808 = modulus[2];
        a23809 = modulus[3];
        a23810 = modulus[4];
        a23811 = modulus[5];
        a23812 = modulus[6];
        a23813 = modulus[7];
        MPMulQDD_L3_1(t7699, t7700, t7701, t7702, t7695, t7696, t7697, t7698, 
    t7691, t7692, t7693, t7694, t7687, t7688, t7689, t7690, 
    t13149, t13148, t13153, t13152, t13157, t13156, t13159, t13139, 
    0, 0, a23808, a23809, a23810, a23811, a23812, a23813);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2347 = (t7674 - t7690);
        b1859 = ((t7674 < t7690));
        d2348 = (t7673 - t7689);
        d2349 = (d2348 - b1859);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37893 = ((t7673 < t7689));
        a37894 = ((t7673 == t7689));
        a37895 = ((a37894) && (b1859));
        b1860 = ((a37893) || (a37895));
        /* Begin of MPSubDDD 64 */
        d2350 = (t7672 - t7688);
        b1861 = ((t7672 < t7688));
        d2351 = (t7671 - t7687);
        d2352 = (d2351 - b1861);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2353 = (d2350 - b1860);
        b1862 = ((d2350 < b1860));
        t13160 = (d2352 - b1862);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37899 = ((t7671 < t7687));
        a37900 = ((t7671 == t7687));
        a37901 = ((a37900) && (b1861));
        a37902 = ((a37899) || (a37901));
        /* MPEqual 64 */
        a37903 = ((t7672 == t7688));
        a37904 = ((a37900) && (a37903));
        /* MPLessThan 64 */
        a37905 = ((a37904) && (b1860));
        b1863 = ((a37902) || (a37905));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2354 = (t7678 - t7694);
        b1864 = ((t7678 < t7694));
        d2355 = (t7677 - t7693);
        d2356 = (d2355 - b1864);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37908 = ((t7677 < t7693));
        a37909 = ((t7677 == t7693));
        a37910 = ((a37909) && (b1864));
        b1865 = ((a37908) || (a37910));
        /* Begin of MPSubDDD 64 */
        d2357 = (t7676 - t7692);
        b1866 = ((t7676 < t7692));
        d2358 = (t7675 - t7691);
        d2359 = (d2358 - b1866);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2360 = (d2357 - b1865);
        b1867 = ((d2357 < b1865));
        t13161 = (d2359 - b1867);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2361 = (d2354 - b1863);
        b1868 = ((d2354 < b1863));
        t13162 = (d2356 - b1868);
        /* MPLessThanDI 64 */
        a37915 = ((d2356 == 0));
        b1869 = ((a37915) && (b1868));
        /* MPSubDDI 64 */
        d2362 = (d2360 - b1869);
        b1870 = ((d2360 < b1869));
        t13163 = (t13161 - b1870);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2363 = (d2347 - a23813);
        b1871 = ((d2347 < a23813));
        d2364 = (d2349 - a23812);
        d2365 = (d2364 - b1871);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37919 = ((d2349 < a23812));
        a37920 = ((d2349 == a23812));
        a37921 = ((a37920) && (b1871));
        b1872 = ((a37919) || (a37921));
        /* Begin of MPSubDDD 64 */
        d2366 = (d2353 - a23811);
        b1873 = ((d2353 < a23811));
        d2367 = (t13160 - a23810);
        d2368 = (d2367 - b1873);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2369 = (d2366 - b1872);
        b1874 = ((d2366 < b1872));
        t13164 = (d2368 - b1874);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a37925 = ((t13160 < a23810));
        a37926 = ((t13160 == a23810));
        a37927 = ((a37926) && (b1873));
        a37928 = ((a37925) || (a37927));
        /* MPEqual 64 */
        a37929 = ((d2353 == a23811));
        a37930 = ((a37926) && (a37929));
        /* MPLessThan 64 */
        a37931 = ((a37930) && (b1872));
        b1875 = ((a37928) || (a37931));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2370 = (d2361 - a23809);
        b1876 = ((d2361 < a23809));
        d2371 = (t13162 - a23808);
        d2372 = (d2371 - b1876);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a37934 = ((t13162 < a23808));
        a37935 = ((t13162 == a23808));
        a37936 = ((a37935) && (b1876));
        b1877 = ((a37934) || (a37936));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2373 = (d2362 - b1877);
        b1878 = ((d2362 < b1877));
        t13165 = (t13163 - b1878);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2374 = (d2370 - b1875);
        b1879 = ((d2370 < b1875));
        t13166 = (d2372 - b1879);
        /* MPLessThanDI 64 */
        a37940 = ((d2372 == 0));
        b1880 = ((a37940) && (b1879));
        /* MPSubDDI 64 */
        d2375 = (d2373 - b1880);
        b1881 = ((d2373 < b1880));
        t13167 = (t13165 - b1881);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a37943 = ((t13163 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a37944 = ((d2362 == 0));
        a37945 = ((a37943) && (a37944));
        /* MPLessThan 64 */
        a37946 = ((a37945) && (b1877));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37947 = ((d2361 == a23809));
        a37948 = ((a37935) && (a37947));
        a37949 = ((a37945) && (a37948));
        /* MPLessThan 128 */
        a37950 = ((a37949) && (b1875));
        i669 = ((a37946) || (a37950));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13168 = ((i669) ? (t13163) : (t13167));
        t13169 = ((i669) ? (d2362) : (d2375));
        /* MPCondD 64 */
        t13170 = ((i669) ? (t13162) : (t13166));
        t13171 = ((i669) ? (d2361) : (d2374));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13172 = ((i669) ? (t13160) : (t13164));
        t13173 = ((i669) ? (d2353) : (d2369));
        /* MPCondD 64 */
        t13174 = ((i669) ? (d2349) : (d2365));
        t13175 = ((i669) ? (d2347) : (d2363));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a37951 = (256*i27);
        a37952 = (2*threadIdx.x);
        a37953 = (a37951 + a37952);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a37954 = (2*a37847);
        a37955 = (a37954 + 1);
        /* MPAssignDD 128 */
        a37956 = (2*a37955);
        /* MPAssignDD 64 */
        a37957 = (2*a37956);
        t13176 = P1[a37957];
        a37958 = (a37957 + 1);
        t13177 = P1[a37958];
        a37959 = (a37956 + 1);
        /* MPAssignDD 64 */
        a37960 = (2*a37959);
        t13178 = P1[a37960];
        a37961 = (a37960 + 1);
        t13179 = P1[a37961];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2303 = (((uint128_t ) t13179) + ((uint128_t ) t13175));
        t13180 = ((uint64_t ) s2303);
        c1222 = (s2303 >> 64);
        s2304 = (((uint128_t ) t13178) + ((uint128_t ) t13174));
        s2305 = (((uint128_t ) s2304) + ((uint128_t ) c1222));
        t13181 = ((uint64_t ) s2305);
        c1223 = (s2305 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2306 = (((uint128_t ) t13177) + ((uint128_t ) t13173));
        t13182 = ((uint64_t ) s2306);
        c1224 = (s2306 >> 64);
        s2307 = (((uint128_t ) t13176) + ((uint128_t ) t13172));
        s2308 = (((uint128_t ) s2307) + ((uint128_t ) c1224));
        t13183 = ((uint64_t ) s2308);
        c1225 = (s2308 >> 64);
        /* MPPropagateCarry 64 */
        t13184 = (t13182 + c1223);
        a37962 = ((t13184 == 0));
        a37963 = (t13183 + c1223);
        t13185 = ((a37962) ? (a37963) : (t13183));
        a37964 = ((t13185 == 0));
        a37965 = ((a37964) && (a37962));
        a37966 = (c1225 + c1223);
        t13186 = ((a37965) ? (a37966) : (c1225));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a37970 = (2*a37954);
        a37971 = (a37970 + 1);
        /* MPAssignDD 64 */
        a37972 = (2*a37971);
        t13188 = P1[a37972];
        a37973 = (a37972 + 1);
        t13189 = P1[a37973];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2309 = (((uint128_t ) t13189) + ((uint128_t ) t13171));
        t13190 = ((uint64_t ) s2309);
        c1226 = (s2309 >> 64);
        s2310 = (((uint128_t ) t13188) + ((uint128_t ) t13170));
        s2311 = (((uint128_t ) s2310) + ((uint128_t ) c1226));
        t13191 = ((uint64_t ) s2311);
        c1227 = (s2311 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13192 = ((uint64_t ) t13169);
        c1228 = (t13169 >> 64);
        s2312 = (((uint128_t ) t13168) + ((uint128_t ) c1228));
        t13193 = ((uint64_t ) s2312);
        /* MPPropagateCarry 64 */
        t13194 = (t13192 + c1227);
        a37974 = ((t13194 == 0));
        a37975 = (t13193 + c1227);
        t13195 = ((a37974) ? (a37975) : (t13193));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2313 = (((uint128_t ) t13190) + ((uint128_t ) t13186));
        t13198 = ((uint64_t ) s2313);
        c1230 = (s2313 >> 64);
        s2314 = (((uint128_t ) t13191) + ((uint128_t ) c1230));
        t13199 = ((uint64_t ) s2314);
        /* MPEqualDI 64 */
        a37982 = ((t13199 == 0));
        a37983 = ((t13198 == 0));
        a37984 = ((a37982) && (a37983));
        /* MPAddDDI 64 */
        s2315 = (((uint128_t ) t13194) + ((uint128_t ) t13186));
        t13200 = ((uint64_t ) s2315);
        c1231 = (s2315 >> 64);
        s2316 = (((uint128_t ) t13195) + ((uint128_t ) c1231));
        t13201 = ((uint64_t ) s2316);
        /* MPCondD 64 */
        t13202 = ((a37984) ? (t13201) : (t13195));
        t13203 = ((a37984) ? (t13200) : (t13194));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a37985 = ((0 < t13202));
        a37986 = ((0 == t13202));
        a37987 = ((0 < t13203));
        a37988 = ((a37986) && (a37987));
        a37989 = ((a37985) || (a37988));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a37990 = ((0 == t13203));
        a37991 = ((a37986) && (a37990));
        /* MPLessThan 64 */
        a37992 = ((a23808 < t13199));
        a37993 = ((a23808 == t13199));
        a37994 = ((a23809 < t13198));
        a37995 = ((a37993) && (a37994));
        a37996 = ((a37992) || (a37995));
        a37997 = ((a37991) && (a37996));
        a37998 = ((a37989) || (a37997));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a37999 = ((a23809 == t13198));
        a38000 = ((a37993) && (a37999));
        a38001 = ((a37991) && (a38000));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38002 = ((a23810 < t13185));
        a38003 = ((a23810 == t13185));
        a38004 = ((a23811 < t13184));
        a38005 = ((a38003) && (a38004));
        a38006 = ((a38002) || (a38005));
        /* MPEqual 64 */
        a38007 = ((a23811 == t13184));
        a38008 = ((a38003) && (a38007));
        /* MPLessThan 64 */
        a38009 = ((a23812 < t13181));
        a38010 = ((a23812 == t13181));
        a38011 = ((a23813 < t13180));
        a38012 = ((a38010) && (a38011));
        a38013 = ((a38009) || (a38012));
        a38014 = ((a38008) && (a38013));
        a38015 = ((a38006) || (a38014));
        a38016 = ((a38001) && (a38015));
        i670 = ((a37998) || (a38016));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2376 = (t13180 - a23813);
        b1882 = ((t13180 < a23813));
        d2377 = (t13181 - a23812);
        d2378 = (d2377 - b1882);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38018 = ((t13181 < a23812));
        a38019 = ((t13181 == a23812));
        a38020 = ((a38019) && (b1882));
        b1883 = ((a38018) || (a38020));
        /* Begin of MPSubDDD 64 */
        d2379 = (t13184 - a23811);
        b1884 = ((t13184 < a23811));
        d2380 = (t13185 - a23810);
        d2381 = (d2380 - b1884);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2382 = (d2379 - b1883);
        b1885 = ((d2379 < b1883));
        t13204 = (d2381 - b1885);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38024 = ((t13185 < a23810));
        a38025 = ((t13185 == a23810));
        a38026 = ((a38025) && (b1884));
        a38027 = ((a38024) || (a38026));
        /* MPEqual 64 */
        a38028 = ((t13184 == a23811));
        a38029 = ((a38025) && (a38028));
        /* MPLessThan 64 */
        a38030 = ((a38029) && (b1883));
        b1886 = ((a38027) || (a38030));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2383 = (t13198 - a23809);
        b1887 = ((t13198 < a23809));
        d2384 = (t13199 - a23808);
        d2385 = (d2384 - b1887);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2386 = (d2383 - b1886);
        b1888 = ((d2383 < b1886));
        t13205 = (d2385 - b1888);
        /* End of MPSubDDD 256 */
        a38034 = (2*a37953);
        /* MPCondD 128 */
        a38035 = (2*a38034);
        a38036 = (a38035 + 1);
        /* MPCondD 64 */
        a38037 = (2*a38036);
        P2[a38037] = ((i670) ? (t13205) : (t13199));
        a38038 = (a38037 + 1);
        P2[a38038] = ((i670) ? (d2386) : (t13198));
        a38039 = (a38034 + 1);
        /* MPCondD 128 */
        a38040 = (2*a38039);
        /* MPCondD 64 */
        a38041 = (2*a38040);
        P2[a38041] = ((i670) ? (t13204) : (t13185));
        a38042 = (a38041 + 1);
        P2[a38042] = ((i670) ? (d2382) : (t13184));
        a38043 = (a38040 + 1);
        /* MPCondD 64 */
        a38044 = (2*a38043);
        P2[a38044] = ((i670) ? (d2378) : (t13181));
        a38045 = (a38044 + 1);
        P2[a38045] = ((i670) ? (d2376) : (t13180));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1889 = (a37952 + a37951);
        a38046 = (b1889 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2387 = (t13179 - t13175);
        b1890 = ((t13179 < t13175));
        d2388 = (t13178 - t13174);
        d2389 = (d2388 - b1890);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38048 = ((t13178 < t13174));
        a38049 = ((t13178 == t13174));
        a38050 = ((a38049) && (b1890));
        b1891 = ((a38048) || (a38050));
        /* Begin of MPSubDDD 64 */
        d2390 = (t13177 - t13173);
        b1892 = ((t13177 < t13173));
        d2391 = (t13176 - t13172);
        d2392 = (d2391 - b1892);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2393 = (d2390 - b1891);
        b1893 = ((d2390 < b1891));
        t13206 = (d2392 - b1893);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38054 = ((t13176 < t13172));
        a38055 = ((t13176 == t13172));
        a38056 = ((a38055) && (b1892));
        a38057 = ((a38054) || (a38056));
        /* MPEqual 64 */
        a38058 = ((t13177 == t13173));
        a38059 = ((a38055) && (a38058));
        /* MPLessThan 64 */
        a38060 = ((a38059) && (b1891));
        b1894 = ((a38057) || (a38060));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2394 = (t13189 - t13171);
        b1895 = ((t13189 < t13171));
        d2395 = (t13188 - t13170);
        d2396 = (d2395 - b1895);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2397 = (d2394 - b1894);
        b1896 = ((d2394 < b1894));
        t13207 = (d2396 - b1896);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2317 = (((uint128_t ) d2387) + ((uint128_t ) a23813));
        t13208 = ((uint64_t ) s2317);
        c1232 = (s2317 >> 64);
        s2318 = (((uint128_t ) d2389) + ((uint128_t ) a23812));
        s2319 = (((uint128_t ) s2318) + ((uint128_t ) c1232));
        t13209 = ((uint64_t ) s2319);
        c1233 = (s2319 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2320 = (((uint128_t ) d2393) + ((uint128_t ) a23811));
        t13210 = ((uint64_t ) s2320);
        c1234 = (s2320 >> 64);
        s2321 = (((uint128_t ) t13206) + ((uint128_t ) a23810));
        s2322 = (((uint128_t ) s2321) + ((uint128_t ) c1234));
        t13211 = ((uint64_t ) s2322);
        c1235 = (s2322 >> 64);
        /* MPPropagateCarry 64 */
        t13212 = (t13210 + c1233);
        a38064 = ((t13212 == 0));
        a38065 = (t13211 + c1233);
        t13213 = ((a38064) ? (a38065) : (t13211));
        a38066 = ((t13213 == 0));
        a38067 = ((a38066) && (a38064));
        a38068 = (c1235 + c1233);
        t13214 = ((a38067) ? (a38068) : (c1235));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2323 = (((uint128_t ) d2397) + ((uint128_t ) a23809));
        t13216 = ((uint64_t ) s2323);
        c1236 = (s2323 >> 64);
        s2324 = (((uint128_t ) t13207) + ((uint128_t ) a23808));
        s2325 = (((uint128_t ) s2324) + ((uint128_t ) c1236));
        t13217 = ((uint64_t ) s2325);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2326 = (((uint128_t ) t13216) + ((uint128_t ) t13214));
        t13218 = ((uint64_t ) s2326);
        c1238 = (s2326 >> 64);
        s2327 = (((uint128_t ) t13217) + ((uint128_t ) c1238));
        t13219 = ((uint64_t ) s2327);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38072 = ((0 < t13168));
        a38073 = ((0 == t13168));
        a38074 = ((0 < t13169));
        a38075 = ((a38073) && (a38074));
        a38076 = ((a38072) || (a38075));
        /* MPEqual 64 */
        a38077 = ((0 == t13169));
        a38078 = ((a38073) && (a38077));
        /* MPLessThan 64 */
        a38079 = ((t13188 < t13170));
        a38080 = ((t13188 == t13170));
        a38081 = ((a38080) && (b1895));
        a38082 = ((a38079) || (a38081));
        a38083 = ((a38078) && (a38082));
        a38084 = ((a38076) || (a38083));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38085 = ((t13189 == t13171));
        a38086 = ((a38080) && (a38085));
        a38087 = ((a38078) && (a38086));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a38088 = ((a38087) && (b1894));
        i671 = ((a38084) || (a38088));
        a38089 = (2*a38046);
        /* MPCondD 128 */
        a38090 = (2*a38089);
        a38091 = (a38090 + 1);
        /* MPCondD 64 */
        a38092 = (2*a38091);
        P2[a38092] = ((i671) ? (t13219) : (t13207));
        a38093 = (a38092 + 1);
        P2[a38093] = ((i671) ? (t13218) : (d2397));
        a38094 = (a38089 + 1);
        /* MPCondD 128 */
        a38095 = (2*a38094);
        /* MPCondD 64 */
        a38096 = (2*a38095);
        P2[a38096] = ((i671) ? (t13213) : (t13206));
        a38097 = (a38096 + 1);
        P2[a38097] = ((i671) ? (t13212) : (d2393));
        a38098 = (a38095 + 1);
        /* MPCondD 64 */
        a38099 = (2*a38098);
        P2[a38099] = ((i671) ? (t13209) : (d2389));
        a38100 = (a38099 + 1);
        P2[a38100] = ((i671) ? (t13208) : (d2387));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code8(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a38101, a38102, a38103, a38104, a38105, a38106, a38107, a38108, 
            a38109, a38110, a38111, a38112, a38113, a38114, a38115, a38116, 
            a38117, a38118, a38119, a38120, a38121, a38122, a38123, a38124, 
            a38125, a38126, a38127, a38128, a38129, a38148, a38149, a38150, 
            a38154, a38155, a38156, a38157, a38158, a38159, a38160, a38163, 
            a38164, a38165, a38170, a38174, a38175, a38176, a38180, a38181, 
            a38182, a38183, a38184, a38185, a38186, a38189, a38190, a38191, 
            a38195, a38198, a38199, a38200, a38201, a38202, a38203, a38204, 
            a38205, a38206, a38207, a38208, a38209, a38210, a38211, a38212, 
            a38213, a38214, a38215, a38216, a38217, a38219, a38220, a38225, 
            a38226, a38227, a38228, a38229, a38237, a38238, a38239, a38240, 
            a38241, a38242, a38243, a38244, a38245, a38246, a38247, a38248, 
            a38249, a38250, a38251, a38252, a38253, a38254, a38255, a38256, 
            a38257, a38258, a38259, a38260, a38261, a38262, a38263, a38264, 
            a38265, a38266, a38267, a38268, a38269, a38270, a38271, a38273, 
            a38274, a38275, a38279, a38280, a38281, a38282, a38283, a38284, 
            a38285, a38289, a38290, a38291, a38292, a38293, a38294, a38295, 
            a38296, a38297, a38298, a38299, a38300, a38301, a38303, a38304, 
            a38305, a38309, a38310, a38311, a38312, a38313, a38314, a38315, 
            a38319, a38321, a38322, a38327, a38328, a38329, a38330, a38331, 
            a38332, a38333, a38334, a38335, a38336, a38337, a38338, a38339, 
            a38340, a38341, a38342, a38343, a38344, a38345, a38346, a38347, 
            a38348, a38349, a38350, a38351, a38352, a38353, a38354, a38355, 
            b1897, b1898, b1900, b1901, b1902, b1903, b1904, b1905, 
            b1906, b1907, b1908, b1909, b1910, b1911, b1912, b1913, 
            b1914, b1915, b1916, b1917, b1918, b1919, b1920, b1921, 
            b1922, b1923, b1924, b1925, b1926, b1927, b1928, b1929, 
            b1930, b1931, b1932, b1933, b1934, b1935, b1936, b1937, 
            c1239, c1240, c1241, c1242, c1243, c1244, c1245, c1247, 
            c1248, c1249, c1250, c1251, c1252, c1253, c1255, i672, 
            i673, i674;
    uint64_t a24614, a24615, a24616, a24617, a24618, a24619, a24719, a24720, 
            a24721, a24722, a24723, a24724, a38130, a38131, a38132, a38133, 
            a38134, a38135, a38136, a38137, a38138, a38139, a38141, a38142, 
            a38143, a38144, a38145, a38146, a38218, a38221, a38230, a38320, 
            a38323, d2398, d2399, d2400, d2401, d2402, d2403, d2404, 
            d2405, d2406, d2407, d2408, d2409, d2410, d2411, d2412, 
            d2413, d2414, d2415, d2416, d2417, d2418, d2419, d2420, 
            d2421, d2422, d2423, d2424, d2425, d2426, d2427, d2428, 
            d2429, d2430, d2431, d2432, d2433, d2434, d2435, d2436, 
            d2437, d2438, d2439, d2440, d2441, d2442, d2443, d2444, 
            d2445, d2446, d2447, d2448, d2449, t13220, t13221, t13222, 
            t13223, t13224, t13225, t13226, t13227, t13228, t13229, t13230, 
            t13231, t13232, t13233, t13234, t13235, t13236, t13237, t13238, 
            t13239, t13240, t13241, t13242, t13243, t13244, t13245, t13246, 
            t13247, t13248, t13249, t13250, t13251, t13252, t13253, t13256, 
            t13257, t13258, t13259, t13260, t13261, t13262, t13263, t13264, 
            t13265, t13266, t13267, t13268, t13269, t13270, t13271, t13272, 
            t13273, t13274, t13275, t13276, t13277, t13278, t13279, t13280, 
            t13281, t13282, t13283, t13284, t13285, t13286, t13287, t13288, 
            t13289, t13290, t13291, t13292, t13293, t13294, t13295, t13296, 
            t13297, t13298, t13299, t13301, t13302, t13303, t13304, t13305, 
            t13306, t13307, t13308, t13311, t13312, t13313, t13314, t13315, 
            t13316, t13317, t13318, t13319, t13320, t13321, t13322, t13323, 
            t13324, t13325, t13326, t13327, t13329, t13330, t13331, t13332, 
            t7737, t7738, t7739, t7740, t7741, t7742, t7743, t7744, 
            t7745, t7746, t7747, t7748, t7749, t7750, t7751, t7752, 
            t7753, t7754, t7755, t7756, t7757, t7758, t7759, t7760, 
            t7761, t7762, t7763, t7764, t7765, t7766, t7767, t7768, 
            t7769, t7770, t7771, t7772, t7773, t7774, t7775, t7776, 
            t7777, t7778, t7779, t7780, t7781, t7782, t7783, t7784;
    uint128_t s2328, s2329, s2330, s2331, s2332, s2333, s2334, s2335, 
            s2336, s2337, s2338, s2339, s2340, s2341, s2342, s2343, 
            s2344, s2345, s2346, s2347, s2348, s2349, s2350, s2351, 
            s2352;
    for(int i25 = 0; i25 <= 4095; i25++) {
        a38101 = (128*i25);
        a38102 = (a38101 + threadIdx.x);
        b1897 = (threadIdx.x + a38101);
        a38103 = (b1897 + 524288);
        a38104 = (a38103 % 256);
        a38105 = (256 + a38104);
        /* Begin of MPModMul 256 */
        a38106 = (2*a38105);
        a38107 = (a38106 + 1);
        a38108 = (2*a38103);
        a38109 = (a38108 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38110 = (2*a38106);
        a38111 = (a38110 + 1);
        /* MPAssignDD 64 */
        a38112 = (2*a38111);
        t13220 = twiddles[a38112];
        a38113 = (a38112 + 1);
        t13221 = twiddles[a38113];
        /* MPAssignDD 128 */
        a38114 = (2*a38107);
        /* MPAssignDD 64 */
        a38115 = (2*a38114);
        t13222 = twiddles[a38115];
        a38116 = (a38115 + 1);
        t13223 = twiddles[a38116];
        a38117 = (a38114 + 1);
        /* MPAssignDD 64 */
        a38118 = (2*a38117);
        t13224 = twiddles[a38118];
        a38119 = (a38118 + 1);
        t13225 = twiddles[a38119];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38120 = (2*a38108);
        a38121 = (a38120 + 1);
        /* MPAssignDD 64 */
        a38122 = (2*a38121);
        t13226 = P2[a38122];
        a38123 = (a38122 + 1);
        t13227 = P2[a38123];
        /* MPAssignDD 128 */
        a38124 = (2*a38109);
        /* MPAssignDD 64 */
        a38125 = (2*a38124);
        t13228 = P2[a38125];
        a38126 = (a38125 + 1);
        t13229 = P2[a38126];
        a38127 = (a38124 + 1);
        /* MPAssignDD 64 */
        a38128 = (2*a38127);
        t13230 = P2[a38128];
        a38129 = (a38128 + 1);
        t13231 = P2[a38129];
        MPMulQDD_L3_2(t7749, t7750, t7751, t7752, t7745, t7746, t7747, t7748, 
    t7741, t7742, t7743, t7744, t7737, t7738, t7739, t7740, 
    0, 0, t13220, t13221, t13222, t13223, t13224, t13225, 
    0, 0, t13226, t13227, t13228, t13229, t13230, t13231);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13232 = (t7741 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a38130 = (t7741 << 6);
        a38131 = (t7742 >> 58);
        t13233 = (((a38130)|(a38131)));
        t13234 = (t7742 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13235 = (t7743 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13236 = (((t13234)|(t13235)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1898 = ((int) 1);
        t13237 = (288230376151711744 - b1898);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13238 = (((t7751)&(t13237)));
        t13239 = (((t7752)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a38132 = (t13238 << 6);
        a38133 = (t13239 >> 58);
        t13240 = (((a38132)|(a38133)));
        t13241 = (t13239 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13242 = (t7745 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a38134 = (t7745 << 6);
        a38135 = (t7746 >> 58);
        t13243 = (((a38134)|(a38135)));
        t13244 = (t7746 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13245 = (t7747 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13246 = (((t13244)|(t13245)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13247 = (((t13241)|(t13242)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a38136 = (t7747 << 6);
        a38137 = (t7748 >> 58);
        t13248 = (((a38136)|(a38137)));
        t13249 = (t7748 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13250 = (((t13249)|(t13232)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a24614 = mu[2];
        a24615 = mu[3];
        a24616 = mu[4];
        a24617 = mu[5];
        a24618 = mu[6];
        a24619 = mu[7];
        MPMulQDD_L3_1(t7781, t7782, t7783, t7784, t7777, t7778, t7779, t7780, 
    t7773, t7774, t7775, t7776, t7769, t7770, t7771, t7772, 
    t13240, t13247, t13243, t13246, t13248, t13250, t13233, t13236, 
    0, 0, a24614, a24615, a24616, a24617, a24618, a24619);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13251 = (t7773 >> 1);
        a38138 = (t7773 << 63);
        a38139 = (t7774 >> 1);
        t13252 = (((a38138)|(a38139)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13253 = (0 - b1898);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2398 = (2 - b1898);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13256 = (((t7782)&(d2398)));
        /* MPBinAndD 64 */
        t13257 = (((t7783)&(t13253)));
        t13258 = (((t7784)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13259 = (t13256 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13260 = (t13257 >> 1);
        a38141 = (t13257 << 63);
        a38142 = (t13258 >> 1);
        t13261 = (((a38141)|(a38142)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13262 = (((t13259)|(t13260)));
        /* Begin of MPShiftLeft1D */
        t13263 = (t13258 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13264 = (t7777 >> 1);
        a38143 = (t7777 << 63);
        a38144 = (t7778 >> 1);
        t13265 = (((a38143)|(a38144)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13266 = (((t13263)|(t13264)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13267 = (t7778 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13268 = (t7779 >> 1);
        a38145 = (t7779 << 63);
        a38146 = (t7780 >> 1);
        t13269 = (((a38145)|(a38146)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13270 = (((t13267)|(t13268)));
        /* Begin of MPShiftLeft1D */
        t13271 = (t7780 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13272 = (((t13271)|(t13251)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a24719 = modulus[2];
        a24720 = modulus[3];
        a24721 = modulus[4];
        a24722 = modulus[5];
        a24723 = modulus[6];
        a24724 = modulus[7];
        MPMulQDD_L3_1(t7765, t7766, t7767, t7768, t7761, t7762, t7763, t7764, 
    t7757, t7758, t7759, t7760, t7753, t7754, t7755, t7756, 
    t13262, t13261, t13266, t13265, t13270, t13269, t13272, t13252, 
    0, 0, a24719, a24720, a24721, a24722, a24723, a24724);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2399 = (t7740 - t7756);
        b1900 = ((t7740 < t7756));
        d2400 = (t7739 - t7755);
        d2401 = (d2400 - b1900);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38148 = ((t7739 < t7755));
        a38149 = ((t7739 == t7755));
        a38150 = ((a38149) && (b1900));
        b1901 = ((a38148) || (a38150));
        /* Begin of MPSubDDD 64 */
        d2402 = (t7738 - t7754);
        b1902 = ((t7738 < t7754));
        d2403 = (t7737 - t7753);
        d2404 = (d2403 - b1902);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2405 = (d2402 - b1901);
        b1903 = ((d2402 < b1901));
        t13273 = (d2404 - b1903);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38154 = ((t7737 < t7753));
        a38155 = ((t7737 == t7753));
        a38156 = ((a38155) && (b1902));
        a38157 = ((a38154) || (a38156));
        /* MPEqual 64 */
        a38158 = ((t7738 == t7754));
        a38159 = ((a38155) && (a38158));
        /* MPLessThan 64 */
        a38160 = ((a38159) && (b1901));
        b1904 = ((a38157) || (a38160));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2406 = (t7744 - t7760);
        b1905 = ((t7744 < t7760));
        d2407 = (t7743 - t7759);
        d2408 = (d2407 - b1905);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38163 = ((t7743 < t7759));
        a38164 = ((t7743 == t7759));
        a38165 = ((a38164) && (b1905));
        b1906 = ((a38163) || (a38165));
        /* Begin of MPSubDDD 64 */
        d2409 = (t7742 - t7758);
        b1907 = ((t7742 < t7758));
        d2410 = (t7741 - t7757);
        d2411 = (d2410 - b1907);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2412 = (d2409 - b1906);
        b1908 = ((d2409 < b1906));
        t13274 = (d2411 - b1908);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2413 = (d2406 - b1904);
        b1909 = ((d2406 < b1904));
        t13275 = (d2408 - b1909);
        /* MPLessThanDI 64 */
        a38170 = ((d2408 == 0));
        b1910 = ((a38170) && (b1909));
        /* MPSubDDI 64 */
        d2414 = (d2412 - b1910);
        b1911 = ((d2412 < b1910));
        t13276 = (t13274 - b1911);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2415 = (d2399 - a24724);
        b1912 = ((d2399 < a24724));
        d2416 = (d2401 - a24723);
        d2417 = (d2416 - b1912);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38174 = ((d2401 < a24723));
        a38175 = ((d2401 == a24723));
        a38176 = ((a38175) && (b1912));
        b1913 = ((a38174) || (a38176));
        /* Begin of MPSubDDD 64 */
        d2418 = (d2405 - a24722);
        b1914 = ((d2405 < a24722));
        d2419 = (t13273 - a24721);
        d2420 = (d2419 - b1914);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2421 = (d2418 - b1913);
        b1915 = ((d2418 < b1913));
        t13277 = (d2420 - b1915);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38180 = ((t13273 < a24721));
        a38181 = ((t13273 == a24721));
        a38182 = ((a38181) && (b1914));
        a38183 = ((a38180) || (a38182));
        /* MPEqual 64 */
        a38184 = ((d2405 == a24722));
        a38185 = ((a38181) && (a38184));
        /* MPLessThan 64 */
        a38186 = ((a38185) && (b1913));
        b1916 = ((a38183) || (a38186));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2422 = (d2413 - a24720);
        b1917 = ((d2413 < a24720));
        d2423 = (t13275 - a24719);
        d2424 = (d2423 - b1917);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38189 = ((t13275 < a24719));
        a38190 = ((t13275 == a24719));
        a38191 = ((a38190) && (b1917));
        b1918 = ((a38189) || (a38191));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2425 = (d2414 - b1918);
        b1919 = ((d2414 < b1918));
        t13278 = (t13276 - b1919);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2426 = (d2422 - b1916);
        b1920 = ((d2422 < b1916));
        t13279 = (d2424 - b1920);
        /* MPLessThanDI 64 */
        a38195 = ((d2424 == 0));
        b1921 = ((a38195) && (b1920));
        /* MPSubDDI 64 */
        d2427 = (d2425 - b1921);
        b1922 = ((d2425 < b1921));
        t13280 = (t13278 - b1922);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a38198 = ((t13276 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a38199 = ((d2414 == 0));
        a38200 = ((a38198) && (a38199));
        /* MPLessThan 64 */
        a38201 = ((a38200) && (b1918));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38202 = ((d2413 == a24720));
        a38203 = ((a38190) && (a38202));
        a38204 = ((a38200) && (a38203));
        /* MPLessThan 128 */
        a38205 = ((a38204) && (b1916));
        i672 = ((a38201) || (a38205));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13281 = ((i672) ? (t13276) : (t13280));
        t13282 = ((i672) ? (d2414) : (d2427));
        /* MPCondD 64 */
        t13283 = ((i672) ? (t13275) : (t13279));
        t13284 = ((i672) ? (d2413) : (d2426));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13285 = ((i672) ? (t13273) : (t13277));
        t13286 = ((i672) ? (d2405) : (d2421));
        /* MPCondD 64 */
        t13287 = ((i672) ? (d2401) : (d2417));
        t13288 = ((i672) ? (d2399) : (d2415));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a38206 = (256*i25);
        a38207 = (2*threadIdx.x);
        a38208 = (a38206 + a38207);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a38209 = (2*a38102);
        a38210 = (a38209 + 1);
        /* MPAssignDD 128 */
        a38211 = (2*a38210);
        /* MPAssignDD 64 */
        a38212 = (2*a38211);
        t13289 = P2[a38212];
        a38213 = (a38212 + 1);
        t13290 = P2[a38213];
        a38214 = (a38211 + 1);
        /* MPAssignDD 64 */
        a38215 = (2*a38214);
        t13291 = P2[a38215];
        a38216 = (a38215 + 1);
        t13292 = P2[a38216];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2328 = (((uint128_t ) t13292) + ((uint128_t ) t13288));
        t13293 = ((uint64_t ) s2328);
        c1239 = (s2328 >> 64);
        s2329 = (((uint128_t ) t13291) + ((uint128_t ) t13287));
        s2330 = (((uint128_t ) s2329) + ((uint128_t ) c1239));
        t13294 = ((uint64_t ) s2330);
        c1240 = (s2330 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2331 = (((uint128_t ) t13290) + ((uint128_t ) t13286));
        t13295 = ((uint64_t ) s2331);
        c1241 = (s2331 >> 64);
        s2332 = (((uint128_t ) t13289) + ((uint128_t ) t13285));
        s2333 = (((uint128_t ) s2332) + ((uint128_t ) c1241));
        t13296 = ((uint64_t ) s2333);
        c1242 = (s2333 >> 64);
        /* MPPropagateCarry 64 */
        t13297 = (t13295 + c1240);
        a38217 = ((t13297 == 0));
        a38218 = (t13296 + c1240);
        t13298 = ((a38217) ? (a38218) : (t13296));
        a38219 = ((t13298 == 0));
        a38220 = ((a38219) && (a38217));
        a38221 = (c1242 + c1240);
        t13299 = ((a38220) ? (a38221) : (c1242));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38225 = (2*a38209);
        a38226 = (a38225 + 1);
        /* MPAssignDD 64 */
        a38227 = (2*a38226);
        t13301 = P2[a38227];
        a38228 = (a38227 + 1);
        t13302 = P2[a38228];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2334 = (((uint128_t ) t13302) + ((uint128_t ) t13284));
        t13303 = ((uint64_t ) s2334);
        c1243 = (s2334 >> 64);
        s2335 = (((uint128_t ) t13301) + ((uint128_t ) t13283));
        s2336 = (((uint128_t ) s2335) + ((uint128_t ) c1243));
        t13304 = ((uint64_t ) s2336);
        c1244 = (s2336 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13305 = ((uint64_t ) t13282);
        c1245 = (t13282 >> 64);
        s2337 = (((uint128_t ) t13281) + ((uint128_t ) c1245));
        t13306 = ((uint64_t ) s2337);
        /* MPPropagateCarry 64 */
        t13307 = (t13305 + c1244);
        a38229 = ((t13307 == 0));
        a38230 = (t13306 + c1244);
        t13308 = ((a38229) ? (a38230) : (t13306));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2338 = (((uint128_t ) t13303) + ((uint128_t ) t13299));
        t13311 = ((uint64_t ) s2338);
        c1247 = (s2338 >> 64);
        s2339 = (((uint128_t ) t13304) + ((uint128_t ) c1247));
        t13312 = ((uint64_t ) s2339);
        /* MPEqualDI 64 */
        a38237 = ((t13312 == 0));
        a38238 = ((t13311 == 0));
        a38239 = ((a38237) && (a38238));
        /* MPAddDDI 64 */
        s2340 = (((uint128_t ) t13307) + ((uint128_t ) t13299));
        t13313 = ((uint64_t ) s2340);
        c1248 = (s2340 >> 64);
        s2341 = (((uint128_t ) t13308) + ((uint128_t ) c1248));
        t13314 = ((uint64_t ) s2341);
        /* MPCondD 64 */
        t13315 = ((a38239) ? (t13314) : (t13308));
        t13316 = ((a38239) ? (t13313) : (t13307));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a38240 = ((0 < t13315));
        a38241 = ((0 == t13315));
        a38242 = ((0 < t13316));
        a38243 = ((a38241) && (a38242));
        a38244 = ((a38240) || (a38243));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a38245 = ((0 == t13316));
        a38246 = ((a38241) && (a38245));
        /* MPLessThan 64 */
        a38247 = ((a24719 < t13312));
        a38248 = ((a24719 == t13312));
        a38249 = ((a24720 < t13311));
        a38250 = ((a38248) && (a38249));
        a38251 = ((a38247) || (a38250));
        a38252 = ((a38246) && (a38251));
        a38253 = ((a38244) || (a38252));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38254 = ((a24720 == t13311));
        a38255 = ((a38248) && (a38254));
        a38256 = ((a38246) && (a38255));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38257 = ((a24721 < t13298));
        a38258 = ((a24721 == t13298));
        a38259 = ((a24722 < t13297));
        a38260 = ((a38258) && (a38259));
        a38261 = ((a38257) || (a38260));
        /* MPEqual 64 */
        a38262 = ((a24722 == t13297));
        a38263 = ((a38258) && (a38262));
        /* MPLessThan 64 */
        a38264 = ((a24723 < t13294));
        a38265 = ((a24723 == t13294));
        a38266 = ((a24724 < t13293));
        a38267 = ((a38265) && (a38266));
        a38268 = ((a38264) || (a38267));
        a38269 = ((a38263) && (a38268));
        a38270 = ((a38261) || (a38269));
        a38271 = ((a38256) && (a38270));
        i673 = ((a38253) || (a38271));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2428 = (t13293 - a24724);
        b1923 = ((t13293 < a24724));
        d2429 = (t13294 - a24723);
        d2430 = (d2429 - b1923);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38273 = ((t13294 < a24723));
        a38274 = ((t13294 == a24723));
        a38275 = ((a38274) && (b1923));
        b1924 = ((a38273) || (a38275));
        /* Begin of MPSubDDD 64 */
        d2431 = (t13297 - a24722);
        b1925 = ((t13297 < a24722));
        d2432 = (t13298 - a24721);
        d2433 = (d2432 - b1925);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2434 = (d2431 - b1924);
        b1926 = ((d2431 < b1924));
        t13317 = (d2433 - b1926);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38279 = ((t13298 < a24721));
        a38280 = ((t13298 == a24721));
        a38281 = ((a38280) && (b1925));
        a38282 = ((a38279) || (a38281));
        /* MPEqual 64 */
        a38283 = ((t13297 == a24722));
        a38284 = ((a38280) && (a38283));
        /* MPLessThan 64 */
        a38285 = ((a38284) && (b1924));
        b1927 = ((a38282) || (a38285));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2435 = (t13311 - a24720);
        b1928 = ((t13311 < a24720));
        d2436 = (t13312 - a24719);
        d2437 = (d2436 - b1928);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2438 = (d2435 - b1927);
        b1929 = ((d2435 < b1927));
        t13318 = (d2437 - b1929);
        /* End of MPSubDDD 256 */
        a38289 = (2*a38208);
        /* MPCondD 128 */
        a38290 = (2*a38289);
        a38291 = (a38290 + 1);
        /* MPCondD 64 */
        a38292 = (2*a38291);
        P1[a38292] = ((i673) ? (t13318) : (t13312));
        a38293 = (a38292 + 1);
        P1[a38293] = ((i673) ? (d2438) : (t13311));
        a38294 = (a38289 + 1);
        /* MPCondD 128 */
        a38295 = (2*a38294);
        /* MPCondD 64 */
        a38296 = (2*a38295);
        P1[a38296] = ((i673) ? (t13317) : (t13298));
        a38297 = (a38296 + 1);
        P1[a38297] = ((i673) ? (d2434) : (t13297));
        a38298 = (a38295 + 1);
        /* MPCondD 64 */
        a38299 = (2*a38298);
        P1[a38299] = ((i673) ? (d2430) : (t13294));
        a38300 = (a38299 + 1);
        P1[a38300] = ((i673) ? (d2428) : (t13293));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1930 = (a38207 + a38206);
        a38301 = (b1930 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2439 = (t13292 - t13288);
        b1931 = ((t13292 < t13288));
        d2440 = (t13291 - t13287);
        d2441 = (d2440 - b1931);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38303 = ((t13291 < t13287));
        a38304 = ((t13291 == t13287));
        a38305 = ((a38304) && (b1931));
        b1932 = ((a38303) || (a38305));
        /* Begin of MPSubDDD 64 */
        d2442 = (t13290 - t13286);
        b1933 = ((t13290 < t13286));
        d2443 = (t13289 - t13285);
        d2444 = (d2443 - b1933);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2445 = (d2442 - b1932);
        b1934 = ((d2442 < b1932));
        t13319 = (d2444 - b1934);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38309 = ((t13289 < t13285));
        a38310 = ((t13289 == t13285));
        a38311 = ((a38310) && (b1933));
        a38312 = ((a38309) || (a38311));
        /* MPEqual 64 */
        a38313 = ((t13290 == t13286));
        a38314 = ((a38310) && (a38313));
        /* MPLessThan 64 */
        a38315 = ((a38314) && (b1932));
        b1935 = ((a38312) || (a38315));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2446 = (t13302 - t13284);
        b1936 = ((t13302 < t13284));
        d2447 = (t13301 - t13283);
        d2448 = (d2447 - b1936);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2449 = (d2446 - b1935);
        b1937 = ((d2446 < b1935));
        t13320 = (d2448 - b1937);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2342 = (((uint128_t ) d2439) + ((uint128_t ) a24724));
        t13321 = ((uint64_t ) s2342);
        c1249 = (s2342 >> 64);
        s2343 = (((uint128_t ) d2441) + ((uint128_t ) a24723));
        s2344 = (((uint128_t ) s2343) + ((uint128_t ) c1249));
        t13322 = ((uint64_t ) s2344);
        c1250 = (s2344 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2345 = (((uint128_t ) d2445) + ((uint128_t ) a24722));
        t13323 = ((uint64_t ) s2345);
        c1251 = (s2345 >> 64);
        s2346 = (((uint128_t ) t13319) + ((uint128_t ) a24721));
        s2347 = (((uint128_t ) s2346) + ((uint128_t ) c1251));
        t13324 = ((uint64_t ) s2347);
        c1252 = (s2347 >> 64);
        /* MPPropagateCarry 64 */
        t13325 = (t13323 + c1250);
        a38319 = ((t13325 == 0));
        a38320 = (t13324 + c1250);
        t13326 = ((a38319) ? (a38320) : (t13324));
        a38321 = ((t13326 == 0));
        a38322 = ((a38321) && (a38319));
        a38323 = (c1252 + c1250);
        t13327 = ((a38322) ? (a38323) : (c1252));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2348 = (((uint128_t ) d2449) + ((uint128_t ) a24720));
        t13329 = ((uint64_t ) s2348);
        c1253 = (s2348 >> 64);
        s2349 = (((uint128_t ) t13320) + ((uint128_t ) a24719));
        s2350 = (((uint128_t ) s2349) + ((uint128_t ) c1253));
        t13330 = ((uint64_t ) s2350);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2351 = (((uint128_t ) t13329) + ((uint128_t ) t13327));
        t13331 = ((uint64_t ) s2351);
        c1255 = (s2351 >> 64);
        s2352 = (((uint128_t ) t13330) + ((uint128_t ) c1255));
        t13332 = ((uint64_t ) s2352);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38327 = ((0 < t13281));
        a38328 = ((0 == t13281));
        a38329 = ((0 < t13282));
        a38330 = ((a38328) && (a38329));
        a38331 = ((a38327) || (a38330));
        /* MPEqual 64 */
        a38332 = ((0 == t13282));
        a38333 = ((a38328) && (a38332));
        /* MPLessThan 64 */
        a38334 = ((t13301 < t13283));
        a38335 = ((t13301 == t13283));
        a38336 = ((a38335) && (b1936));
        a38337 = ((a38334) || (a38336));
        a38338 = ((a38333) && (a38337));
        a38339 = ((a38331) || (a38338));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38340 = ((t13302 == t13284));
        a38341 = ((a38335) && (a38340));
        a38342 = ((a38333) && (a38341));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a38343 = ((a38342) && (b1935));
        i674 = ((a38339) || (a38343));
        a38344 = (2*a38301);
        /* MPCondD 128 */
        a38345 = (2*a38344);
        a38346 = (a38345 + 1);
        /* MPCondD 64 */
        a38347 = (2*a38346);
        P1[a38347] = ((i674) ? (t13332) : (t13320));
        a38348 = (a38347 + 1);
        P1[a38348] = ((i674) ? (t13331) : (d2449));
        a38349 = (a38344 + 1);
        /* MPCondD 128 */
        a38350 = (2*a38349);
        /* MPCondD 64 */
        a38351 = (2*a38350);
        P1[a38351] = ((i674) ? (t13326) : (t13319));
        a38352 = (a38351 + 1);
        P1[a38352] = ((i674) ? (t13325) : (d2445));
        a38353 = (a38350 + 1);
        /* MPCondD 64 */
        a38354 = (2*a38353);
        P1[a38354] = ((i674) ? (t13322) : (d2441));
        a38355 = (a38354 + 1);
        P1[a38355] = ((i674) ? (t13321) : (d2439));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code9(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a38356, a38357, a38358, a38359, a38360, a38361, a38362, a38363, 
            a38364, a38365, a38366, a38367, a38368, a38369, a38370, a38371, 
            a38372, a38373, a38374, a38375, a38376, a38377, a38378, a38379, 
            a38380, a38381, a38382, a38383, a38384, a38403, a38404, a38405, 
            a38409, a38410, a38411, a38412, a38413, a38414, a38415, a38418, 
            a38419, a38420, a38425, a38429, a38430, a38431, a38435, a38436, 
            a38437, a38438, a38439, a38440, a38441, a38444, a38445, a38446, 
            a38450, a38453, a38454, a38455, a38456, a38457, a38458, a38459, 
            a38460, a38461, a38462, a38463, a38464, a38465, a38466, a38467, 
            a38468, a38469, a38470, a38471, a38472, a38474, a38475, a38480, 
            a38481, a38482, a38483, a38484, a38492, a38493, a38494, a38495, 
            a38496, a38497, a38498, a38499, a38500, a38501, a38502, a38503, 
            a38504, a38505, a38506, a38507, a38508, a38509, a38510, a38511, 
            a38512, a38513, a38514, a38515, a38516, a38517, a38518, a38519, 
            a38520, a38521, a38522, a38523, a38524, a38525, a38526, a38528, 
            a38529, a38530, a38534, a38535, a38536, a38537, a38538, a38539, 
            a38540, a38544, a38545, a38546, a38547, a38548, a38549, a38550, 
            a38551, a38552, a38553, a38554, a38555, a38556, a38558, a38559, 
            a38560, a38564, a38565, a38566, a38567, a38568, a38569, a38570, 
            a38574, a38576, a38577, a38582, a38583, a38584, a38585, a38586, 
            a38587, a38588, a38589, a38590, a38591, a38592, a38593, a38594, 
            a38595, a38596, a38597, a38598, a38599, a38600, a38601, a38602, 
            a38603, a38604, a38605, a38606, a38607, a38608, a38609, a38610, 
            b1938, b1939, b1941, b1942, b1943, b1944, b1945, b1946, 
            b1947, b1948, b1949, b1950, b1951, b1952, b1953, b1954, 
            b1955, b1956, b1957, b1958, b1959, b1960, b1961, b1962, 
            b1963, b1964, b1965, b1966, b1967, b1968, b1969, b1970, 
            b1971, b1972, b1973, b1974, b1975, b1976, b1977, b1978, 
            c1256, c1257, c1258, c1259, c1260, c1261, c1262, c1264, 
            c1265, c1266, c1267, c1268, c1269, c1270, c1272, i675, 
            i676, i677;
    uint64_t a25525, a25526, a25527, a25528, a25529, a25530, a25630, a25631, 
            a25632, a25633, a25634, a25635, a38385, a38386, a38387, a38388, 
            a38389, a38390, a38391, a38392, a38393, a38394, a38396, a38397, 
            a38398, a38399, a38400, a38401, a38473, a38476, a38485, a38575, 
            a38578, d2450, d2451, d2452, d2453, d2454, d2455, d2456, 
            d2457, d2458, d2459, d2460, d2461, d2462, d2463, d2464, 
            d2465, d2466, d2467, d2468, d2469, d2470, d2471, d2472, 
            d2473, d2474, d2475, d2476, d2477, d2478, d2479, d2480, 
            d2481, d2482, d2483, d2484, d2485, d2486, d2487, d2488, 
            d2489, d2490, d2491, d2492, d2493, d2494, d2495, d2496, 
            d2497, d2498, d2499, d2500, d2501, t13333, t13334, t13335, 
            t13336, t13337, t13338, t13339, t13340, t13341, t13342, t13343, 
            t13344, t13345, t13346, t13347, t13348, t13349, t13350, t13351, 
            t13352, t13353, t13354, t13355, t13356, t13357, t13358, t13359, 
            t13360, t13361, t13362, t13363, t13364, t13365, t13366, t13369, 
            t13370, t13371, t13372, t13373, t13374, t13375, t13376, t13377, 
            t13378, t13379, t13380, t13381, t13382, t13383, t13384, t13385, 
            t13386, t13387, t13388, t13389, t13390, t13391, t13392, t13393, 
            t13394, t13395, t13396, t13397, t13398, t13399, t13400, t13401, 
            t13402, t13403, t13404, t13405, t13406, t13407, t13408, t13409, 
            t13410, t13411, t13412, t13414, t13415, t13416, t13417, t13418, 
            t13419, t13420, t13421, t13424, t13425, t13426, t13427, t13428, 
            t13429, t13430, t13431, t13432, t13433, t13434, t13435, t13436, 
            t13437, t13438, t13439, t13440, t13442, t13443, t13444, t13445, 
            t7801, t7802, t7803, t7804, t7805, t7806, t7807, t7808, 
            t7809, t7810, t7811, t7812, t7813, t7814, t7815, t7816, 
            t7817, t7818, t7819, t7820, t7821, t7822, t7823, t7824, 
            t7825, t7826, t7827, t7828, t7829, t7830, t7831, t7832, 
            t7833, t7834, t7835, t7836, t7837, t7838, t7839, t7840, 
            t7841, t7842, t7843, t7844, t7845, t7846, t7847, t7848;
    uint128_t s2353, s2354, s2355, s2356, s2357, s2358, s2359, s2360, 
            s2361, s2362, s2363, s2364, s2365, s2366, s2367, s2368, 
            s2369, s2370, s2371, s2372, s2373, s2374, s2375, s2376, 
            s2377;
    for(int i23 = 0; i23 <= 4095; i23++) {
        a38356 = (128*i23);
        a38357 = (a38356 + threadIdx.x);
        b1938 = (threadIdx.x + a38356);
        a38358 = (b1938 + 524288);
        a38359 = (a38358 % 512);
        a38360 = (512 + a38359);
        /* Begin of MPModMul 256 */
        a38361 = (2*a38360);
        a38362 = (a38361 + 1);
        a38363 = (2*a38358);
        a38364 = (a38363 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38365 = (2*a38361);
        a38366 = (a38365 + 1);
        /* MPAssignDD 64 */
        a38367 = (2*a38366);
        t13333 = twiddles[a38367];
        a38368 = (a38367 + 1);
        t13334 = twiddles[a38368];
        /* MPAssignDD 128 */
        a38369 = (2*a38362);
        /* MPAssignDD 64 */
        a38370 = (2*a38369);
        t13335 = twiddles[a38370];
        a38371 = (a38370 + 1);
        t13336 = twiddles[a38371];
        a38372 = (a38369 + 1);
        /* MPAssignDD 64 */
        a38373 = (2*a38372);
        t13337 = twiddles[a38373];
        a38374 = (a38373 + 1);
        t13338 = twiddles[a38374];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38375 = (2*a38363);
        a38376 = (a38375 + 1);
        /* MPAssignDD 64 */
        a38377 = (2*a38376);
        t13339 = P1[a38377];
        a38378 = (a38377 + 1);
        t13340 = P1[a38378];
        /* MPAssignDD 128 */
        a38379 = (2*a38364);
        /* MPAssignDD 64 */
        a38380 = (2*a38379);
        t13341 = P1[a38380];
        a38381 = (a38380 + 1);
        t13342 = P1[a38381];
        a38382 = (a38379 + 1);
        /* MPAssignDD 64 */
        a38383 = (2*a38382);
        t13343 = P1[a38383];
        a38384 = (a38383 + 1);
        t13344 = P1[a38384];
        MPMulQDD_L3_2(t7813, t7814, t7815, t7816, t7809, t7810, t7811, t7812, 
    t7805, t7806, t7807, t7808, t7801, t7802, t7803, t7804, 
    0, 0, t13333, t13334, t13335, t13336, t13337, t13338, 
    0, 0, t13339, t13340, t13341, t13342, t13343, t13344);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13345 = (t7805 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a38385 = (t7805 << 6);
        a38386 = (t7806 >> 58);
        t13346 = (((a38385)|(a38386)));
        t13347 = (t7806 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13348 = (t7807 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13349 = (((t13347)|(t13348)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1939 = ((int) 1);
        t13350 = (288230376151711744 - b1939);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13351 = (((t7815)&(t13350)));
        t13352 = (((t7816)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a38387 = (t13351 << 6);
        a38388 = (t13352 >> 58);
        t13353 = (((a38387)|(a38388)));
        t13354 = (t13352 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13355 = (t7809 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a38389 = (t7809 << 6);
        a38390 = (t7810 >> 58);
        t13356 = (((a38389)|(a38390)));
        t13357 = (t7810 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13358 = (t7811 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13359 = (((t13357)|(t13358)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13360 = (((t13354)|(t13355)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a38391 = (t7811 << 6);
        a38392 = (t7812 >> 58);
        t13361 = (((a38391)|(a38392)));
        t13362 = (t7812 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13363 = (((t13362)|(t13345)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a25525 = mu[2];
        a25526 = mu[3];
        a25527 = mu[4];
        a25528 = mu[5];
        a25529 = mu[6];
        a25530 = mu[7];
        MPMulQDD_L3_1(t7845, t7846, t7847, t7848, t7841, t7842, t7843, t7844, 
    t7837, t7838, t7839, t7840, t7833, t7834, t7835, t7836, 
    t13353, t13360, t13356, t13359, t13361, t13363, t13346, t13349, 
    0, 0, a25525, a25526, a25527, a25528, a25529, a25530);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13364 = (t7837 >> 1);
        a38393 = (t7837 << 63);
        a38394 = (t7838 >> 1);
        t13365 = (((a38393)|(a38394)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13366 = (0 - b1939);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2450 = (2 - b1939);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13369 = (((t7846)&(d2450)));
        /* MPBinAndD 64 */
        t13370 = (((t7847)&(t13366)));
        t13371 = (((t7848)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13372 = (t13369 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13373 = (t13370 >> 1);
        a38396 = (t13370 << 63);
        a38397 = (t13371 >> 1);
        t13374 = (((a38396)|(a38397)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13375 = (((t13372)|(t13373)));
        /* Begin of MPShiftLeft1D */
        t13376 = (t13371 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13377 = (t7841 >> 1);
        a38398 = (t7841 << 63);
        a38399 = (t7842 >> 1);
        t13378 = (((a38398)|(a38399)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13379 = (((t13376)|(t13377)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13380 = (t7842 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13381 = (t7843 >> 1);
        a38400 = (t7843 << 63);
        a38401 = (t7844 >> 1);
        t13382 = (((a38400)|(a38401)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13383 = (((t13380)|(t13381)));
        /* Begin of MPShiftLeft1D */
        t13384 = (t7844 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13385 = (((t13384)|(t13364)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a25630 = modulus[2];
        a25631 = modulus[3];
        a25632 = modulus[4];
        a25633 = modulus[5];
        a25634 = modulus[6];
        a25635 = modulus[7];
        MPMulQDD_L3_1(t7829, t7830, t7831, t7832, t7825, t7826, t7827, t7828, 
    t7821, t7822, t7823, t7824, t7817, t7818, t7819, t7820, 
    t13375, t13374, t13379, t13378, t13383, t13382, t13385, t13365, 
    0, 0, a25630, a25631, a25632, a25633, a25634, a25635);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2451 = (t7804 - t7820);
        b1941 = ((t7804 < t7820));
        d2452 = (t7803 - t7819);
        d2453 = (d2452 - b1941);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38403 = ((t7803 < t7819));
        a38404 = ((t7803 == t7819));
        a38405 = ((a38404) && (b1941));
        b1942 = ((a38403) || (a38405));
        /* Begin of MPSubDDD 64 */
        d2454 = (t7802 - t7818);
        b1943 = ((t7802 < t7818));
        d2455 = (t7801 - t7817);
        d2456 = (d2455 - b1943);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2457 = (d2454 - b1942);
        b1944 = ((d2454 < b1942));
        t13386 = (d2456 - b1944);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38409 = ((t7801 < t7817));
        a38410 = ((t7801 == t7817));
        a38411 = ((a38410) && (b1943));
        a38412 = ((a38409) || (a38411));
        /* MPEqual 64 */
        a38413 = ((t7802 == t7818));
        a38414 = ((a38410) && (a38413));
        /* MPLessThan 64 */
        a38415 = ((a38414) && (b1942));
        b1945 = ((a38412) || (a38415));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2458 = (t7808 - t7824);
        b1946 = ((t7808 < t7824));
        d2459 = (t7807 - t7823);
        d2460 = (d2459 - b1946);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38418 = ((t7807 < t7823));
        a38419 = ((t7807 == t7823));
        a38420 = ((a38419) && (b1946));
        b1947 = ((a38418) || (a38420));
        /* Begin of MPSubDDD 64 */
        d2461 = (t7806 - t7822);
        b1948 = ((t7806 < t7822));
        d2462 = (t7805 - t7821);
        d2463 = (d2462 - b1948);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2464 = (d2461 - b1947);
        b1949 = ((d2461 < b1947));
        t13387 = (d2463 - b1949);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2465 = (d2458 - b1945);
        b1950 = ((d2458 < b1945));
        t13388 = (d2460 - b1950);
        /* MPLessThanDI 64 */
        a38425 = ((d2460 == 0));
        b1951 = ((a38425) && (b1950));
        /* MPSubDDI 64 */
        d2466 = (d2464 - b1951);
        b1952 = ((d2464 < b1951));
        t13389 = (t13387 - b1952);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2467 = (d2451 - a25635);
        b1953 = ((d2451 < a25635));
        d2468 = (d2453 - a25634);
        d2469 = (d2468 - b1953);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38429 = ((d2453 < a25634));
        a38430 = ((d2453 == a25634));
        a38431 = ((a38430) && (b1953));
        b1954 = ((a38429) || (a38431));
        /* Begin of MPSubDDD 64 */
        d2470 = (d2457 - a25633);
        b1955 = ((d2457 < a25633));
        d2471 = (t13386 - a25632);
        d2472 = (d2471 - b1955);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2473 = (d2470 - b1954);
        b1956 = ((d2470 < b1954));
        t13390 = (d2472 - b1956);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38435 = ((t13386 < a25632));
        a38436 = ((t13386 == a25632));
        a38437 = ((a38436) && (b1955));
        a38438 = ((a38435) || (a38437));
        /* MPEqual 64 */
        a38439 = ((d2457 == a25633));
        a38440 = ((a38436) && (a38439));
        /* MPLessThan 64 */
        a38441 = ((a38440) && (b1954));
        b1957 = ((a38438) || (a38441));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2474 = (d2465 - a25631);
        b1958 = ((d2465 < a25631));
        d2475 = (t13388 - a25630);
        d2476 = (d2475 - b1958);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38444 = ((t13388 < a25630));
        a38445 = ((t13388 == a25630));
        a38446 = ((a38445) && (b1958));
        b1959 = ((a38444) || (a38446));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2477 = (d2466 - b1959);
        b1960 = ((d2466 < b1959));
        t13391 = (t13389 - b1960);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2478 = (d2474 - b1957);
        b1961 = ((d2474 < b1957));
        t13392 = (d2476 - b1961);
        /* MPLessThanDI 64 */
        a38450 = ((d2476 == 0));
        b1962 = ((a38450) && (b1961));
        /* MPSubDDI 64 */
        d2479 = (d2477 - b1962);
        b1963 = ((d2477 < b1962));
        t13393 = (t13391 - b1963);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a38453 = ((t13389 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a38454 = ((d2466 == 0));
        a38455 = ((a38453) && (a38454));
        /* MPLessThan 64 */
        a38456 = ((a38455) && (b1959));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38457 = ((d2465 == a25631));
        a38458 = ((a38445) && (a38457));
        a38459 = ((a38455) && (a38458));
        /* MPLessThan 128 */
        a38460 = ((a38459) && (b1957));
        i675 = ((a38456) || (a38460));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13394 = ((i675) ? (t13389) : (t13393));
        t13395 = ((i675) ? (d2466) : (d2479));
        /* MPCondD 64 */
        t13396 = ((i675) ? (t13388) : (t13392));
        t13397 = ((i675) ? (d2465) : (d2478));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13398 = ((i675) ? (t13386) : (t13390));
        t13399 = ((i675) ? (d2457) : (d2473));
        /* MPCondD 64 */
        t13400 = ((i675) ? (d2453) : (d2469));
        t13401 = ((i675) ? (d2451) : (d2467));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a38461 = (256*i23);
        a38462 = (2*threadIdx.x);
        a38463 = (a38461 + a38462);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a38464 = (2*a38357);
        a38465 = (a38464 + 1);
        /* MPAssignDD 128 */
        a38466 = (2*a38465);
        /* MPAssignDD 64 */
        a38467 = (2*a38466);
        t13402 = P1[a38467];
        a38468 = (a38467 + 1);
        t13403 = P1[a38468];
        a38469 = (a38466 + 1);
        /* MPAssignDD 64 */
        a38470 = (2*a38469);
        t13404 = P1[a38470];
        a38471 = (a38470 + 1);
        t13405 = P1[a38471];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2353 = (((uint128_t ) t13405) + ((uint128_t ) t13401));
        t13406 = ((uint64_t ) s2353);
        c1256 = (s2353 >> 64);
        s2354 = (((uint128_t ) t13404) + ((uint128_t ) t13400));
        s2355 = (((uint128_t ) s2354) + ((uint128_t ) c1256));
        t13407 = ((uint64_t ) s2355);
        c1257 = (s2355 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2356 = (((uint128_t ) t13403) + ((uint128_t ) t13399));
        t13408 = ((uint64_t ) s2356);
        c1258 = (s2356 >> 64);
        s2357 = (((uint128_t ) t13402) + ((uint128_t ) t13398));
        s2358 = (((uint128_t ) s2357) + ((uint128_t ) c1258));
        t13409 = ((uint64_t ) s2358);
        c1259 = (s2358 >> 64);
        /* MPPropagateCarry 64 */
        t13410 = (t13408 + c1257);
        a38472 = ((t13410 == 0));
        a38473 = (t13409 + c1257);
        t13411 = ((a38472) ? (a38473) : (t13409));
        a38474 = ((t13411 == 0));
        a38475 = ((a38474) && (a38472));
        a38476 = (c1259 + c1257);
        t13412 = ((a38475) ? (a38476) : (c1259));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38480 = (2*a38464);
        a38481 = (a38480 + 1);
        /* MPAssignDD 64 */
        a38482 = (2*a38481);
        t13414 = P1[a38482];
        a38483 = (a38482 + 1);
        t13415 = P1[a38483];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2359 = (((uint128_t ) t13415) + ((uint128_t ) t13397));
        t13416 = ((uint64_t ) s2359);
        c1260 = (s2359 >> 64);
        s2360 = (((uint128_t ) t13414) + ((uint128_t ) t13396));
        s2361 = (((uint128_t ) s2360) + ((uint128_t ) c1260));
        t13417 = ((uint64_t ) s2361);
        c1261 = (s2361 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13418 = ((uint64_t ) t13395);
        c1262 = (t13395 >> 64);
        s2362 = (((uint128_t ) t13394) + ((uint128_t ) c1262));
        t13419 = ((uint64_t ) s2362);
        /* MPPropagateCarry 64 */
        t13420 = (t13418 + c1261);
        a38484 = ((t13420 == 0));
        a38485 = (t13419 + c1261);
        t13421 = ((a38484) ? (a38485) : (t13419));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2363 = (((uint128_t ) t13416) + ((uint128_t ) t13412));
        t13424 = ((uint64_t ) s2363);
        c1264 = (s2363 >> 64);
        s2364 = (((uint128_t ) t13417) + ((uint128_t ) c1264));
        t13425 = ((uint64_t ) s2364);
        /* MPEqualDI 64 */
        a38492 = ((t13425 == 0));
        a38493 = ((t13424 == 0));
        a38494 = ((a38492) && (a38493));
        /* MPAddDDI 64 */
        s2365 = (((uint128_t ) t13420) + ((uint128_t ) t13412));
        t13426 = ((uint64_t ) s2365);
        c1265 = (s2365 >> 64);
        s2366 = (((uint128_t ) t13421) + ((uint128_t ) c1265));
        t13427 = ((uint64_t ) s2366);
        /* MPCondD 64 */
        t13428 = ((a38494) ? (t13427) : (t13421));
        t13429 = ((a38494) ? (t13426) : (t13420));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a38495 = ((0 < t13428));
        a38496 = ((0 == t13428));
        a38497 = ((0 < t13429));
        a38498 = ((a38496) && (a38497));
        a38499 = ((a38495) || (a38498));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a38500 = ((0 == t13429));
        a38501 = ((a38496) && (a38500));
        /* MPLessThan 64 */
        a38502 = ((a25630 < t13425));
        a38503 = ((a25630 == t13425));
        a38504 = ((a25631 < t13424));
        a38505 = ((a38503) && (a38504));
        a38506 = ((a38502) || (a38505));
        a38507 = ((a38501) && (a38506));
        a38508 = ((a38499) || (a38507));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38509 = ((a25631 == t13424));
        a38510 = ((a38503) && (a38509));
        a38511 = ((a38501) && (a38510));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38512 = ((a25632 < t13411));
        a38513 = ((a25632 == t13411));
        a38514 = ((a25633 < t13410));
        a38515 = ((a38513) && (a38514));
        a38516 = ((a38512) || (a38515));
        /* MPEqual 64 */
        a38517 = ((a25633 == t13410));
        a38518 = ((a38513) && (a38517));
        /* MPLessThan 64 */
        a38519 = ((a25634 < t13407));
        a38520 = ((a25634 == t13407));
        a38521 = ((a25635 < t13406));
        a38522 = ((a38520) && (a38521));
        a38523 = ((a38519) || (a38522));
        a38524 = ((a38518) && (a38523));
        a38525 = ((a38516) || (a38524));
        a38526 = ((a38511) && (a38525));
        i676 = ((a38508) || (a38526));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2480 = (t13406 - a25635);
        b1964 = ((t13406 < a25635));
        d2481 = (t13407 - a25634);
        d2482 = (d2481 - b1964);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38528 = ((t13407 < a25634));
        a38529 = ((t13407 == a25634));
        a38530 = ((a38529) && (b1964));
        b1965 = ((a38528) || (a38530));
        /* Begin of MPSubDDD 64 */
        d2483 = (t13410 - a25633);
        b1966 = ((t13410 < a25633));
        d2484 = (t13411 - a25632);
        d2485 = (d2484 - b1966);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2486 = (d2483 - b1965);
        b1967 = ((d2483 < b1965));
        t13430 = (d2485 - b1967);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38534 = ((t13411 < a25632));
        a38535 = ((t13411 == a25632));
        a38536 = ((a38535) && (b1966));
        a38537 = ((a38534) || (a38536));
        /* MPEqual 64 */
        a38538 = ((t13410 == a25633));
        a38539 = ((a38535) && (a38538));
        /* MPLessThan 64 */
        a38540 = ((a38539) && (b1965));
        b1968 = ((a38537) || (a38540));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2487 = (t13424 - a25631);
        b1969 = ((t13424 < a25631));
        d2488 = (t13425 - a25630);
        d2489 = (d2488 - b1969);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2490 = (d2487 - b1968);
        b1970 = ((d2487 < b1968));
        t13431 = (d2489 - b1970);
        /* End of MPSubDDD 256 */
        a38544 = (2*a38463);
        /* MPCondD 128 */
        a38545 = (2*a38544);
        a38546 = (a38545 + 1);
        /* MPCondD 64 */
        a38547 = (2*a38546);
        P2[a38547] = ((i676) ? (t13431) : (t13425));
        a38548 = (a38547 + 1);
        P2[a38548] = ((i676) ? (d2490) : (t13424));
        a38549 = (a38544 + 1);
        /* MPCondD 128 */
        a38550 = (2*a38549);
        /* MPCondD 64 */
        a38551 = (2*a38550);
        P2[a38551] = ((i676) ? (t13430) : (t13411));
        a38552 = (a38551 + 1);
        P2[a38552] = ((i676) ? (d2486) : (t13410));
        a38553 = (a38550 + 1);
        /* MPCondD 64 */
        a38554 = (2*a38553);
        P2[a38554] = ((i676) ? (d2482) : (t13407));
        a38555 = (a38554 + 1);
        P2[a38555] = ((i676) ? (d2480) : (t13406));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1971 = (a38462 + a38461);
        a38556 = (b1971 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2491 = (t13405 - t13401);
        b1972 = ((t13405 < t13401));
        d2492 = (t13404 - t13400);
        d2493 = (d2492 - b1972);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38558 = ((t13404 < t13400));
        a38559 = ((t13404 == t13400));
        a38560 = ((a38559) && (b1972));
        b1973 = ((a38558) || (a38560));
        /* Begin of MPSubDDD 64 */
        d2494 = (t13403 - t13399);
        b1974 = ((t13403 < t13399));
        d2495 = (t13402 - t13398);
        d2496 = (d2495 - b1974);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2497 = (d2494 - b1973);
        b1975 = ((d2494 < b1973));
        t13432 = (d2496 - b1975);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38564 = ((t13402 < t13398));
        a38565 = ((t13402 == t13398));
        a38566 = ((a38565) && (b1974));
        a38567 = ((a38564) || (a38566));
        /* MPEqual 64 */
        a38568 = ((t13403 == t13399));
        a38569 = ((a38565) && (a38568));
        /* MPLessThan 64 */
        a38570 = ((a38569) && (b1973));
        b1976 = ((a38567) || (a38570));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2498 = (t13415 - t13397);
        b1977 = ((t13415 < t13397));
        d2499 = (t13414 - t13396);
        d2500 = (d2499 - b1977);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2501 = (d2498 - b1976);
        b1978 = ((d2498 < b1976));
        t13433 = (d2500 - b1978);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2367 = (((uint128_t ) d2491) + ((uint128_t ) a25635));
        t13434 = ((uint64_t ) s2367);
        c1266 = (s2367 >> 64);
        s2368 = (((uint128_t ) d2493) + ((uint128_t ) a25634));
        s2369 = (((uint128_t ) s2368) + ((uint128_t ) c1266));
        t13435 = ((uint64_t ) s2369);
        c1267 = (s2369 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2370 = (((uint128_t ) d2497) + ((uint128_t ) a25633));
        t13436 = ((uint64_t ) s2370);
        c1268 = (s2370 >> 64);
        s2371 = (((uint128_t ) t13432) + ((uint128_t ) a25632));
        s2372 = (((uint128_t ) s2371) + ((uint128_t ) c1268));
        t13437 = ((uint64_t ) s2372);
        c1269 = (s2372 >> 64);
        /* MPPropagateCarry 64 */
        t13438 = (t13436 + c1267);
        a38574 = ((t13438 == 0));
        a38575 = (t13437 + c1267);
        t13439 = ((a38574) ? (a38575) : (t13437));
        a38576 = ((t13439 == 0));
        a38577 = ((a38576) && (a38574));
        a38578 = (c1269 + c1267);
        t13440 = ((a38577) ? (a38578) : (c1269));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2373 = (((uint128_t ) d2501) + ((uint128_t ) a25631));
        t13442 = ((uint64_t ) s2373);
        c1270 = (s2373 >> 64);
        s2374 = (((uint128_t ) t13433) + ((uint128_t ) a25630));
        s2375 = (((uint128_t ) s2374) + ((uint128_t ) c1270));
        t13443 = ((uint64_t ) s2375);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2376 = (((uint128_t ) t13442) + ((uint128_t ) t13440));
        t13444 = ((uint64_t ) s2376);
        c1272 = (s2376 >> 64);
        s2377 = (((uint128_t ) t13443) + ((uint128_t ) c1272));
        t13445 = ((uint64_t ) s2377);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38582 = ((0 < t13394));
        a38583 = ((0 == t13394));
        a38584 = ((0 < t13395));
        a38585 = ((a38583) && (a38584));
        a38586 = ((a38582) || (a38585));
        /* MPEqual 64 */
        a38587 = ((0 == t13395));
        a38588 = ((a38583) && (a38587));
        /* MPLessThan 64 */
        a38589 = ((t13414 < t13396));
        a38590 = ((t13414 == t13396));
        a38591 = ((a38590) && (b1977));
        a38592 = ((a38589) || (a38591));
        a38593 = ((a38588) && (a38592));
        a38594 = ((a38586) || (a38593));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38595 = ((t13415 == t13397));
        a38596 = ((a38590) && (a38595));
        a38597 = ((a38588) && (a38596));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a38598 = ((a38597) && (b1976));
        i677 = ((a38594) || (a38598));
        a38599 = (2*a38556);
        /* MPCondD 128 */
        a38600 = (2*a38599);
        a38601 = (a38600 + 1);
        /* MPCondD 64 */
        a38602 = (2*a38601);
        P2[a38602] = ((i677) ? (t13445) : (t13433));
        a38603 = (a38602 + 1);
        P2[a38603] = ((i677) ? (t13444) : (d2501));
        a38604 = (a38599 + 1);
        /* MPCondD 128 */
        a38605 = (2*a38604);
        /* MPCondD 64 */
        a38606 = (2*a38605);
        P2[a38606] = ((i677) ? (t13439) : (t13432));
        a38607 = (a38606 + 1);
        P2[a38607] = ((i677) ? (t13438) : (d2497));
        a38608 = (a38605 + 1);
        /* MPCondD 64 */
        a38609 = (2*a38608);
        P2[a38609] = ((i677) ? (t13435) : (d2493));
        a38610 = (a38609 + 1);
        P2[a38610] = ((i677) ? (t13434) : (d2491));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code10(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a38611, a38612, a38613, a38614, a38615, a38616, a38617, a38618, 
            a38619, a38620, a38621, a38622, a38623, a38624, a38625, a38626, 
            a38627, a38628, a38629, a38630, a38631, a38632, a38633, a38634, 
            a38635, a38636, a38637, a38638, a38639, a38658, a38659, a38660, 
            a38664, a38665, a38666, a38667, a38668, a38669, a38670, a38673, 
            a38674, a38675, a38680, a38684, a38685, a38686, a38690, a38691, 
            a38692, a38693, a38694, a38695, a38696, a38699, a38700, a38701, 
            a38705, a38708, a38709, a38710, a38711, a38712, a38713, a38714, 
            a38715, a38716, a38717, a38718, a38719, a38720, a38721, a38722, 
            a38723, a38724, a38725, a38726, a38727, a38729, a38730, a38735, 
            a38736, a38737, a38738, a38739, a38747, a38748, a38749, a38750, 
            a38751, a38752, a38753, a38754, a38755, a38756, a38757, a38758, 
            a38759, a38760, a38761, a38762, a38763, a38764, a38765, a38766, 
            a38767, a38768, a38769, a38770, a38771, a38772, a38773, a38774, 
            a38775, a38776, a38777, a38778, a38779, a38780, a38781, a38783, 
            a38784, a38785, a38789, a38790, a38791, a38792, a38793, a38794, 
            a38795, a38799, a38800, a38801, a38802, a38803, a38804, a38805, 
            a38806, a38807, a38808, a38809, a38810, a38811, a38813, a38814, 
            a38815, a38819, a38820, a38821, a38822, a38823, a38824, a38825, 
            a38829, a38831, a38832, a38837, a38838, a38839, a38840, a38841, 
            a38842, a38843, a38844, a38845, a38846, a38847, a38848, a38849, 
            a38850, a38851, a38852, a38853, a38854, a38855, a38856, a38857, 
            a38858, a38859, a38860, a38861, a38862, a38863, a38864, a38865, 
            b1979, b1980, b1982, b1983, b1984, b1985, b1986, b1987, 
            b1988, b1989, b1990, b1991, b1992, b1993, b1994, b1995, 
            b1996, b1997, b1998, b1999, b2000, b2001, b2002, b2003, 
            b2004, b2005, b2006, b2007, b2008, b2009, b2010, b2011, 
            b2012, b2013, b2014, b2015, b2016, b2017, b2018, b2019, 
            c1273, c1274, c1275, c1276, c1277, c1278, c1279, c1281, 
            c1282, c1283, c1284, c1285, c1286, c1287, c1289, i678, 
            i679, i680;
    uint64_t a26436, a26437, a26438, a26439, a26440, a26441, a26541, a26542, 
            a26543, a26544, a26545, a26546, a38640, a38641, a38642, a38643, 
            a38644, a38645, a38646, a38647, a38648, a38649, a38651, a38652, 
            a38653, a38654, a38655, a38656, a38728, a38731, a38740, a38830, 
            a38833, d2502, d2503, d2504, d2505, d2506, d2507, d2508, 
            d2509, d2510, d2511, d2512, d2513, d2514, d2515, d2516, 
            d2517, d2518, d2519, d2520, d2521, d2522, d2523, d2524, 
            d2525, d2526, d2527, d2528, d2529, d2530, d2531, d2532, 
            d2533, d2534, d2535, d2536, d2537, d2538, d2539, d2540, 
            d2541, d2542, d2543, d2544, d2545, d2546, d2547, d2548, 
            d2549, d2550, d2551, d2552, d2553, t13446, t13447, t13448, 
            t13449, t13450, t13451, t13452, t13453, t13454, t13455, t13456, 
            t13457, t13458, t13459, t13460, t13461, t13462, t13463, t13464, 
            t13465, t13466, t13467, t13468, t13469, t13470, t13471, t13472, 
            t13473, t13474, t13475, t13476, t13477, t13478, t13479, t13482, 
            t13483, t13484, t13485, t13486, t13487, t13488, t13489, t13490, 
            t13491, t13492, t13493, t13494, t13495, t13496, t13497, t13498, 
            t13499, t13500, t13501, t13502, t13503, t13504, t13505, t13506, 
            t13507, t13508, t13509, t13510, t13511, t13512, t13513, t13514, 
            t13515, t13516, t13517, t13518, t13519, t13520, t13521, t13522, 
            t13523, t13524, t13525, t13527, t13528, t13529, t13530, t13531, 
            t13532, t13533, t13534, t13537, t13538, t13539, t13540, t13541, 
            t13542, t13543, t13544, t13545, t13546, t13547, t13548, t13549, 
            t13550, t13551, t13552, t13553, t13555, t13556, t13557, t13558, 
            t7865, t7866, t7867, t7868, t7869, t7870, t7871, t7872, 
            t7873, t7874, t7875, t7876, t7877, t7878, t7879, t7880, 
            t7881, t7882, t7883, t7884, t7885, t7886, t7887, t7888, 
            t7889, t7890, t7891, t7892, t7893, t7894, t7895, t7896, 
            t7897, t7898, t7899, t7900, t7901, t7902, t7903, t7904, 
            t7905, t7906, t7907, t7908, t7909, t7910, t7911, t7912;
    uint128_t s2378, s2379, s2380, s2381, s2382, s2383, s2384, s2385, 
            s2386, s2387, s2388, s2389, s2390, s2391, s2392, s2393, 
            s2394, s2395, s2396, s2397, s2398, s2399, s2400, s2401, 
            s2402;
    for(int i21 = 0; i21 <= 4095; i21++) {
        a38611 = (128*i21);
        a38612 = (a38611 + threadIdx.x);
        b1979 = (threadIdx.x + a38611);
        a38613 = (b1979 + 524288);
        a38614 = (a38613 % 1024);
        a38615 = (1024 + a38614);
        /* Begin of MPModMul 256 */
        a38616 = (2*a38615);
        a38617 = (a38616 + 1);
        a38618 = (2*a38613);
        a38619 = (a38618 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38620 = (2*a38616);
        a38621 = (a38620 + 1);
        /* MPAssignDD 64 */
        a38622 = (2*a38621);
        t13446 = twiddles[a38622];
        a38623 = (a38622 + 1);
        t13447 = twiddles[a38623];
        /* MPAssignDD 128 */
        a38624 = (2*a38617);
        /* MPAssignDD 64 */
        a38625 = (2*a38624);
        t13448 = twiddles[a38625];
        a38626 = (a38625 + 1);
        t13449 = twiddles[a38626];
        a38627 = (a38624 + 1);
        /* MPAssignDD 64 */
        a38628 = (2*a38627);
        t13450 = twiddles[a38628];
        a38629 = (a38628 + 1);
        t13451 = twiddles[a38629];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38630 = (2*a38618);
        a38631 = (a38630 + 1);
        /* MPAssignDD 64 */
        a38632 = (2*a38631);
        t13452 = P2[a38632];
        a38633 = (a38632 + 1);
        t13453 = P2[a38633];
        /* MPAssignDD 128 */
        a38634 = (2*a38619);
        /* MPAssignDD 64 */
        a38635 = (2*a38634);
        t13454 = P2[a38635];
        a38636 = (a38635 + 1);
        t13455 = P2[a38636];
        a38637 = (a38634 + 1);
        /* MPAssignDD 64 */
        a38638 = (2*a38637);
        t13456 = P2[a38638];
        a38639 = (a38638 + 1);
        t13457 = P2[a38639];
        MPMulQDD_L3_2(t7877, t7878, t7879, t7880, t7873, t7874, t7875, t7876, 
    t7869, t7870, t7871, t7872, t7865, t7866, t7867, t7868, 
    0, 0, t13446, t13447, t13448, t13449, t13450, t13451, 
    0, 0, t13452, t13453, t13454, t13455, t13456, t13457);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13458 = (t7869 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a38640 = (t7869 << 6);
        a38641 = (t7870 >> 58);
        t13459 = (((a38640)|(a38641)));
        t13460 = (t7870 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13461 = (t7871 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13462 = (((t13460)|(t13461)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1980 = ((int) 1);
        t13463 = (288230376151711744 - b1980);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13464 = (((t7879)&(t13463)));
        t13465 = (((t7880)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a38642 = (t13464 << 6);
        a38643 = (t13465 >> 58);
        t13466 = (((a38642)|(a38643)));
        t13467 = (t13465 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13468 = (t7873 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a38644 = (t7873 << 6);
        a38645 = (t7874 >> 58);
        t13469 = (((a38644)|(a38645)));
        t13470 = (t7874 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13471 = (t7875 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13472 = (((t13470)|(t13471)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13473 = (((t13467)|(t13468)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a38646 = (t7875 << 6);
        a38647 = (t7876 >> 58);
        t13474 = (((a38646)|(a38647)));
        t13475 = (t7876 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13476 = (((t13475)|(t13458)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a26436 = mu[2];
        a26437 = mu[3];
        a26438 = mu[4];
        a26439 = mu[5];
        a26440 = mu[6];
        a26441 = mu[7];
        MPMulQDD_L3_1(t7909, t7910, t7911, t7912, t7905, t7906, t7907, t7908, 
    t7901, t7902, t7903, t7904, t7897, t7898, t7899, t7900, 
    t13466, t13473, t13469, t13472, t13474, t13476, t13459, t13462, 
    0, 0, a26436, a26437, a26438, a26439, a26440, a26441);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13477 = (t7901 >> 1);
        a38648 = (t7901 << 63);
        a38649 = (t7902 >> 1);
        t13478 = (((a38648)|(a38649)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13479 = (0 - b1980);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2502 = (2 - b1980);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13482 = (((t7910)&(d2502)));
        /* MPBinAndD 64 */
        t13483 = (((t7911)&(t13479)));
        t13484 = (((t7912)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13485 = (t13482 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13486 = (t13483 >> 1);
        a38651 = (t13483 << 63);
        a38652 = (t13484 >> 1);
        t13487 = (((a38651)|(a38652)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13488 = (((t13485)|(t13486)));
        /* Begin of MPShiftLeft1D */
        t13489 = (t13484 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13490 = (t7905 >> 1);
        a38653 = (t7905 << 63);
        a38654 = (t7906 >> 1);
        t13491 = (((a38653)|(a38654)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13492 = (((t13489)|(t13490)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13493 = (t7906 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13494 = (t7907 >> 1);
        a38655 = (t7907 << 63);
        a38656 = (t7908 >> 1);
        t13495 = (((a38655)|(a38656)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13496 = (((t13493)|(t13494)));
        /* Begin of MPShiftLeft1D */
        t13497 = (t7908 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13498 = (((t13497)|(t13477)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a26541 = modulus[2];
        a26542 = modulus[3];
        a26543 = modulus[4];
        a26544 = modulus[5];
        a26545 = modulus[6];
        a26546 = modulus[7];
        MPMulQDD_L3_1(t7893, t7894, t7895, t7896, t7889, t7890, t7891, t7892, 
    t7885, t7886, t7887, t7888, t7881, t7882, t7883, t7884, 
    t13488, t13487, t13492, t13491, t13496, t13495, t13498, t13478, 
    0, 0, a26541, a26542, a26543, a26544, a26545, a26546);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2503 = (t7868 - t7884);
        b1982 = ((t7868 < t7884));
        d2504 = (t7867 - t7883);
        d2505 = (d2504 - b1982);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38658 = ((t7867 < t7883));
        a38659 = ((t7867 == t7883));
        a38660 = ((a38659) && (b1982));
        b1983 = ((a38658) || (a38660));
        /* Begin of MPSubDDD 64 */
        d2506 = (t7866 - t7882);
        b1984 = ((t7866 < t7882));
        d2507 = (t7865 - t7881);
        d2508 = (d2507 - b1984);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2509 = (d2506 - b1983);
        b1985 = ((d2506 < b1983));
        t13499 = (d2508 - b1985);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38664 = ((t7865 < t7881));
        a38665 = ((t7865 == t7881));
        a38666 = ((a38665) && (b1984));
        a38667 = ((a38664) || (a38666));
        /* MPEqual 64 */
        a38668 = ((t7866 == t7882));
        a38669 = ((a38665) && (a38668));
        /* MPLessThan 64 */
        a38670 = ((a38669) && (b1983));
        b1986 = ((a38667) || (a38670));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2510 = (t7872 - t7888);
        b1987 = ((t7872 < t7888));
        d2511 = (t7871 - t7887);
        d2512 = (d2511 - b1987);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38673 = ((t7871 < t7887));
        a38674 = ((t7871 == t7887));
        a38675 = ((a38674) && (b1987));
        b1988 = ((a38673) || (a38675));
        /* Begin of MPSubDDD 64 */
        d2513 = (t7870 - t7886);
        b1989 = ((t7870 < t7886));
        d2514 = (t7869 - t7885);
        d2515 = (d2514 - b1989);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2516 = (d2513 - b1988);
        b1990 = ((d2513 < b1988));
        t13500 = (d2515 - b1990);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2517 = (d2510 - b1986);
        b1991 = ((d2510 < b1986));
        t13501 = (d2512 - b1991);
        /* MPLessThanDI 64 */
        a38680 = ((d2512 == 0));
        b1992 = ((a38680) && (b1991));
        /* MPSubDDI 64 */
        d2518 = (d2516 - b1992);
        b1993 = ((d2516 < b1992));
        t13502 = (t13500 - b1993);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2519 = (d2503 - a26546);
        b1994 = ((d2503 < a26546));
        d2520 = (d2505 - a26545);
        d2521 = (d2520 - b1994);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38684 = ((d2505 < a26545));
        a38685 = ((d2505 == a26545));
        a38686 = ((a38685) && (b1994));
        b1995 = ((a38684) || (a38686));
        /* Begin of MPSubDDD 64 */
        d2522 = (d2509 - a26544);
        b1996 = ((d2509 < a26544));
        d2523 = (t13499 - a26543);
        d2524 = (d2523 - b1996);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2525 = (d2522 - b1995);
        b1997 = ((d2522 < b1995));
        t13503 = (d2524 - b1997);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38690 = ((t13499 < a26543));
        a38691 = ((t13499 == a26543));
        a38692 = ((a38691) && (b1996));
        a38693 = ((a38690) || (a38692));
        /* MPEqual 64 */
        a38694 = ((d2509 == a26544));
        a38695 = ((a38691) && (a38694));
        /* MPLessThan 64 */
        a38696 = ((a38695) && (b1995));
        b1998 = ((a38693) || (a38696));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2526 = (d2517 - a26542);
        b1999 = ((d2517 < a26542));
        d2527 = (t13501 - a26541);
        d2528 = (d2527 - b1999);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38699 = ((t13501 < a26541));
        a38700 = ((t13501 == a26541));
        a38701 = ((a38700) && (b1999));
        b2000 = ((a38699) || (a38701));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2529 = (d2518 - b2000);
        b2001 = ((d2518 < b2000));
        t13504 = (t13502 - b2001);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2530 = (d2526 - b1998);
        b2002 = ((d2526 < b1998));
        t13505 = (d2528 - b2002);
        /* MPLessThanDI 64 */
        a38705 = ((d2528 == 0));
        b2003 = ((a38705) && (b2002));
        /* MPSubDDI 64 */
        d2531 = (d2529 - b2003);
        b2004 = ((d2529 < b2003));
        t13506 = (t13504 - b2004);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a38708 = ((t13502 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a38709 = ((d2518 == 0));
        a38710 = ((a38708) && (a38709));
        /* MPLessThan 64 */
        a38711 = ((a38710) && (b2000));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38712 = ((d2517 == a26542));
        a38713 = ((a38700) && (a38712));
        a38714 = ((a38710) && (a38713));
        /* MPLessThan 128 */
        a38715 = ((a38714) && (b1998));
        i678 = ((a38711) || (a38715));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13507 = ((i678) ? (t13502) : (t13506));
        t13508 = ((i678) ? (d2518) : (d2531));
        /* MPCondD 64 */
        t13509 = ((i678) ? (t13501) : (t13505));
        t13510 = ((i678) ? (d2517) : (d2530));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13511 = ((i678) ? (t13499) : (t13503));
        t13512 = ((i678) ? (d2509) : (d2525));
        /* MPCondD 64 */
        t13513 = ((i678) ? (d2505) : (d2521));
        t13514 = ((i678) ? (d2503) : (d2519));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a38716 = (256*i21);
        a38717 = (2*threadIdx.x);
        a38718 = (a38716 + a38717);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a38719 = (2*a38612);
        a38720 = (a38719 + 1);
        /* MPAssignDD 128 */
        a38721 = (2*a38720);
        /* MPAssignDD 64 */
        a38722 = (2*a38721);
        t13515 = P2[a38722];
        a38723 = (a38722 + 1);
        t13516 = P2[a38723];
        a38724 = (a38721 + 1);
        /* MPAssignDD 64 */
        a38725 = (2*a38724);
        t13517 = P2[a38725];
        a38726 = (a38725 + 1);
        t13518 = P2[a38726];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2378 = (((uint128_t ) t13518) + ((uint128_t ) t13514));
        t13519 = ((uint64_t ) s2378);
        c1273 = (s2378 >> 64);
        s2379 = (((uint128_t ) t13517) + ((uint128_t ) t13513));
        s2380 = (((uint128_t ) s2379) + ((uint128_t ) c1273));
        t13520 = ((uint64_t ) s2380);
        c1274 = (s2380 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2381 = (((uint128_t ) t13516) + ((uint128_t ) t13512));
        t13521 = ((uint64_t ) s2381);
        c1275 = (s2381 >> 64);
        s2382 = (((uint128_t ) t13515) + ((uint128_t ) t13511));
        s2383 = (((uint128_t ) s2382) + ((uint128_t ) c1275));
        t13522 = ((uint64_t ) s2383);
        c1276 = (s2383 >> 64);
        /* MPPropagateCarry 64 */
        t13523 = (t13521 + c1274);
        a38727 = ((t13523 == 0));
        a38728 = (t13522 + c1274);
        t13524 = ((a38727) ? (a38728) : (t13522));
        a38729 = ((t13524 == 0));
        a38730 = ((a38729) && (a38727));
        a38731 = (c1276 + c1274);
        t13525 = ((a38730) ? (a38731) : (c1276));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38735 = (2*a38719);
        a38736 = (a38735 + 1);
        /* MPAssignDD 64 */
        a38737 = (2*a38736);
        t13527 = P2[a38737];
        a38738 = (a38737 + 1);
        t13528 = P2[a38738];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2384 = (((uint128_t ) t13528) + ((uint128_t ) t13510));
        t13529 = ((uint64_t ) s2384);
        c1277 = (s2384 >> 64);
        s2385 = (((uint128_t ) t13527) + ((uint128_t ) t13509));
        s2386 = (((uint128_t ) s2385) + ((uint128_t ) c1277));
        t13530 = ((uint64_t ) s2386);
        c1278 = (s2386 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13531 = ((uint64_t ) t13508);
        c1279 = (t13508 >> 64);
        s2387 = (((uint128_t ) t13507) + ((uint128_t ) c1279));
        t13532 = ((uint64_t ) s2387);
        /* MPPropagateCarry 64 */
        t13533 = (t13531 + c1278);
        a38739 = ((t13533 == 0));
        a38740 = (t13532 + c1278);
        t13534 = ((a38739) ? (a38740) : (t13532));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2388 = (((uint128_t ) t13529) + ((uint128_t ) t13525));
        t13537 = ((uint64_t ) s2388);
        c1281 = (s2388 >> 64);
        s2389 = (((uint128_t ) t13530) + ((uint128_t ) c1281));
        t13538 = ((uint64_t ) s2389);
        /* MPEqualDI 64 */
        a38747 = ((t13538 == 0));
        a38748 = ((t13537 == 0));
        a38749 = ((a38747) && (a38748));
        /* MPAddDDI 64 */
        s2390 = (((uint128_t ) t13533) + ((uint128_t ) t13525));
        t13539 = ((uint64_t ) s2390);
        c1282 = (s2390 >> 64);
        s2391 = (((uint128_t ) t13534) + ((uint128_t ) c1282));
        t13540 = ((uint64_t ) s2391);
        /* MPCondD 64 */
        t13541 = ((a38749) ? (t13540) : (t13534));
        t13542 = ((a38749) ? (t13539) : (t13533));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a38750 = ((0 < t13541));
        a38751 = ((0 == t13541));
        a38752 = ((0 < t13542));
        a38753 = ((a38751) && (a38752));
        a38754 = ((a38750) || (a38753));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a38755 = ((0 == t13542));
        a38756 = ((a38751) && (a38755));
        /* MPLessThan 64 */
        a38757 = ((a26541 < t13538));
        a38758 = ((a26541 == t13538));
        a38759 = ((a26542 < t13537));
        a38760 = ((a38758) && (a38759));
        a38761 = ((a38757) || (a38760));
        a38762 = ((a38756) && (a38761));
        a38763 = ((a38754) || (a38762));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38764 = ((a26542 == t13537));
        a38765 = ((a38758) && (a38764));
        a38766 = ((a38756) && (a38765));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38767 = ((a26543 < t13524));
        a38768 = ((a26543 == t13524));
        a38769 = ((a26544 < t13523));
        a38770 = ((a38768) && (a38769));
        a38771 = ((a38767) || (a38770));
        /* MPEqual 64 */
        a38772 = ((a26544 == t13523));
        a38773 = ((a38768) && (a38772));
        /* MPLessThan 64 */
        a38774 = ((a26545 < t13520));
        a38775 = ((a26545 == t13520));
        a38776 = ((a26546 < t13519));
        a38777 = ((a38775) && (a38776));
        a38778 = ((a38774) || (a38777));
        a38779 = ((a38773) && (a38778));
        a38780 = ((a38771) || (a38779));
        a38781 = ((a38766) && (a38780));
        i679 = ((a38763) || (a38781));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2532 = (t13519 - a26546);
        b2005 = ((t13519 < a26546));
        d2533 = (t13520 - a26545);
        d2534 = (d2533 - b2005);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38783 = ((t13520 < a26545));
        a38784 = ((t13520 == a26545));
        a38785 = ((a38784) && (b2005));
        b2006 = ((a38783) || (a38785));
        /* Begin of MPSubDDD 64 */
        d2535 = (t13523 - a26544);
        b2007 = ((t13523 < a26544));
        d2536 = (t13524 - a26543);
        d2537 = (d2536 - b2007);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2538 = (d2535 - b2006);
        b2008 = ((d2535 < b2006));
        t13543 = (d2537 - b2008);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38789 = ((t13524 < a26543));
        a38790 = ((t13524 == a26543));
        a38791 = ((a38790) && (b2007));
        a38792 = ((a38789) || (a38791));
        /* MPEqual 64 */
        a38793 = ((t13523 == a26544));
        a38794 = ((a38790) && (a38793));
        /* MPLessThan 64 */
        a38795 = ((a38794) && (b2006));
        b2009 = ((a38792) || (a38795));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2539 = (t13537 - a26542);
        b2010 = ((t13537 < a26542));
        d2540 = (t13538 - a26541);
        d2541 = (d2540 - b2010);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2542 = (d2539 - b2009);
        b2011 = ((d2539 < b2009));
        t13544 = (d2541 - b2011);
        /* End of MPSubDDD 256 */
        a38799 = (2*a38718);
        /* MPCondD 128 */
        a38800 = (2*a38799);
        a38801 = (a38800 + 1);
        /* MPCondD 64 */
        a38802 = (2*a38801);
        P1[a38802] = ((i679) ? (t13544) : (t13538));
        a38803 = (a38802 + 1);
        P1[a38803] = ((i679) ? (d2542) : (t13537));
        a38804 = (a38799 + 1);
        /* MPCondD 128 */
        a38805 = (2*a38804);
        /* MPCondD 64 */
        a38806 = (2*a38805);
        P1[a38806] = ((i679) ? (t13543) : (t13524));
        a38807 = (a38806 + 1);
        P1[a38807] = ((i679) ? (d2538) : (t13523));
        a38808 = (a38805 + 1);
        /* MPCondD 64 */
        a38809 = (2*a38808);
        P1[a38809] = ((i679) ? (d2534) : (t13520));
        a38810 = (a38809 + 1);
        P1[a38810] = ((i679) ? (d2532) : (t13519));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b2012 = (a38717 + a38716);
        a38811 = (b2012 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2543 = (t13518 - t13514);
        b2013 = ((t13518 < t13514));
        d2544 = (t13517 - t13513);
        d2545 = (d2544 - b2013);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38813 = ((t13517 < t13513));
        a38814 = ((t13517 == t13513));
        a38815 = ((a38814) && (b2013));
        b2014 = ((a38813) || (a38815));
        /* Begin of MPSubDDD 64 */
        d2546 = (t13516 - t13512);
        b2015 = ((t13516 < t13512));
        d2547 = (t13515 - t13511);
        d2548 = (d2547 - b2015);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2549 = (d2546 - b2014);
        b2016 = ((d2546 < b2014));
        t13545 = (d2548 - b2016);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38819 = ((t13515 < t13511));
        a38820 = ((t13515 == t13511));
        a38821 = ((a38820) && (b2015));
        a38822 = ((a38819) || (a38821));
        /* MPEqual 64 */
        a38823 = ((t13516 == t13512));
        a38824 = ((a38820) && (a38823));
        /* MPLessThan 64 */
        a38825 = ((a38824) && (b2014));
        b2017 = ((a38822) || (a38825));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2550 = (t13528 - t13510);
        b2018 = ((t13528 < t13510));
        d2551 = (t13527 - t13509);
        d2552 = (d2551 - b2018);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2553 = (d2550 - b2017);
        b2019 = ((d2550 < b2017));
        t13546 = (d2552 - b2019);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2392 = (((uint128_t ) d2543) + ((uint128_t ) a26546));
        t13547 = ((uint64_t ) s2392);
        c1283 = (s2392 >> 64);
        s2393 = (((uint128_t ) d2545) + ((uint128_t ) a26545));
        s2394 = (((uint128_t ) s2393) + ((uint128_t ) c1283));
        t13548 = ((uint64_t ) s2394);
        c1284 = (s2394 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2395 = (((uint128_t ) d2549) + ((uint128_t ) a26544));
        t13549 = ((uint64_t ) s2395);
        c1285 = (s2395 >> 64);
        s2396 = (((uint128_t ) t13545) + ((uint128_t ) a26543));
        s2397 = (((uint128_t ) s2396) + ((uint128_t ) c1285));
        t13550 = ((uint64_t ) s2397);
        c1286 = (s2397 >> 64);
        /* MPPropagateCarry 64 */
        t13551 = (t13549 + c1284);
        a38829 = ((t13551 == 0));
        a38830 = (t13550 + c1284);
        t13552 = ((a38829) ? (a38830) : (t13550));
        a38831 = ((t13552 == 0));
        a38832 = ((a38831) && (a38829));
        a38833 = (c1286 + c1284);
        t13553 = ((a38832) ? (a38833) : (c1286));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2398 = (((uint128_t ) d2553) + ((uint128_t ) a26542));
        t13555 = ((uint64_t ) s2398);
        c1287 = (s2398 >> 64);
        s2399 = (((uint128_t ) t13546) + ((uint128_t ) a26541));
        s2400 = (((uint128_t ) s2399) + ((uint128_t ) c1287));
        t13556 = ((uint64_t ) s2400);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2401 = (((uint128_t ) t13555) + ((uint128_t ) t13553));
        t13557 = ((uint64_t ) s2401);
        c1289 = (s2401 >> 64);
        s2402 = (((uint128_t ) t13556) + ((uint128_t ) c1289));
        t13558 = ((uint64_t ) s2402);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38837 = ((0 < t13507));
        a38838 = ((0 == t13507));
        a38839 = ((0 < t13508));
        a38840 = ((a38838) && (a38839));
        a38841 = ((a38837) || (a38840));
        /* MPEqual 64 */
        a38842 = ((0 == t13508));
        a38843 = ((a38838) && (a38842));
        /* MPLessThan 64 */
        a38844 = ((t13527 < t13509));
        a38845 = ((t13527 == t13509));
        a38846 = ((a38845) && (b2018));
        a38847 = ((a38844) || (a38846));
        a38848 = ((a38843) && (a38847));
        a38849 = ((a38841) || (a38848));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38850 = ((t13528 == t13510));
        a38851 = ((a38845) && (a38850));
        a38852 = ((a38843) && (a38851));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a38853 = ((a38852) && (b2017));
        i680 = ((a38849) || (a38853));
        a38854 = (2*a38811);
        /* MPCondD 128 */
        a38855 = (2*a38854);
        a38856 = (a38855 + 1);
        /* MPCondD 64 */
        a38857 = (2*a38856);
        P1[a38857] = ((i680) ? (t13558) : (t13546));
        a38858 = (a38857 + 1);
        P1[a38858] = ((i680) ? (t13557) : (d2553));
        a38859 = (a38854 + 1);
        /* MPCondD 128 */
        a38860 = (2*a38859);
        /* MPCondD 64 */
        a38861 = (2*a38860);
        P1[a38861] = ((i680) ? (t13552) : (t13545));
        a38862 = (a38861 + 1);
        P1[a38862] = ((i680) ? (t13551) : (d2549));
        a38863 = (a38860 + 1);
        /* MPCondD 64 */
        a38864 = (2*a38863);
        P1[a38864] = ((i680) ? (t13548) : (d2545));
        a38865 = (a38864 + 1);
        P1[a38865] = ((i680) ? (t13547) : (d2543));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code11(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a38866, a38867, a38868, a38869, a38870, a38871, a38872, a38873, 
            a38874, a38875, a38876, a38877, a38878, a38879, a38880, a38881, 
            a38882, a38883, a38884, a38885, a38886, a38887, a38888, a38889, 
            a38890, a38891, a38892, a38893, a38894, a38913, a38914, a38915, 
            a38919, a38920, a38921, a38922, a38923, a38924, a38925, a38928, 
            a38929, a38930, a38935, a38939, a38940, a38941, a38945, a38946, 
            a38947, a38948, a38949, a38950, a38951, a38954, a38955, a38956, 
            a38960, a38963, a38964, a38965, a38966, a38967, a38968, a38969, 
            a38970, a38971, a38972, a38973, a38974, a38975, a38976, a38977, 
            a38978, a38979, a38980, a38981, a38982, a38984, a38985, a38990, 
            a38991, a38992, a38993, a38994, a39002, a39003, a39004, a39005, 
            a39006, a39007, a39008, a39009, a39010, a39011, a39012, a39013, 
            a39014, a39015, a39016, a39017, a39018, a39019, a39020, a39021, 
            a39022, a39023, a39024, a39025, a39026, a39027, a39028, a39029, 
            a39030, a39031, a39032, a39033, a39034, a39035, a39036, a39038, 
            a39039, a39040, a39044, a39045, a39046, a39047, a39048, a39049, 
            a39050, a39054, a39055, a39056, a39057, a39058, a39059, a39060, 
            a39061, a39062, a39063, a39064, a39065, a39066, a39068, a39069, 
            a39070, a39074, a39075, a39076, a39077, a39078, a39079, a39080, 
            a39084, a39086, a39087, a39092, a39093, a39094, a39095, a39096, 
            a39097, a39098, a39099, a39100, a39101, a39102, a39103, a39104, 
            a39105, a39106, a39107, a39108, a39109, a39110, a39111, a39112, 
            a39113, a39114, a39115, a39116, a39117, a39118, a39119, a39120, 
            b2020, b2021, b2023, b2024, b2025, b2026, b2027, b2028, 
            b2029, b2030, b2031, b2032, b2033, b2034, b2035, b2036, 
            b2037, b2038, b2039, b2040, b2041, b2042, b2043, b2044, 
            b2045, b2046, b2047, b2048, b2049, b2050, b2051, b2052, 
            b2053, b2054, b2055, b2056, b2057, b2058, b2059, b2060, 
            c1290, c1291, c1292, c1293, c1294, c1295, c1296, c1298, 
            c1299, c1300, c1301, c1302, c1303, c1304, c1306, i681, 
            i682, i683;
    uint64_t a27347, a27348, a27349, a27350, a27351, a27352, a27452, a27453, 
            a27454, a27455, a27456, a27457, a38895, a38896, a38897, a38898, 
            a38899, a38900, a38901, a38902, a38903, a38904, a38906, a38907, 
            a38908, a38909, a38910, a38911, a38983, a38986, a38995, a39085, 
            a39088, d2554, d2555, d2556, d2557, d2558, d2559, d2560, 
            d2561, d2562, d2563, d2564, d2565, d2566, d2567, d2568, 
            d2569, d2570, d2571, d2572, d2573, d2574, d2575, d2576, 
            d2577, d2578, d2579, d2580, d2581, d2582, d2583, d2584, 
            d2585, d2586, d2587, d2588, d2589, d2590, d2591, d2592, 
            d2593, d2594, d2595, d2596, d2597, d2598, d2599, d2600, 
            d2601, d2602, d2603, d2604, d2605, t13559, t13560, t13561, 
            t13562, t13563, t13564, t13565, t13566, t13567, t13568, t13569, 
            t13570, t13571, t13572, t13573, t13574, t13575, t13576, t13577, 
            t13578, t13579, t13580, t13581, t13582, t13583, t13584, t13585, 
            t13586, t13587, t13588, t13589, t13590, t13591, t13592, t13595, 
            t13596, t13597, t13598, t13599, t13600, t13601, t13602, t13603, 
            t13604, t13605, t13606, t13607, t13608, t13609, t13610, t13611, 
            t13612, t13613, t13614, t13615, t13616, t13617, t13618, t13619, 
            t13620, t13621, t13622, t13623, t13624, t13625, t13626, t13627, 
            t13628, t13629, t13630, t13631, t13632, t13633, t13634, t13635, 
            t13636, t13637, t13638, t13640, t13641, t13642, t13643, t13644, 
            t13645, t13646, t13647, t13650, t13651, t13652, t13653, t13654, 
            t13655, t13656, t13657, t13658, t13659, t13660, t13661, t13662, 
            t13663, t13664, t13665, t13666, t13668, t13669, t13670, t13671, 
            t7931, t7932, t7933, t7934, t7935, t7936, t7937, t7938, 
            t7939, t7940, t7941, t7942, t7943, t7944, t7945, t7946, 
            t7947, t7948, t7949, t7950, t7951, t7952, t7953, t7954, 
            t7955, t7956, t7957, t7958, t7959, t7960, t7961, t7962, 
            t7963, t7964, t7965, t7966, t7967, t7968, t7969, t7970, 
            t7971, t7972, t7973, t7974, t7975, t7976, t7977, t7978;
    uint128_t s2403, s2404, s2405, s2406, s2407, s2408, s2409, s2410, 
            s2411, s2412, s2413, s2414, s2415, s2416, s2417, s2418, 
            s2419, s2420, s2421, s2422, s2423, s2424, s2425, s2426, 
            s2427;
    for(int i19 = 0; i19 <= 4095; i19++) {
        a38866 = (128*i19);
        a38867 = (a38866 + threadIdx.x);
        b2020 = (threadIdx.x + a38866);
        a38868 = (b2020 + 524288);
        a38869 = (a38868 % 2048);
        a38870 = (2048 + a38869);
        /* Begin of MPModMul 256 */
        a38871 = (2*a38870);
        a38872 = (a38871 + 1);
        a38873 = (2*a38868);
        a38874 = (a38873 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38875 = (2*a38871);
        a38876 = (a38875 + 1);
        /* MPAssignDD 64 */
        a38877 = (2*a38876);
        t13559 = twiddles[a38877];
        a38878 = (a38877 + 1);
        t13560 = twiddles[a38878];
        /* MPAssignDD 128 */
        a38879 = (2*a38872);
        /* MPAssignDD 64 */
        a38880 = (2*a38879);
        t13561 = twiddles[a38880];
        a38881 = (a38880 + 1);
        t13562 = twiddles[a38881];
        a38882 = (a38879 + 1);
        /* MPAssignDD 64 */
        a38883 = (2*a38882);
        t13563 = twiddles[a38883];
        a38884 = (a38883 + 1);
        t13564 = twiddles[a38884];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38885 = (2*a38873);
        a38886 = (a38885 + 1);
        /* MPAssignDD 64 */
        a38887 = (2*a38886);
        t13565 = P1[a38887];
        a38888 = (a38887 + 1);
        t13566 = P1[a38888];
        /* MPAssignDD 128 */
        a38889 = (2*a38874);
        /* MPAssignDD 64 */
        a38890 = (2*a38889);
        t13567 = P1[a38890];
        a38891 = (a38890 + 1);
        t13568 = P1[a38891];
        a38892 = (a38889 + 1);
        /* MPAssignDD 64 */
        a38893 = (2*a38892);
        t13569 = P1[a38893];
        a38894 = (a38893 + 1);
        t13570 = P1[a38894];
        MPMulQDD_L3_2(t7943, t7944, t7945, t7946, t7939, t7940, t7941, t7942, 
    t7935, t7936, t7937, t7938, t7931, t7932, t7933, t7934, 
    0, 0, t13559, t13560, t13561, t13562, t13563, t13564, 
    0, 0, t13565, t13566, t13567, t13568, t13569, t13570);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13571 = (t7935 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a38895 = (t7935 << 6);
        a38896 = (t7936 >> 58);
        t13572 = (((a38895)|(a38896)));
        t13573 = (t7936 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13574 = (t7937 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13575 = (((t13573)|(t13574)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2021 = ((int) 1);
        t13576 = (288230376151711744 - b2021);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13577 = (((t7945)&(t13576)));
        t13578 = (((t7946)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a38897 = (t13577 << 6);
        a38898 = (t13578 >> 58);
        t13579 = (((a38897)|(a38898)));
        t13580 = (t13578 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13581 = (t7939 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a38899 = (t7939 << 6);
        a38900 = (t7940 >> 58);
        t13582 = (((a38899)|(a38900)));
        t13583 = (t7940 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13584 = (t7941 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13585 = (((t13583)|(t13584)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13586 = (((t13580)|(t13581)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a38901 = (t7941 << 6);
        a38902 = (t7942 >> 58);
        t13587 = (((a38901)|(a38902)));
        t13588 = (t7942 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13589 = (((t13588)|(t13571)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a27347 = mu[2];
        a27348 = mu[3];
        a27349 = mu[4];
        a27350 = mu[5];
        a27351 = mu[6];
        a27352 = mu[7];
        MPMulQDD_L3_1(t7975, t7976, t7977, t7978, t7971, t7972, t7973, t7974, 
    t7967, t7968, t7969, t7970, t7963, t7964, t7965, t7966, 
    t13579, t13586, t13582, t13585, t13587, t13589, t13572, t13575, 
    0, 0, a27347, a27348, a27349, a27350, a27351, a27352);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13590 = (t7967 >> 1);
        a38903 = (t7967 << 63);
        a38904 = (t7968 >> 1);
        t13591 = (((a38903)|(a38904)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13592 = (0 - b2021);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2554 = (2 - b2021);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13595 = (((t7976)&(d2554)));
        /* MPBinAndD 64 */
        t13596 = (((t7977)&(t13592)));
        t13597 = (((t7978)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13598 = (t13595 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13599 = (t13596 >> 1);
        a38906 = (t13596 << 63);
        a38907 = (t13597 >> 1);
        t13600 = (((a38906)|(a38907)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13601 = (((t13598)|(t13599)));
        /* Begin of MPShiftLeft1D */
        t13602 = (t13597 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13603 = (t7971 >> 1);
        a38908 = (t7971 << 63);
        a38909 = (t7972 >> 1);
        t13604 = (((a38908)|(a38909)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13605 = (((t13602)|(t13603)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13606 = (t7972 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13607 = (t7973 >> 1);
        a38910 = (t7973 << 63);
        a38911 = (t7974 >> 1);
        t13608 = (((a38910)|(a38911)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13609 = (((t13606)|(t13607)));
        /* Begin of MPShiftLeft1D */
        t13610 = (t7974 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13611 = (((t13610)|(t13590)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a27452 = modulus[2];
        a27453 = modulus[3];
        a27454 = modulus[4];
        a27455 = modulus[5];
        a27456 = modulus[6];
        a27457 = modulus[7];
        MPMulQDD_L3_1(t7959, t7960, t7961, t7962, t7955, t7956, t7957, t7958, 
    t7951, t7952, t7953, t7954, t7947, t7948, t7949, t7950, 
    t13601, t13600, t13605, t13604, t13609, t13608, t13611, t13591, 
    0, 0, a27452, a27453, a27454, a27455, a27456, a27457);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2555 = (t7934 - t7950);
        b2023 = ((t7934 < t7950));
        d2556 = (t7933 - t7949);
        d2557 = (d2556 - b2023);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38913 = ((t7933 < t7949));
        a38914 = ((t7933 == t7949));
        a38915 = ((a38914) && (b2023));
        b2024 = ((a38913) || (a38915));
        /* Begin of MPSubDDD 64 */
        d2558 = (t7932 - t7948);
        b2025 = ((t7932 < t7948));
        d2559 = (t7931 - t7947);
        d2560 = (d2559 - b2025);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2561 = (d2558 - b2024);
        b2026 = ((d2558 < b2024));
        t13612 = (d2560 - b2026);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38919 = ((t7931 < t7947));
        a38920 = ((t7931 == t7947));
        a38921 = ((a38920) && (b2025));
        a38922 = ((a38919) || (a38921));
        /* MPEqual 64 */
        a38923 = ((t7932 == t7948));
        a38924 = ((a38920) && (a38923));
        /* MPLessThan 64 */
        a38925 = ((a38924) && (b2024));
        b2027 = ((a38922) || (a38925));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2562 = (t7938 - t7954);
        b2028 = ((t7938 < t7954));
        d2563 = (t7937 - t7953);
        d2564 = (d2563 - b2028);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38928 = ((t7937 < t7953));
        a38929 = ((t7937 == t7953));
        a38930 = ((a38929) && (b2028));
        b2029 = ((a38928) || (a38930));
        /* Begin of MPSubDDD 64 */
        d2565 = (t7936 - t7952);
        b2030 = ((t7936 < t7952));
        d2566 = (t7935 - t7951);
        d2567 = (d2566 - b2030);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2568 = (d2565 - b2029);
        b2031 = ((d2565 < b2029));
        t13613 = (d2567 - b2031);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2569 = (d2562 - b2027);
        b2032 = ((d2562 < b2027));
        t13614 = (d2564 - b2032);
        /* MPLessThanDI 64 */
        a38935 = ((d2564 == 0));
        b2033 = ((a38935) && (b2032));
        /* MPSubDDI 64 */
        d2570 = (d2568 - b2033);
        b2034 = ((d2568 < b2033));
        t13615 = (t13613 - b2034);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2571 = (d2555 - a27457);
        b2035 = ((d2555 < a27457));
        d2572 = (d2557 - a27456);
        d2573 = (d2572 - b2035);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38939 = ((d2557 < a27456));
        a38940 = ((d2557 == a27456));
        a38941 = ((a38940) && (b2035));
        b2036 = ((a38939) || (a38941));
        /* Begin of MPSubDDD 64 */
        d2574 = (d2561 - a27455);
        b2037 = ((d2561 < a27455));
        d2575 = (t13612 - a27454);
        d2576 = (d2575 - b2037);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2577 = (d2574 - b2036);
        b2038 = ((d2574 < b2036));
        t13616 = (d2576 - b2038);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a38945 = ((t13612 < a27454));
        a38946 = ((t13612 == a27454));
        a38947 = ((a38946) && (b2037));
        a38948 = ((a38945) || (a38947));
        /* MPEqual 64 */
        a38949 = ((d2561 == a27455));
        a38950 = ((a38946) && (a38949));
        /* MPLessThan 64 */
        a38951 = ((a38950) && (b2036));
        b2039 = ((a38948) || (a38951));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2578 = (d2569 - a27453);
        b2040 = ((d2569 < a27453));
        d2579 = (t13614 - a27452);
        d2580 = (d2579 - b2040);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a38954 = ((t13614 < a27452));
        a38955 = ((t13614 == a27452));
        a38956 = ((a38955) && (b2040));
        b2041 = ((a38954) || (a38956));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2581 = (d2570 - b2041);
        b2042 = ((d2570 < b2041));
        t13617 = (t13615 - b2042);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2582 = (d2578 - b2039);
        b2043 = ((d2578 < b2039));
        t13618 = (d2580 - b2043);
        /* MPLessThanDI 64 */
        a38960 = ((d2580 == 0));
        b2044 = ((a38960) && (b2043));
        /* MPSubDDI 64 */
        d2583 = (d2581 - b2044);
        b2045 = ((d2581 < b2044));
        t13619 = (t13617 - b2045);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a38963 = ((t13615 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a38964 = ((d2570 == 0));
        a38965 = ((a38963) && (a38964));
        /* MPLessThan 64 */
        a38966 = ((a38965) && (b2041));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a38967 = ((d2569 == a27453));
        a38968 = ((a38955) && (a38967));
        a38969 = ((a38965) && (a38968));
        /* MPLessThan 128 */
        a38970 = ((a38969) && (b2039));
        i681 = ((a38966) || (a38970));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13620 = ((i681) ? (t13615) : (t13619));
        t13621 = ((i681) ? (d2570) : (d2583));
        /* MPCondD 64 */
        t13622 = ((i681) ? (t13614) : (t13618));
        t13623 = ((i681) ? (d2569) : (d2582));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13624 = ((i681) ? (t13612) : (t13616));
        t13625 = ((i681) ? (d2561) : (d2577));
        /* MPCondD 64 */
        t13626 = ((i681) ? (d2557) : (d2573));
        t13627 = ((i681) ? (d2555) : (d2571));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a38971 = (256*i19);
        a38972 = (2*threadIdx.x);
        a38973 = (a38971 + a38972);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a38974 = (2*a38867);
        a38975 = (a38974 + 1);
        /* MPAssignDD 128 */
        a38976 = (2*a38975);
        /* MPAssignDD 64 */
        a38977 = (2*a38976);
        t13628 = P1[a38977];
        a38978 = (a38977 + 1);
        t13629 = P1[a38978];
        a38979 = (a38976 + 1);
        /* MPAssignDD 64 */
        a38980 = (2*a38979);
        t13630 = P1[a38980];
        a38981 = (a38980 + 1);
        t13631 = P1[a38981];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2403 = (((uint128_t ) t13631) + ((uint128_t ) t13627));
        t13632 = ((uint64_t ) s2403);
        c1290 = (s2403 >> 64);
        s2404 = (((uint128_t ) t13630) + ((uint128_t ) t13626));
        s2405 = (((uint128_t ) s2404) + ((uint128_t ) c1290));
        t13633 = ((uint64_t ) s2405);
        c1291 = (s2405 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2406 = (((uint128_t ) t13629) + ((uint128_t ) t13625));
        t13634 = ((uint64_t ) s2406);
        c1292 = (s2406 >> 64);
        s2407 = (((uint128_t ) t13628) + ((uint128_t ) t13624));
        s2408 = (((uint128_t ) s2407) + ((uint128_t ) c1292));
        t13635 = ((uint64_t ) s2408);
        c1293 = (s2408 >> 64);
        /* MPPropagateCarry 64 */
        t13636 = (t13634 + c1291);
        a38982 = ((t13636 == 0));
        a38983 = (t13635 + c1291);
        t13637 = ((a38982) ? (a38983) : (t13635));
        a38984 = ((t13637 == 0));
        a38985 = ((a38984) && (a38982));
        a38986 = (c1293 + c1291);
        t13638 = ((a38985) ? (a38986) : (c1293));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a38990 = (2*a38974);
        a38991 = (a38990 + 1);
        /* MPAssignDD 64 */
        a38992 = (2*a38991);
        t13640 = P1[a38992];
        a38993 = (a38992 + 1);
        t13641 = P1[a38993];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2409 = (((uint128_t ) t13641) + ((uint128_t ) t13623));
        t13642 = ((uint64_t ) s2409);
        c1294 = (s2409 >> 64);
        s2410 = (((uint128_t ) t13640) + ((uint128_t ) t13622));
        s2411 = (((uint128_t ) s2410) + ((uint128_t ) c1294));
        t13643 = ((uint64_t ) s2411);
        c1295 = (s2411 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13644 = ((uint64_t ) t13621);
        c1296 = (t13621 >> 64);
        s2412 = (((uint128_t ) t13620) + ((uint128_t ) c1296));
        t13645 = ((uint64_t ) s2412);
        /* MPPropagateCarry 64 */
        t13646 = (t13644 + c1295);
        a38994 = ((t13646 == 0));
        a38995 = (t13645 + c1295);
        t13647 = ((a38994) ? (a38995) : (t13645));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2413 = (((uint128_t ) t13642) + ((uint128_t ) t13638));
        t13650 = ((uint64_t ) s2413);
        c1298 = (s2413 >> 64);
        s2414 = (((uint128_t ) t13643) + ((uint128_t ) c1298));
        t13651 = ((uint64_t ) s2414);
        /* MPEqualDI 64 */
        a39002 = ((t13651 == 0));
        a39003 = ((t13650 == 0));
        a39004 = ((a39002) && (a39003));
        /* MPAddDDI 64 */
        s2415 = (((uint128_t ) t13646) + ((uint128_t ) t13638));
        t13652 = ((uint64_t ) s2415);
        c1299 = (s2415 >> 64);
        s2416 = (((uint128_t ) t13647) + ((uint128_t ) c1299));
        t13653 = ((uint64_t ) s2416);
        /* MPCondD 64 */
        t13654 = ((a39004) ? (t13653) : (t13647));
        t13655 = ((a39004) ? (t13652) : (t13646));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a39005 = ((0 < t13654));
        a39006 = ((0 == t13654));
        a39007 = ((0 < t13655));
        a39008 = ((a39006) && (a39007));
        a39009 = ((a39005) || (a39008));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a39010 = ((0 == t13655));
        a39011 = ((a39006) && (a39010));
        /* MPLessThan 64 */
        a39012 = ((a27452 < t13651));
        a39013 = ((a27452 == t13651));
        a39014 = ((a27453 < t13650));
        a39015 = ((a39013) && (a39014));
        a39016 = ((a39012) || (a39015));
        a39017 = ((a39011) && (a39016));
        a39018 = ((a39009) || (a39017));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39019 = ((a27453 == t13650));
        a39020 = ((a39013) && (a39019));
        a39021 = ((a39011) && (a39020));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39022 = ((a27454 < t13637));
        a39023 = ((a27454 == t13637));
        a39024 = ((a27455 < t13636));
        a39025 = ((a39023) && (a39024));
        a39026 = ((a39022) || (a39025));
        /* MPEqual 64 */
        a39027 = ((a27455 == t13636));
        a39028 = ((a39023) && (a39027));
        /* MPLessThan 64 */
        a39029 = ((a27456 < t13633));
        a39030 = ((a27456 == t13633));
        a39031 = ((a27457 < t13632));
        a39032 = ((a39030) && (a39031));
        a39033 = ((a39029) || (a39032));
        a39034 = ((a39028) && (a39033));
        a39035 = ((a39026) || (a39034));
        a39036 = ((a39021) && (a39035));
        i682 = ((a39018) || (a39036));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2584 = (t13632 - a27457);
        b2046 = ((t13632 < a27457));
        d2585 = (t13633 - a27456);
        d2586 = (d2585 - b2046);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39038 = ((t13633 < a27456));
        a39039 = ((t13633 == a27456));
        a39040 = ((a39039) && (b2046));
        b2047 = ((a39038) || (a39040));
        /* Begin of MPSubDDD 64 */
        d2587 = (t13636 - a27455);
        b2048 = ((t13636 < a27455));
        d2588 = (t13637 - a27454);
        d2589 = (d2588 - b2048);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2590 = (d2587 - b2047);
        b2049 = ((d2587 < b2047));
        t13656 = (d2589 - b2049);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39044 = ((t13637 < a27454));
        a39045 = ((t13637 == a27454));
        a39046 = ((a39045) && (b2048));
        a39047 = ((a39044) || (a39046));
        /* MPEqual 64 */
        a39048 = ((t13636 == a27455));
        a39049 = ((a39045) && (a39048));
        /* MPLessThan 64 */
        a39050 = ((a39049) && (b2047));
        b2050 = ((a39047) || (a39050));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2591 = (t13650 - a27453);
        b2051 = ((t13650 < a27453));
        d2592 = (t13651 - a27452);
        d2593 = (d2592 - b2051);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2594 = (d2591 - b2050);
        b2052 = ((d2591 < b2050));
        t13657 = (d2593 - b2052);
        /* End of MPSubDDD 256 */
        a39054 = (2*a38973);
        /* MPCondD 128 */
        a39055 = (2*a39054);
        a39056 = (a39055 + 1);
        /* MPCondD 64 */
        a39057 = (2*a39056);
        P2[a39057] = ((i682) ? (t13657) : (t13651));
        a39058 = (a39057 + 1);
        P2[a39058] = ((i682) ? (d2594) : (t13650));
        a39059 = (a39054 + 1);
        /* MPCondD 128 */
        a39060 = (2*a39059);
        /* MPCondD 64 */
        a39061 = (2*a39060);
        P2[a39061] = ((i682) ? (t13656) : (t13637));
        a39062 = (a39061 + 1);
        P2[a39062] = ((i682) ? (d2590) : (t13636));
        a39063 = (a39060 + 1);
        /* MPCondD 64 */
        a39064 = (2*a39063);
        P2[a39064] = ((i682) ? (d2586) : (t13633));
        a39065 = (a39064 + 1);
        P2[a39065] = ((i682) ? (d2584) : (t13632));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b2053 = (a38972 + a38971);
        a39066 = (b2053 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2595 = (t13631 - t13627);
        b2054 = ((t13631 < t13627));
        d2596 = (t13630 - t13626);
        d2597 = (d2596 - b2054);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39068 = ((t13630 < t13626));
        a39069 = ((t13630 == t13626));
        a39070 = ((a39069) && (b2054));
        b2055 = ((a39068) || (a39070));
        /* Begin of MPSubDDD 64 */
        d2598 = (t13629 - t13625);
        b2056 = ((t13629 < t13625));
        d2599 = (t13628 - t13624);
        d2600 = (d2599 - b2056);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2601 = (d2598 - b2055);
        b2057 = ((d2598 < b2055));
        t13658 = (d2600 - b2057);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39074 = ((t13628 < t13624));
        a39075 = ((t13628 == t13624));
        a39076 = ((a39075) && (b2056));
        a39077 = ((a39074) || (a39076));
        /* MPEqual 64 */
        a39078 = ((t13629 == t13625));
        a39079 = ((a39075) && (a39078));
        /* MPLessThan 64 */
        a39080 = ((a39079) && (b2055));
        b2058 = ((a39077) || (a39080));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2602 = (t13641 - t13623);
        b2059 = ((t13641 < t13623));
        d2603 = (t13640 - t13622);
        d2604 = (d2603 - b2059);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2605 = (d2602 - b2058);
        b2060 = ((d2602 < b2058));
        t13659 = (d2604 - b2060);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2417 = (((uint128_t ) d2595) + ((uint128_t ) a27457));
        t13660 = ((uint64_t ) s2417);
        c1300 = (s2417 >> 64);
        s2418 = (((uint128_t ) d2597) + ((uint128_t ) a27456));
        s2419 = (((uint128_t ) s2418) + ((uint128_t ) c1300));
        t13661 = ((uint64_t ) s2419);
        c1301 = (s2419 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2420 = (((uint128_t ) d2601) + ((uint128_t ) a27455));
        t13662 = ((uint64_t ) s2420);
        c1302 = (s2420 >> 64);
        s2421 = (((uint128_t ) t13658) + ((uint128_t ) a27454));
        s2422 = (((uint128_t ) s2421) + ((uint128_t ) c1302));
        t13663 = ((uint64_t ) s2422);
        c1303 = (s2422 >> 64);
        /* MPPropagateCarry 64 */
        t13664 = (t13662 + c1301);
        a39084 = ((t13664 == 0));
        a39085 = (t13663 + c1301);
        t13665 = ((a39084) ? (a39085) : (t13663));
        a39086 = ((t13665 == 0));
        a39087 = ((a39086) && (a39084));
        a39088 = (c1303 + c1301);
        t13666 = ((a39087) ? (a39088) : (c1303));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2423 = (((uint128_t ) d2605) + ((uint128_t ) a27453));
        t13668 = ((uint64_t ) s2423);
        c1304 = (s2423 >> 64);
        s2424 = (((uint128_t ) t13659) + ((uint128_t ) a27452));
        s2425 = (((uint128_t ) s2424) + ((uint128_t ) c1304));
        t13669 = ((uint64_t ) s2425);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2426 = (((uint128_t ) t13668) + ((uint128_t ) t13666));
        t13670 = ((uint64_t ) s2426);
        c1306 = (s2426 >> 64);
        s2427 = (((uint128_t ) t13669) + ((uint128_t ) c1306));
        t13671 = ((uint64_t ) s2427);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39092 = ((0 < t13620));
        a39093 = ((0 == t13620));
        a39094 = ((0 < t13621));
        a39095 = ((a39093) && (a39094));
        a39096 = ((a39092) || (a39095));
        /* MPEqual 64 */
        a39097 = ((0 == t13621));
        a39098 = ((a39093) && (a39097));
        /* MPLessThan 64 */
        a39099 = ((t13640 < t13622));
        a39100 = ((t13640 == t13622));
        a39101 = ((a39100) && (b2059));
        a39102 = ((a39099) || (a39101));
        a39103 = ((a39098) && (a39102));
        a39104 = ((a39096) || (a39103));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39105 = ((t13641 == t13623));
        a39106 = ((a39100) && (a39105));
        a39107 = ((a39098) && (a39106));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a39108 = ((a39107) && (b2058));
        i683 = ((a39104) || (a39108));
        a39109 = (2*a39066);
        /* MPCondD 128 */
        a39110 = (2*a39109);
        a39111 = (a39110 + 1);
        /* MPCondD 64 */
        a39112 = (2*a39111);
        P2[a39112] = ((i683) ? (t13671) : (t13659));
        a39113 = (a39112 + 1);
        P2[a39113] = ((i683) ? (t13670) : (d2605));
        a39114 = (a39109 + 1);
        /* MPCondD 128 */
        a39115 = (2*a39114);
        /* MPCondD 64 */
        a39116 = (2*a39115);
        P2[a39116] = ((i683) ? (t13665) : (t13658));
        a39117 = (a39116 + 1);
        P2[a39117] = ((i683) ? (t13664) : (d2601));
        a39118 = (a39115 + 1);
        /* MPCondD 64 */
        a39119 = (2*a39118);
        P2[a39119] = ((i683) ? (t13661) : (d2597));
        a39120 = (a39119 + 1);
        P2[a39120] = ((i683) ? (t13660) : (d2595));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code12(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a39121, a39122, a39123, a39124, a39125, a39126, a39127, a39128, 
            a39129, a39130, a39131, a39132, a39133, a39134, a39135, a39136, 
            a39137, a39138, a39139, a39140, a39141, a39142, a39143, a39144, 
            a39145, a39146, a39147, a39148, a39149, a39168, a39169, a39170, 
            a39174, a39175, a39176, a39177, a39178, a39179, a39180, a39183, 
            a39184, a39185, a39190, a39194, a39195, a39196, a39200, a39201, 
            a39202, a39203, a39204, a39205, a39206, a39209, a39210, a39211, 
            a39215, a39218, a39219, a39220, a39221, a39222, a39223, a39224, 
            a39225, a39226, a39227, a39228, a39229, a39230, a39231, a39232, 
            a39233, a39234, a39235, a39236, a39237, a39239, a39240, a39245, 
            a39246, a39247, a39248, a39249, a39257, a39258, a39259, a39260, 
            a39261, a39262, a39263, a39264, a39265, a39266, a39267, a39268, 
            a39269, a39270, a39271, a39272, a39273, a39274, a39275, a39276, 
            a39277, a39278, a39279, a39280, a39281, a39282, a39283, a39284, 
            a39285, a39286, a39287, a39288, a39289, a39290, a39291, a39293, 
            a39294, a39295, a39299, a39300, a39301, a39302, a39303, a39304, 
            a39305, a39309, a39310, a39311, a39312, a39313, a39314, a39315, 
            a39316, a39317, a39318, a39319, a39320, a39321, a39323, a39324, 
            a39325, a39329, a39330, a39331, a39332, a39333, a39334, a39335, 
            a39339, a39341, a39342, a39347, a39348, a39349, a39350, a39351, 
            a39352, a39353, a39354, a39355, a39356, a39357, a39358, a39359, 
            a39360, a39361, a39362, a39363, a39364, a39365, a39366, a39367, 
            a39368, a39369, a39370, a39371, a39372, a39373, a39374, a39375, 
            b2061, b2062, b2064, b2065, b2066, b2067, b2068, b2069, 
            b2070, b2071, b2072, b2073, b2074, b2075, b2076, b2077, 
            b2078, b2079, b2080, b2081, b2082, b2083, b2084, b2085, 
            b2086, b2087, b2088, b2089, b2090, b2091, b2092, b2093, 
            b2094, b2095, b2096, b2097, b2098, b2099, b2100, b2101, 
            c1307, c1308, c1309, c1310, c1311, c1312, c1313, c1315, 
            c1316, c1317, c1318, c1319, c1320, c1321, c1323, i684, 
            i685, i686;
    uint64_t a28258, a28259, a28260, a28261, a28262, a28263, a28363, a28364, 
            a28365, a28366, a28367, a28368, a39150, a39151, a39152, a39153, 
            a39154, a39155, a39156, a39157, a39158, a39159, a39161, a39162, 
            a39163, a39164, a39165, a39166, a39238, a39241, a39250, a39340, 
            a39343, d2606, d2607, d2608, d2609, d2610, d2611, d2612, 
            d2613, d2614, d2615, d2616, d2617, d2618, d2619, d2620, 
            d2621, d2622, d2623, d2624, d2625, d2626, d2627, d2628, 
            d2629, d2630, d2631, d2632, d2633, d2634, d2635, d2636, 
            d2637, d2638, d2639, d2640, d2641, d2642, d2643, d2644, 
            d2645, d2646, d2647, d2648, d2649, d2650, d2651, d2652, 
            d2653, d2654, d2655, d2656, d2657, t13672, t13673, t13674, 
            t13675, t13676, t13677, t13678, t13679, t13680, t13681, t13682, 
            t13683, t13684, t13685, t13686, t13687, t13688, t13689, t13690, 
            t13691, t13692, t13693, t13694, t13695, t13696, t13697, t13698, 
            t13699, t13700, t13701, t13702, t13703, t13704, t13705, t13708, 
            t13709, t13710, t13711, t13712, t13713, t13714, t13715, t13716, 
            t13717, t13718, t13719, t13720, t13721, t13722, t13723, t13724, 
            t13725, t13726, t13727, t13728, t13729, t13730, t13731, t13732, 
            t13733, t13734, t13735, t13736, t13737, t13738, t13739, t13740, 
            t13741, t13742, t13743, t13744, t13745, t13746, t13747, t13748, 
            t13749, t13750, t13751, t13753, t13754, t13755, t13756, t13757, 
            t13758, t13759, t13760, t13763, t13764, t13765, t13766, t13767, 
            t13768, t13769, t13770, t13771, t13772, t13773, t13774, t13775, 
            t13776, t13777, t13778, t13779, t13781, t13782, t13783, t13784, 
            t7997, t7998, t7999, t8000, t8001, t8002, t8003, t8004, 
            t8005, t8006, t8007, t8008, t8009, t8010, t8013, t8014, 
            t8015, t8016, t8017, t8018, t8019, t8020, t8021, t8022, 
            t8023, t8024, t8025, t8026, t8027, t8028, t8029, t8030, 
            t8031, t8032, t8033, t8034, t8035, t8036, t8037, t8038, 
            t8039, t8040, t8041, t8042, t8043, t8044, t8045, t8046;
    uint128_t s2428, s2429, s2430, s2431, s2432, s2433, s2434, s2435, 
            s2436, s2437, s2438, s2439, s2440, s2441, s2442, s2443, 
            s2444, s2445, s2446, s2447, s2448, s2449, s2450, s2451, 
            s2452;
    for(int i17 = 0; i17 <= 4095; i17++) {
        a39121 = (128*i17);
        a39122 = (a39121 + threadIdx.x);
        b2061 = (threadIdx.x + a39121);
        a39123 = (b2061 + 524288);
        a39124 = (a39123 % 4096);
        a39125 = (4096 + a39124);
        /* Begin of MPModMul 256 */
        a39126 = (2*a39125);
        a39127 = (a39126 + 1);
        a39128 = (2*a39123);
        a39129 = (a39128 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39130 = (2*a39126);
        a39131 = (a39130 + 1);
        /* MPAssignDD 64 */
        a39132 = (2*a39131);
        t13672 = twiddles[a39132];
        a39133 = (a39132 + 1);
        t13673 = twiddles[a39133];
        /* MPAssignDD 128 */
        a39134 = (2*a39127);
        /* MPAssignDD 64 */
        a39135 = (2*a39134);
        t13674 = twiddles[a39135];
        a39136 = (a39135 + 1);
        t13675 = twiddles[a39136];
        a39137 = (a39134 + 1);
        /* MPAssignDD 64 */
        a39138 = (2*a39137);
        t13676 = twiddles[a39138];
        a39139 = (a39138 + 1);
        t13677 = twiddles[a39139];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39140 = (2*a39128);
        a39141 = (a39140 + 1);
        /* MPAssignDD 64 */
        a39142 = (2*a39141);
        t13678 = P2[a39142];
        a39143 = (a39142 + 1);
        t13679 = P2[a39143];
        /* MPAssignDD 128 */
        a39144 = (2*a39129);
        /* MPAssignDD 64 */
        a39145 = (2*a39144);
        t13680 = P2[a39145];
        a39146 = (a39145 + 1);
        t13681 = P2[a39146];
        a39147 = (a39144 + 1);
        /* MPAssignDD 64 */
        a39148 = (2*a39147);
        t13682 = P2[a39148];
        a39149 = (a39148 + 1);
        t13683 = P2[a39149];
        MPMulQDD_L3_2(t8009, t8010, t8013, t8014, t8005, t8006, t8007, t8008, 
    t8001, t8002, t8003, t8004, t7997, t7998, t7999, t8000, 
    0, 0, t13672, t13673, t13674, t13675, t13676, t13677, 
    0, 0, t13678, t13679, t13680, t13681, t13682, t13683);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13684 = (t8001 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a39150 = (t8001 << 6);
        a39151 = (t8002 >> 58);
        t13685 = (((a39150)|(a39151)));
        t13686 = (t8002 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13687 = (t8003 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13688 = (((t13686)|(t13687)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2062 = ((int) 1);
        t13689 = (288230376151711744 - b2062);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13690 = (((t8013)&(t13689)));
        t13691 = (((t8014)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a39152 = (t13690 << 6);
        a39153 = (t13691 >> 58);
        t13692 = (((a39152)|(a39153)));
        t13693 = (t13691 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13694 = (t8005 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a39154 = (t8005 << 6);
        a39155 = (t8006 >> 58);
        t13695 = (((a39154)|(a39155)));
        t13696 = (t8006 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13697 = (t8007 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13698 = (((t13696)|(t13697)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13699 = (((t13693)|(t13694)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a39156 = (t8007 << 6);
        a39157 = (t8008 >> 58);
        t13700 = (((a39156)|(a39157)));
        t13701 = (t8008 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13702 = (((t13701)|(t13684)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a28258 = mu[2];
        a28259 = mu[3];
        a28260 = mu[4];
        a28261 = mu[5];
        a28262 = mu[6];
        a28263 = mu[7];
        MPMulQDD_L3_1(t8043, t8044, t8045, t8046, t8039, t8040, t8041, t8042, 
    t8035, t8036, t8037, t8038, t8031, t8032, t8033, t8034, 
    t13692, t13699, t13695, t13698, t13700, t13702, t13685, t13688, 
    0, 0, a28258, a28259, a28260, a28261, a28262, a28263);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13703 = (t8035 >> 1);
        a39158 = (t8035 << 63);
        a39159 = (t8036 >> 1);
        t13704 = (((a39158)|(a39159)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13705 = (0 - b2062);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2606 = (2 - b2062);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13708 = (((t8044)&(d2606)));
        /* MPBinAndD 64 */
        t13709 = (((t8045)&(t13705)));
        t13710 = (((t8046)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13711 = (t13708 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13712 = (t13709 >> 1);
        a39161 = (t13709 << 63);
        a39162 = (t13710 >> 1);
        t13713 = (((a39161)|(a39162)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13714 = (((t13711)|(t13712)));
        /* Begin of MPShiftLeft1D */
        t13715 = (t13710 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13716 = (t8039 >> 1);
        a39163 = (t8039 << 63);
        a39164 = (t8040 >> 1);
        t13717 = (((a39163)|(a39164)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13718 = (((t13715)|(t13716)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13719 = (t8040 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13720 = (t8041 >> 1);
        a39165 = (t8041 << 63);
        a39166 = (t8042 >> 1);
        t13721 = (((a39165)|(a39166)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13722 = (((t13719)|(t13720)));
        /* Begin of MPShiftLeft1D */
        t13723 = (t8042 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13724 = (((t13723)|(t13703)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a28363 = modulus[2];
        a28364 = modulus[3];
        a28365 = modulus[4];
        a28366 = modulus[5];
        a28367 = modulus[6];
        a28368 = modulus[7];
        MPMulQDD_L3_1(t8027, t8028, t8029, t8030, t8023, t8024, t8025, t8026, 
    t8019, t8020, t8021, t8022, t8015, t8016, t8017, t8018, 
    t13714, t13713, t13718, t13717, t13722, t13721, t13724, t13704, 
    0, 0, a28363, a28364, a28365, a28366, a28367, a28368);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2607 = (t8000 - t8018);
        b2064 = ((t8000 < t8018));
        d2608 = (t7999 - t8017);
        d2609 = (d2608 - b2064);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39168 = ((t7999 < t8017));
        a39169 = ((t7999 == t8017));
        a39170 = ((a39169) && (b2064));
        b2065 = ((a39168) || (a39170));
        /* Begin of MPSubDDD 64 */
        d2610 = (t7998 - t8016);
        b2066 = ((t7998 < t8016));
        d2611 = (t7997 - t8015);
        d2612 = (d2611 - b2066);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2613 = (d2610 - b2065);
        b2067 = ((d2610 < b2065));
        t13725 = (d2612 - b2067);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39174 = ((t7997 < t8015));
        a39175 = ((t7997 == t8015));
        a39176 = ((a39175) && (b2066));
        a39177 = ((a39174) || (a39176));
        /* MPEqual 64 */
        a39178 = ((t7998 == t8016));
        a39179 = ((a39175) && (a39178));
        /* MPLessThan 64 */
        a39180 = ((a39179) && (b2065));
        b2068 = ((a39177) || (a39180));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2614 = (t8004 - t8022);
        b2069 = ((t8004 < t8022));
        d2615 = (t8003 - t8021);
        d2616 = (d2615 - b2069);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39183 = ((t8003 < t8021));
        a39184 = ((t8003 == t8021));
        a39185 = ((a39184) && (b2069));
        b2070 = ((a39183) || (a39185));
        /* Begin of MPSubDDD 64 */
        d2617 = (t8002 - t8020);
        b2071 = ((t8002 < t8020));
        d2618 = (t8001 - t8019);
        d2619 = (d2618 - b2071);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2620 = (d2617 - b2070);
        b2072 = ((d2617 < b2070));
        t13726 = (d2619 - b2072);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2621 = (d2614 - b2068);
        b2073 = ((d2614 < b2068));
        t13727 = (d2616 - b2073);
        /* MPLessThanDI 64 */
        a39190 = ((d2616 == 0));
        b2074 = ((a39190) && (b2073));
        /* MPSubDDI 64 */
        d2622 = (d2620 - b2074);
        b2075 = ((d2620 < b2074));
        t13728 = (t13726 - b2075);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2623 = (d2607 - a28368);
        b2076 = ((d2607 < a28368));
        d2624 = (d2609 - a28367);
        d2625 = (d2624 - b2076);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39194 = ((d2609 < a28367));
        a39195 = ((d2609 == a28367));
        a39196 = ((a39195) && (b2076));
        b2077 = ((a39194) || (a39196));
        /* Begin of MPSubDDD 64 */
        d2626 = (d2613 - a28366);
        b2078 = ((d2613 < a28366));
        d2627 = (t13725 - a28365);
        d2628 = (d2627 - b2078);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2629 = (d2626 - b2077);
        b2079 = ((d2626 < b2077));
        t13729 = (d2628 - b2079);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39200 = ((t13725 < a28365));
        a39201 = ((t13725 == a28365));
        a39202 = ((a39201) && (b2078));
        a39203 = ((a39200) || (a39202));
        /* MPEqual 64 */
        a39204 = ((d2613 == a28366));
        a39205 = ((a39201) && (a39204));
        /* MPLessThan 64 */
        a39206 = ((a39205) && (b2077));
        b2080 = ((a39203) || (a39206));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2630 = (d2621 - a28364);
        b2081 = ((d2621 < a28364));
        d2631 = (t13727 - a28363);
        d2632 = (d2631 - b2081);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39209 = ((t13727 < a28363));
        a39210 = ((t13727 == a28363));
        a39211 = ((a39210) && (b2081));
        b2082 = ((a39209) || (a39211));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2633 = (d2622 - b2082);
        b2083 = ((d2622 < b2082));
        t13730 = (t13728 - b2083);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2634 = (d2630 - b2080);
        b2084 = ((d2630 < b2080));
        t13731 = (d2632 - b2084);
        /* MPLessThanDI 64 */
        a39215 = ((d2632 == 0));
        b2085 = ((a39215) && (b2084));
        /* MPSubDDI 64 */
        d2635 = (d2633 - b2085);
        b2086 = ((d2633 < b2085));
        t13732 = (t13730 - b2086);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a39218 = ((t13728 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a39219 = ((d2622 == 0));
        a39220 = ((a39218) && (a39219));
        /* MPLessThan 64 */
        a39221 = ((a39220) && (b2082));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39222 = ((d2621 == a28364));
        a39223 = ((a39210) && (a39222));
        a39224 = ((a39220) && (a39223));
        /* MPLessThan 128 */
        a39225 = ((a39224) && (b2080));
        i684 = ((a39221) || (a39225));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13733 = ((i684) ? (t13728) : (t13732));
        t13734 = ((i684) ? (d2622) : (d2635));
        /* MPCondD 64 */
        t13735 = ((i684) ? (t13727) : (t13731));
        t13736 = ((i684) ? (d2621) : (d2634));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13737 = ((i684) ? (t13725) : (t13729));
        t13738 = ((i684) ? (d2613) : (d2629));
        /* MPCondD 64 */
        t13739 = ((i684) ? (d2609) : (d2625));
        t13740 = ((i684) ? (d2607) : (d2623));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a39226 = (256*i17);
        a39227 = (2*threadIdx.x);
        a39228 = (a39226 + a39227);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a39229 = (2*a39122);
        a39230 = (a39229 + 1);
        /* MPAssignDD 128 */
        a39231 = (2*a39230);
        /* MPAssignDD 64 */
        a39232 = (2*a39231);
        t13741 = P2[a39232];
        a39233 = (a39232 + 1);
        t13742 = P2[a39233];
        a39234 = (a39231 + 1);
        /* MPAssignDD 64 */
        a39235 = (2*a39234);
        t13743 = P2[a39235];
        a39236 = (a39235 + 1);
        t13744 = P2[a39236];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2428 = (((uint128_t ) t13744) + ((uint128_t ) t13740));
        t13745 = ((uint64_t ) s2428);
        c1307 = (s2428 >> 64);
        s2429 = (((uint128_t ) t13743) + ((uint128_t ) t13739));
        s2430 = (((uint128_t ) s2429) + ((uint128_t ) c1307));
        t13746 = ((uint64_t ) s2430);
        c1308 = (s2430 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2431 = (((uint128_t ) t13742) + ((uint128_t ) t13738));
        t13747 = ((uint64_t ) s2431);
        c1309 = (s2431 >> 64);
        s2432 = (((uint128_t ) t13741) + ((uint128_t ) t13737));
        s2433 = (((uint128_t ) s2432) + ((uint128_t ) c1309));
        t13748 = ((uint64_t ) s2433);
        c1310 = (s2433 >> 64);
        /* MPPropagateCarry 64 */
        t13749 = (t13747 + c1308);
        a39237 = ((t13749 == 0));
        a39238 = (t13748 + c1308);
        t13750 = ((a39237) ? (a39238) : (t13748));
        a39239 = ((t13750 == 0));
        a39240 = ((a39239) && (a39237));
        a39241 = (c1310 + c1308);
        t13751 = ((a39240) ? (a39241) : (c1310));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39245 = (2*a39229);
        a39246 = (a39245 + 1);
        /* MPAssignDD 64 */
        a39247 = (2*a39246);
        t13753 = P2[a39247];
        a39248 = (a39247 + 1);
        t13754 = P2[a39248];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2434 = (((uint128_t ) t13754) + ((uint128_t ) t13736));
        t13755 = ((uint64_t ) s2434);
        c1311 = (s2434 >> 64);
        s2435 = (((uint128_t ) t13753) + ((uint128_t ) t13735));
        s2436 = (((uint128_t ) s2435) + ((uint128_t ) c1311));
        t13756 = ((uint64_t ) s2436);
        c1312 = (s2436 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13757 = ((uint64_t ) t13734);
        c1313 = (t13734 >> 64);
        s2437 = (((uint128_t ) t13733) + ((uint128_t ) c1313));
        t13758 = ((uint64_t ) s2437);
        /* MPPropagateCarry 64 */
        t13759 = (t13757 + c1312);
        a39249 = ((t13759 == 0));
        a39250 = (t13758 + c1312);
        t13760 = ((a39249) ? (a39250) : (t13758));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2438 = (((uint128_t ) t13755) + ((uint128_t ) t13751));
        t13763 = ((uint64_t ) s2438);
        c1315 = (s2438 >> 64);
        s2439 = (((uint128_t ) t13756) + ((uint128_t ) c1315));
        t13764 = ((uint64_t ) s2439);
        /* MPEqualDI 64 */
        a39257 = ((t13764 == 0));
        a39258 = ((t13763 == 0));
        a39259 = ((a39257) && (a39258));
        /* MPAddDDI 64 */
        s2440 = (((uint128_t ) t13759) + ((uint128_t ) t13751));
        t13765 = ((uint64_t ) s2440);
        c1316 = (s2440 >> 64);
        s2441 = (((uint128_t ) t13760) + ((uint128_t ) c1316));
        t13766 = ((uint64_t ) s2441);
        /* MPCondD 64 */
        t13767 = ((a39259) ? (t13766) : (t13760));
        t13768 = ((a39259) ? (t13765) : (t13759));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a39260 = ((0 < t13767));
        a39261 = ((0 == t13767));
        a39262 = ((0 < t13768));
        a39263 = ((a39261) && (a39262));
        a39264 = ((a39260) || (a39263));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a39265 = ((0 == t13768));
        a39266 = ((a39261) && (a39265));
        /* MPLessThan 64 */
        a39267 = ((a28363 < t13764));
        a39268 = ((a28363 == t13764));
        a39269 = ((a28364 < t13763));
        a39270 = ((a39268) && (a39269));
        a39271 = ((a39267) || (a39270));
        a39272 = ((a39266) && (a39271));
        a39273 = ((a39264) || (a39272));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39274 = ((a28364 == t13763));
        a39275 = ((a39268) && (a39274));
        a39276 = ((a39266) && (a39275));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39277 = ((a28365 < t13750));
        a39278 = ((a28365 == t13750));
        a39279 = ((a28366 < t13749));
        a39280 = ((a39278) && (a39279));
        a39281 = ((a39277) || (a39280));
        /* MPEqual 64 */
        a39282 = ((a28366 == t13749));
        a39283 = ((a39278) && (a39282));
        /* MPLessThan 64 */
        a39284 = ((a28367 < t13746));
        a39285 = ((a28367 == t13746));
        a39286 = ((a28368 < t13745));
        a39287 = ((a39285) && (a39286));
        a39288 = ((a39284) || (a39287));
        a39289 = ((a39283) && (a39288));
        a39290 = ((a39281) || (a39289));
        a39291 = ((a39276) && (a39290));
        i685 = ((a39273) || (a39291));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2636 = (t13745 - a28368);
        b2087 = ((t13745 < a28368));
        d2637 = (t13746 - a28367);
        d2638 = (d2637 - b2087);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39293 = ((t13746 < a28367));
        a39294 = ((t13746 == a28367));
        a39295 = ((a39294) && (b2087));
        b2088 = ((a39293) || (a39295));
        /* Begin of MPSubDDD 64 */
        d2639 = (t13749 - a28366);
        b2089 = ((t13749 < a28366));
        d2640 = (t13750 - a28365);
        d2641 = (d2640 - b2089);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2642 = (d2639 - b2088);
        b2090 = ((d2639 < b2088));
        t13769 = (d2641 - b2090);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39299 = ((t13750 < a28365));
        a39300 = ((t13750 == a28365));
        a39301 = ((a39300) && (b2089));
        a39302 = ((a39299) || (a39301));
        /* MPEqual 64 */
        a39303 = ((t13749 == a28366));
        a39304 = ((a39300) && (a39303));
        /* MPLessThan 64 */
        a39305 = ((a39304) && (b2088));
        b2091 = ((a39302) || (a39305));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2643 = (t13763 - a28364);
        b2092 = ((t13763 < a28364));
        d2644 = (t13764 - a28363);
        d2645 = (d2644 - b2092);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2646 = (d2643 - b2091);
        b2093 = ((d2643 < b2091));
        t13770 = (d2645 - b2093);
        /* End of MPSubDDD 256 */
        a39309 = (2*a39228);
        /* MPCondD 128 */
        a39310 = (2*a39309);
        a39311 = (a39310 + 1);
        /* MPCondD 64 */
        a39312 = (2*a39311);
        P1[a39312] = ((i685) ? (t13770) : (t13764));
        a39313 = (a39312 + 1);
        P1[a39313] = ((i685) ? (d2646) : (t13763));
        a39314 = (a39309 + 1);
        /* MPCondD 128 */
        a39315 = (2*a39314);
        /* MPCondD 64 */
        a39316 = (2*a39315);
        P1[a39316] = ((i685) ? (t13769) : (t13750));
        a39317 = (a39316 + 1);
        P1[a39317] = ((i685) ? (d2642) : (t13749));
        a39318 = (a39315 + 1);
        /* MPCondD 64 */
        a39319 = (2*a39318);
        P1[a39319] = ((i685) ? (d2638) : (t13746));
        a39320 = (a39319 + 1);
        P1[a39320] = ((i685) ? (d2636) : (t13745));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b2094 = (a39227 + a39226);
        a39321 = (b2094 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2647 = (t13744 - t13740);
        b2095 = ((t13744 < t13740));
        d2648 = (t13743 - t13739);
        d2649 = (d2648 - b2095);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39323 = ((t13743 < t13739));
        a39324 = ((t13743 == t13739));
        a39325 = ((a39324) && (b2095));
        b2096 = ((a39323) || (a39325));
        /* Begin of MPSubDDD 64 */
        d2650 = (t13742 - t13738);
        b2097 = ((t13742 < t13738));
        d2651 = (t13741 - t13737);
        d2652 = (d2651 - b2097);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2653 = (d2650 - b2096);
        b2098 = ((d2650 < b2096));
        t13771 = (d2652 - b2098);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39329 = ((t13741 < t13737));
        a39330 = ((t13741 == t13737));
        a39331 = ((a39330) && (b2097));
        a39332 = ((a39329) || (a39331));
        /* MPEqual 64 */
        a39333 = ((t13742 == t13738));
        a39334 = ((a39330) && (a39333));
        /* MPLessThan 64 */
        a39335 = ((a39334) && (b2096));
        b2099 = ((a39332) || (a39335));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2654 = (t13754 - t13736);
        b2100 = ((t13754 < t13736));
        d2655 = (t13753 - t13735);
        d2656 = (d2655 - b2100);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2657 = (d2654 - b2099);
        b2101 = ((d2654 < b2099));
        t13772 = (d2656 - b2101);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2442 = (((uint128_t ) d2647) + ((uint128_t ) a28368));
        t13773 = ((uint64_t ) s2442);
        c1317 = (s2442 >> 64);
        s2443 = (((uint128_t ) d2649) + ((uint128_t ) a28367));
        s2444 = (((uint128_t ) s2443) + ((uint128_t ) c1317));
        t13774 = ((uint64_t ) s2444);
        c1318 = (s2444 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2445 = (((uint128_t ) d2653) + ((uint128_t ) a28366));
        t13775 = ((uint64_t ) s2445);
        c1319 = (s2445 >> 64);
        s2446 = (((uint128_t ) t13771) + ((uint128_t ) a28365));
        s2447 = (((uint128_t ) s2446) + ((uint128_t ) c1319));
        t13776 = ((uint64_t ) s2447);
        c1320 = (s2447 >> 64);
        /* MPPropagateCarry 64 */
        t13777 = (t13775 + c1318);
        a39339 = ((t13777 == 0));
        a39340 = (t13776 + c1318);
        t13778 = ((a39339) ? (a39340) : (t13776));
        a39341 = ((t13778 == 0));
        a39342 = ((a39341) && (a39339));
        a39343 = (c1320 + c1318);
        t13779 = ((a39342) ? (a39343) : (c1320));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2448 = (((uint128_t ) d2657) + ((uint128_t ) a28364));
        t13781 = ((uint64_t ) s2448);
        c1321 = (s2448 >> 64);
        s2449 = (((uint128_t ) t13772) + ((uint128_t ) a28363));
        s2450 = (((uint128_t ) s2449) + ((uint128_t ) c1321));
        t13782 = ((uint64_t ) s2450);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2451 = (((uint128_t ) t13781) + ((uint128_t ) t13779));
        t13783 = ((uint64_t ) s2451);
        c1323 = (s2451 >> 64);
        s2452 = (((uint128_t ) t13782) + ((uint128_t ) c1323));
        t13784 = ((uint64_t ) s2452);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39347 = ((0 < t13733));
        a39348 = ((0 == t13733));
        a39349 = ((0 < t13734));
        a39350 = ((a39348) && (a39349));
        a39351 = ((a39347) || (a39350));
        /* MPEqual 64 */
        a39352 = ((0 == t13734));
        a39353 = ((a39348) && (a39352));
        /* MPLessThan 64 */
        a39354 = ((t13753 < t13735));
        a39355 = ((t13753 == t13735));
        a39356 = ((a39355) && (b2100));
        a39357 = ((a39354) || (a39356));
        a39358 = ((a39353) && (a39357));
        a39359 = ((a39351) || (a39358));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39360 = ((t13754 == t13736));
        a39361 = ((a39355) && (a39360));
        a39362 = ((a39353) && (a39361));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a39363 = ((a39362) && (b2099));
        i686 = ((a39359) || (a39363));
        a39364 = (2*a39321);
        /* MPCondD 128 */
        a39365 = (2*a39364);
        a39366 = (a39365 + 1);
        /* MPCondD 64 */
        a39367 = (2*a39366);
        P1[a39367] = ((i686) ? (t13784) : (t13772));
        a39368 = (a39367 + 1);
        P1[a39368] = ((i686) ? (t13783) : (d2657));
        a39369 = (a39364 + 1);
        /* MPCondD 128 */
        a39370 = (2*a39369);
        /* MPCondD 64 */
        a39371 = (2*a39370);
        P1[a39371] = ((i686) ? (t13778) : (t13771));
        a39372 = (a39371 + 1);
        P1[a39372] = ((i686) ? (t13777) : (d2653));
        a39373 = (a39370 + 1);
        /* MPCondD 64 */
        a39374 = (2*a39373);
        P1[a39374] = ((i686) ? (t13774) : (d2649));
        a39375 = (a39374 + 1);
        P1[a39375] = ((i686) ? (t13773) : (d2647));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code13(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a39376, a39377, a39378, a39379, a39380, a39381, a39382, a39383, 
            a39384, a39385, a39386, a39387, a39388, a39389, a39390, a39391, 
            a39392, a39393, a39394, a39395, a39396, a39397, a39398, a39399, 
            a39400, a39401, a39402, a39403, a39404, a39423, a39424, a39425, 
            a39429, a39430, a39431, a39432, a39433, a39434, a39435, a39438, 
            a39439, a39440, a39445, a39449, a39450, a39451, a39455, a39456, 
            a39457, a39458, a39459, a39460, a39461, a39464, a39465, a39466, 
            a39470, a39473, a39474, a39475, a39476, a39477, a39478, a39479, 
            a39480, a39481, a39482, a39483, a39484, a39485, a39486, a39487, 
            a39488, a39489, a39490, a39491, a39492, a39494, a39495, a39500, 
            a39501, a39502, a39503, a39504, a39512, a39513, a39514, a39515, 
            a39516, a39517, a39518, a39519, a39520, a39521, a39522, a39523, 
            a39524, a39525, a39526, a39527, a39528, a39529, a39530, a39531, 
            a39532, a39533, a39534, a39535, a39536, a39537, a39538, a39539, 
            a39540, a39541, a39542, a39543, a39544, a39545, a39546, a39548, 
            a39549, a39550, a39554, a39555, a39556, a39557, a39558, a39559, 
            a39560, a39564, a39565, a39566, a39567, a39568, a39569, a39570, 
            a39571, a39572, a39573, a39574, a39575, a39576, a39578, a39579, 
            a39580, a39584, a39585, a39586, a39587, a39588, a39589, a39590, 
            a39594, a39596, a39597, a39602, a39603, a39604, a39605, a39606, 
            a39607, a39608, a39609, a39610, a39611, a39612, a39613, a39614, 
            a39615, a39616, a39617, a39618, a39619, a39620, a39621, a39622, 
            a39623, a39624, a39625, a39626, a39627, a39628, a39629, a39630, 
            b2102, b2103, b2105, b2106, b2107, b2108, b2109, b2110, 
            b2111, b2112, b2113, b2114, b2115, b2116, b2117, b2118, 
            b2119, b2120, b2121, b2122, b2123, b2124, b2125, b2126, 
            b2127, b2128, b2129, b2130, b2131, b2132, b2133, b2134, 
            b2135, b2136, b2137, b2138, b2139, b2140, b2141, b2142, 
            c1324, c1325, c1326, c1327, c1328, c1329, c1330, c1332, 
            c1333, c1334, c1335, c1336, c1337, c1338, c1340, i687, 
            i688, i689;
    uint64_t a29169, a29170, a29171, a29172, a29173, a29174, a29274, a29275, 
            a29276, a29277, a29278, a29279, a39405, a39406, a39407, a39408, 
            a39409, a39410, a39411, a39412, a39413, a39414, a39416, a39417, 
            a39418, a39419, a39420, a39421, a39493, a39496, a39505, a39595, 
            a39598, d2658, d2659, d2660, d2661, d2662, d2663, d2664, 
            d2665, d2666, d2667, d2668, d2669, d2670, d2671, d2672, 
            d2673, d2674, d2675, d2676, d2677, d2678, d2679, d2680, 
            d2681, d2682, d2683, d2684, d2685, d2686, d2687, d2688, 
            d2689, d2690, d2691, d2692, d2693, d2694, d2695, d2696, 
            d2697, d2698, d2699, d2700, d2701, d2702, d2703, d2704, 
            d2705, d2706, d2707, d2708, d2709, t13785, t13786, t13787, 
            t13788, t13789, t13790, t13791, t13792, t13793, t13794, t13795, 
            t13796, t13797, t13798, t13799, t13800, t13801, t13802, t13803, 
            t13804, t13805, t13806, t13807, t13808, t13809, t13810, t13811, 
            t13812, t13813, t13814, t13815, t13816, t13817, t13818, t13821, 
            t13822, t13823, t13824, t13825, t13826, t13827, t13828, t13829, 
            t13830, t13831, t13832, t13833, t13834, t13835, t13836, t13837, 
            t13838, t13839, t13840, t13841, t13842, t13843, t13844, t13845, 
            t13846, t13847, t13848, t13849, t13850, t13851, t13852, t13853, 
            t13854, t13855, t13856, t13857, t13858, t13859, t13860, t13861, 
            t13862, t13863, t13864, t13866, t13867, t13868, t13869, t13870, 
            t13871, t13872, t13873, t13876, t13877, t13878, t13879, t13880, 
            t13881, t13882, t13883, t13884, t13885, t13886, t13887, t13888, 
            t13889, t13890, t13891, t13892, t13894, t13895, t13896, t13897, 
            t8063, t8064, t8065, t8066, t8067, t8068, t8069, t8070, 
            t8071, t8072, t8073, t8074, t8075, t8076, t8077, t8078, 
            t8079, t8080, t8081, t8082, t8083, t8084, t8085, t8086, 
            t8087, t8088, t8089, t8090, t8091, t8092, t8093, t8094, 
            t8095, t8096, t8097, t8098, t8099, t8100, t8101, t8102, 
            t8103, t8104, t8105, t8106, t8107, t8108, t8109, t8110;
    uint128_t s2453, s2454, s2455, s2456, s2457, s2458, s2459, s2460, 
            s2461, s2462, s2463, s2464, s2465, s2466, s2467, s2468, 
            s2469, s2470, s2471, s2472, s2473, s2474, s2475, s2476, 
            s2477;
    for(int i15 = 0; i15 <= 4095; i15++) {
        a39376 = (128*i15);
        a39377 = (a39376 + threadIdx.x);
        b2102 = (threadIdx.x + a39376);
        a39378 = (b2102 + 524288);
        a39379 = (a39378 % 8192);
        a39380 = (8192 + a39379);
        /* Begin of MPModMul 256 */
        a39381 = (2*a39380);
        a39382 = (a39381 + 1);
        a39383 = (2*a39378);
        a39384 = (a39383 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39385 = (2*a39381);
        a39386 = (a39385 + 1);
        /* MPAssignDD 64 */
        a39387 = (2*a39386);
        t13785 = twiddles[a39387];
        a39388 = (a39387 + 1);
        t13786 = twiddles[a39388];
        /* MPAssignDD 128 */
        a39389 = (2*a39382);
        /* MPAssignDD 64 */
        a39390 = (2*a39389);
        t13787 = twiddles[a39390];
        a39391 = (a39390 + 1);
        t13788 = twiddles[a39391];
        a39392 = (a39389 + 1);
        /* MPAssignDD 64 */
        a39393 = (2*a39392);
        t13789 = twiddles[a39393];
        a39394 = (a39393 + 1);
        t13790 = twiddles[a39394];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39395 = (2*a39383);
        a39396 = (a39395 + 1);
        /* MPAssignDD 64 */
        a39397 = (2*a39396);
        t13791 = P1[a39397];
        a39398 = (a39397 + 1);
        t13792 = P1[a39398];
        /* MPAssignDD 128 */
        a39399 = (2*a39384);
        /* MPAssignDD 64 */
        a39400 = (2*a39399);
        t13793 = P1[a39400];
        a39401 = (a39400 + 1);
        t13794 = P1[a39401];
        a39402 = (a39399 + 1);
        /* MPAssignDD 64 */
        a39403 = (2*a39402);
        t13795 = P1[a39403];
        a39404 = (a39403 + 1);
        t13796 = P1[a39404];
        MPMulQDD_L3_2(t8075, t8076, t8077, t8078, t8071, t8072, t8073, t8074, 
    t8067, t8068, t8069, t8070, t8063, t8064, t8065, t8066, 
    0, 0, t13785, t13786, t13787, t13788, t13789, t13790, 
    0, 0, t13791, t13792, t13793, t13794, t13795, t13796);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13797 = (t8067 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a39405 = (t8067 << 6);
        a39406 = (t8068 >> 58);
        t13798 = (((a39405)|(a39406)));
        t13799 = (t8068 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13800 = (t8069 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13801 = (((t13799)|(t13800)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2103 = ((int) 1);
        t13802 = (288230376151711744 - b2103);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13803 = (((t8077)&(t13802)));
        t13804 = (((t8078)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a39407 = (t13803 << 6);
        a39408 = (t13804 >> 58);
        t13805 = (((a39407)|(a39408)));
        t13806 = (t13804 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13807 = (t8071 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a39409 = (t8071 << 6);
        a39410 = (t8072 >> 58);
        t13808 = (((a39409)|(a39410)));
        t13809 = (t8072 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13810 = (t8073 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13811 = (((t13809)|(t13810)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13812 = (((t13806)|(t13807)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a39411 = (t8073 << 6);
        a39412 = (t8074 >> 58);
        t13813 = (((a39411)|(a39412)));
        t13814 = (t8074 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13815 = (((t13814)|(t13797)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a29169 = mu[2];
        a29170 = mu[3];
        a29171 = mu[4];
        a29172 = mu[5];
        a29173 = mu[6];
        a29174 = mu[7];
        MPMulQDD_L3_1(t8107, t8108, t8109, t8110, t8103, t8104, t8105, t8106, 
    t8099, t8100, t8101, t8102, t8095, t8096, t8097, t8098, 
    t13805, t13812, t13808, t13811, t13813, t13815, t13798, t13801, 
    0, 0, a29169, a29170, a29171, a29172, a29173, a29174);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13816 = (t8099 >> 1);
        a39413 = (t8099 << 63);
        a39414 = (t8100 >> 1);
        t13817 = (((a39413)|(a39414)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13818 = (0 - b2103);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2658 = (2 - b2103);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13821 = (((t8108)&(d2658)));
        /* MPBinAndD 64 */
        t13822 = (((t8109)&(t13818)));
        t13823 = (((t8110)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13824 = (t13821 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13825 = (t13822 >> 1);
        a39416 = (t13822 << 63);
        a39417 = (t13823 >> 1);
        t13826 = (((a39416)|(a39417)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13827 = (((t13824)|(t13825)));
        /* Begin of MPShiftLeft1D */
        t13828 = (t13823 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13829 = (t8103 >> 1);
        a39418 = (t8103 << 63);
        a39419 = (t8104 >> 1);
        t13830 = (((a39418)|(a39419)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13831 = (((t13828)|(t13829)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13832 = (t8104 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13833 = (t8105 >> 1);
        a39420 = (t8105 << 63);
        a39421 = (t8106 >> 1);
        t13834 = (((a39420)|(a39421)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13835 = (((t13832)|(t13833)));
        /* Begin of MPShiftLeft1D */
        t13836 = (t8106 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13837 = (((t13836)|(t13816)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a29274 = modulus[2];
        a29275 = modulus[3];
        a29276 = modulus[4];
        a29277 = modulus[5];
        a29278 = modulus[6];
        a29279 = modulus[7];
        MPMulQDD_L3_1(t8091, t8092, t8093, t8094, t8087, t8088, t8089, t8090, 
    t8083, t8084, t8085, t8086, t8079, t8080, t8081, t8082, 
    t13827, t13826, t13831, t13830, t13835, t13834, t13837, t13817, 
    0, 0, a29274, a29275, a29276, a29277, a29278, a29279);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2659 = (t8066 - t8082);
        b2105 = ((t8066 < t8082));
        d2660 = (t8065 - t8081);
        d2661 = (d2660 - b2105);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39423 = ((t8065 < t8081));
        a39424 = ((t8065 == t8081));
        a39425 = ((a39424) && (b2105));
        b2106 = ((a39423) || (a39425));
        /* Begin of MPSubDDD 64 */
        d2662 = (t8064 - t8080);
        b2107 = ((t8064 < t8080));
        d2663 = (t8063 - t8079);
        d2664 = (d2663 - b2107);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2665 = (d2662 - b2106);
        b2108 = ((d2662 < b2106));
        t13838 = (d2664 - b2108);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39429 = ((t8063 < t8079));
        a39430 = ((t8063 == t8079));
        a39431 = ((a39430) && (b2107));
        a39432 = ((a39429) || (a39431));
        /* MPEqual 64 */
        a39433 = ((t8064 == t8080));
        a39434 = ((a39430) && (a39433));
        /* MPLessThan 64 */
        a39435 = ((a39434) && (b2106));
        b2109 = ((a39432) || (a39435));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2666 = (t8070 - t8086);
        b2110 = ((t8070 < t8086));
        d2667 = (t8069 - t8085);
        d2668 = (d2667 - b2110);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39438 = ((t8069 < t8085));
        a39439 = ((t8069 == t8085));
        a39440 = ((a39439) && (b2110));
        b2111 = ((a39438) || (a39440));
        /* Begin of MPSubDDD 64 */
        d2669 = (t8068 - t8084);
        b2112 = ((t8068 < t8084));
        d2670 = (t8067 - t8083);
        d2671 = (d2670 - b2112);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2672 = (d2669 - b2111);
        b2113 = ((d2669 < b2111));
        t13839 = (d2671 - b2113);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2673 = (d2666 - b2109);
        b2114 = ((d2666 < b2109));
        t13840 = (d2668 - b2114);
        /* MPLessThanDI 64 */
        a39445 = ((d2668 == 0));
        b2115 = ((a39445) && (b2114));
        /* MPSubDDI 64 */
        d2674 = (d2672 - b2115);
        b2116 = ((d2672 < b2115));
        t13841 = (t13839 - b2116);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2675 = (d2659 - a29279);
        b2117 = ((d2659 < a29279));
        d2676 = (d2661 - a29278);
        d2677 = (d2676 - b2117);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39449 = ((d2661 < a29278));
        a39450 = ((d2661 == a29278));
        a39451 = ((a39450) && (b2117));
        b2118 = ((a39449) || (a39451));
        /* Begin of MPSubDDD 64 */
        d2678 = (d2665 - a29277);
        b2119 = ((d2665 < a29277));
        d2679 = (t13838 - a29276);
        d2680 = (d2679 - b2119);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2681 = (d2678 - b2118);
        b2120 = ((d2678 < b2118));
        t13842 = (d2680 - b2120);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39455 = ((t13838 < a29276));
        a39456 = ((t13838 == a29276));
        a39457 = ((a39456) && (b2119));
        a39458 = ((a39455) || (a39457));
        /* MPEqual 64 */
        a39459 = ((d2665 == a29277));
        a39460 = ((a39456) && (a39459));
        /* MPLessThan 64 */
        a39461 = ((a39460) && (b2118));
        b2121 = ((a39458) || (a39461));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2682 = (d2673 - a29275);
        b2122 = ((d2673 < a29275));
        d2683 = (t13840 - a29274);
        d2684 = (d2683 - b2122);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39464 = ((t13840 < a29274));
        a39465 = ((t13840 == a29274));
        a39466 = ((a39465) && (b2122));
        b2123 = ((a39464) || (a39466));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2685 = (d2674 - b2123);
        b2124 = ((d2674 < b2123));
        t13843 = (t13841 - b2124);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2686 = (d2682 - b2121);
        b2125 = ((d2682 < b2121));
        t13844 = (d2684 - b2125);
        /* MPLessThanDI 64 */
        a39470 = ((d2684 == 0));
        b2126 = ((a39470) && (b2125));
        /* MPSubDDI 64 */
        d2687 = (d2685 - b2126);
        b2127 = ((d2685 < b2126));
        t13845 = (t13843 - b2127);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a39473 = ((t13841 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a39474 = ((d2674 == 0));
        a39475 = ((a39473) && (a39474));
        /* MPLessThan 64 */
        a39476 = ((a39475) && (b2123));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39477 = ((d2673 == a29275));
        a39478 = ((a39465) && (a39477));
        a39479 = ((a39475) && (a39478));
        /* MPLessThan 128 */
        a39480 = ((a39479) && (b2121));
        i687 = ((a39476) || (a39480));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13846 = ((i687) ? (t13841) : (t13845));
        t13847 = ((i687) ? (d2674) : (d2687));
        /* MPCondD 64 */
        t13848 = ((i687) ? (t13840) : (t13844));
        t13849 = ((i687) ? (d2673) : (d2686));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13850 = ((i687) ? (t13838) : (t13842));
        t13851 = ((i687) ? (d2665) : (d2681));
        /* MPCondD 64 */
        t13852 = ((i687) ? (d2661) : (d2677));
        t13853 = ((i687) ? (d2659) : (d2675));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a39481 = (256*i15);
        a39482 = (2*threadIdx.x);
        a39483 = (a39481 + a39482);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a39484 = (2*a39377);
        a39485 = (a39484 + 1);
        /* MPAssignDD 128 */
        a39486 = (2*a39485);
        /* MPAssignDD 64 */
        a39487 = (2*a39486);
        t13854 = P1[a39487];
        a39488 = (a39487 + 1);
        t13855 = P1[a39488];
        a39489 = (a39486 + 1);
        /* MPAssignDD 64 */
        a39490 = (2*a39489);
        t13856 = P1[a39490];
        a39491 = (a39490 + 1);
        t13857 = P1[a39491];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2453 = (((uint128_t ) t13857) + ((uint128_t ) t13853));
        t13858 = ((uint64_t ) s2453);
        c1324 = (s2453 >> 64);
        s2454 = (((uint128_t ) t13856) + ((uint128_t ) t13852));
        s2455 = (((uint128_t ) s2454) + ((uint128_t ) c1324));
        t13859 = ((uint64_t ) s2455);
        c1325 = (s2455 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2456 = (((uint128_t ) t13855) + ((uint128_t ) t13851));
        t13860 = ((uint64_t ) s2456);
        c1326 = (s2456 >> 64);
        s2457 = (((uint128_t ) t13854) + ((uint128_t ) t13850));
        s2458 = (((uint128_t ) s2457) + ((uint128_t ) c1326));
        t13861 = ((uint64_t ) s2458);
        c1327 = (s2458 >> 64);
        /* MPPropagateCarry 64 */
        t13862 = (t13860 + c1325);
        a39492 = ((t13862 == 0));
        a39493 = (t13861 + c1325);
        t13863 = ((a39492) ? (a39493) : (t13861));
        a39494 = ((t13863 == 0));
        a39495 = ((a39494) && (a39492));
        a39496 = (c1327 + c1325);
        t13864 = ((a39495) ? (a39496) : (c1327));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39500 = (2*a39484);
        a39501 = (a39500 + 1);
        /* MPAssignDD 64 */
        a39502 = (2*a39501);
        t13866 = P1[a39502];
        a39503 = (a39502 + 1);
        t13867 = P1[a39503];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2459 = (((uint128_t ) t13867) + ((uint128_t ) t13849));
        t13868 = ((uint64_t ) s2459);
        c1328 = (s2459 >> 64);
        s2460 = (((uint128_t ) t13866) + ((uint128_t ) t13848));
        s2461 = (((uint128_t ) s2460) + ((uint128_t ) c1328));
        t13869 = ((uint64_t ) s2461);
        c1329 = (s2461 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13870 = ((uint64_t ) t13847);
        c1330 = (t13847 >> 64);
        s2462 = (((uint128_t ) t13846) + ((uint128_t ) c1330));
        t13871 = ((uint64_t ) s2462);
        /* MPPropagateCarry 64 */
        t13872 = (t13870 + c1329);
        a39504 = ((t13872 == 0));
        a39505 = (t13871 + c1329);
        t13873 = ((a39504) ? (a39505) : (t13871));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2463 = (((uint128_t ) t13868) + ((uint128_t ) t13864));
        t13876 = ((uint64_t ) s2463);
        c1332 = (s2463 >> 64);
        s2464 = (((uint128_t ) t13869) + ((uint128_t ) c1332));
        t13877 = ((uint64_t ) s2464);
        /* MPEqualDI 64 */
        a39512 = ((t13877 == 0));
        a39513 = ((t13876 == 0));
        a39514 = ((a39512) && (a39513));
        /* MPAddDDI 64 */
        s2465 = (((uint128_t ) t13872) + ((uint128_t ) t13864));
        t13878 = ((uint64_t ) s2465);
        c1333 = (s2465 >> 64);
        s2466 = (((uint128_t ) t13873) + ((uint128_t ) c1333));
        t13879 = ((uint64_t ) s2466);
        /* MPCondD 64 */
        t13880 = ((a39514) ? (t13879) : (t13873));
        t13881 = ((a39514) ? (t13878) : (t13872));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a39515 = ((0 < t13880));
        a39516 = ((0 == t13880));
        a39517 = ((0 < t13881));
        a39518 = ((a39516) && (a39517));
        a39519 = ((a39515) || (a39518));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a39520 = ((0 == t13881));
        a39521 = ((a39516) && (a39520));
        /* MPLessThan 64 */
        a39522 = ((a29274 < t13877));
        a39523 = ((a29274 == t13877));
        a39524 = ((a29275 < t13876));
        a39525 = ((a39523) && (a39524));
        a39526 = ((a39522) || (a39525));
        a39527 = ((a39521) && (a39526));
        a39528 = ((a39519) || (a39527));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39529 = ((a29275 == t13876));
        a39530 = ((a39523) && (a39529));
        a39531 = ((a39521) && (a39530));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39532 = ((a29276 < t13863));
        a39533 = ((a29276 == t13863));
        a39534 = ((a29277 < t13862));
        a39535 = ((a39533) && (a39534));
        a39536 = ((a39532) || (a39535));
        /* MPEqual 64 */
        a39537 = ((a29277 == t13862));
        a39538 = ((a39533) && (a39537));
        /* MPLessThan 64 */
        a39539 = ((a29278 < t13859));
        a39540 = ((a29278 == t13859));
        a39541 = ((a29279 < t13858));
        a39542 = ((a39540) && (a39541));
        a39543 = ((a39539) || (a39542));
        a39544 = ((a39538) && (a39543));
        a39545 = ((a39536) || (a39544));
        a39546 = ((a39531) && (a39545));
        i688 = ((a39528) || (a39546));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2688 = (t13858 - a29279);
        b2128 = ((t13858 < a29279));
        d2689 = (t13859 - a29278);
        d2690 = (d2689 - b2128);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39548 = ((t13859 < a29278));
        a39549 = ((t13859 == a29278));
        a39550 = ((a39549) && (b2128));
        b2129 = ((a39548) || (a39550));
        /* Begin of MPSubDDD 64 */
        d2691 = (t13862 - a29277);
        b2130 = ((t13862 < a29277));
        d2692 = (t13863 - a29276);
        d2693 = (d2692 - b2130);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2694 = (d2691 - b2129);
        b2131 = ((d2691 < b2129));
        t13882 = (d2693 - b2131);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39554 = ((t13863 < a29276));
        a39555 = ((t13863 == a29276));
        a39556 = ((a39555) && (b2130));
        a39557 = ((a39554) || (a39556));
        /* MPEqual 64 */
        a39558 = ((t13862 == a29277));
        a39559 = ((a39555) && (a39558));
        /* MPLessThan 64 */
        a39560 = ((a39559) && (b2129));
        b2132 = ((a39557) || (a39560));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2695 = (t13876 - a29275);
        b2133 = ((t13876 < a29275));
        d2696 = (t13877 - a29274);
        d2697 = (d2696 - b2133);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2698 = (d2695 - b2132);
        b2134 = ((d2695 < b2132));
        t13883 = (d2697 - b2134);
        /* End of MPSubDDD 256 */
        a39564 = (2*a39483);
        /* MPCondD 128 */
        a39565 = (2*a39564);
        a39566 = (a39565 + 1);
        /* MPCondD 64 */
        a39567 = (2*a39566);
        P2[a39567] = ((i688) ? (t13883) : (t13877));
        a39568 = (a39567 + 1);
        P2[a39568] = ((i688) ? (d2698) : (t13876));
        a39569 = (a39564 + 1);
        /* MPCondD 128 */
        a39570 = (2*a39569);
        /* MPCondD 64 */
        a39571 = (2*a39570);
        P2[a39571] = ((i688) ? (t13882) : (t13863));
        a39572 = (a39571 + 1);
        P2[a39572] = ((i688) ? (d2694) : (t13862));
        a39573 = (a39570 + 1);
        /* MPCondD 64 */
        a39574 = (2*a39573);
        P2[a39574] = ((i688) ? (d2690) : (t13859));
        a39575 = (a39574 + 1);
        P2[a39575] = ((i688) ? (d2688) : (t13858));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b2135 = (a39482 + a39481);
        a39576 = (b2135 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2699 = (t13857 - t13853);
        b2136 = ((t13857 < t13853));
        d2700 = (t13856 - t13852);
        d2701 = (d2700 - b2136);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39578 = ((t13856 < t13852));
        a39579 = ((t13856 == t13852));
        a39580 = ((a39579) && (b2136));
        b2137 = ((a39578) || (a39580));
        /* Begin of MPSubDDD 64 */
        d2702 = (t13855 - t13851);
        b2138 = ((t13855 < t13851));
        d2703 = (t13854 - t13850);
        d2704 = (d2703 - b2138);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2705 = (d2702 - b2137);
        b2139 = ((d2702 < b2137));
        t13884 = (d2704 - b2139);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39584 = ((t13854 < t13850));
        a39585 = ((t13854 == t13850));
        a39586 = ((a39585) && (b2138));
        a39587 = ((a39584) || (a39586));
        /* MPEqual 64 */
        a39588 = ((t13855 == t13851));
        a39589 = ((a39585) && (a39588));
        /* MPLessThan 64 */
        a39590 = ((a39589) && (b2137));
        b2140 = ((a39587) || (a39590));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2706 = (t13867 - t13849);
        b2141 = ((t13867 < t13849));
        d2707 = (t13866 - t13848);
        d2708 = (d2707 - b2141);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2709 = (d2706 - b2140);
        b2142 = ((d2706 < b2140));
        t13885 = (d2708 - b2142);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2467 = (((uint128_t ) d2699) + ((uint128_t ) a29279));
        t13886 = ((uint64_t ) s2467);
        c1334 = (s2467 >> 64);
        s2468 = (((uint128_t ) d2701) + ((uint128_t ) a29278));
        s2469 = (((uint128_t ) s2468) + ((uint128_t ) c1334));
        t13887 = ((uint64_t ) s2469);
        c1335 = (s2469 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2470 = (((uint128_t ) d2705) + ((uint128_t ) a29277));
        t13888 = ((uint64_t ) s2470);
        c1336 = (s2470 >> 64);
        s2471 = (((uint128_t ) t13884) + ((uint128_t ) a29276));
        s2472 = (((uint128_t ) s2471) + ((uint128_t ) c1336));
        t13889 = ((uint64_t ) s2472);
        c1337 = (s2472 >> 64);
        /* MPPropagateCarry 64 */
        t13890 = (t13888 + c1335);
        a39594 = ((t13890 == 0));
        a39595 = (t13889 + c1335);
        t13891 = ((a39594) ? (a39595) : (t13889));
        a39596 = ((t13891 == 0));
        a39597 = ((a39596) && (a39594));
        a39598 = (c1337 + c1335);
        t13892 = ((a39597) ? (a39598) : (c1337));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2473 = (((uint128_t ) d2709) + ((uint128_t ) a29275));
        t13894 = ((uint64_t ) s2473);
        c1338 = (s2473 >> 64);
        s2474 = (((uint128_t ) t13885) + ((uint128_t ) a29274));
        s2475 = (((uint128_t ) s2474) + ((uint128_t ) c1338));
        t13895 = ((uint64_t ) s2475);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2476 = (((uint128_t ) t13894) + ((uint128_t ) t13892));
        t13896 = ((uint64_t ) s2476);
        c1340 = (s2476 >> 64);
        s2477 = (((uint128_t ) t13895) + ((uint128_t ) c1340));
        t13897 = ((uint64_t ) s2477);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39602 = ((0 < t13846));
        a39603 = ((0 == t13846));
        a39604 = ((0 < t13847));
        a39605 = ((a39603) && (a39604));
        a39606 = ((a39602) || (a39605));
        /* MPEqual 64 */
        a39607 = ((0 == t13847));
        a39608 = ((a39603) && (a39607));
        /* MPLessThan 64 */
        a39609 = ((t13866 < t13848));
        a39610 = ((t13866 == t13848));
        a39611 = ((a39610) && (b2141));
        a39612 = ((a39609) || (a39611));
        a39613 = ((a39608) && (a39612));
        a39614 = ((a39606) || (a39613));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39615 = ((t13867 == t13849));
        a39616 = ((a39610) && (a39615));
        a39617 = ((a39608) && (a39616));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a39618 = ((a39617) && (b2140));
        i689 = ((a39614) || (a39618));
        a39619 = (2*a39576);
        /* MPCondD 128 */
        a39620 = (2*a39619);
        a39621 = (a39620 + 1);
        /* MPCondD 64 */
        a39622 = (2*a39621);
        P2[a39622] = ((i689) ? (t13897) : (t13885));
        a39623 = (a39622 + 1);
        P2[a39623] = ((i689) ? (t13896) : (d2709));
        a39624 = (a39619 + 1);
        /* MPCondD 128 */
        a39625 = (2*a39624);
        /* MPCondD 64 */
        a39626 = (2*a39625);
        P2[a39626] = ((i689) ? (t13891) : (t13884));
        a39627 = (a39626 + 1);
        P2[a39627] = ((i689) ? (t13890) : (d2705));
        a39628 = (a39625 + 1);
        /* MPCondD 64 */
        a39629 = (2*a39628);
        P2[a39629] = ((i689) ? (t13887) : (d2701));
        a39630 = (a39629 + 1);
        P2[a39630] = ((i689) ? (t13886) : (d2699));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code14(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a39631, a39632, a39633, a39634, a39635, a39636, a39637, a39638, 
            a39639, a39640, a39641, a39642, a39643, a39644, a39645, a39646, 
            a39647, a39648, a39649, a39650, a39651, a39652, a39653, a39654, 
            a39655, a39656, a39657, a39658, a39659, a39678, a39679, a39680, 
            a39684, a39685, a39686, a39687, a39688, a39689, a39690, a39693, 
            a39694, a39695, a39700, a39704, a39705, a39706, a39710, a39711, 
            a39712, a39713, a39714, a39715, a39716, a39719, a39720, a39721, 
            a39725, a39728, a39729, a39730, a39731, a39732, a39733, a39734, 
            a39735, a39736, a39737, a39738, a39739, a39740, a39741, a39742, 
            a39743, a39744, a39745, a39746, a39747, a39749, a39750, a39755, 
            a39756, a39757, a39758, a39759, a39767, a39768, a39769, a39770, 
            a39771, a39772, a39773, a39774, a39775, a39776, a39777, a39778, 
            a39779, a39780, a39781, a39782, a39783, a39784, a39785, a39786, 
            a39787, a39788, a39789, a39790, a39791, a39792, a39793, a39794, 
            a39795, a39796, a39797, a39798, a39799, a39800, a39801, a39803, 
            a39804, a39805, a39809, a39810, a39811, a39812, a39813, a39814, 
            a39815, a39819, a39820, a39821, a39822, a39823, a39824, a39825, 
            a39826, a39827, a39828, a39829, a39830, a39831, a39833, a39834, 
            a39835, a39839, a39840, a39841, a39842, a39843, a39844, a39845, 
            a39849, a39851, a39852, a39857, a39858, a39859, a39860, a39861, 
            a39862, a39863, a39864, a39865, a39866, a39867, a39868, a39869, 
            a39870, a39871, a39872, a39873, a39874, a39875, a39876, a39877, 
            a39878, a39879, a39880, a39881, a39882, a39883, a39884, a39885, 
            b2143, b2144, b2146, b2147, b2148, b2149, b2150, b2151, 
            b2152, b2153, b2154, b2155, b2156, b2157, b2158, b2159, 
            b2160, b2161, b2162, b2163, b2164, b2165, b2166, b2167, 
            b2168, b2169, b2170, b2171, b2172, b2173, b2174, b2175, 
            b2176, b2177, b2178, b2179, b2180, b2181, b2182, b2183, 
            c1341, c1342, c1343, c1344, c1345, c1346, c1347, c1349, 
            c1350, c1351, c1352, c1353, c1354, c1355, c1357, i690, 
            i691, i692;
    uint64_t a30080, a30081, a30082, a30083, a30084, a30085, a30185, a30186, 
            a30187, a30188, a30189, a30190, a39660, a39661, a39662, a39663, 
            a39664, a39665, a39666, a39667, a39668, a39669, a39671, a39672, 
            a39673, a39674, a39675, a39676, a39748, a39751, a39760, a39850, 
            a39853, d2710, d2711, d2712, d2713, d2714, d2715, d2716, 
            d2717, d2718, d2719, d2720, d2721, d2722, d2723, d2724, 
            d2725, d2726, d2727, d2728, d2729, d2730, d2731, d2732, 
            d2733, d2734, d2735, d2736, d2737, d2738, d2739, d2740, 
            d2741, d2742, d2743, d2744, d2745, d2746, d2747, d2748, 
            d2749, d2750, d2751, d2752, d2753, d2754, d2755, d2756, 
            d2757, d2758, d2759, d2760, d2761, t13898, t13899, t13900, 
            t13901, t13902, t13903, t13904, t13905, t13906, t13907, t13908, 
            t13909, t13910, t13911, t13912, t13913, t13914, t13915, t13916, 
            t13917, t13918, t13919, t13920, t13921, t13922, t13923, t13924, 
            t13925, t13926, t13927, t13928, t13929, t13930, t13931, t13934, 
            t13935, t13936, t13937, t13938, t13939, t13940, t13941, t13942, 
            t13943, t13944, t13945, t13946, t13947, t13948, t13949, t13950, 
            t13951, t13952, t13953, t13954, t13955, t13956, t13957, t13958, 
            t13959, t13960, t13961, t13962, t13963, t13964, t13965, t13966, 
            t13967, t13968, t13969, t13970, t13971, t13972, t13973, t13974, 
            t13975, t13976, t13977, t13979, t13980, t13981, t13982, t13983, 
            t13984, t13985, t13986, t13989, t13990, t13991, t13992, t13993, 
            t13994, t13995, t13996, t13997, t13998, t13999, t14000, t14001, 
            t14002, t14003, t14004, t14005, t14007, t14008, t14009, t14010, 
            t8127, t8128, t8129, t8130, t8131, t8132, t8133, t8134, 
            t8137, t8138, t8139, t8140, t8141, t8142, t8143, t8144, 
            t8145, t8146, t8147, t8148, t8149, t8150, t8151, t8152, 
            t8153, t8154, t8155, t8156, t8159, t8160, t8161, t8162, 
            t8163, t8164, t8165, t8166, t8167, t8168, t8169, t8170, 
            t8171, t8172, t8173, t8174, t8175, t8176, t8177, t8178;
    uint128_t s2478, s2479, s2480, s2481, s2482, s2483, s2484, s2485, 
            s2486, s2487, s2488, s2489, s2490, s2491, s2492, s2493, 
            s2494, s2495, s2496, s2497, s2498, s2499, s2500, s2501, 
            s2502;
    for(int i13 = 0; i13 <= 4095; i13++) {
        a39631 = (128*i13);
        a39632 = (a39631 + threadIdx.x);
        b2143 = (threadIdx.x + a39631);
        a39633 = (b2143 + 524288);
        a39634 = (a39633 % 16384);
        a39635 = (16384 + a39634);
        /* Begin of MPModMul 256 */
        a39636 = (2*a39635);
        a39637 = (a39636 + 1);
        a39638 = (2*a39633);
        a39639 = (a39638 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39640 = (2*a39636);
        a39641 = (a39640 + 1);
        /* MPAssignDD 64 */
        a39642 = (2*a39641);
        t13898 = twiddles[a39642];
        a39643 = (a39642 + 1);
        t13899 = twiddles[a39643];
        /* MPAssignDD 128 */
        a39644 = (2*a39637);
        /* MPAssignDD 64 */
        a39645 = (2*a39644);
        t13900 = twiddles[a39645];
        a39646 = (a39645 + 1);
        t13901 = twiddles[a39646];
        a39647 = (a39644 + 1);
        /* MPAssignDD 64 */
        a39648 = (2*a39647);
        t13902 = twiddles[a39648];
        a39649 = (a39648 + 1);
        t13903 = twiddles[a39649];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39650 = (2*a39638);
        a39651 = (a39650 + 1);
        /* MPAssignDD 64 */
        a39652 = (2*a39651);
        t13904 = P2[a39652];
        a39653 = (a39652 + 1);
        t13905 = P2[a39653];
        /* MPAssignDD 128 */
        a39654 = (2*a39639);
        /* MPAssignDD 64 */
        a39655 = (2*a39654);
        t13906 = P2[a39655];
        a39656 = (a39655 + 1);
        t13907 = P2[a39656];
        a39657 = (a39654 + 1);
        /* MPAssignDD 64 */
        a39658 = (2*a39657);
        t13908 = P2[a39658];
        a39659 = (a39658 + 1);
        t13909 = P2[a39659];
        MPMulQDD_L3_2(t8141, t8142, t8143, t8144, t8137, t8138, t8139, t8140, 
    t8131, t8132, t8133, t8134, t8127, t8128, t8129, t8130, 
    0, 0, t13898, t13899, t13900, t13901, t13902, t13903, 
    0, 0, t13904, t13905, t13906, t13907, t13908, t13909);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13910 = (t8131 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a39660 = (t8131 << 6);
        a39661 = (t8132 >> 58);
        t13911 = (((a39660)|(a39661)));
        t13912 = (t8132 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13913 = (t8133 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13914 = (((t13912)|(t13913)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2144 = ((int) 1);
        t13915 = (288230376151711744 - b2144);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13916 = (((t8143)&(t13915)));
        t13917 = (((t8144)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a39662 = (t13916 << 6);
        a39663 = (t13917 >> 58);
        t13918 = (((a39662)|(a39663)));
        t13919 = (t13917 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t13920 = (t8137 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a39664 = (t8137 << 6);
        a39665 = (t8138 >> 58);
        t13921 = (((a39664)|(a39665)));
        t13922 = (t8138 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t13923 = (t8139 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t13924 = (((t13922)|(t13923)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13925 = (((t13919)|(t13920)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a39666 = (t8139 << 6);
        a39667 = (t8140 >> 58);
        t13926 = (((a39666)|(a39667)));
        t13927 = (t8140 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t13928 = (((t13927)|(t13910)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a30080 = mu[2];
        a30081 = mu[3];
        a30082 = mu[4];
        a30083 = mu[5];
        a30084 = mu[6];
        a30085 = mu[7];
        MPMulQDD_L3_1(t8175, t8176, t8177, t8178, t8171, t8172, t8173, t8174, 
    t8167, t8168, t8169, t8170, t8163, t8164, t8165, t8166, 
    t13918, t13925, t13921, t13924, t13926, t13928, t13911, t13914, 
    0, 0, a30080, a30081, a30082, a30083, a30084, a30085);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13929 = (t8167 >> 1);
        a39668 = (t8167 << 63);
        a39669 = (t8168 >> 1);
        t13930 = (((a39668)|(a39669)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t13931 = (0 - b2144);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2710 = (2 - b2144);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t13934 = (((t8176)&(d2710)));
        /* MPBinAndD 64 */
        t13935 = (((t8177)&(t13931)));
        t13936 = (((t8178)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13937 = (t13934 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13938 = (t13935 >> 1);
        a39671 = (t13935 << 63);
        a39672 = (t13936 >> 1);
        t13939 = (((a39671)|(a39672)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13940 = (((t13937)|(t13938)));
        /* Begin of MPShiftLeft1D */
        t13941 = (t13936 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t13942 = (t8171 >> 1);
        a39673 = (t8171 << 63);
        a39674 = (t8172 >> 1);
        t13943 = (((a39673)|(a39674)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13944 = (((t13941)|(t13942)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t13945 = (t8172 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t13946 = (t8173 >> 1);
        a39675 = (t8173 << 63);
        a39676 = (t8174 >> 1);
        t13947 = (((a39675)|(a39676)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t13948 = (((t13945)|(t13946)));
        /* Begin of MPShiftLeft1D */
        t13949 = (t8174 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t13950 = (((t13949)|(t13929)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a30185 = modulus[2];
        a30186 = modulus[3];
        a30187 = modulus[4];
        a30188 = modulus[5];
        a30189 = modulus[6];
        a30190 = modulus[7];
        MPMulQDD_L3_1(t8159, t8160, t8161, t8162, t8153, t8154, t8155, t8156, 
    t8149, t8150, t8151, t8152, t8145, t8146, t8147, t8148, 
    t13940, t13939, t13944, t13943, t13948, t13947, t13950, t13930, 
    0, 0, a30185, a30186, a30187, a30188, a30189, a30190);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2711 = (t8130 - t8148);
        b2146 = ((t8130 < t8148));
        d2712 = (t8129 - t8147);
        d2713 = (d2712 - b2146);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39678 = ((t8129 < t8147));
        a39679 = ((t8129 == t8147));
        a39680 = ((a39679) && (b2146));
        b2147 = ((a39678) || (a39680));
        /* Begin of MPSubDDD 64 */
        d2714 = (t8128 - t8146);
        b2148 = ((t8128 < t8146));
        d2715 = (t8127 - t8145);
        d2716 = (d2715 - b2148);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2717 = (d2714 - b2147);
        b2149 = ((d2714 < b2147));
        t13951 = (d2716 - b2149);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39684 = ((t8127 < t8145));
        a39685 = ((t8127 == t8145));
        a39686 = ((a39685) && (b2148));
        a39687 = ((a39684) || (a39686));
        /* MPEqual 64 */
        a39688 = ((t8128 == t8146));
        a39689 = ((a39685) && (a39688));
        /* MPLessThan 64 */
        a39690 = ((a39689) && (b2147));
        b2150 = ((a39687) || (a39690));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2718 = (t8134 - t8152);
        b2151 = ((t8134 < t8152));
        d2719 = (t8133 - t8151);
        d2720 = (d2719 - b2151);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39693 = ((t8133 < t8151));
        a39694 = ((t8133 == t8151));
        a39695 = ((a39694) && (b2151));
        b2152 = ((a39693) || (a39695));
        /* Begin of MPSubDDD 64 */
        d2721 = (t8132 - t8150);
        b2153 = ((t8132 < t8150));
        d2722 = (t8131 - t8149);
        d2723 = (d2722 - b2153);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2724 = (d2721 - b2152);
        b2154 = ((d2721 < b2152));
        t13952 = (d2723 - b2154);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2725 = (d2718 - b2150);
        b2155 = ((d2718 < b2150));
        t13953 = (d2720 - b2155);
        /* MPLessThanDI 64 */
        a39700 = ((d2720 == 0));
        b2156 = ((a39700) && (b2155));
        /* MPSubDDI 64 */
        d2726 = (d2724 - b2156);
        b2157 = ((d2724 < b2156));
        t13954 = (t13952 - b2157);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2727 = (d2711 - a30190);
        b2158 = ((d2711 < a30190));
        d2728 = (d2713 - a30189);
        d2729 = (d2728 - b2158);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39704 = ((d2713 < a30189));
        a39705 = ((d2713 == a30189));
        a39706 = ((a39705) && (b2158));
        b2159 = ((a39704) || (a39706));
        /* Begin of MPSubDDD 64 */
        d2730 = (d2717 - a30188);
        b2160 = ((d2717 < a30188));
        d2731 = (t13951 - a30187);
        d2732 = (d2731 - b2160);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2733 = (d2730 - b2159);
        b2161 = ((d2730 < b2159));
        t13955 = (d2732 - b2161);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39710 = ((t13951 < a30187));
        a39711 = ((t13951 == a30187));
        a39712 = ((a39711) && (b2160));
        a39713 = ((a39710) || (a39712));
        /* MPEqual 64 */
        a39714 = ((d2717 == a30188));
        a39715 = ((a39711) && (a39714));
        /* MPLessThan 64 */
        a39716 = ((a39715) && (b2159));
        b2162 = ((a39713) || (a39716));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2734 = (d2725 - a30186);
        b2163 = ((d2725 < a30186));
        d2735 = (t13953 - a30185);
        d2736 = (d2735 - b2163);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39719 = ((t13953 < a30185));
        a39720 = ((t13953 == a30185));
        a39721 = ((a39720) && (b2163));
        b2164 = ((a39719) || (a39721));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2737 = (d2726 - b2164);
        b2165 = ((d2726 < b2164));
        t13956 = (t13954 - b2165);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2738 = (d2734 - b2162);
        b2166 = ((d2734 < b2162));
        t13957 = (d2736 - b2166);
        /* MPLessThanDI 64 */
        a39725 = ((d2736 == 0));
        b2167 = ((a39725) && (b2166));
        /* MPSubDDI 64 */
        d2739 = (d2737 - b2167);
        b2168 = ((d2737 < b2167));
        t13958 = (t13956 - b2168);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a39728 = ((t13954 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a39729 = ((d2726 == 0));
        a39730 = ((a39728) && (a39729));
        /* MPLessThan 64 */
        a39731 = ((a39730) && (b2164));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39732 = ((d2725 == a30186));
        a39733 = ((a39720) && (a39732));
        a39734 = ((a39730) && (a39733));
        /* MPLessThan 128 */
        a39735 = ((a39734) && (b2162));
        i690 = ((a39731) || (a39735));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13959 = ((i690) ? (t13954) : (t13958));
        t13960 = ((i690) ? (d2726) : (d2739));
        /* MPCondD 64 */
        t13961 = ((i690) ? (t13953) : (t13957));
        t13962 = ((i690) ? (d2725) : (d2738));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t13963 = ((i690) ? (t13951) : (t13955));
        t13964 = ((i690) ? (d2717) : (d2733));
        /* MPCondD 64 */
        t13965 = ((i690) ? (d2713) : (d2729));
        t13966 = ((i690) ? (d2711) : (d2727));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a39736 = (256*i13);
        a39737 = (2*threadIdx.x);
        a39738 = (a39736 + a39737);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a39739 = (2*a39632);
        a39740 = (a39739 + 1);
        /* MPAssignDD 128 */
        a39741 = (2*a39740);
        /* MPAssignDD 64 */
        a39742 = (2*a39741);
        t13967 = P2[a39742];
        a39743 = (a39742 + 1);
        t13968 = P2[a39743];
        a39744 = (a39741 + 1);
        /* MPAssignDD 64 */
        a39745 = (2*a39744);
        t13969 = P2[a39745];
        a39746 = (a39745 + 1);
        t13970 = P2[a39746];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2478 = (((uint128_t ) t13970) + ((uint128_t ) t13966));
        t13971 = ((uint64_t ) s2478);
        c1341 = (s2478 >> 64);
        s2479 = (((uint128_t ) t13969) + ((uint128_t ) t13965));
        s2480 = (((uint128_t ) s2479) + ((uint128_t ) c1341));
        t13972 = ((uint64_t ) s2480);
        c1342 = (s2480 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2481 = (((uint128_t ) t13968) + ((uint128_t ) t13964));
        t13973 = ((uint64_t ) s2481);
        c1343 = (s2481 >> 64);
        s2482 = (((uint128_t ) t13967) + ((uint128_t ) t13963));
        s2483 = (((uint128_t ) s2482) + ((uint128_t ) c1343));
        t13974 = ((uint64_t ) s2483);
        c1344 = (s2483 >> 64);
        /* MPPropagateCarry 64 */
        t13975 = (t13973 + c1342);
        a39747 = ((t13975 == 0));
        a39748 = (t13974 + c1342);
        t13976 = ((a39747) ? (a39748) : (t13974));
        a39749 = ((t13976 == 0));
        a39750 = ((a39749) && (a39747));
        a39751 = (c1344 + c1342);
        t13977 = ((a39750) ? (a39751) : (c1344));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39755 = (2*a39739);
        a39756 = (a39755 + 1);
        /* MPAssignDD 64 */
        a39757 = (2*a39756);
        t13979 = P2[a39757];
        a39758 = (a39757 + 1);
        t13980 = P2[a39758];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2484 = (((uint128_t ) t13980) + ((uint128_t ) t13962));
        t13981 = ((uint64_t ) s2484);
        c1345 = (s2484 >> 64);
        s2485 = (((uint128_t ) t13979) + ((uint128_t ) t13961));
        s2486 = (((uint128_t ) s2485) + ((uint128_t ) c1345));
        t13982 = ((uint64_t ) s2486);
        c1346 = (s2486 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t13983 = ((uint64_t ) t13960);
        c1347 = (t13960 >> 64);
        s2487 = (((uint128_t ) t13959) + ((uint128_t ) c1347));
        t13984 = ((uint64_t ) s2487);
        /* MPPropagateCarry 64 */
        t13985 = (t13983 + c1346);
        a39759 = ((t13985 == 0));
        a39760 = (t13984 + c1346);
        t13986 = ((a39759) ? (a39760) : (t13984));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2488 = (((uint128_t ) t13981) + ((uint128_t ) t13977));
        t13989 = ((uint64_t ) s2488);
        c1349 = (s2488 >> 64);
        s2489 = (((uint128_t ) t13982) + ((uint128_t ) c1349));
        t13990 = ((uint64_t ) s2489);
        /* MPEqualDI 64 */
        a39767 = ((t13990 == 0));
        a39768 = ((t13989 == 0));
        a39769 = ((a39767) && (a39768));
        /* MPAddDDI 64 */
        s2490 = (((uint128_t ) t13985) + ((uint128_t ) t13977));
        t13991 = ((uint64_t ) s2490);
        c1350 = (s2490 >> 64);
        s2491 = (((uint128_t ) t13986) + ((uint128_t ) c1350));
        t13992 = ((uint64_t ) s2491);
        /* MPCondD 64 */
        t13993 = ((a39769) ? (t13992) : (t13986));
        t13994 = ((a39769) ? (t13991) : (t13985));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a39770 = ((0 < t13993));
        a39771 = ((0 == t13993));
        a39772 = ((0 < t13994));
        a39773 = ((a39771) && (a39772));
        a39774 = ((a39770) || (a39773));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a39775 = ((0 == t13994));
        a39776 = ((a39771) && (a39775));
        /* MPLessThan 64 */
        a39777 = ((a30185 < t13990));
        a39778 = ((a30185 == t13990));
        a39779 = ((a30186 < t13989));
        a39780 = ((a39778) && (a39779));
        a39781 = ((a39777) || (a39780));
        a39782 = ((a39776) && (a39781));
        a39783 = ((a39774) || (a39782));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39784 = ((a30186 == t13989));
        a39785 = ((a39778) && (a39784));
        a39786 = ((a39776) && (a39785));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39787 = ((a30187 < t13976));
        a39788 = ((a30187 == t13976));
        a39789 = ((a30188 < t13975));
        a39790 = ((a39788) && (a39789));
        a39791 = ((a39787) || (a39790));
        /* MPEqual 64 */
        a39792 = ((a30188 == t13975));
        a39793 = ((a39788) && (a39792));
        /* MPLessThan 64 */
        a39794 = ((a30189 < t13972));
        a39795 = ((a30189 == t13972));
        a39796 = ((a30190 < t13971));
        a39797 = ((a39795) && (a39796));
        a39798 = ((a39794) || (a39797));
        a39799 = ((a39793) && (a39798));
        a39800 = ((a39791) || (a39799));
        a39801 = ((a39786) && (a39800));
        i691 = ((a39783) || (a39801));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2740 = (t13971 - a30190);
        b2169 = ((t13971 < a30190));
        d2741 = (t13972 - a30189);
        d2742 = (d2741 - b2169);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39803 = ((t13972 < a30189));
        a39804 = ((t13972 == a30189));
        a39805 = ((a39804) && (b2169));
        b2170 = ((a39803) || (a39805));
        /* Begin of MPSubDDD 64 */
        d2743 = (t13975 - a30188);
        b2171 = ((t13975 < a30188));
        d2744 = (t13976 - a30187);
        d2745 = (d2744 - b2171);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2746 = (d2743 - b2170);
        b2172 = ((d2743 < b2170));
        t13995 = (d2745 - b2172);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39809 = ((t13976 < a30187));
        a39810 = ((t13976 == a30187));
        a39811 = ((a39810) && (b2171));
        a39812 = ((a39809) || (a39811));
        /* MPEqual 64 */
        a39813 = ((t13975 == a30188));
        a39814 = ((a39810) && (a39813));
        /* MPLessThan 64 */
        a39815 = ((a39814) && (b2170));
        b2173 = ((a39812) || (a39815));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2747 = (t13989 - a30186);
        b2174 = ((t13989 < a30186));
        d2748 = (t13990 - a30185);
        d2749 = (d2748 - b2174);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2750 = (d2747 - b2173);
        b2175 = ((d2747 < b2173));
        t13996 = (d2749 - b2175);
        /* End of MPSubDDD 256 */
        a39819 = (2*a39738);
        /* MPCondD 128 */
        a39820 = (2*a39819);
        a39821 = (a39820 + 1);
        /* MPCondD 64 */
        a39822 = (2*a39821);
        P1[a39822] = ((i691) ? (t13996) : (t13990));
        a39823 = (a39822 + 1);
        P1[a39823] = ((i691) ? (d2750) : (t13989));
        a39824 = (a39819 + 1);
        /* MPCondD 128 */
        a39825 = (2*a39824);
        /* MPCondD 64 */
        a39826 = (2*a39825);
        P1[a39826] = ((i691) ? (t13995) : (t13976));
        a39827 = (a39826 + 1);
        P1[a39827] = ((i691) ? (d2746) : (t13975));
        a39828 = (a39825 + 1);
        /* MPCondD 64 */
        a39829 = (2*a39828);
        P1[a39829] = ((i691) ? (d2742) : (t13972));
        a39830 = (a39829 + 1);
        P1[a39830] = ((i691) ? (d2740) : (t13971));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b2176 = (a39737 + a39736);
        a39831 = (b2176 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2751 = (t13970 - t13966);
        b2177 = ((t13970 < t13966));
        d2752 = (t13969 - t13965);
        d2753 = (d2752 - b2177);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39833 = ((t13969 < t13965));
        a39834 = ((t13969 == t13965));
        a39835 = ((a39834) && (b2177));
        b2178 = ((a39833) || (a39835));
        /* Begin of MPSubDDD 64 */
        d2754 = (t13968 - t13964);
        b2179 = ((t13968 < t13964));
        d2755 = (t13967 - t13963);
        d2756 = (d2755 - b2179);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2757 = (d2754 - b2178);
        b2180 = ((d2754 < b2178));
        t13997 = (d2756 - b2180);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39839 = ((t13967 < t13963));
        a39840 = ((t13967 == t13963));
        a39841 = ((a39840) && (b2179));
        a39842 = ((a39839) || (a39841));
        /* MPEqual 64 */
        a39843 = ((t13968 == t13964));
        a39844 = ((a39840) && (a39843));
        /* MPLessThan 64 */
        a39845 = ((a39844) && (b2178));
        b2181 = ((a39842) || (a39845));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2758 = (t13980 - t13962);
        b2182 = ((t13980 < t13962));
        d2759 = (t13979 - t13961);
        d2760 = (d2759 - b2182);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2761 = (d2758 - b2181);
        b2183 = ((d2758 < b2181));
        t13998 = (d2760 - b2183);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2492 = (((uint128_t ) d2751) + ((uint128_t ) a30190));
        t13999 = ((uint64_t ) s2492);
        c1351 = (s2492 >> 64);
        s2493 = (((uint128_t ) d2753) + ((uint128_t ) a30189));
        s2494 = (((uint128_t ) s2493) + ((uint128_t ) c1351));
        t14000 = ((uint64_t ) s2494);
        c1352 = (s2494 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2495 = (((uint128_t ) d2757) + ((uint128_t ) a30188));
        t14001 = ((uint64_t ) s2495);
        c1353 = (s2495 >> 64);
        s2496 = (((uint128_t ) t13997) + ((uint128_t ) a30187));
        s2497 = (((uint128_t ) s2496) + ((uint128_t ) c1353));
        t14002 = ((uint64_t ) s2497);
        c1354 = (s2497 >> 64);
        /* MPPropagateCarry 64 */
        t14003 = (t14001 + c1352);
        a39849 = ((t14003 == 0));
        a39850 = (t14002 + c1352);
        t14004 = ((a39849) ? (a39850) : (t14002));
        a39851 = ((t14004 == 0));
        a39852 = ((a39851) && (a39849));
        a39853 = (c1354 + c1352);
        t14005 = ((a39852) ? (a39853) : (c1354));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2498 = (((uint128_t ) d2761) + ((uint128_t ) a30186));
        t14007 = ((uint64_t ) s2498);
        c1355 = (s2498 >> 64);
        s2499 = (((uint128_t ) t13998) + ((uint128_t ) a30185));
        s2500 = (((uint128_t ) s2499) + ((uint128_t ) c1355));
        t14008 = ((uint64_t ) s2500);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2501 = (((uint128_t ) t14007) + ((uint128_t ) t14005));
        t14009 = ((uint64_t ) s2501);
        c1357 = (s2501 >> 64);
        s2502 = (((uint128_t ) t14008) + ((uint128_t ) c1357));
        t14010 = ((uint64_t ) s2502);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39857 = ((0 < t13959));
        a39858 = ((0 == t13959));
        a39859 = ((0 < t13960));
        a39860 = ((a39858) && (a39859));
        a39861 = ((a39857) || (a39860));
        /* MPEqual 64 */
        a39862 = ((0 == t13960));
        a39863 = ((a39858) && (a39862));
        /* MPLessThan 64 */
        a39864 = ((t13979 < t13961));
        a39865 = ((t13979 == t13961));
        a39866 = ((a39865) && (b2182));
        a39867 = ((a39864) || (a39866));
        a39868 = ((a39863) && (a39867));
        a39869 = ((a39861) || (a39868));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39870 = ((t13980 == t13962));
        a39871 = ((a39865) && (a39870));
        a39872 = ((a39863) && (a39871));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a39873 = ((a39872) && (b2181));
        i692 = ((a39869) || (a39873));
        a39874 = (2*a39831);
        /* MPCondD 128 */
        a39875 = (2*a39874);
        a39876 = (a39875 + 1);
        /* MPCondD 64 */
        a39877 = (2*a39876);
        P1[a39877] = ((i692) ? (t14010) : (t13998));
        a39878 = (a39877 + 1);
        P1[a39878] = ((i692) ? (t14009) : (d2761));
        a39879 = (a39874 + 1);
        /* MPCondD 128 */
        a39880 = (2*a39879);
        /* MPCondD 64 */
        a39881 = (2*a39880);
        P1[a39881] = ((i692) ? (t14004) : (t13997));
        a39882 = (a39881 + 1);
        P1[a39882] = ((i692) ? (t14003) : (d2757));
        a39883 = (a39880 + 1);
        /* MPCondD 64 */
        a39884 = (2*a39883);
        P1[a39884] = ((i692) ? (t14000) : (d2753));
        a39885 = (a39884 + 1);
        P1[a39885] = ((i692) ? (t13999) : (d2751));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code15(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a39886, a39887, a39888, a39889, a39890, a39891, a39892, a39893, 
            a39894, a39895, a39896, a39897, a39898, a39899, a39900, a39901, 
            a39902, a39903, a39904, a39905, a39906, a39907, a39908, a39909, 
            a39910, a39911, a39912, a39913, a39914, a39933, a39934, a39935, 
            a39939, a39940, a39941, a39942, a39943, a39944, a39945, a39948, 
            a39949, a39950, a39955, a39959, a39960, a39961, a39965, a39966, 
            a39967, a39968, a39969, a39970, a39971, a39974, a39975, a39976, 
            a39980, a39983, a39984, a39985, a39986, a39987, a39988, a39989, 
            a39990, a39991, a39992, a39993, a39994, a39995, a39996, a39997, 
            a39998, a39999, a40000, a40001, a40002, a40004, a40005, a40010, 
            a40011, a40012, a40013, a40014, a40022, a40023, a40024, a40025, 
            a40026, a40027, a40028, a40029, a40030, a40031, a40032, a40033, 
            a40034, a40035, a40036, a40037, a40038, a40039, a40040, a40041, 
            a40042, a40043, a40044, a40045, a40046, a40047, a40048, a40049, 
            a40050, a40051, a40052, a40053, a40054, a40055, a40056, a40058, 
            a40059, a40060, a40064, a40065, a40066, a40067, a40068, a40069, 
            a40070, a40074, a40075, a40076, a40077, a40078, a40079, a40080, 
            a40081, a40082, a40083, a40084, a40085, a40086, a40088, a40089, 
            a40090, a40094, a40095, a40096, a40097, a40098, a40099, a40100, 
            a40104, a40106, a40107, a40112, a40113, a40114, a40115, a40116, 
            a40117, a40118, a40119, a40120, a40121, a40122, a40123, a40124, 
            a40125, a40126, a40127, a40128, a40129, a40130, a40131, a40132, 
            a40133, a40134, a40135, a40136, a40137, a40138, a40139, a40140, 
            b2184, b2185, b2187, b2188, b2189, b2190, b2191, b2192, 
            b2193, b2194, b2195, b2196, b2197, b2198, b2199, b2200, 
            b2201, b2202, b2203, b2204, b2205, b2206, b2207, b2208, 
            b2209, b2210, b2211, b2212, b2213, b2214, b2215, b2216, 
            b2217, b2218, b2219, b2220, b2221, b2222, b2223, b2224, 
            c1358, c1359, c1360, c1361, c1362, c1363, c1364, c1366, 
            c1367, c1368, c1369, c1370, c1371, c1372, c1374, i693, 
            i694, i695;
    uint64_t a30991, a30992, a30993, a30994, a30995, a30996, a31096, a31097, 
            a31098, a31099, a31100, a31101, a39915, a39916, a39917, a39918, 
            a39919, a39920, a39921, a39922, a39923, a39924, a39926, a39927, 
            a39928, a39929, a39930, a39931, a40003, a40006, a40015, a40105, 
            a40108, d2762, d2763, d2764, d2765, d2766, d2767, d2768, 
            d2769, d2770, d2771, d2772, d2773, d2774, d2775, d2776, 
            d2777, d2778, d2779, d2780, d2781, d2782, d2783, d2784, 
            d2785, d2786, d2787, d2788, d2789, d2790, d2791, d2792, 
            d2793, d2794, d2795, d2796, d2797, d2798, d2799, d2800, 
            d2801, d2802, d2803, d2804, d2805, d2806, d2807, d2808, 
            d2809, d2810, d2811, d2812, d2813, t14011, t14012, t14013, 
            t14014, t14015, t14016, t14017, t14018, t14019, t14020, t14021, 
            t14022, t14023, t14024, t14025, t14026, t14027, t14028, t14029, 
            t14030, t14031, t14032, t14033, t14034, t14035, t14036, t14037, 
            t14038, t14039, t14040, t14041, t14042, t14043, t14044, t14047, 
            t14048, t14049, t14050, t14051, t14052, t14053, t14054, t14055, 
            t14056, t14057, t14058, t14059, t14060, t14061, t14062, t14063, 
            t14064, t14065, t14066, t14067, t14068, t14069, t14070, t14071, 
            t14072, t14073, t14074, t14075, t14076, t14077, t14078, t14079, 
            t14080, t14081, t14082, t14083, t14084, t14085, t14086, t14087, 
            t14088, t14089, t14090, t14092, t14093, t14094, t14095, t14096, 
            t14097, t14098, t14099, t14102, t14103, t14104, t14105, t14106, 
            t14107, t14108, t14109, t14110, t14111, t14112, t14113, t14114, 
            t14115, t14116, t14117, t14118, t14120, t14121, t14122, t14123, 
            t8197, t8198, t8199, t8200, t8201, t8202, t8203, t8204, 
            t8207, t8208, t8209, t8210, t8211, t8212, t8213, t8214, 
            t8215, t8216, t8217, t8218, t8219, t8220, t8221, t8222, 
            t8223, t8224, t8225, t8226, t8227, t8228, t8229, t8230, 
            t8231, t8232, t8233, t8234, t8235, t8236, t8237, t8238, 
            t8239, t8240, t8241, t8242, t8243, t8244, t8245, t8246;
    uint128_t s2503, s2504, s2505, s2506, s2507, s2508, s2509, s2510, 
            s2511, s2512, s2513, s2514, s2515, s2516, s2517, s2518, 
            s2519, s2520, s2521, s2522, s2523, s2524, s2525, s2526, 
            s2527;
    for(int i11 = 0; i11 <= 4095; i11++) {
        a39886 = (128*i11);
        a39887 = (a39886 + threadIdx.x);
        b2184 = (threadIdx.x + a39886);
        a39888 = (b2184 + 524288);
        a39889 = (a39888 % 32768);
        a39890 = (32768 + a39889);
        /* Begin of MPModMul 256 */
        a39891 = (2*a39890);
        a39892 = (a39891 + 1);
        a39893 = (2*a39888);
        a39894 = (a39893 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39895 = (2*a39891);
        a39896 = (a39895 + 1);
        /* MPAssignDD 64 */
        a39897 = (2*a39896);
        t14011 = twiddles[a39897];
        a39898 = (a39897 + 1);
        t14012 = twiddles[a39898];
        /* MPAssignDD 128 */
        a39899 = (2*a39892);
        /* MPAssignDD 64 */
        a39900 = (2*a39899);
        t14013 = twiddles[a39900];
        a39901 = (a39900 + 1);
        t14014 = twiddles[a39901];
        a39902 = (a39899 + 1);
        /* MPAssignDD 64 */
        a39903 = (2*a39902);
        t14015 = twiddles[a39903];
        a39904 = (a39903 + 1);
        t14016 = twiddles[a39904];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a39905 = (2*a39893);
        a39906 = (a39905 + 1);
        /* MPAssignDD 64 */
        a39907 = (2*a39906);
        t14017 = P1[a39907];
        a39908 = (a39907 + 1);
        t14018 = P1[a39908];
        /* MPAssignDD 128 */
        a39909 = (2*a39894);
        /* MPAssignDD 64 */
        a39910 = (2*a39909);
        t14019 = P1[a39910];
        a39911 = (a39910 + 1);
        t14020 = P1[a39911];
        a39912 = (a39909 + 1);
        /* MPAssignDD 64 */
        a39913 = (2*a39912);
        t14021 = P1[a39913];
        a39914 = (a39913 + 1);
        t14022 = P1[a39914];
        MPMulQDD_L3_2(t8211, t8212, t8213, t8214, t8207, t8208, t8209, t8210, 
    t8201, t8202, t8203, t8204, t8197, t8198, t8199, t8200, 
    0, 0, t14011, t14012, t14013, t14014, t14015, t14016, 
    0, 0, t14017, t14018, t14019, t14020, t14021, t14022);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14023 = (t8201 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a39915 = (t8201 << 6);
        a39916 = (t8202 >> 58);
        t14024 = (((a39915)|(a39916)));
        t14025 = (t8202 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14026 = (t8203 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14027 = (((t14025)|(t14026)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2185 = ((int) 1);
        t14028 = (288230376151711744 - b2185);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14029 = (((t8213)&(t14028)));
        t14030 = (((t8214)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a39917 = (t14029 << 6);
        a39918 = (t14030 >> 58);
        t14031 = (((a39917)|(a39918)));
        t14032 = (t14030 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14033 = (t8207 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a39919 = (t8207 << 6);
        a39920 = (t8208 >> 58);
        t14034 = (((a39919)|(a39920)));
        t14035 = (t8208 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14036 = (t8209 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14037 = (((t14035)|(t14036)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14038 = (((t14032)|(t14033)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a39921 = (t8209 << 6);
        a39922 = (t8210 >> 58);
        t14039 = (((a39921)|(a39922)));
        t14040 = (t8210 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14041 = (((t14040)|(t14023)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a30991 = mu[2];
        a30992 = mu[3];
        a30993 = mu[4];
        a30994 = mu[5];
        a30995 = mu[6];
        a30996 = mu[7];
        MPMulQDD_L3_1(t8243, t8244, t8245, t8246, t8239, t8240, t8241, t8242, 
    t8235, t8236, t8237, t8238, t8231, t8232, t8233, t8234, 
    t14031, t14038, t14034, t14037, t14039, t14041, t14024, t14027, 
    0, 0, a30991, a30992, a30993, a30994, a30995, a30996);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14042 = (t8235 >> 1);
        a39923 = (t8235 << 63);
        a39924 = (t8236 >> 1);
        t14043 = (((a39923)|(a39924)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t14044 = (0 - b2185);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2762 = (2 - b2185);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14047 = (((t8244)&(d2762)));
        /* MPBinAndD 64 */
        t14048 = (((t8245)&(t14044)));
        t14049 = (((t8246)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14050 = (t14047 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14051 = (t14048 >> 1);
        a39926 = (t14048 << 63);
        a39927 = (t14049 >> 1);
        t14052 = (((a39926)|(a39927)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14053 = (((t14050)|(t14051)));
        /* Begin of MPShiftLeft1D */
        t14054 = (t14049 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14055 = (t8239 >> 1);
        a39928 = (t8239 << 63);
        a39929 = (t8240 >> 1);
        t14056 = (((a39928)|(a39929)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14057 = (((t14054)|(t14055)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14058 = (t8240 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14059 = (t8241 >> 1);
        a39930 = (t8241 << 63);
        a39931 = (t8242 >> 1);
        t14060 = (((a39930)|(a39931)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14061 = (((t14058)|(t14059)));
        /* Begin of MPShiftLeft1D */
        t14062 = (t8242 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14063 = (((t14062)|(t14042)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a31096 = modulus[2];
        a31097 = modulus[3];
        a31098 = modulus[4];
        a31099 = modulus[5];
        a31100 = modulus[6];
        a31101 = modulus[7];
        MPMulQDD_L3_1(t8227, t8228, t8229, t8230, t8223, t8224, t8225, t8226, 
    t8219, t8220, t8221, t8222, t8215, t8216, t8217, t8218, 
    t14053, t14052, t14057, t14056, t14061, t14060, t14063, t14043, 
    0, 0, a31096, a31097, a31098, a31099, a31100, a31101);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2763 = (t8200 - t8218);
        b2187 = ((t8200 < t8218));
        d2764 = (t8199 - t8217);
        d2765 = (d2764 - b2187);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39933 = ((t8199 < t8217));
        a39934 = ((t8199 == t8217));
        a39935 = ((a39934) && (b2187));
        b2188 = ((a39933) || (a39935));
        /* Begin of MPSubDDD 64 */
        d2766 = (t8198 - t8216);
        b2189 = ((t8198 < t8216));
        d2767 = (t8197 - t8215);
        d2768 = (d2767 - b2189);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2769 = (d2766 - b2188);
        b2190 = ((d2766 < b2188));
        t14064 = (d2768 - b2190);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39939 = ((t8197 < t8215));
        a39940 = ((t8197 == t8215));
        a39941 = ((a39940) && (b2189));
        a39942 = ((a39939) || (a39941));
        /* MPEqual 64 */
        a39943 = ((t8198 == t8216));
        a39944 = ((a39940) && (a39943));
        /* MPLessThan 64 */
        a39945 = ((a39944) && (b2188));
        b2191 = ((a39942) || (a39945));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2770 = (t8204 - t8222);
        b2192 = ((t8204 < t8222));
        d2771 = (t8203 - t8221);
        d2772 = (d2771 - b2192);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39948 = ((t8203 < t8221));
        a39949 = ((t8203 == t8221));
        a39950 = ((a39949) && (b2192));
        b2193 = ((a39948) || (a39950));
        /* Begin of MPSubDDD 64 */
        d2773 = (t8202 - t8220);
        b2194 = ((t8202 < t8220));
        d2774 = (t8201 - t8219);
        d2775 = (d2774 - b2194);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2776 = (d2773 - b2193);
        b2195 = ((d2773 < b2193));
        t14065 = (d2775 - b2195);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2777 = (d2770 - b2191);
        b2196 = ((d2770 < b2191));
        t14066 = (d2772 - b2196);
        /* MPLessThanDI 64 */
        a39955 = ((d2772 == 0));
        b2197 = ((a39955) && (b2196));
        /* MPSubDDI 64 */
        d2778 = (d2776 - b2197);
        b2198 = ((d2776 < b2197));
        t14067 = (t14065 - b2198);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2779 = (d2763 - a31101);
        b2199 = ((d2763 < a31101));
        d2780 = (d2765 - a31100);
        d2781 = (d2780 - b2199);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39959 = ((d2765 < a31100));
        a39960 = ((d2765 == a31100));
        a39961 = ((a39960) && (b2199));
        b2200 = ((a39959) || (a39961));
        /* Begin of MPSubDDD 64 */
        d2782 = (d2769 - a31099);
        b2201 = ((d2769 < a31099));
        d2783 = (t14064 - a31098);
        d2784 = (d2783 - b2201);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2785 = (d2782 - b2200);
        b2202 = ((d2782 < b2200));
        t14068 = (d2784 - b2202);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a39965 = ((t14064 < a31098));
        a39966 = ((t14064 == a31098));
        a39967 = ((a39966) && (b2201));
        a39968 = ((a39965) || (a39967));
        /* MPEqual 64 */
        a39969 = ((d2769 == a31099));
        a39970 = ((a39966) && (a39969));
        /* MPLessThan 64 */
        a39971 = ((a39970) && (b2200));
        b2203 = ((a39968) || (a39971));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2786 = (d2777 - a31097);
        b2204 = ((d2777 < a31097));
        d2787 = (t14066 - a31096);
        d2788 = (d2787 - b2204);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a39974 = ((t14066 < a31096));
        a39975 = ((t14066 == a31096));
        a39976 = ((a39975) && (b2204));
        b2205 = ((a39974) || (a39976));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2789 = (d2778 - b2205);
        b2206 = ((d2778 < b2205));
        t14069 = (t14067 - b2206);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2790 = (d2786 - b2203);
        b2207 = ((d2786 < b2203));
        t14070 = (d2788 - b2207);
        /* MPLessThanDI 64 */
        a39980 = ((d2788 == 0));
        b2208 = ((a39980) && (b2207));
        /* MPSubDDI 64 */
        d2791 = (d2789 - b2208);
        b2209 = ((d2789 < b2208));
        t14071 = (t14069 - b2209);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a39983 = ((t14067 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a39984 = ((d2778 == 0));
        a39985 = ((a39983) && (a39984));
        /* MPLessThan 64 */
        a39986 = ((a39985) && (b2205));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a39987 = ((d2777 == a31097));
        a39988 = ((a39975) && (a39987));
        a39989 = ((a39985) && (a39988));
        /* MPLessThan 128 */
        a39990 = ((a39989) && (b2203));
        i693 = ((a39986) || (a39990));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14072 = ((i693) ? (t14067) : (t14071));
        t14073 = ((i693) ? (d2778) : (d2791));
        /* MPCondD 64 */
        t14074 = ((i693) ? (t14066) : (t14070));
        t14075 = ((i693) ? (d2777) : (d2790));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14076 = ((i693) ? (t14064) : (t14068));
        t14077 = ((i693) ? (d2769) : (d2785));
        /* MPCondD 64 */
        t14078 = ((i693) ? (d2765) : (d2781));
        t14079 = ((i693) ? (d2763) : (d2779));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a39991 = (256*i11);
        a39992 = (2*threadIdx.x);
        a39993 = (a39991 + a39992);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a39994 = (2*a39887);
        a39995 = (a39994 + 1);
        /* MPAssignDD 128 */
        a39996 = (2*a39995);
        /* MPAssignDD 64 */
        a39997 = (2*a39996);
        t14080 = P1[a39997];
        a39998 = (a39997 + 1);
        t14081 = P1[a39998];
        a39999 = (a39996 + 1);
        /* MPAssignDD 64 */
        a40000 = (2*a39999);
        t14082 = P1[a40000];
        a40001 = (a40000 + 1);
        t14083 = P1[a40001];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2503 = (((uint128_t ) t14083) + ((uint128_t ) t14079));
        t14084 = ((uint64_t ) s2503);
        c1358 = (s2503 >> 64);
        s2504 = (((uint128_t ) t14082) + ((uint128_t ) t14078));
        s2505 = (((uint128_t ) s2504) + ((uint128_t ) c1358));
        t14085 = ((uint64_t ) s2505);
        c1359 = (s2505 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2506 = (((uint128_t ) t14081) + ((uint128_t ) t14077));
        t14086 = ((uint64_t ) s2506);
        c1360 = (s2506 >> 64);
        s2507 = (((uint128_t ) t14080) + ((uint128_t ) t14076));
        s2508 = (((uint128_t ) s2507) + ((uint128_t ) c1360));
        t14087 = ((uint64_t ) s2508);
        c1361 = (s2508 >> 64);
        /* MPPropagateCarry 64 */
        t14088 = (t14086 + c1359);
        a40002 = ((t14088 == 0));
        a40003 = (t14087 + c1359);
        t14089 = ((a40002) ? (a40003) : (t14087));
        a40004 = ((t14089 == 0));
        a40005 = ((a40004) && (a40002));
        a40006 = (c1361 + c1359);
        t14090 = ((a40005) ? (a40006) : (c1361));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40010 = (2*a39994);
        a40011 = (a40010 + 1);
        /* MPAssignDD 64 */
        a40012 = (2*a40011);
        t14092 = P1[a40012];
        a40013 = (a40012 + 1);
        t14093 = P1[a40013];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2509 = (((uint128_t ) t14093) + ((uint128_t ) t14075));
        t14094 = ((uint64_t ) s2509);
        c1362 = (s2509 >> 64);
        s2510 = (((uint128_t ) t14092) + ((uint128_t ) t14074));
        s2511 = (((uint128_t ) s2510) + ((uint128_t ) c1362));
        t14095 = ((uint64_t ) s2511);
        c1363 = (s2511 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t14096 = ((uint64_t ) t14073);
        c1364 = (t14073 >> 64);
        s2512 = (((uint128_t ) t14072) + ((uint128_t ) c1364));
        t14097 = ((uint64_t ) s2512);
        /* MPPropagateCarry 64 */
        t14098 = (t14096 + c1363);
        a40014 = ((t14098 == 0));
        a40015 = (t14097 + c1363);
        t14099 = ((a40014) ? (a40015) : (t14097));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2513 = (((uint128_t ) t14094) + ((uint128_t ) t14090));
        t14102 = ((uint64_t ) s2513);
        c1366 = (s2513 >> 64);
        s2514 = (((uint128_t ) t14095) + ((uint128_t ) c1366));
        t14103 = ((uint64_t ) s2514);
        /* MPEqualDI 64 */
        a40022 = ((t14103 == 0));
        a40023 = ((t14102 == 0));
        a40024 = ((a40022) && (a40023));
        /* MPAddDDI 64 */
        s2515 = (((uint128_t ) t14098) + ((uint128_t ) t14090));
        t14104 = ((uint64_t ) s2515);
        c1367 = (s2515 >> 64);
        s2516 = (((uint128_t ) t14099) + ((uint128_t ) c1367));
        t14105 = ((uint64_t ) s2516);
        /* MPCondD 64 */
        t14106 = ((a40024) ? (t14105) : (t14099));
        t14107 = ((a40024) ? (t14104) : (t14098));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a40025 = ((0 < t14106));
        a40026 = ((0 == t14106));
        a40027 = ((0 < t14107));
        a40028 = ((a40026) && (a40027));
        a40029 = ((a40025) || (a40028));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a40030 = ((0 == t14107));
        a40031 = ((a40026) && (a40030));
        /* MPLessThan 64 */
        a40032 = ((a31096 < t14103));
        a40033 = ((a31096 == t14103));
        a40034 = ((a31097 < t14102));
        a40035 = ((a40033) && (a40034));
        a40036 = ((a40032) || (a40035));
        a40037 = ((a40031) && (a40036));
        a40038 = ((a40029) || (a40037));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40039 = ((a31097 == t14102));
        a40040 = ((a40033) && (a40039));
        a40041 = ((a40031) && (a40040));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40042 = ((a31098 < t14089));
        a40043 = ((a31098 == t14089));
        a40044 = ((a31099 < t14088));
        a40045 = ((a40043) && (a40044));
        a40046 = ((a40042) || (a40045));
        /* MPEqual 64 */
        a40047 = ((a31099 == t14088));
        a40048 = ((a40043) && (a40047));
        /* MPLessThan 64 */
        a40049 = ((a31100 < t14085));
        a40050 = ((a31100 == t14085));
        a40051 = ((a31101 < t14084));
        a40052 = ((a40050) && (a40051));
        a40053 = ((a40049) || (a40052));
        a40054 = ((a40048) && (a40053));
        a40055 = ((a40046) || (a40054));
        a40056 = ((a40041) && (a40055));
        i694 = ((a40038) || (a40056));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2792 = (t14084 - a31101);
        b2210 = ((t14084 < a31101));
        d2793 = (t14085 - a31100);
        d2794 = (d2793 - b2210);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40058 = ((t14085 < a31100));
        a40059 = ((t14085 == a31100));
        a40060 = ((a40059) && (b2210));
        b2211 = ((a40058) || (a40060));
        /* Begin of MPSubDDD 64 */
        d2795 = (t14088 - a31099);
        b2212 = ((t14088 < a31099));
        d2796 = (t14089 - a31098);
        d2797 = (d2796 - b2212);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2798 = (d2795 - b2211);
        b2213 = ((d2795 < b2211));
        t14108 = (d2797 - b2213);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40064 = ((t14089 < a31098));
        a40065 = ((t14089 == a31098));
        a40066 = ((a40065) && (b2212));
        a40067 = ((a40064) || (a40066));
        /* MPEqual 64 */
        a40068 = ((t14088 == a31099));
        a40069 = ((a40065) && (a40068));
        /* MPLessThan 64 */
        a40070 = ((a40069) && (b2211));
        b2214 = ((a40067) || (a40070));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2799 = (t14102 - a31097);
        b2215 = ((t14102 < a31097));
        d2800 = (t14103 - a31096);
        d2801 = (d2800 - b2215);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2802 = (d2799 - b2214);
        b2216 = ((d2799 < b2214));
        t14109 = (d2801 - b2216);
        /* End of MPSubDDD 256 */
        a40074 = (2*a39993);
        /* MPCondD 128 */
        a40075 = (2*a40074);
        a40076 = (a40075 + 1);
        /* MPCondD 64 */
        a40077 = (2*a40076);
        P2[a40077] = ((i694) ? (t14109) : (t14103));
        a40078 = (a40077 + 1);
        P2[a40078] = ((i694) ? (d2802) : (t14102));
        a40079 = (a40074 + 1);
        /* MPCondD 128 */
        a40080 = (2*a40079);
        /* MPCondD 64 */
        a40081 = (2*a40080);
        P2[a40081] = ((i694) ? (t14108) : (t14089));
        a40082 = (a40081 + 1);
        P2[a40082] = ((i694) ? (d2798) : (t14088));
        a40083 = (a40080 + 1);
        /* MPCondD 64 */
        a40084 = (2*a40083);
        P2[a40084] = ((i694) ? (d2794) : (t14085));
        a40085 = (a40084 + 1);
        P2[a40085] = ((i694) ? (d2792) : (t14084));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b2217 = (a39992 + a39991);
        a40086 = (b2217 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2803 = (t14083 - t14079);
        b2218 = ((t14083 < t14079));
        d2804 = (t14082 - t14078);
        d2805 = (d2804 - b2218);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40088 = ((t14082 < t14078));
        a40089 = ((t14082 == t14078));
        a40090 = ((a40089) && (b2218));
        b2219 = ((a40088) || (a40090));
        /* Begin of MPSubDDD 64 */
        d2806 = (t14081 - t14077);
        b2220 = ((t14081 < t14077));
        d2807 = (t14080 - t14076);
        d2808 = (d2807 - b2220);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2809 = (d2806 - b2219);
        b2221 = ((d2806 < b2219));
        t14110 = (d2808 - b2221);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40094 = ((t14080 < t14076));
        a40095 = ((t14080 == t14076));
        a40096 = ((a40095) && (b2220));
        a40097 = ((a40094) || (a40096));
        /* MPEqual 64 */
        a40098 = ((t14081 == t14077));
        a40099 = ((a40095) && (a40098));
        /* MPLessThan 64 */
        a40100 = ((a40099) && (b2219));
        b2222 = ((a40097) || (a40100));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2810 = (t14093 - t14075);
        b2223 = ((t14093 < t14075));
        d2811 = (t14092 - t14074);
        d2812 = (d2811 - b2223);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2813 = (d2810 - b2222);
        b2224 = ((d2810 < b2222));
        t14111 = (d2812 - b2224);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2517 = (((uint128_t ) d2803) + ((uint128_t ) a31101));
        t14112 = ((uint64_t ) s2517);
        c1368 = (s2517 >> 64);
        s2518 = (((uint128_t ) d2805) + ((uint128_t ) a31100));
        s2519 = (((uint128_t ) s2518) + ((uint128_t ) c1368));
        t14113 = ((uint64_t ) s2519);
        c1369 = (s2519 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2520 = (((uint128_t ) d2809) + ((uint128_t ) a31099));
        t14114 = ((uint64_t ) s2520);
        c1370 = (s2520 >> 64);
        s2521 = (((uint128_t ) t14110) + ((uint128_t ) a31098));
        s2522 = (((uint128_t ) s2521) + ((uint128_t ) c1370));
        t14115 = ((uint64_t ) s2522);
        c1371 = (s2522 >> 64);
        /* MPPropagateCarry 64 */
        t14116 = (t14114 + c1369);
        a40104 = ((t14116 == 0));
        a40105 = (t14115 + c1369);
        t14117 = ((a40104) ? (a40105) : (t14115));
        a40106 = ((t14117 == 0));
        a40107 = ((a40106) && (a40104));
        a40108 = (c1371 + c1369);
        t14118 = ((a40107) ? (a40108) : (c1371));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2523 = (((uint128_t ) d2813) + ((uint128_t ) a31097));
        t14120 = ((uint64_t ) s2523);
        c1372 = (s2523 >> 64);
        s2524 = (((uint128_t ) t14111) + ((uint128_t ) a31096));
        s2525 = (((uint128_t ) s2524) + ((uint128_t ) c1372));
        t14121 = ((uint64_t ) s2525);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2526 = (((uint128_t ) t14120) + ((uint128_t ) t14118));
        t14122 = ((uint64_t ) s2526);
        c1374 = (s2526 >> 64);
        s2527 = (((uint128_t ) t14121) + ((uint128_t ) c1374));
        t14123 = ((uint64_t ) s2527);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40112 = ((0 < t14072));
        a40113 = ((0 == t14072));
        a40114 = ((0 < t14073));
        a40115 = ((a40113) && (a40114));
        a40116 = ((a40112) || (a40115));
        /* MPEqual 64 */
        a40117 = ((0 == t14073));
        a40118 = ((a40113) && (a40117));
        /* MPLessThan 64 */
        a40119 = ((t14092 < t14074));
        a40120 = ((t14092 == t14074));
        a40121 = ((a40120) && (b2223));
        a40122 = ((a40119) || (a40121));
        a40123 = ((a40118) && (a40122));
        a40124 = ((a40116) || (a40123));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40125 = ((t14093 == t14075));
        a40126 = ((a40120) && (a40125));
        a40127 = ((a40118) && (a40126));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a40128 = ((a40127) && (b2222));
        i695 = ((a40124) || (a40128));
        a40129 = (2*a40086);
        /* MPCondD 128 */
        a40130 = (2*a40129);
        a40131 = (a40130 + 1);
        /* MPCondD 64 */
        a40132 = (2*a40131);
        P2[a40132] = ((i695) ? (t14123) : (t14111));
        a40133 = (a40132 + 1);
        P2[a40133] = ((i695) ? (t14122) : (d2813));
        a40134 = (a40129 + 1);
        /* MPCondD 128 */
        a40135 = (2*a40134);
        /* MPCondD 64 */
        a40136 = (2*a40135);
        P2[a40136] = ((i695) ? (t14117) : (t14110));
        a40137 = (a40136 + 1);
        P2[a40137] = ((i695) ? (t14116) : (d2809));
        a40138 = (a40135 + 1);
        /* MPCondD 64 */
        a40139 = (2*a40138);
        P2[a40139] = ((i695) ? (t14113) : (d2805));
        a40140 = (a40139 + 1);
        P2[a40140] = ((i695) ? (t14112) : (d2803));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code16(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a40141, a40142, a40143, a40144, a40145, a40146, a40147, a40148, 
            a40149, a40150, a40151, a40152, a40153, a40154, a40155, a40156, 
            a40157, a40158, a40159, a40160, a40161, a40162, a40163, a40164, 
            a40165, a40166, a40167, a40168, a40169, a40188, a40189, a40190, 
            a40194, a40195, a40196, a40197, a40198, a40199, a40200, a40203, 
            a40204, a40205, a40210, a40214, a40215, a40216, a40220, a40221, 
            a40222, a40223, a40224, a40225, a40226, a40229, a40230, a40231, 
            a40235, a40238, a40239, a40240, a40241, a40242, a40243, a40244, 
            a40245, a40246, a40247, a40248, a40249, a40250, a40251, a40252, 
            a40253, a40254, a40255, a40256, a40257, a40259, a40260, a40265, 
            a40266, a40267, a40268, a40269, a40277, a40278, a40279, a40280, 
            a40281, a40282, a40283, a40284, a40285, a40286, a40287, a40288, 
            a40289, a40290, a40291, a40292, a40293, a40294, a40295, a40296, 
            a40297, a40298, a40299, a40300, a40301, a40302, a40303, a40304, 
            a40305, a40306, a40307, a40308, a40309, a40310, a40311, a40313, 
            a40314, a40315, a40319, a40320, a40321, a40322, a40323, a40324, 
            a40325, a40329, a40330, a40331, a40332, a40333, a40334, a40335, 
            a40336, a40337, a40338, a40339, a40340, a40341, a40343, a40344, 
            a40345, a40349, a40350, a40351, a40352, a40353, a40354, a40355, 
            a40359, a40361, a40362, a40367, a40368, a40369, a40370, a40371, 
            a40372, a40373, a40374, a40375, a40376, a40377, a40378, a40379, 
            a40380, a40381, a40382, a40383, a40384, a40385, a40386, a40387, 
            a40388, a40389, a40390, a40391, a40392, a40393, a40394, a40395, 
            b2225, b2227, b2228, b2229, b2230, b2231, b2232, b2233, 
            b2234, b2235, b2236, b2237, b2238, b2239, b2240, b2241, 
            b2242, b2243, b2244, b2245, b2246, b2247, b2248, b2249, 
            b2250, b2251, b2252, b2253, b2254, b2255, b2256, b2257, 
            b2258, b2259, b2260, b2261, b2262, b2263, c1375, c1376, 
            c1377, c1378, c1379, c1380, c1381, c1383, c1384, c1385, 
            c1386, c1387, c1388, c1389, c1391, i696, i697, i698;
    uint64_t a31902, a31903, a31904, a31905, a31906, a31907, a32007, a32008, 
            a32009, a32010, a32011, a32012, a40170, a40171, a40172, a40173, 
            a40174, a40175, a40176, a40177, a40178, a40179, a40181, a40182, 
            a40183, a40184, a40185, a40186, a40258, a40261, a40270, a40360, 
            a40363, d2814, d2815, d2816, d2817, d2818, d2819, d2820, 
            d2821, d2822, d2823, d2824, d2825, d2826, d2827, d2828, 
            d2829, d2830, d2831, d2832, d2833, d2834, d2835, d2836, 
            d2837, d2838, d2839, d2840, d2841, d2842, d2843, d2844, 
            d2845, d2846, d2847, d2848, d2849, d2850, d2851, d2852, 
            d2853, d2854, d2855, d2856, d2857, d2858, d2859, d2860, 
            d2861, d2862, d2863, d2864, d2865, t14124, t14125, t14126, 
            t14127, t14128, t14129, t14130, t14131, t14132, t14133, t14134, 
            t14135, t14136, t14137, t14138, t14139, t14140, t14141, t14142, 
            t14143, t14144, t14145, t14146, t14147, t14148, t14149, t14150, 
            t14151, t14152, t14153, t14154, t14155, t14156, t14157, t14160, 
            t14161, t14162, t14163, t14164, t14165, t14166, t14167, t14168, 
            t14169, t14170, t14171, t14172, t14173, t14174, t14175, t14176, 
            t14177, t14178, t14179, t14180, t14181, t14182, t14183, t14184, 
            t14185, t14186, t14187, t14188, t14189, t14190, t14191, t14192, 
            t14193, t14194, t14195, t14196, t14197, t14198, t14199, t14200, 
            t14201, t14202, t14203, t14205, t14206, t14207, t14208, t14209, 
            t14210, t14211, t14212, t14215, t14216, t14217, t14218, t14219, 
            t14220, t14221, t14222, t14223, t14224, t14225, t14226, t14227, 
            t14228, t14229, t14230, t14231, t14233, t14234, t14235, t14236, 
            t8263, t8264, t8265, t8266, t8267, t8268, t8269, t8270, 
            t8271, t8272, t8273, t8274, t8275, t8276, t8277, t8278, 
            t8279, t8280, t8281, t8282, t8283, t8284, t8285, t8286, 
            t8287, t8288, t8289, t8290, t8291, t8292, t8293, t8294, 
            t8295, t8296, t8297, t8298, t8299, t8300, t8301, t8302, 
            t8303, t8304, t8305, t8306, t8307, t8308, t8309, t8310;
    uint128_t s2528, s2529, s2530, s2531, s2532, s2533, s2534, s2535, 
            s2536, s2537, s2538, s2539, s2540, s2541, s2542, s2543, 
            s2544, s2545, s2546, s2547, s2548, s2549, s2550, s2551, 
            s2552;
    for(int i9 = 0; i9 <= 4095; i9++) {
        a40141 = (128*i9);
        a40142 = (threadIdx.x + a40141);
        a40143 = (a40142 + 524288);
        a40144 = (a40143 % 65536);
        a40145 = (65536 + a40144);
        /* Begin of MPModMul 256 */
        a40146 = (2*a40145);
        a40147 = (a40146 + 1);
        a40148 = (2*a40143);
        a40149 = (a40148 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40150 = (2*a40146);
        a40151 = (a40150 + 1);
        /* MPAssignDD 64 */
        a40152 = (2*a40151);
        t14124 = twiddles[a40152];
        a40153 = (a40152 + 1);
        t14125 = twiddles[a40153];
        /* MPAssignDD 128 */
        a40154 = (2*a40147);
        /* MPAssignDD 64 */
        a40155 = (2*a40154);
        t14126 = twiddles[a40155];
        a40156 = (a40155 + 1);
        t14127 = twiddles[a40156];
        a40157 = (a40154 + 1);
        /* MPAssignDD 64 */
        a40158 = (2*a40157);
        t14128 = twiddles[a40158];
        a40159 = (a40158 + 1);
        t14129 = twiddles[a40159];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40160 = (2*a40148);
        a40161 = (a40160 + 1);
        /* MPAssignDD 64 */
        a40162 = (2*a40161);
        t14130 = P2[a40162];
        a40163 = (a40162 + 1);
        t14131 = P2[a40163];
        /* MPAssignDD 128 */
        a40164 = (2*a40149);
        /* MPAssignDD 64 */
        a40165 = (2*a40164);
        t14132 = P2[a40165];
        a40166 = (a40165 + 1);
        t14133 = P2[a40166];
        a40167 = (a40164 + 1);
        /* MPAssignDD 64 */
        a40168 = (2*a40167);
        t14134 = P2[a40168];
        a40169 = (a40168 + 1);
        t14135 = P2[a40169];
        MPMulQDD_L3_2(t8275, t8276, t8277, t8278, t8271, t8272, t8273, t8274, 
    t8267, t8268, t8269, t8270, t8263, t8264, t8265, t8266, 
    0, 0, t14124, t14125, t14126, t14127, t14128, t14129, 
    0, 0, t14130, t14131, t14132, t14133, t14134, t14135);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14136 = (t8267 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a40170 = (t8267 << 6);
        a40171 = (t8268 >> 58);
        t14137 = (((a40170)|(a40171)));
        t14138 = (t8268 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14139 = (t8269 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14140 = (((t14138)|(t14139)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2225 = ((int) 1);
        t14141 = (288230376151711744 - b2225);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14142 = (((t8277)&(t14141)));
        t14143 = (((t8278)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a40172 = (t14142 << 6);
        a40173 = (t14143 >> 58);
        t14144 = (((a40172)|(a40173)));
        t14145 = (t14143 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14146 = (t8271 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a40174 = (t8271 << 6);
        a40175 = (t8272 >> 58);
        t14147 = (((a40174)|(a40175)));
        t14148 = (t8272 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14149 = (t8273 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14150 = (((t14148)|(t14149)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14151 = (((t14145)|(t14146)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a40176 = (t8273 << 6);
        a40177 = (t8274 >> 58);
        t14152 = (((a40176)|(a40177)));
        t14153 = (t8274 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14154 = (((t14153)|(t14136)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a31902 = mu[2];
        a31903 = mu[3];
        a31904 = mu[4];
        a31905 = mu[5];
        a31906 = mu[6];
        a31907 = mu[7];
        MPMulQDD_L3_1(t8307, t8308, t8309, t8310, t8303, t8304, t8305, t8306, 
    t8299, t8300, t8301, t8302, t8295, t8296, t8297, t8298, 
    t14144, t14151, t14147, t14150, t14152, t14154, t14137, t14140, 
    0, 0, a31902, a31903, a31904, a31905, a31906, a31907);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14155 = (t8299 >> 1);
        a40178 = (t8299 << 63);
        a40179 = (t8300 >> 1);
        t14156 = (((a40178)|(a40179)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t14157 = (0 - b2225);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2814 = (2 - b2225);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14160 = (((t8308)&(d2814)));
        /* MPBinAndD 64 */
        t14161 = (((t8309)&(t14157)));
        t14162 = (((t8310)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14163 = (t14160 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14164 = (t14161 >> 1);
        a40181 = (t14161 << 63);
        a40182 = (t14162 >> 1);
        t14165 = (((a40181)|(a40182)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14166 = (((t14163)|(t14164)));
        /* Begin of MPShiftLeft1D */
        t14167 = (t14162 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14168 = (t8303 >> 1);
        a40183 = (t8303 << 63);
        a40184 = (t8304 >> 1);
        t14169 = (((a40183)|(a40184)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14170 = (((t14167)|(t14168)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14171 = (t8304 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14172 = (t8305 >> 1);
        a40185 = (t8305 << 63);
        a40186 = (t8306 >> 1);
        t14173 = (((a40185)|(a40186)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14174 = (((t14171)|(t14172)));
        /* Begin of MPShiftLeft1D */
        t14175 = (t8306 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14176 = (((t14175)|(t14155)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a32007 = modulus[2];
        a32008 = modulus[3];
        a32009 = modulus[4];
        a32010 = modulus[5];
        a32011 = modulus[6];
        a32012 = modulus[7];
        MPMulQDD_L3_1(t8291, t8292, t8293, t8294, t8287, t8288, t8289, t8290, 
    t8283, t8284, t8285, t8286, t8279, t8280, t8281, t8282, 
    t14166, t14165, t14170, t14169, t14174, t14173, t14176, t14156, 
    0, 0, a32007, a32008, a32009, a32010, a32011, a32012);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2815 = (t8266 - t8282);
        b2227 = ((t8266 < t8282));
        d2816 = (t8265 - t8281);
        d2817 = (d2816 - b2227);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40188 = ((t8265 < t8281));
        a40189 = ((t8265 == t8281));
        a40190 = ((a40189) && (b2227));
        b2228 = ((a40188) || (a40190));
        /* Begin of MPSubDDD 64 */
        d2818 = (t8264 - t8280);
        b2229 = ((t8264 < t8280));
        d2819 = (t8263 - t8279);
        d2820 = (d2819 - b2229);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2821 = (d2818 - b2228);
        b2230 = ((d2818 < b2228));
        t14177 = (d2820 - b2230);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40194 = ((t8263 < t8279));
        a40195 = ((t8263 == t8279));
        a40196 = ((a40195) && (b2229));
        a40197 = ((a40194) || (a40196));
        /* MPEqual 64 */
        a40198 = ((t8264 == t8280));
        a40199 = ((a40195) && (a40198));
        /* MPLessThan 64 */
        a40200 = ((a40199) && (b2228));
        b2231 = ((a40197) || (a40200));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2822 = (t8270 - t8286);
        b2232 = ((t8270 < t8286));
        d2823 = (t8269 - t8285);
        d2824 = (d2823 - b2232);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40203 = ((t8269 < t8285));
        a40204 = ((t8269 == t8285));
        a40205 = ((a40204) && (b2232));
        b2233 = ((a40203) || (a40205));
        /* Begin of MPSubDDD 64 */
        d2825 = (t8268 - t8284);
        b2234 = ((t8268 < t8284));
        d2826 = (t8267 - t8283);
        d2827 = (d2826 - b2234);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2828 = (d2825 - b2233);
        b2235 = ((d2825 < b2233));
        t14178 = (d2827 - b2235);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2829 = (d2822 - b2231);
        b2236 = ((d2822 < b2231));
        t14179 = (d2824 - b2236);
        /* MPLessThanDI 64 */
        a40210 = ((d2824 == 0));
        b2237 = ((a40210) && (b2236));
        /* MPSubDDI 64 */
        d2830 = (d2828 - b2237);
        b2238 = ((d2828 < b2237));
        t14180 = (t14178 - b2238);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2831 = (d2815 - a32012);
        b2239 = ((d2815 < a32012));
        d2832 = (d2817 - a32011);
        d2833 = (d2832 - b2239);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40214 = ((d2817 < a32011));
        a40215 = ((d2817 == a32011));
        a40216 = ((a40215) && (b2239));
        b2240 = ((a40214) || (a40216));
        /* Begin of MPSubDDD 64 */
        d2834 = (d2821 - a32010);
        b2241 = ((d2821 < a32010));
        d2835 = (t14177 - a32009);
        d2836 = (d2835 - b2241);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2837 = (d2834 - b2240);
        b2242 = ((d2834 < b2240));
        t14181 = (d2836 - b2242);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40220 = ((t14177 < a32009));
        a40221 = ((t14177 == a32009));
        a40222 = ((a40221) && (b2241));
        a40223 = ((a40220) || (a40222));
        /* MPEqual 64 */
        a40224 = ((d2821 == a32010));
        a40225 = ((a40221) && (a40224));
        /* MPLessThan 64 */
        a40226 = ((a40225) && (b2240));
        b2243 = ((a40223) || (a40226));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2838 = (d2829 - a32008);
        b2244 = ((d2829 < a32008));
        d2839 = (t14179 - a32007);
        d2840 = (d2839 - b2244);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40229 = ((t14179 < a32007));
        a40230 = ((t14179 == a32007));
        a40231 = ((a40230) && (b2244));
        b2245 = ((a40229) || (a40231));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2841 = (d2830 - b2245);
        b2246 = ((d2830 < b2245));
        t14182 = (t14180 - b2246);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2842 = (d2838 - b2243);
        b2247 = ((d2838 < b2243));
        t14183 = (d2840 - b2247);
        /* MPLessThanDI 64 */
        a40235 = ((d2840 == 0));
        b2248 = ((a40235) && (b2247));
        /* MPSubDDI 64 */
        d2843 = (d2841 - b2248);
        b2249 = ((d2841 < b2248));
        t14184 = (t14182 - b2249);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a40238 = ((t14180 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a40239 = ((d2830 == 0));
        a40240 = ((a40238) && (a40239));
        /* MPLessThan 64 */
        a40241 = ((a40240) && (b2245));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40242 = ((d2829 == a32008));
        a40243 = ((a40230) && (a40242));
        a40244 = ((a40240) && (a40243));
        /* MPLessThan 128 */
        a40245 = ((a40244) && (b2243));
        i696 = ((a40241) || (a40245));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14185 = ((i696) ? (t14180) : (t14184));
        t14186 = ((i696) ? (d2830) : (d2843));
        /* MPCondD 64 */
        t14187 = ((i696) ? (t14179) : (t14183));
        t14188 = ((i696) ? (d2829) : (d2842));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14189 = ((i696) ? (t14177) : (t14181));
        t14190 = ((i696) ? (d2821) : (d2837));
        /* MPCondD 64 */
        t14191 = ((i696) ? (d2817) : (d2833));
        t14192 = ((i696) ? (d2815) : (d2831));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a40246 = (2*threadIdx.x);
        a40247 = (256*i9);
        a40248 = (a40246 + a40247);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a40249 = (2*a40142);
        a40250 = (a40249 + 1);
        /* MPAssignDD 128 */
        a40251 = (2*a40250);
        /* MPAssignDD 64 */
        a40252 = (2*a40251);
        t14193 = P2[a40252];
        a40253 = (a40252 + 1);
        t14194 = P2[a40253];
        a40254 = (a40251 + 1);
        /* MPAssignDD 64 */
        a40255 = (2*a40254);
        t14195 = P2[a40255];
        a40256 = (a40255 + 1);
        t14196 = P2[a40256];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2528 = (((uint128_t ) t14196) + ((uint128_t ) t14192));
        t14197 = ((uint64_t ) s2528);
        c1375 = (s2528 >> 64);
        s2529 = (((uint128_t ) t14195) + ((uint128_t ) t14191));
        s2530 = (((uint128_t ) s2529) + ((uint128_t ) c1375));
        t14198 = ((uint64_t ) s2530);
        c1376 = (s2530 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2531 = (((uint128_t ) t14194) + ((uint128_t ) t14190));
        t14199 = ((uint64_t ) s2531);
        c1377 = (s2531 >> 64);
        s2532 = (((uint128_t ) t14193) + ((uint128_t ) t14189));
        s2533 = (((uint128_t ) s2532) + ((uint128_t ) c1377));
        t14200 = ((uint64_t ) s2533);
        c1378 = (s2533 >> 64);
        /* MPPropagateCarry 64 */
        t14201 = (t14199 + c1376);
        a40257 = ((t14201 == 0));
        a40258 = (t14200 + c1376);
        t14202 = ((a40257) ? (a40258) : (t14200));
        a40259 = ((t14202 == 0));
        a40260 = ((a40259) && (a40257));
        a40261 = (c1378 + c1376);
        t14203 = ((a40260) ? (a40261) : (c1378));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40265 = (2*a40249);
        a40266 = (a40265 + 1);
        /* MPAssignDD 64 */
        a40267 = (2*a40266);
        t14205 = P2[a40267];
        a40268 = (a40267 + 1);
        t14206 = P2[a40268];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2534 = (((uint128_t ) t14206) + ((uint128_t ) t14188));
        t14207 = ((uint64_t ) s2534);
        c1379 = (s2534 >> 64);
        s2535 = (((uint128_t ) t14205) + ((uint128_t ) t14187));
        s2536 = (((uint128_t ) s2535) + ((uint128_t ) c1379));
        t14208 = ((uint64_t ) s2536);
        c1380 = (s2536 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t14209 = ((uint64_t ) t14186);
        c1381 = (t14186 >> 64);
        s2537 = (((uint128_t ) t14185) + ((uint128_t ) c1381));
        t14210 = ((uint64_t ) s2537);
        /* MPPropagateCarry 64 */
        t14211 = (t14209 + c1380);
        a40269 = ((t14211 == 0));
        a40270 = (t14210 + c1380);
        t14212 = ((a40269) ? (a40270) : (t14210));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2538 = (((uint128_t ) t14207) + ((uint128_t ) t14203));
        t14215 = ((uint64_t ) s2538);
        c1383 = (s2538 >> 64);
        s2539 = (((uint128_t ) t14208) + ((uint128_t ) c1383));
        t14216 = ((uint64_t ) s2539);
        /* MPEqualDI 64 */
        a40277 = ((t14216 == 0));
        a40278 = ((t14215 == 0));
        a40279 = ((a40277) && (a40278));
        /* MPAddDDI 64 */
        s2540 = (((uint128_t ) t14211) + ((uint128_t ) t14203));
        t14217 = ((uint64_t ) s2540);
        c1384 = (s2540 >> 64);
        s2541 = (((uint128_t ) t14212) + ((uint128_t ) c1384));
        t14218 = ((uint64_t ) s2541);
        /* MPCondD 64 */
        t14219 = ((a40279) ? (t14218) : (t14212));
        t14220 = ((a40279) ? (t14217) : (t14211));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a40280 = ((0 < t14219));
        a40281 = ((0 == t14219));
        a40282 = ((0 < t14220));
        a40283 = ((a40281) && (a40282));
        a40284 = ((a40280) || (a40283));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a40285 = ((0 == t14220));
        a40286 = ((a40281) && (a40285));
        /* MPLessThan 64 */
        a40287 = ((a32007 < t14216));
        a40288 = ((a32007 == t14216));
        a40289 = ((a32008 < t14215));
        a40290 = ((a40288) && (a40289));
        a40291 = ((a40287) || (a40290));
        a40292 = ((a40286) && (a40291));
        a40293 = ((a40284) || (a40292));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40294 = ((a32008 == t14215));
        a40295 = ((a40288) && (a40294));
        a40296 = ((a40286) && (a40295));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40297 = ((a32009 < t14202));
        a40298 = ((a32009 == t14202));
        a40299 = ((a32010 < t14201));
        a40300 = ((a40298) && (a40299));
        a40301 = ((a40297) || (a40300));
        /* MPEqual 64 */
        a40302 = ((a32010 == t14201));
        a40303 = ((a40298) && (a40302));
        /* MPLessThan 64 */
        a40304 = ((a32011 < t14198));
        a40305 = ((a32011 == t14198));
        a40306 = ((a32012 < t14197));
        a40307 = ((a40305) && (a40306));
        a40308 = ((a40304) || (a40307));
        a40309 = ((a40303) && (a40308));
        a40310 = ((a40301) || (a40309));
        a40311 = ((a40296) && (a40310));
        i697 = ((a40293) || (a40311));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2844 = (t14197 - a32012);
        b2250 = ((t14197 < a32012));
        d2845 = (t14198 - a32011);
        d2846 = (d2845 - b2250);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40313 = ((t14198 < a32011));
        a40314 = ((t14198 == a32011));
        a40315 = ((a40314) && (b2250));
        b2251 = ((a40313) || (a40315));
        /* Begin of MPSubDDD 64 */
        d2847 = (t14201 - a32010);
        b2252 = ((t14201 < a32010));
        d2848 = (t14202 - a32009);
        d2849 = (d2848 - b2252);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2850 = (d2847 - b2251);
        b2253 = ((d2847 < b2251));
        t14221 = (d2849 - b2253);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40319 = ((t14202 < a32009));
        a40320 = ((t14202 == a32009));
        a40321 = ((a40320) && (b2252));
        a40322 = ((a40319) || (a40321));
        /* MPEqual 64 */
        a40323 = ((t14201 == a32010));
        a40324 = ((a40320) && (a40323));
        /* MPLessThan 64 */
        a40325 = ((a40324) && (b2251));
        b2254 = ((a40322) || (a40325));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2851 = (t14215 - a32008);
        b2255 = ((t14215 < a32008));
        d2852 = (t14216 - a32007);
        d2853 = (d2852 - b2255);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2854 = (d2851 - b2254);
        b2256 = ((d2851 < b2254));
        t14222 = (d2853 - b2256);
        /* End of MPSubDDD 256 */
        a40329 = (2*a40248);
        /* MPCondD 128 */
        a40330 = (2*a40329);
        a40331 = (a40330 + 1);
        /* MPCondD 64 */
        a40332 = (2*a40331);
        P1[a40332] = ((i697) ? (t14222) : (t14216));
        a40333 = (a40332 + 1);
        P1[a40333] = ((i697) ? (d2854) : (t14215));
        a40334 = (a40329 + 1);
        /* MPCondD 128 */
        a40335 = (2*a40334);
        /* MPCondD 64 */
        a40336 = (2*a40335);
        P1[a40336] = ((i697) ? (t14221) : (t14202));
        a40337 = (a40336 + 1);
        P1[a40337] = ((i697) ? (d2850) : (t14201));
        a40338 = (a40335 + 1);
        /* MPCondD 64 */
        a40339 = (2*a40338);
        P1[a40339] = ((i697) ? (d2846) : (t14198));
        a40340 = (a40339 + 1);
        P1[a40340] = ((i697) ? (d2844) : (t14197));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        a40341 = (a40248 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2855 = (t14196 - t14192);
        b2257 = ((t14196 < t14192));
        d2856 = (t14195 - t14191);
        d2857 = (d2856 - b2257);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40343 = ((t14195 < t14191));
        a40344 = ((t14195 == t14191));
        a40345 = ((a40344) && (b2257));
        b2258 = ((a40343) || (a40345));
        /* Begin of MPSubDDD 64 */
        d2858 = (t14194 - t14190);
        b2259 = ((t14194 < t14190));
        d2859 = (t14193 - t14189);
        d2860 = (d2859 - b2259);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2861 = (d2858 - b2258);
        b2260 = ((d2858 < b2258));
        t14223 = (d2860 - b2260);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40349 = ((t14193 < t14189));
        a40350 = ((t14193 == t14189));
        a40351 = ((a40350) && (b2259));
        a40352 = ((a40349) || (a40351));
        /* MPEqual 64 */
        a40353 = ((t14194 == t14190));
        a40354 = ((a40350) && (a40353));
        /* MPLessThan 64 */
        a40355 = ((a40354) && (b2258));
        b2261 = ((a40352) || (a40355));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2862 = (t14206 - t14188);
        b2262 = ((t14206 < t14188));
        d2863 = (t14205 - t14187);
        d2864 = (d2863 - b2262);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2865 = (d2862 - b2261);
        b2263 = ((d2862 < b2261));
        t14224 = (d2864 - b2263);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2542 = (((uint128_t ) d2855) + ((uint128_t ) a32012));
        t14225 = ((uint64_t ) s2542);
        c1385 = (s2542 >> 64);
        s2543 = (((uint128_t ) d2857) + ((uint128_t ) a32011));
        s2544 = (((uint128_t ) s2543) + ((uint128_t ) c1385));
        t14226 = ((uint64_t ) s2544);
        c1386 = (s2544 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2545 = (((uint128_t ) d2861) + ((uint128_t ) a32010));
        t14227 = ((uint64_t ) s2545);
        c1387 = (s2545 >> 64);
        s2546 = (((uint128_t ) t14223) + ((uint128_t ) a32009));
        s2547 = (((uint128_t ) s2546) + ((uint128_t ) c1387));
        t14228 = ((uint64_t ) s2547);
        c1388 = (s2547 >> 64);
        /* MPPropagateCarry 64 */
        t14229 = (t14227 + c1386);
        a40359 = ((t14229 == 0));
        a40360 = (t14228 + c1386);
        t14230 = ((a40359) ? (a40360) : (t14228));
        a40361 = ((t14230 == 0));
        a40362 = ((a40361) && (a40359));
        a40363 = (c1388 + c1386);
        t14231 = ((a40362) ? (a40363) : (c1388));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2548 = (((uint128_t ) d2865) + ((uint128_t ) a32008));
        t14233 = ((uint64_t ) s2548);
        c1389 = (s2548 >> 64);
        s2549 = (((uint128_t ) t14224) + ((uint128_t ) a32007));
        s2550 = (((uint128_t ) s2549) + ((uint128_t ) c1389));
        t14234 = ((uint64_t ) s2550);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2551 = (((uint128_t ) t14233) + ((uint128_t ) t14231));
        t14235 = ((uint64_t ) s2551);
        c1391 = (s2551 >> 64);
        s2552 = (((uint128_t ) t14234) + ((uint128_t ) c1391));
        t14236 = ((uint64_t ) s2552);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40367 = ((0 < t14185));
        a40368 = ((0 == t14185));
        a40369 = ((0 < t14186));
        a40370 = ((a40368) && (a40369));
        a40371 = ((a40367) || (a40370));
        /* MPEqual 64 */
        a40372 = ((0 == t14186));
        a40373 = ((a40368) && (a40372));
        /* MPLessThan 64 */
        a40374 = ((t14205 < t14187));
        a40375 = ((t14205 == t14187));
        a40376 = ((a40375) && (b2262));
        a40377 = ((a40374) || (a40376));
        a40378 = ((a40373) && (a40377));
        a40379 = ((a40371) || (a40378));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40380 = ((t14206 == t14188));
        a40381 = ((a40375) && (a40380));
        a40382 = ((a40373) && (a40381));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a40383 = ((a40382) && (b2261));
        i698 = ((a40379) || (a40383));
        a40384 = (2*a40341);
        /* MPCondD 128 */
        a40385 = (2*a40384);
        a40386 = (a40385 + 1);
        /* MPCondD 64 */
        a40387 = (2*a40386);
        P1[a40387] = ((i698) ? (t14236) : (t14224));
        a40388 = (a40387 + 1);
        P1[a40388] = ((i698) ? (t14235) : (d2865));
        a40389 = (a40384 + 1);
        /* MPCondD 128 */
        a40390 = (2*a40389);
        /* MPCondD 64 */
        a40391 = (2*a40390);
        P1[a40391] = ((i698) ? (t14230) : (t14223));
        a40392 = (a40391 + 1);
        P1[a40392] = ((i698) ? (t14229) : (d2861));
        a40393 = (a40390 + 1);
        /* MPCondD 64 */
        a40394 = (2*a40393);
        P1[a40394] = ((i698) ? (t14226) : (d2857));
        a40395 = (a40394 + 1);
        P1[a40395] = ((i698) ? (t14225) : (d2855));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code17(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a40396, a40397, a40398, a40399, a40400, a40401, a40402, a40403, 
            a40404, a40405, a40406, a40407, a40408, a40409, a40410, a40411, 
            a40412, a40413, a40414, a40415, a40416, a40417, a40418, a40419, 
            a40420, a40421, a40422, a40423, a40424, a40443, a40444, a40445, 
            a40449, a40450, a40451, a40452, a40453, a40454, a40455, a40458, 
            a40459, a40460, a40465, a40469, a40470, a40471, a40475, a40476, 
            a40477, a40478, a40479, a40480, a40481, a40484, a40485, a40486, 
            a40490, a40493, a40494, a40495, a40496, a40497, a40498, a40499, 
            a40500, a40501, a40502, a40503, a40504, a40505, a40506, a40507, 
            a40508, a40509, a40510, a40511, a40512, a40514, a40515, a40520, 
            a40521, a40522, a40523, a40524, a40532, a40533, a40534, a40535, 
            a40536, a40537, a40538, a40539, a40540, a40541, a40542, a40543, 
            a40544, a40545, a40546, a40547, a40548, a40549, a40550, a40551, 
            a40552, a40553, a40554, a40555, a40556, a40557, a40558, a40559, 
            a40560, a40561, a40562, a40563, a40564, a40565, a40566, a40568, 
            a40569, a40570, a40574, a40575, a40576, a40577, a40578, a40579, 
            a40580, a40584, a40585, a40586, a40587, a40588, a40589, a40590, 
            a40591, a40592, a40593, a40594, a40595, a40596, a40598, a40599, 
            a40600, a40604, a40605, a40606, a40607, a40608, a40609, a40610, 
            a40614, a40616, a40617, a40622, a40623, a40624, a40625, a40626, 
            a40627, a40628, a40629, a40630, a40631, a40632, a40633, a40634, 
            a40635, a40636, a40637, a40638, a40639, a40640, a40641, a40642, 
            a40643, a40644, a40645, a40646, a40647, a40648, a40649, a40650, 
            b2264, b2266, b2267, b2268, b2269, b2270, b2271, b2272, 
            b2273, b2274, b2275, b2276, b2277, b2278, b2279, b2280, 
            b2281, b2282, b2283, b2284, b2285, b2286, b2287, b2288, 
            b2289, b2290, b2291, b2292, b2293, b2294, b2295, b2296, 
            b2297, b2298, b2299, b2300, b2301, b2302, c1392, c1393, 
            c1394, c1395, c1396, c1397, c1398, c1400, c1401, c1402, 
            c1403, c1404, c1405, c1406, c1408, i699, i700, i701;
    uint64_t a32813, a32814, a32815, a32816, a32817, a32818, a32918, a32919, 
            a32920, a32921, a32922, a32923, a40425, a40426, a40427, a40428, 
            a40429, a40430, a40431, a40432, a40433, a40434, a40436, a40437, 
            a40438, a40439, a40440, a40441, a40513, a40516, a40525, a40615, 
            a40618, d2866, d2867, d2868, d2869, d2870, d2871, d2872, 
            d2873, d2874, d2875, d2876, d2877, d2878, d2879, d2880, 
            d2881, d2882, d2883, d2884, d2885, d2886, d2887, d2888, 
            d2889, d2890, d2891, d2892, d2893, d2894, d2895, d2896, 
            d2897, d2898, d2899, d2900, d2901, d2902, d2903, d2904, 
            d2905, d2906, d2907, d2908, d2909, d2910, d2911, d2912, 
            d2913, d2914, d2915, d2916, d2917, t14237, t14238, t14239, 
            t14240, t14241, t14242, t14243, t14244, t14245, t14246, t14247, 
            t14248, t14249, t14250, t14251, t14252, t14253, t14254, t14255, 
            t14256, t14257, t14258, t14259, t14260, t14261, t14262, t14263, 
            t14264, t14265, t14266, t14267, t14268, t14269, t14270, t14273, 
            t14274, t14275, t14276, t14277, t14278, t14279, t14280, t14281, 
            t14282, t14283, t14284, t14285, t14286, t14287, t14288, t14289, 
            t14290, t14291, t14292, t14293, t14294, t14295, t14296, t14297, 
            t14298, t14299, t14300, t14301, t14302, t14303, t14304, t14305, 
            t14306, t14307, t14308, t14309, t14310, t14311, t14312, t14313, 
            t14314, t14315, t14316, t14318, t14319, t14320, t14321, t14322, 
            t14323, t14324, t14325, t14328, t14329, t14330, t14331, t14332, 
            t14333, t14334, t14335, t14336, t14337, t14338, t14339, t14340, 
            t14341, t14342, t14343, t14344, t14346, t14347, t14348, t14349, 
            t8327, t8328, t8329, t8330, t8331, t8332, t8333, t8334, 
            t8335, t8336, t8337, t8338, t8339, t8340, t8341, t8342, 
            t8343, t8344, t8345, t8346, t8347, t8348, t8349, t8350, 
            t8351, t8352, t8353, t8354, t8355, t8356, t8357, t8358, 
            t8359, t8360, t8361, t8362, t8363, t8364, t8365, t8366, 
            t8367, t8368, t8369, t8370, t8371, t8372, t8373, t8374;
    uint128_t s2553, s2554, s2555, s2556, s2557, s2558, s2559, s2560, 
            s2561, s2562, s2563, s2564, s2565, s2566, s2567, s2568, 
            s2569, s2570, s2571, s2572, s2573, s2574, s2575, s2576, 
            s2577;
    for(int i7 = 0; i7 <= 4095; i7++) {
        a40396 = (128*i7);
        a40397 = (threadIdx.x + a40396);
        a40398 = (a40397 + 524288);
        a40399 = (a40398 % 131072);
        a40400 = (131072 + a40399);
        /* Begin of MPModMul 256 */
        a40401 = (2*a40400);
        a40402 = (a40401 + 1);
        a40403 = (2*a40398);
        a40404 = (a40403 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40405 = (2*a40401);
        a40406 = (a40405 + 1);
        /* MPAssignDD 64 */
        a40407 = (2*a40406);
        t14237 = twiddles[a40407];
        a40408 = (a40407 + 1);
        t14238 = twiddles[a40408];
        /* MPAssignDD 128 */
        a40409 = (2*a40402);
        /* MPAssignDD 64 */
        a40410 = (2*a40409);
        t14239 = twiddles[a40410];
        a40411 = (a40410 + 1);
        t14240 = twiddles[a40411];
        a40412 = (a40409 + 1);
        /* MPAssignDD 64 */
        a40413 = (2*a40412);
        t14241 = twiddles[a40413];
        a40414 = (a40413 + 1);
        t14242 = twiddles[a40414];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40415 = (2*a40403);
        a40416 = (a40415 + 1);
        /* MPAssignDD 64 */
        a40417 = (2*a40416);
        t14243 = P1[a40417];
        a40418 = (a40417 + 1);
        t14244 = P1[a40418];
        /* MPAssignDD 128 */
        a40419 = (2*a40404);
        /* MPAssignDD 64 */
        a40420 = (2*a40419);
        t14245 = P1[a40420];
        a40421 = (a40420 + 1);
        t14246 = P1[a40421];
        a40422 = (a40419 + 1);
        /* MPAssignDD 64 */
        a40423 = (2*a40422);
        t14247 = P1[a40423];
        a40424 = (a40423 + 1);
        t14248 = P1[a40424];
        MPMulQDD_L3_2(t8339, t8340, t8341, t8342, t8335, t8336, t8337, t8338, 
    t8331, t8332, t8333, t8334, t8327, t8328, t8329, t8330, 
    0, 0, t14237, t14238, t14239, t14240, t14241, t14242, 
    0, 0, t14243, t14244, t14245, t14246, t14247, t14248);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14249 = (t8331 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a40425 = (t8331 << 6);
        a40426 = (t8332 >> 58);
        t14250 = (((a40425)|(a40426)));
        t14251 = (t8332 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14252 = (t8333 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14253 = (((t14251)|(t14252)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2264 = ((int) 1);
        t14254 = (288230376151711744 - b2264);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14255 = (((t8341)&(t14254)));
        t14256 = (((t8342)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a40427 = (t14255 << 6);
        a40428 = (t14256 >> 58);
        t14257 = (((a40427)|(a40428)));
        t14258 = (t14256 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14259 = (t8335 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a40429 = (t8335 << 6);
        a40430 = (t8336 >> 58);
        t14260 = (((a40429)|(a40430)));
        t14261 = (t8336 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14262 = (t8337 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14263 = (((t14261)|(t14262)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14264 = (((t14258)|(t14259)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a40431 = (t8337 << 6);
        a40432 = (t8338 >> 58);
        t14265 = (((a40431)|(a40432)));
        t14266 = (t8338 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14267 = (((t14266)|(t14249)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a32813 = mu[2];
        a32814 = mu[3];
        a32815 = mu[4];
        a32816 = mu[5];
        a32817 = mu[6];
        a32818 = mu[7];
        MPMulQDD_L3_1(t8371, t8372, t8373, t8374, t8367, t8368, t8369, t8370, 
    t8363, t8364, t8365, t8366, t8359, t8360, t8361, t8362, 
    t14257, t14264, t14260, t14263, t14265, t14267, t14250, t14253, 
    0, 0, a32813, a32814, a32815, a32816, a32817, a32818);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14268 = (t8363 >> 1);
        a40433 = (t8363 << 63);
        a40434 = (t8364 >> 1);
        t14269 = (((a40433)|(a40434)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t14270 = (0 - b2264);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2866 = (2 - b2264);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14273 = (((t8372)&(d2866)));
        /* MPBinAndD 64 */
        t14274 = (((t8373)&(t14270)));
        t14275 = (((t8374)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14276 = (t14273 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14277 = (t14274 >> 1);
        a40436 = (t14274 << 63);
        a40437 = (t14275 >> 1);
        t14278 = (((a40436)|(a40437)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14279 = (((t14276)|(t14277)));
        /* Begin of MPShiftLeft1D */
        t14280 = (t14275 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14281 = (t8367 >> 1);
        a40438 = (t8367 << 63);
        a40439 = (t8368 >> 1);
        t14282 = (((a40438)|(a40439)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14283 = (((t14280)|(t14281)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14284 = (t8368 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14285 = (t8369 >> 1);
        a40440 = (t8369 << 63);
        a40441 = (t8370 >> 1);
        t14286 = (((a40440)|(a40441)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14287 = (((t14284)|(t14285)));
        /* Begin of MPShiftLeft1D */
        t14288 = (t8370 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14289 = (((t14288)|(t14268)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a32918 = modulus[2];
        a32919 = modulus[3];
        a32920 = modulus[4];
        a32921 = modulus[5];
        a32922 = modulus[6];
        a32923 = modulus[7];
        MPMulQDD_L3_1(t8355, t8356, t8357, t8358, t8351, t8352, t8353, t8354, 
    t8347, t8348, t8349, t8350, t8343, t8344, t8345, t8346, 
    t14279, t14278, t14283, t14282, t14287, t14286, t14289, t14269, 
    0, 0, a32918, a32919, a32920, a32921, a32922, a32923);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2867 = (t8330 - t8346);
        b2266 = ((t8330 < t8346));
        d2868 = (t8329 - t8345);
        d2869 = (d2868 - b2266);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40443 = ((t8329 < t8345));
        a40444 = ((t8329 == t8345));
        a40445 = ((a40444) && (b2266));
        b2267 = ((a40443) || (a40445));
        /* Begin of MPSubDDD 64 */
        d2870 = (t8328 - t8344);
        b2268 = ((t8328 < t8344));
        d2871 = (t8327 - t8343);
        d2872 = (d2871 - b2268);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2873 = (d2870 - b2267);
        b2269 = ((d2870 < b2267));
        t14290 = (d2872 - b2269);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40449 = ((t8327 < t8343));
        a40450 = ((t8327 == t8343));
        a40451 = ((a40450) && (b2268));
        a40452 = ((a40449) || (a40451));
        /* MPEqual 64 */
        a40453 = ((t8328 == t8344));
        a40454 = ((a40450) && (a40453));
        /* MPLessThan 64 */
        a40455 = ((a40454) && (b2267));
        b2270 = ((a40452) || (a40455));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2874 = (t8334 - t8350);
        b2271 = ((t8334 < t8350));
        d2875 = (t8333 - t8349);
        d2876 = (d2875 - b2271);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40458 = ((t8333 < t8349));
        a40459 = ((t8333 == t8349));
        a40460 = ((a40459) && (b2271));
        b2272 = ((a40458) || (a40460));
        /* Begin of MPSubDDD 64 */
        d2877 = (t8332 - t8348);
        b2273 = ((t8332 < t8348));
        d2878 = (t8331 - t8347);
        d2879 = (d2878 - b2273);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2880 = (d2877 - b2272);
        b2274 = ((d2877 < b2272));
        t14291 = (d2879 - b2274);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2881 = (d2874 - b2270);
        b2275 = ((d2874 < b2270));
        t14292 = (d2876 - b2275);
        /* MPLessThanDI 64 */
        a40465 = ((d2876 == 0));
        b2276 = ((a40465) && (b2275));
        /* MPSubDDI 64 */
        d2882 = (d2880 - b2276);
        b2277 = ((d2880 < b2276));
        t14293 = (t14291 - b2277);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2883 = (d2867 - a32923);
        b2278 = ((d2867 < a32923));
        d2884 = (d2869 - a32922);
        d2885 = (d2884 - b2278);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40469 = ((d2869 < a32922));
        a40470 = ((d2869 == a32922));
        a40471 = ((a40470) && (b2278));
        b2279 = ((a40469) || (a40471));
        /* Begin of MPSubDDD 64 */
        d2886 = (d2873 - a32921);
        b2280 = ((d2873 < a32921));
        d2887 = (t14290 - a32920);
        d2888 = (d2887 - b2280);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2889 = (d2886 - b2279);
        b2281 = ((d2886 < b2279));
        t14294 = (d2888 - b2281);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40475 = ((t14290 < a32920));
        a40476 = ((t14290 == a32920));
        a40477 = ((a40476) && (b2280));
        a40478 = ((a40475) || (a40477));
        /* MPEqual 64 */
        a40479 = ((d2873 == a32921));
        a40480 = ((a40476) && (a40479));
        /* MPLessThan 64 */
        a40481 = ((a40480) && (b2279));
        b2282 = ((a40478) || (a40481));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2890 = (d2881 - a32919);
        b2283 = ((d2881 < a32919));
        d2891 = (t14292 - a32918);
        d2892 = (d2891 - b2283);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40484 = ((t14292 < a32918));
        a40485 = ((t14292 == a32918));
        a40486 = ((a40485) && (b2283));
        b2284 = ((a40484) || (a40486));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2893 = (d2882 - b2284);
        b2285 = ((d2882 < b2284));
        t14295 = (t14293 - b2285);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2894 = (d2890 - b2282);
        b2286 = ((d2890 < b2282));
        t14296 = (d2892 - b2286);
        /* MPLessThanDI 64 */
        a40490 = ((d2892 == 0));
        b2287 = ((a40490) && (b2286));
        /* MPSubDDI 64 */
        d2895 = (d2893 - b2287);
        b2288 = ((d2893 < b2287));
        t14297 = (t14295 - b2288);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a40493 = ((t14293 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a40494 = ((d2882 == 0));
        a40495 = ((a40493) && (a40494));
        /* MPLessThan 64 */
        a40496 = ((a40495) && (b2284));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40497 = ((d2881 == a32919));
        a40498 = ((a40485) && (a40497));
        a40499 = ((a40495) && (a40498));
        /* MPLessThan 128 */
        a40500 = ((a40499) && (b2282));
        i699 = ((a40496) || (a40500));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14298 = ((i699) ? (t14293) : (t14297));
        t14299 = ((i699) ? (d2882) : (d2895));
        /* MPCondD 64 */
        t14300 = ((i699) ? (t14292) : (t14296));
        t14301 = ((i699) ? (d2881) : (d2894));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14302 = ((i699) ? (t14290) : (t14294));
        t14303 = ((i699) ? (d2873) : (d2889));
        /* MPCondD 64 */
        t14304 = ((i699) ? (d2869) : (d2885));
        t14305 = ((i699) ? (d2867) : (d2883));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a40501 = (2*threadIdx.x);
        a40502 = (256*i7);
        a40503 = (a40501 + a40502);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a40504 = (2*a40397);
        a40505 = (a40504 + 1);
        /* MPAssignDD 128 */
        a40506 = (2*a40505);
        /* MPAssignDD 64 */
        a40507 = (2*a40506);
        t14306 = P1[a40507];
        a40508 = (a40507 + 1);
        t14307 = P1[a40508];
        a40509 = (a40506 + 1);
        /* MPAssignDD 64 */
        a40510 = (2*a40509);
        t14308 = P1[a40510];
        a40511 = (a40510 + 1);
        t14309 = P1[a40511];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2553 = (((uint128_t ) t14309) + ((uint128_t ) t14305));
        t14310 = ((uint64_t ) s2553);
        c1392 = (s2553 >> 64);
        s2554 = (((uint128_t ) t14308) + ((uint128_t ) t14304));
        s2555 = (((uint128_t ) s2554) + ((uint128_t ) c1392));
        t14311 = ((uint64_t ) s2555);
        c1393 = (s2555 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2556 = (((uint128_t ) t14307) + ((uint128_t ) t14303));
        t14312 = ((uint64_t ) s2556);
        c1394 = (s2556 >> 64);
        s2557 = (((uint128_t ) t14306) + ((uint128_t ) t14302));
        s2558 = (((uint128_t ) s2557) + ((uint128_t ) c1394));
        t14313 = ((uint64_t ) s2558);
        c1395 = (s2558 >> 64);
        /* MPPropagateCarry 64 */
        t14314 = (t14312 + c1393);
        a40512 = ((t14314 == 0));
        a40513 = (t14313 + c1393);
        t14315 = ((a40512) ? (a40513) : (t14313));
        a40514 = ((t14315 == 0));
        a40515 = ((a40514) && (a40512));
        a40516 = (c1395 + c1393);
        t14316 = ((a40515) ? (a40516) : (c1395));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40520 = (2*a40504);
        a40521 = (a40520 + 1);
        /* MPAssignDD 64 */
        a40522 = (2*a40521);
        t14318 = P1[a40522];
        a40523 = (a40522 + 1);
        t14319 = P1[a40523];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2559 = (((uint128_t ) t14319) + ((uint128_t ) t14301));
        t14320 = ((uint64_t ) s2559);
        c1396 = (s2559 >> 64);
        s2560 = (((uint128_t ) t14318) + ((uint128_t ) t14300));
        s2561 = (((uint128_t ) s2560) + ((uint128_t ) c1396));
        t14321 = ((uint64_t ) s2561);
        c1397 = (s2561 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t14322 = ((uint64_t ) t14299);
        c1398 = (t14299 >> 64);
        s2562 = (((uint128_t ) t14298) + ((uint128_t ) c1398));
        t14323 = ((uint64_t ) s2562);
        /* MPPropagateCarry 64 */
        t14324 = (t14322 + c1397);
        a40524 = ((t14324 == 0));
        a40525 = (t14323 + c1397);
        t14325 = ((a40524) ? (a40525) : (t14323));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2563 = (((uint128_t ) t14320) + ((uint128_t ) t14316));
        t14328 = ((uint64_t ) s2563);
        c1400 = (s2563 >> 64);
        s2564 = (((uint128_t ) t14321) + ((uint128_t ) c1400));
        t14329 = ((uint64_t ) s2564);
        /* MPEqualDI 64 */
        a40532 = ((t14329 == 0));
        a40533 = ((t14328 == 0));
        a40534 = ((a40532) && (a40533));
        /* MPAddDDI 64 */
        s2565 = (((uint128_t ) t14324) + ((uint128_t ) t14316));
        t14330 = ((uint64_t ) s2565);
        c1401 = (s2565 >> 64);
        s2566 = (((uint128_t ) t14325) + ((uint128_t ) c1401));
        t14331 = ((uint64_t ) s2566);
        /* MPCondD 64 */
        t14332 = ((a40534) ? (t14331) : (t14325));
        t14333 = ((a40534) ? (t14330) : (t14324));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a40535 = ((0 < t14332));
        a40536 = ((0 == t14332));
        a40537 = ((0 < t14333));
        a40538 = ((a40536) && (a40537));
        a40539 = ((a40535) || (a40538));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a40540 = ((0 == t14333));
        a40541 = ((a40536) && (a40540));
        /* MPLessThan 64 */
        a40542 = ((a32918 < t14329));
        a40543 = ((a32918 == t14329));
        a40544 = ((a32919 < t14328));
        a40545 = ((a40543) && (a40544));
        a40546 = ((a40542) || (a40545));
        a40547 = ((a40541) && (a40546));
        a40548 = ((a40539) || (a40547));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40549 = ((a32919 == t14328));
        a40550 = ((a40543) && (a40549));
        a40551 = ((a40541) && (a40550));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40552 = ((a32920 < t14315));
        a40553 = ((a32920 == t14315));
        a40554 = ((a32921 < t14314));
        a40555 = ((a40553) && (a40554));
        a40556 = ((a40552) || (a40555));
        /* MPEqual 64 */
        a40557 = ((a32921 == t14314));
        a40558 = ((a40553) && (a40557));
        /* MPLessThan 64 */
        a40559 = ((a32922 < t14311));
        a40560 = ((a32922 == t14311));
        a40561 = ((a32923 < t14310));
        a40562 = ((a40560) && (a40561));
        a40563 = ((a40559) || (a40562));
        a40564 = ((a40558) && (a40563));
        a40565 = ((a40556) || (a40564));
        a40566 = ((a40551) && (a40565));
        i700 = ((a40548) || (a40566));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2896 = (t14310 - a32923);
        b2289 = ((t14310 < a32923));
        d2897 = (t14311 - a32922);
        d2898 = (d2897 - b2289);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40568 = ((t14311 < a32922));
        a40569 = ((t14311 == a32922));
        a40570 = ((a40569) && (b2289));
        b2290 = ((a40568) || (a40570));
        /* Begin of MPSubDDD 64 */
        d2899 = (t14314 - a32921);
        b2291 = ((t14314 < a32921));
        d2900 = (t14315 - a32920);
        d2901 = (d2900 - b2291);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2902 = (d2899 - b2290);
        b2292 = ((d2899 < b2290));
        t14334 = (d2901 - b2292);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40574 = ((t14315 < a32920));
        a40575 = ((t14315 == a32920));
        a40576 = ((a40575) && (b2291));
        a40577 = ((a40574) || (a40576));
        /* MPEqual 64 */
        a40578 = ((t14314 == a32921));
        a40579 = ((a40575) && (a40578));
        /* MPLessThan 64 */
        a40580 = ((a40579) && (b2290));
        b2293 = ((a40577) || (a40580));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2903 = (t14328 - a32919);
        b2294 = ((t14328 < a32919));
        d2904 = (t14329 - a32918);
        d2905 = (d2904 - b2294);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2906 = (d2903 - b2293);
        b2295 = ((d2903 < b2293));
        t14335 = (d2905 - b2295);
        /* End of MPSubDDD 256 */
        a40584 = (2*a40503);
        /* MPCondD 128 */
        a40585 = (2*a40584);
        a40586 = (a40585 + 1);
        /* MPCondD 64 */
        a40587 = (2*a40586);
        P2[a40587] = ((i700) ? (t14335) : (t14329));
        a40588 = (a40587 + 1);
        P2[a40588] = ((i700) ? (d2906) : (t14328));
        a40589 = (a40584 + 1);
        /* MPCondD 128 */
        a40590 = (2*a40589);
        /* MPCondD 64 */
        a40591 = (2*a40590);
        P2[a40591] = ((i700) ? (t14334) : (t14315));
        a40592 = (a40591 + 1);
        P2[a40592] = ((i700) ? (d2902) : (t14314));
        a40593 = (a40590 + 1);
        /* MPCondD 64 */
        a40594 = (2*a40593);
        P2[a40594] = ((i700) ? (d2898) : (t14311));
        a40595 = (a40594 + 1);
        P2[a40595] = ((i700) ? (d2896) : (t14310));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        a40596 = (a40503 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2907 = (t14309 - t14305);
        b2296 = ((t14309 < t14305));
        d2908 = (t14308 - t14304);
        d2909 = (d2908 - b2296);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40598 = ((t14308 < t14304));
        a40599 = ((t14308 == t14304));
        a40600 = ((a40599) && (b2296));
        b2297 = ((a40598) || (a40600));
        /* Begin of MPSubDDD 64 */
        d2910 = (t14307 - t14303);
        b2298 = ((t14307 < t14303));
        d2911 = (t14306 - t14302);
        d2912 = (d2911 - b2298);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2913 = (d2910 - b2297);
        b2299 = ((d2910 < b2297));
        t14336 = (d2912 - b2299);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40604 = ((t14306 < t14302));
        a40605 = ((t14306 == t14302));
        a40606 = ((a40605) && (b2298));
        a40607 = ((a40604) || (a40606));
        /* MPEqual 64 */
        a40608 = ((t14307 == t14303));
        a40609 = ((a40605) && (a40608));
        /* MPLessThan 64 */
        a40610 = ((a40609) && (b2297));
        b2300 = ((a40607) || (a40610));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2914 = (t14319 - t14301);
        b2301 = ((t14319 < t14301));
        d2915 = (t14318 - t14300);
        d2916 = (d2915 - b2301);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2917 = (d2914 - b2300);
        b2302 = ((d2914 < b2300));
        t14337 = (d2916 - b2302);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2567 = (((uint128_t ) d2907) + ((uint128_t ) a32923));
        t14338 = ((uint64_t ) s2567);
        c1402 = (s2567 >> 64);
        s2568 = (((uint128_t ) d2909) + ((uint128_t ) a32922));
        s2569 = (((uint128_t ) s2568) + ((uint128_t ) c1402));
        t14339 = ((uint64_t ) s2569);
        c1403 = (s2569 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2570 = (((uint128_t ) d2913) + ((uint128_t ) a32921));
        t14340 = ((uint64_t ) s2570);
        c1404 = (s2570 >> 64);
        s2571 = (((uint128_t ) t14336) + ((uint128_t ) a32920));
        s2572 = (((uint128_t ) s2571) + ((uint128_t ) c1404));
        t14341 = ((uint64_t ) s2572);
        c1405 = (s2572 >> 64);
        /* MPPropagateCarry 64 */
        t14342 = (t14340 + c1403);
        a40614 = ((t14342 == 0));
        a40615 = (t14341 + c1403);
        t14343 = ((a40614) ? (a40615) : (t14341));
        a40616 = ((t14343 == 0));
        a40617 = ((a40616) && (a40614));
        a40618 = (c1405 + c1403);
        t14344 = ((a40617) ? (a40618) : (c1405));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2573 = (((uint128_t ) d2917) + ((uint128_t ) a32919));
        t14346 = ((uint64_t ) s2573);
        c1406 = (s2573 >> 64);
        s2574 = (((uint128_t ) t14337) + ((uint128_t ) a32918));
        s2575 = (((uint128_t ) s2574) + ((uint128_t ) c1406));
        t14347 = ((uint64_t ) s2575);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2576 = (((uint128_t ) t14346) + ((uint128_t ) t14344));
        t14348 = ((uint64_t ) s2576);
        c1408 = (s2576 >> 64);
        s2577 = (((uint128_t ) t14347) + ((uint128_t ) c1408));
        t14349 = ((uint64_t ) s2577);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40622 = ((0 < t14298));
        a40623 = ((0 == t14298));
        a40624 = ((0 < t14299));
        a40625 = ((a40623) && (a40624));
        a40626 = ((a40622) || (a40625));
        /* MPEqual 64 */
        a40627 = ((0 == t14299));
        a40628 = ((a40623) && (a40627));
        /* MPLessThan 64 */
        a40629 = ((t14318 < t14300));
        a40630 = ((t14318 == t14300));
        a40631 = ((a40630) && (b2301));
        a40632 = ((a40629) || (a40631));
        a40633 = ((a40628) && (a40632));
        a40634 = ((a40626) || (a40633));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40635 = ((t14319 == t14301));
        a40636 = ((a40630) && (a40635));
        a40637 = ((a40628) && (a40636));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a40638 = ((a40637) && (b2300));
        i701 = ((a40634) || (a40638));
        a40639 = (2*a40596);
        /* MPCondD 128 */
        a40640 = (2*a40639);
        a40641 = (a40640 + 1);
        /* MPCondD 64 */
        a40642 = (2*a40641);
        P2[a40642] = ((i701) ? (t14349) : (t14337));
        a40643 = (a40642 + 1);
        P2[a40643] = ((i701) ? (t14348) : (d2917));
        a40644 = (a40639 + 1);
        /* MPCondD 128 */
        a40645 = (2*a40644);
        /* MPCondD 64 */
        a40646 = (2*a40645);
        P2[a40646] = ((i701) ? (t14343) : (t14336));
        a40647 = (a40646 + 1);
        P2[a40647] = ((i701) ? (t14342) : (d2913));
        a40648 = (a40645 + 1);
        /* MPCondD 64 */
        a40649 = (2*a40648);
        P2[a40649] = ((i701) ? (t14339) : (d2909));
        a40650 = (a40649 + 1);
        P2[a40650] = ((i701) ? (t14338) : (d2907));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code18(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a40651, a40652, a40653, a40654, a40655, a40656, a40657, a40658, 
            a40659, a40660, a40661, a40662, a40663, a40664, a40665, a40666, 
            a40667, a40668, a40669, a40670, a40671, a40672, a40673, a40674, 
            a40675, a40676, a40677, a40678, a40679, a40698, a40699, a40700, 
            a40704, a40705, a40706, a40707, a40708, a40709, a40710, a40713, 
            a40714, a40715, a40720, a40724, a40725, a40726, a40730, a40731, 
            a40732, a40733, a40734, a40735, a40736, a40739, a40740, a40741, 
            a40745, a40748, a40749, a40750, a40751, a40752, a40753, a40754, 
            a40755, a40756, a40757, a40758, a40759, a40760, a40761, a40762, 
            a40763, a40764, a40765, a40766, a40767, a40769, a40770, a40775, 
            a40776, a40777, a40778, a40779, a40787, a40788, a40789, a40790, 
            a40791, a40792, a40793, a40794, a40795, a40796, a40797, a40798, 
            a40799, a40800, a40801, a40802, a40803, a40804, a40805, a40806, 
            a40807, a40808, a40809, a40810, a40811, a40812, a40813, a40814, 
            a40815, a40816, a40817, a40818, a40819, a40820, a40821, a40823, 
            a40824, a40825, a40829, a40830, a40831, a40832, a40833, a40834, 
            a40835, a40839, a40840, a40841, a40842, a40843, a40844, a40845, 
            a40846, a40847, a40848, a40849, a40850, a40851, a40853, a40854, 
            a40855, a40859, a40860, a40861, a40862, a40863, a40864, a40865, 
            a40869, a40871, a40872, a40877, a40878, a40879, a40880, a40881, 
            a40882, a40883, a40884, a40885, a40886, a40887, a40888, a40889, 
            a40890, a40891, a40892, a40893, a40894, a40895, a40896, a40897, 
            a40898, a40899, a40900, a40901, a40902, a40903, a40904, a40905, 
            b2303, b2305, b2306, b2307, b2308, b2309, b2310, b2311, 
            b2312, b2313, b2314, b2315, b2316, b2317, b2318, b2319, 
            b2320, b2321, b2322, b2323, b2324, b2325, b2326, b2327, 
            b2328, b2329, b2330, b2331, b2332, b2333, b2334, b2335, 
            b2336, b2337, b2338, b2339, b2340, b2341, c1409, c1410, 
            c1411, c1412, c1413, c1414, c1415, c1417, c1418, c1419, 
            c1420, c1421, c1422, c1423, c1425, i702, i703, i704;
    uint64_t a33724, a33725, a33726, a33727, a33728, a33729, a33829, a33830, 
            a33831, a33832, a33833, a33834, a40680, a40681, a40682, a40683, 
            a40684, a40685, a40686, a40687, a40688, a40689, a40691, a40692, 
            a40693, a40694, a40695, a40696, a40768, a40771, a40780, a40870, 
            a40873, d2918, d2919, d2920, d2921, d2922, d2923, d2924, 
            d2925, d2926, d2927, d2928, d2929, d2930, d2931, d2932, 
            d2933, d2934, d2935, d2936, d2937, d2938, d2939, d2940, 
            d2941, d2942, d2943, d2944, d2945, d2946, d2947, d2948, 
            d2949, d2950, d2951, d2952, d2953, d2954, d2955, d2956, 
            d2957, d2958, d2959, d2960, d2961, d2962, d2963, d2964, 
            d2965, d2966, d2967, d2968, d2969, t14350, t14351, t14352, 
            t14353, t14354, t14355, t14356, t14357, t14358, t14359, t14360, 
            t14361, t14362, t14363, t14364, t14365, t14366, t14367, t14368, 
            t14369, t14370, t14371, t14372, t14373, t14374, t14375, t14376, 
            t14377, t14378, t14379, t14380, t14381, t14382, t14383, t14386, 
            t14387, t14388, t14389, t14390, t14391, t14392, t14393, t14394, 
            t14395, t14396, t14397, t14398, t14399, t14400, t14401, t14402, 
            t14403, t14404, t14405, t14406, t14407, t14408, t14409, t14410, 
            t14411, t14412, t14413, t14414, t14415, t14416, t14417, t14418, 
            t14419, t14420, t14421, t14422, t14423, t14424, t14425, t14426, 
            t14427, t14428, t14429, t14431, t14432, t14433, t14434, t14435, 
            t14436, t14437, t14438, t14441, t14442, t14443, t14444, t14445, 
            t14446, t14447, t14448, t14449, t14450, t14451, t14452, t14453, 
            t14454, t14455, t14456, t14457, t14459, t14460, t14461, t14462, 
            t8391, t8392, t8393, t8394, t8395, t8396, t8397, t8398, 
            t8399, t8400, t8401, t8402, t8403, t8404, t8405, t8406, 
            t8407, t8408, t8409, t8410, t8411, t8412, t8413, t8414, 
            t8415, t8416, t8417, t8418, t8419, t8420, t8421, t8422, 
            t8423, t8424, t8425, t8426, t8427, t8428, t8429, t8430, 
            t8431, t8432, t8433, t8434, t8435, t8436, t8437, t8438;
    uint128_t s2578, s2579, s2580, s2581, s2582, s2583, s2584, s2585, 
            s2586, s2587, s2588, s2589, s2590, s2591, s2592, s2593, 
            s2594, s2595, s2596, s2597, s2598, s2599, s2600, s2601, 
            s2602;
    for(int i5 = 0; i5 <= 4095; i5++) {
        a40651 = (128*i5);
        a40652 = (threadIdx.x + a40651);
        a40653 = (a40652 + 524288);
        a40654 = (a40653 % 262144);
        a40655 = (262144 + a40654);
        /* Begin of MPModMul 256 */
        a40656 = (2*a40655);
        a40657 = (a40656 + 1);
        a40658 = (2*a40653);
        a40659 = (a40658 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40660 = (2*a40656);
        a40661 = (a40660 + 1);
        /* MPAssignDD 64 */
        a40662 = (2*a40661);
        t14350 = twiddles[a40662];
        a40663 = (a40662 + 1);
        t14351 = twiddles[a40663];
        /* MPAssignDD 128 */
        a40664 = (2*a40657);
        /* MPAssignDD 64 */
        a40665 = (2*a40664);
        t14352 = twiddles[a40665];
        a40666 = (a40665 + 1);
        t14353 = twiddles[a40666];
        a40667 = (a40664 + 1);
        /* MPAssignDD 64 */
        a40668 = (2*a40667);
        t14354 = twiddles[a40668];
        a40669 = (a40668 + 1);
        t14355 = twiddles[a40669];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40670 = (2*a40658);
        a40671 = (a40670 + 1);
        /* MPAssignDD 64 */
        a40672 = (2*a40671);
        t14356 = P2[a40672];
        a40673 = (a40672 + 1);
        t14357 = P2[a40673];
        /* MPAssignDD 128 */
        a40674 = (2*a40659);
        /* MPAssignDD 64 */
        a40675 = (2*a40674);
        t14358 = P2[a40675];
        a40676 = (a40675 + 1);
        t14359 = P2[a40676];
        a40677 = (a40674 + 1);
        /* MPAssignDD 64 */
        a40678 = (2*a40677);
        t14360 = P2[a40678];
        a40679 = (a40678 + 1);
        t14361 = P2[a40679];
        MPMulQDD_L3_2(t8403, t8404, t8405, t8406, t8399, t8400, t8401, t8402, 
    t8395, t8396, t8397, t8398, t8391, t8392, t8393, t8394, 
    0, 0, t14350, t14351, t14352, t14353, t14354, t14355, 
    0, 0, t14356, t14357, t14358, t14359, t14360, t14361);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14362 = (t8395 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a40680 = (t8395 << 6);
        a40681 = (t8396 >> 58);
        t14363 = (((a40680)|(a40681)));
        t14364 = (t8396 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14365 = (t8397 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14366 = (((t14364)|(t14365)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2303 = ((int) 1);
        t14367 = (288230376151711744 - b2303);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14368 = (((t8405)&(t14367)));
        t14369 = (((t8406)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a40682 = (t14368 << 6);
        a40683 = (t14369 >> 58);
        t14370 = (((a40682)|(a40683)));
        t14371 = (t14369 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14372 = (t8399 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a40684 = (t8399 << 6);
        a40685 = (t8400 >> 58);
        t14373 = (((a40684)|(a40685)));
        t14374 = (t8400 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14375 = (t8401 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14376 = (((t14374)|(t14375)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14377 = (((t14371)|(t14372)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a40686 = (t8401 << 6);
        a40687 = (t8402 >> 58);
        t14378 = (((a40686)|(a40687)));
        t14379 = (t8402 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14380 = (((t14379)|(t14362)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a33724 = mu[2];
        a33725 = mu[3];
        a33726 = mu[4];
        a33727 = mu[5];
        a33728 = mu[6];
        a33729 = mu[7];
        MPMulQDD_L3_1(t8435, t8436, t8437, t8438, t8431, t8432, t8433, t8434, 
    t8427, t8428, t8429, t8430, t8423, t8424, t8425, t8426, 
    t14370, t14377, t14373, t14376, t14378, t14380, t14363, t14366, 
    0, 0, a33724, a33725, a33726, a33727, a33728, a33729);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14381 = (t8427 >> 1);
        a40688 = (t8427 << 63);
        a40689 = (t8428 >> 1);
        t14382 = (((a40688)|(a40689)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t14383 = (0 - b2303);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2918 = (2 - b2303);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14386 = (((t8436)&(d2918)));
        /* MPBinAndD 64 */
        t14387 = (((t8437)&(t14383)));
        t14388 = (((t8438)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14389 = (t14386 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14390 = (t14387 >> 1);
        a40691 = (t14387 << 63);
        a40692 = (t14388 >> 1);
        t14391 = (((a40691)|(a40692)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14392 = (((t14389)|(t14390)));
        /* Begin of MPShiftLeft1D */
        t14393 = (t14388 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14394 = (t8431 >> 1);
        a40693 = (t8431 << 63);
        a40694 = (t8432 >> 1);
        t14395 = (((a40693)|(a40694)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14396 = (((t14393)|(t14394)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14397 = (t8432 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14398 = (t8433 >> 1);
        a40695 = (t8433 << 63);
        a40696 = (t8434 >> 1);
        t14399 = (((a40695)|(a40696)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14400 = (((t14397)|(t14398)));
        /* Begin of MPShiftLeft1D */
        t14401 = (t8434 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14402 = (((t14401)|(t14381)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a33829 = modulus[2];
        a33830 = modulus[3];
        a33831 = modulus[4];
        a33832 = modulus[5];
        a33833 = modulus[6];
        a33834 = modulus[7];
        MPMulQDD_L3_1(t8419, t8420, t8421, t8422, t8415, t8416, t8417, t8418, 
    t8411, t8412, t8413, t8414, t8407, t8408, t8409, t8410, 
    t14392, t14391, t14396, t14395, t14400, t14399, t14402, t14382, 
    0, 0, a33829, a33830, a33831, a33832, a33833, a33834);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2919 = (t8394 - t8410);
        b2305 = ((t8394 < t8410));
        d2920 = (t8393 - t8409);
        d2921 = (d2920 - b2305);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40698 = ((t8393 < t8409));
        a40699 = ((t8393 == t8409));
        a40700 = ((a40699) && (b2305));
        b2306 = ((a40698) || (a40700));
        /* Begin of MPSubDDD 64 */
        d2922 = (t8392 - t8408);
        b2307 = ((t8392 < t8408));
        d2923 = (t8391 - t8407);
        d2924 = (d2923 - b2307);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2925 = (d2922 - b2306);
        b2308 = ((d2922 < b2306));
        t14403 = (d2924 - b2308);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40704 = ((t8391 < t8407));
        a40705 = ((t8391 == t8407));
        a40706 = ((a40705) && (b2307));
        a40707 = ((a40704) || (a40706));
        /* MPEqual 64 */
        a40708 = ((t8392 == t8408));
        a40709 = ((a40705) && (a40708));
        /* MPLessThan 64 */
        a40710 = ((a40709) && (b2306));
        b2309 = ((a40707) || (a40710));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2926 = (t8398 - t8414);
        b2310 = ((t8398 < t8414));
        d2927 = (t8397 - t8413);
        d2928 = (d2927 - b2310);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40713 = ((t8397 < t8413));
        a40714 = ((t8397 == t8413));
        a40715 = ((a40714) && (b2310));
        b2311 = ((a40713) || (a40715));
        /* Begin of MPSubDDD 64 */
        d2929 = (t8396 - t8412);
        b2312 = ((t8396 < t8412));
        d2930 = (t8395 - t8411);
        d2931 = (d2930 - b2312);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2932 = (d2929 - b2311);
        b2313 = ((d2929 < b2311));
        t14404 = (d2931 - b2313);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2933 = (d2926 - b2309);
        b2314 = ((d2926 < b2309));
        t14405 = (d2928 - b2314);
        /* MPLessThanDI 64 */
        a40720 = ((d2928 == 0));
        b2315 = ((a40720) && (b2314));
        /* MPSubDDI 64 */
        d2934 = (d2932 - b2315);
        b2316 = ((d2932 < b2315));
        t14406 = (t14404 - b2316);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2935 = (d2919 - a33834);
        b2317 = ((d2919 < a33834));
        d2936 = (d2921 - a33833);
        d2937 = (d2936 - b2317);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40724 = ((d2921 < a33833));
        a40725 = ((d2921 == a33833));
        a40726 = ((a40725) && (b2317));
        b2318 = ((a40724) || (a40726));
        /* Begin of MPSubDDD 64 */
        d2938 = (d2925 - a33832);
        b2319 = ((d2925 < a33832));
        d2939 = (t14403 - a33831);
        d2940 = (d2939 - b2319);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2941 = (d2938 - b2318);
        b2320 = ((d2938 < b2318));
        t14407 = (d2940 - b2320);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40730 = ((t14403 < a33831));
        a40731 = ((t14403 == a33831));
        a40732 = ((a40731) && (b2319));
        a40733 = ((a40730) || (a40732));
        /* MPEqual 64 */
        a40734 = ((d2925 == a33832));
        a40735 = ((a40731) && (a40734));
        /* MPLessThan 64 */
        a40736 = ((a40735) && (b2318));
        b2321 = ((a40733) || (a40736));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2942 = (d2933 - a33830);
        b2322 = ((d2933 < a33830));
        d2943 = (t14405 - a33829);
        d2944 = (d2943 - b2322);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40739 = ((t14405 < a33829));
        a40740 = ((t14405 == a33829));
        a40741 = ((a40740) && (b2322));
        b2323 = ((a40739) || (a40741));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2945 = (d2934 - b2323);
        b2324 = ((d2934 < b2323));
        t14408 = (t14406 - b2324);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2946 = (d2942 - b2321);
        b2325 = ((d2942 < b2321));
        t14409 = (d2944 - b2325);
        /* MPLessThanDI 64 */
        a40745 = ((d2944 == 0));
        b2326 = ((a40745) && (b2325));
        /* MPSubDDI 64 */
        d2947 = (d2945 - b2326);
        b2327 = ((d2945 < b2326));
        t14410 = (t14408 - b2327);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a40748 = ((t14406 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a40749 = ((d2934 == 0));
        a40750 = ((a40748) && (a40749));
        /* MPLessThan 64 */
        a40751 = ((a40750) && (b2323));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40752 = ((d2933 == a33830));
        a40753 = ((a40740) && (a40752));
        a40754 = ((a40750) && (a40753));
        /* MPLessThan 128 */
        a40755 = ((a40754) && (b2321));
        i702 = ((a40751) || (a40755));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14411 = ((i702) ? (t14406) : (t14410));
        t14412 = ((i702) ? (d2934) : (d2947));
        /* MPCondD 64 */
        t14413 = ((i702) ? (t14405) : (t14409));
        t14414 = ((i702) ? (d2933) : (d2946));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14415 = ((i702) ? (t14403) : (t14407));
        t14416 = ((i702) ? (d2925) : (d2941));
        /* MPCondD 64 */
        t14417 = ((i702) ? (d2921) : (d2937));
        t14418 = ((i702) ? (d2919) : (d2935));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a40756 = (2*threadIdx.x);
        a40757 = (256*i5);
        a40758 = (a40756 + a40757);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a40759 = (2*a40652);
        a40760 = (a40759 + 1);
        /* MPAssignDD 128 */
        a40761 = (2*a40760);
        /* MPAssignDD 64 */
        a40762 = (2*a40761);
        t14419 = P2[a40762];
        a40763 = (a40762 + 1);
        t14420 = P2[a40763];
        a40764 = (a40761 + 1);
        /* MPAssignDD 64 */
        a40765 = (2*a40764);
        t14421 = P2[a40765];
        a40766 = (a40765 + 1);
        t14422 = P2[a40766];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2578 = (((uint128_t ) t14422) + ((uint128_t ) t14418));
        t14423 = ((uint64_t ) s2578);
        c1409 = (s2578 >> 64);
        s2579 = (((uint128_t ) t14421) + ((uint128_t ) t14417));
        s2580 = (((uint128_t ) s2579) + ((uint128_t ) c1409));
        t14424 = ((uint64_t ) s2580);
        c1410 = (s2580 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2581 = (((uint128_t ) t14420) + ((uint128_t ) t14416));
        t14425 = ((uint64_t ) s2581);
        c1411 = (s2581 >> 64);
        s2582 = (((uint128_t ) t14419) + ((uint128_t ) t14415));
        s2583 = (((uint128_t ) s2582) + ((uint128_t ) c1411));
        t14426 = ((uint64_t ) s2583);
        c1412 = (s2583 >> 64);
        /* MPPropagateCarry 64 */
        t14427 = (t14425 + c1410);
        a40767 = ((t14427 == 0));
        a40768 = (t14426 + c1410);
        t14428 = ((a40767) ? (a40768) : (t14426));
        a40769 = ((t14428 == 0));
        a40770 = ((a40769) && (a40767));
        a40771 = (c1412 + c1410);
        t14429 = ((a40770) ? (a40771) : (c1412));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40775 = (2*a40759);
        a40776 = (a40775 + 1);
        /* MPAssignDD 64 */
        a40777 = (2*a40776);
        t14431 = P2[a40777];
        a40778 = (a40777 + 1);
        t14432 = P2[a40778];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2584 = (((uint128_t ) t14432) + ((uint128_t ) t14414));
        t14433 = ((uint64_t ) s2584);
        c1413 = (s2584 >> 64);
        s2585 = (((uint128_t ) t14431) + ((uint128_t ) t14413));
        s2586 = (((uint128_t ) s2585) + ((uint128_t ) c1413));
        t14434 = ((uint64_t ) s2586);
        c1414 = (s2586 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t14435 = ((uint64_t ) t14412);
        c1415 = (t14412 >> 64);
        s2587 = (((uint128_t ) t14411) + ((uint128_t ) c1415));
        t14436 = ((uint64_t ) s2587);
        /* MPPropagateCarry 64 */
        t14437 = (t14435 + c1414);
        a40779 = ((t14437 == 0));
        a40780 = (t14436 + c1414);
        t14438 = ((a40779) ? (a40780) : (t14436));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2588 = (((uint128_t ) t14433) + ((uint128_t ) t14429));
        t14441 = ((uint64_t ) s2588);
        c1417 = (s2588 >> 64);
        s2589 = (((uint128_t ) t14434) + ((uint128_t ) c1417));
        t14442 = ((uint64_t ) s2589);
        /* MPEqualDI 64 */
        a40787 = ((t14442 == 0));
        a40788 = ((t14441 == 0));
        a40789 = ((a40787) && (a40788));
        /* MPAddDDI 64 */
        s2590 = (((uint128_t ) t14437) + ((uint128_t ) t14429));
        t14443 = ((uint64_t ) s2590);
        c1418 = (s2590 >> 64);
        s2591 = (((uint128_t ) t14438) + ((uint128_t ) c1418));
        t14444 = ((uint64_t ) s2591);
        /* MPCondD 64 */
        t14445 = ((a40789) ? (t14444) : (t14438));
        t14446 = ((a40789) ? (t14443) : (t14437));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a40790 = ((0 < t14445));
        a40791 = ((0 == t14445));
        a40792 = ((0 < t14446));
        a40793 = ((a40791) && (a40792));
        a40794 = ((a40790) || (a40793));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a40795 = ((0 == t14446));
        a40796 = ((a40791) && (a40795));
        /* MPLessThan 64 */
        a40797 = ((a33829 < t14442));
        a40798 = ((a33829 == t14442));
        a40799 = ((a33830 < t14441));
        a40800 = ((a40798) && (a40799));
        a40801 = ((a40797) || (a40800));
        a40802 = ((a40796) && (a40801));
        a40803 = ((a40794) || (a40802));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40804 = ((a33830 == t14441));
        a40805 = ((a40798) && (a40804));
        a40806 = ((a40796) && (a40805));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40807 = ((a33831 < t14428));
        a40808 = ((a33831 == t14428));
        a40809 = ((a33832 < t14427));
        a40810 = ((a40808) && (a40809));
        a40811 = ((a40807) || (a40810));
        /* MPEqual 64 */
        a40812 = ((a33832 == t14427));
        a40813 = ((a40808) && (a40812));
        /* MPLessThan 64 */
        a40814 = ((a33833 < t14424));
        a40815 = ((a33833 == t14424));
        a40816 = ((a33834 < t14423));
        a40817 = ((a40815) && (a40816));
        a40818 = ((a40814) || (a40817));
        a40819 = ((a40813) && (a40818));
        a40820 = ((a40811) || (a40819));
        a40821 = ((a40806) && (a40820));
        i703 = ((a40803) || (a40821));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2948 = (t14423 - a33834);
        b2328 = ((t14423 < a33834));
        d2949 = (t14424 - a33833);
        d2950 = (d2949 - b2328);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40823 = ((t14424 < a33833));
        a40824 = ((t14424 == a33833));
        a40825 = ((a40824) && (b2328));
        b2329 = ((a40823) || (a40825));
        /* Begin of MPSubDDD 64 */
        d2951 = (t14427 - a33832);
        b2330 = ((t14427 < a33832));
        d2952 = (t14428 - a33831);
        d2953 = (d2952 - b2330);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2954 = (d2951 - b2329);
        b2331 = ((d2951 < b2329));
        t14447 = (d2953 - b2331);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40829 = ((t14428 < a33831));
        a40830 = ((t14428 == a33831));
        a40831 = ((a40830) && (b2330));
        a40832 = ((a40829) || (a40831));
        /* MPEqual 64 */
        a40833 = ((t14427 == a33832));
        a40834 = ((a40830) && (a40833));
        /* MPLessThan 64 */
        a40835 = ((a40834) && (b2329));
        b2332 = ((a40832) || (a40835));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2955 = (t14441 - a33830);
        b2333 = ((t14441 < a33830));
        d2956 = (t14442 - a33829);
        d2957 = (d2956 - b2333);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2958 = (d2955 - b2332);
        b2334 = ((d2955 < b2332));
        t14448 = (d2957 - b2334);
        /* End of MPSubDDD 256 */
        a40839 = (2*a40758);
        /* MPCondD 128 */
        a40840 = (2*a40839);
        a40841 = (a40840 + 1);
        /* MPCondD 64 */
        a40842 = (2*a40841);
        P1[a40842] = ((i703) ? (t14448) : (t14442));
        a40843 = (a40842 + 1);
        P1[a40843] = ((i703) ? (d2958) : (t14441));
        a40844 = (a40839 + 1);
        /* MPCondD 128 */
        a40845 = (2*a40844);
        /* MPCondD 64 */
        a40846 = (2*a40845);
        P1[a40846] = ((i703) ? (t14447) : (t14428));
        a40847 = (a40846 + 1);
        P1[a40847] = ((i703) ? (d2954) : (t14427));
        a40848 = (a40845 + 1);
        /* MPCondD 64 */
        a40849 = (2*a40848);
        P1[a40849] = ((i703) ? (d2950) : (t14424));
        a40850 = (a40849 + 1);
        P1[a40850] = ((i703) ? (d2948) : (t14423));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        a40851 = (a40758 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2959 = (t14422 - t14418);
        b2335 = ((t14422 < t14418));
        d2960 = (t14421 - t14417);
        d2961 = (d2960 - b2335);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40853 = ((t14421 < t14417));
        a40854 = ((t14421 == t14417));
        a40855 = ((a40854) && (b2335));
        b2336 = ((a40853) || (a40855));
        /* Begin of MPSubDDD 64 */
        d2962 = (t14420 - t14416);
        b2337 = ((t14420 < t14416));
        d2963 = (t14419 - t14415);
        d2964 = (d2963 - b2337);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2965 = (d2962 - b2336);
        b2338 = ((d2962 < b2336));
        t14449 = (d2964 - b2338);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40859 = ((t14419 < t14415));
        a40860 = ((t14419 == t14415));
        a40861 = ((a40860) && (b2337));
        a40862 = ((a40859) || (a40861));
        /* MPEqual 64 */
        a40863 = ((t14420 == t14416));
        a40864 = ((a40860) && (a40863));
        /* MPLessThan 64 */
        a40865 = ((a40864) && (b2336));
        b2339 = ((a40862) || (a40865));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2966 = (t14432 - t14414);
        b2340 = ((t14432 < t14414));
        d2967 = (t14431 - t14413);
        d2968 = (d2967 - b2340);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2969 = (d2966 - b2339);
        b2341 = ((d2966 < b2339));
        t14450 = (d2968 - b2341);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2592 = (((uint128_t ) d2959) + ((uint128_t ) a33834));
        t14451 = ((uint64_t ) s2592);
        c1419 = (s2592 >> 64);
        s2593 = (((uint128_t ) d2961) + ((uint128_t ) a33833));
        s2594 = (((uint128_t ) s2593) + ((uint128_t ) c1419));
        t14452 = ((uint64_t ) s2594);
        c1420 = (s2594 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2595 = (((uint128_t ) d2965) + ((uint128_t ) a33832));
        t14453 = ((uint64_t ) s2595);
        c1421 = (s2595 >> 64);
        s2596 = (((uint128_t ) t14449) + ((uint128_t ) a33831));
        s2597 = (((uint128_t ) s2596) + ((uint128_t ) c1421));
        t14454 = ((uint64_t ) s2597);
        c1422 = (s2597 >> 64);
        /* MPPropagateCarry 64 */
        t14455 = (t14453 + c1420);
        a40869 = ((t14455 == 0));
        a40870 = (t14454 + c1420);
        t14456 = ((a40869) ? (a40870) : (t14454));
        a40871 = ((t14456 == 0));
        a40872 = ((a40871) && (a40869));
        a40873 = (c1422 + c1420);
        t14457 = ((a40872) ? (a40873) : (c1422));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2598 = (((uint128_t ) d2969) + ((uint128_t ) a33830));
        t14459 = ((uint64_t ) s2598);
        c1423 = (s2598 >> 64);
        s2599 = (((uint128_t ) t14450) + ((uint128_t ) a33829));
        s2600 = (((uint128_t ) s2599) + ((uint128_t ) c1423));
        t14460 = ((uint64_t ) s2600);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2601 = (((uint128_t ) t14459) + ((uint128_t ) t14457));
        t14461 = ((uint64_t ) s2601);
        c1425 = (s2601 >> 64);
        s2602 = (((uint128_t ) t14460) + ((uint128_t ) c1425));
        t14462 = ((uint64_t ) s2602);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40877 = ((0 < t14411));
        a40878 = ((0 == t14411));
        a40879 = ((0 < t14412));
        a40880 = ((a40878) && (a40879));
        a40881 = ((a40877) || (a40880));
        /* MPEqual 64 */
        a40882 = ((0 == t14412));
        a40883 = ((a40878) && (a40882));
        /* MPLessThan 64 */
        a40884 = ((t14431 < t14413));
        a40885 = ((t14431 == t14413));
        a40886 = ((a40885) && (b2340));
        a40887 = ((a40884) || (a40886));
        a40888 = ((a40883) && (a40887));
        a40889 = ((a40881) || (a40888));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a40890 = ((t14432 == t14414));
        a40891 = ((a40885) && (a40890));
        a40892 = ((a40883) && (a40891));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a40893 = ((a40892) && (b2339));
        i704 = ((a40889) || (a40893));
        a40894 = (2*a40851);
        /* MPCondD 128 */
        a40895 = (2*a40894);
        a40896 = (a40895 + 1);
        /* MPCondD 64 */
        a40897 = (2*a40896);
        P1[a40897] = ((i704) ? (t14462) : (t14450));
        a40898 = (a40897 + 1);
        P1[a40898] = ((i704) ? (t14461) : (d2969));
        a40899 = (a40894 + 1);
        /* MPCondD 128 */
        a40900 = (2*a40899);
        /* MPCondD 64 */
        a40901 = (2*a40900);
        P1[a40901] = ((i704) ? (t14456) : (t14449));
        a40902 = (a40901 + 1);
        P1[a40902] = ((i704) ? (t14455) : (d2965));
        a40903 = (a40900 + 1);
        /* MPCondD 64 */
        a40904 = (2*a40903);
        P1[a40904] = ((i704) ? (t14452) : (d2961));
        a40905 = (a40904 + 1);
        P1[a40905] = ((i704) ? (t14451) : (d2959));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code19(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a40906, a40907, a40908, a40909, a40910, a40911, a40912, a40913, 
            a40914, a40915, a40916, a40917, a40918, a40919, a40920, a40921, 
            a40922, a40923, a40924, a40925, a40926, a40927, a40928, a40929, 
            a40930, a40931, a40932, a40933, a40934, a40953, a40954, a40955, 
            a40959, a40960, a40961, a40962, a40963, a40964, a40965, a40968, 
            a40969, a40970, a40975, a40979, a40980, a40981, a40985, a40986, 
            a40987, a40988, a40989, a40990, a40991, a40994, a40995, a40996, 
            a41000, a41003, a41004, a41005, a41006, a41007, a41008, a41009, 
            a41010, a41011, a41012, a41013, a41014, a41015, a41016, a41017, 
            a41018, a41019, a41020, a41021, a41022, a41023, a41025, a41026, 
            a41031, a41032, a41033, a41034, a41035, a41043, a41044, a41045, 
            a41046, a41047, a41048, a41049, a41050, a41051, a41052, a41053, 
            a41054, a41055, a41056, a41057, a41058, a41059, a41060, a41061, 
            a41062, a41063, a41064, a41065, a41066, a41067, a41068, a41069, 
            a41070, a41071, a41072, a41073, a41074, a41075, a41076, a41077, 
            a41079, a41080, a41081, a41085, a41086, a41087, a41088, a41089, 
            a41090, a41091, a41095, a41096, a41097, a41098, a41099, a41100, 
            a41101, a41102, a41103, a41104, a41105, a41106, a41107, a41109, 
            a41110, a41111, a41115, a41116, a41117, a41118, a41119, a41120, 
            a41121, a41125, a41127, a41128, a41133, a41134, a41135, a41136, 
            a41137, a41138, a41139, a41140, a41141, a41142, a41143, a41144, 
            a41145, a41146, a41147, a41148, a41149, a41150, a41151, a41152, 
            a41153, a41154, a41155, a41156, a41157, a41158, a41159, a41160, 
            a41161, b2342, b2343, b2345, b2346, b2347, b2348, b2349, 
            b2350, b2351, b2352, b2353, b2354, b2355, b2356, b2357, 
            b2358, b2359, b2360, b2361, b2362, b2363, b2364, b2365, 
            b2366, b2367, b2368, b2369, b2370, b2371, b2372, b2373, 
            b2374, b2375, b2376, b2377, b2378, b2379, b2380, b2381, 
            b2382, c1426, c1427, c1428, c1429, c1430, c1431, c1432, 
            c1434, c1435, c1436, c1437, c1438, c1439, c1440, c1442, 
            i705, i706, i707;
    uint64_t a34635, a34636, a34637, a34638, a34639, a34640, a34740, a34741, 
            a34742, a34743, a34744, a34745, a40935, a40936, a40937, a40938, 
            a40939, a40940, a40941, a40942, a40943, a40944, a40946, a40947, 
            a40948, a40949, a40950, a40951, a41024, a41027, a41036, a41126, 
            a41129, d2970, d2971, d2972, d2973, d2974, d2975, d2976, 
            d2977, d2978, d2979, d2980, d2981, d2982, d2983, d2984, 
            d2985, d2986, d2987, d2988, d2989, d2990, d2991, d2992, 
            d2993, d2994, d2995, d2996, d2997, d2998, d2999, d3000, 
            d3001, d3002, d3003, d3004, d3005, d3006, d3007, d3008, 
            d3009, d3010, d3011, d3012, d3013, d3014, d3015, d3016, 
            d3017, d3018, d3019, d3020, d3021, t14463, t14464, t14465, 
            t14466, t14467, t14468, t14469, t14470, t14471, t14472, t14473, 
            t14474, t14475, t14476, t14477, t14478, t14479, t14480, t14481, 
            t14482, t14483, t14484, t14485, t14486, t14487, t14488, t14489, 
            t14490, t14491, t14492, t14493, t14494, t14495, t14496, t14499, 
            t14500, t14501, t14502, t14503, t14504, t14505, t14506, t14507, 
            t14508, t14509, t14510, t14511, t14512, t14513, t14514, t14515, 
            t14516, t14517, t14518, t14519, t14520, t14521, t14522, t14523, 
            t14524, t14525, t14526, t14527, t14528, t14529, t14530, t14531, 
            t14532, t14533, t14534, t14535, t14536, t14537, t14538, t14539, 
            t14540, t14541, t14542, t14544, t14545, t14546, t14547, t14548, 
            t14549, t14550, t14551, t14554, t14555, t14556, t14557, t14558, 
            t14559, t14560, t14561, t14562, t14563, t14564, t14565, t14566, 
            t14567, t14568, t14569, t14570, t14572, t14573, t14574, t14575, 
            t8455, t8456, t8457, t8458, t8459, t8460, t8461, t8462, 
            t8463, t8464, t8465, t8466, t8467, t8468, t8469, t8470, 
            t8471, t8472, t8473, t8474, t8475, t8476, t8477, t8478, 
            t8479, t8480, t8481, t8482, t8483, t8484, t8485, t8486, 
            t8487, t8488, t8489, t8490, t8491, t8492, t8493, t8494, 
            t8495, t8496, t8497, t8498, t8499, t8500, t8501, t8502;
    uint128_t s2603, s2604, s2605, s2606, s2607, s2608, s2609, s2610, 
            s2611, s2612, s2613, s2614, s2615, s2616, s2617, s2618, 
            s2619, s2620, s2621, s2622, s2623, s2624, s2625, s2626, 
            s2627;
    for(int i3 = 0; i3 <= 4095; i3++) {
        a40906 = (128*i3);
        a40907 = (a40906 + threadIdx.x);
        b2342 = (threadIdx.x + a40906);
        a40908 = (b2342 + 524288);
        a40909 = (a40908 % 524288);
        a40910 = (524288 + a40909);
        /* Begin of MPModMul 256 */
        a40911 = (2*a40910);
        a40912 = (a40911 + 1);
        a40913 = (2*a40908);
        a40914 = (a40913 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40915 = (2*a40911);
        a40916 = (a40915 + 1);
        /* MPAssignDD 64 */
        a40917 = (2*a40916);
        t14463 = twiddles[a40917];
        a40918 = (a40917 + 1);
        t14464 = twiddles[a40918];
        /* MPAssignDD 128 */
        a40919 = (2*a40912);
        /* MPAssignDD 64 */
        a40920 = (2*a40919);
        t14465 = twiddles[a40920];
        a40921 = (a40920 + 1);
        t14466 = twiddles[a40921];
        a40922 = (a40919 + 1);
        /* MPAssignDD 64 */
        a40923 = (2*a40922);
        t14467 = twiddles[a40923];
        a40924 = (a40923 + 1);
        t14468 = twiddles[a40924];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a40925 = (2*a40913);
        a40926 = (a40925 + 1);
        /* MPAssignDD 64 */
        a40927 = (2*a40926);
        t14469 = P1[a40927];
        a40928 = (a40927 + 1);
        t14470 = P1[a40928];
        /* MPAssignDD 128 */
        a40929 = (2*a40914);
        /* MPAssignDD 64 */
        a40930 = (2*a40929);
        t14471 = P1[a40930];
        a40931 = (a40930 + 1);
        t14472 = P1[a40931];
        a40932 = (a40929 + 1);
        /* MPAssignDD 64 */
        a40933 = (2*a40932);
        t14473 = P1[a40933];
        a40934 = (a40933 + 1);
        t14474 = P1[a40934];
        MPMulQDD_L3_2(t8467, t8468, t8469, t8470, t8463, t8464, t8465, t8466, 
    t8459, t8460, t8461, t8462, t8455, t8456, t8457, t8458, 
    0, 0, t14463, t14464, t14465, t14466, t14467, t14468, 
    0, 0, t14469, t14470, t14471, t14472, t14473, t14474);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14475 = (t8459 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a40935 = (t8459 << 6);
        a40936 = (t8460 >> 58);
        t14476 = (((a40935)|(a40936)));
        t14477 = (t8460 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14478 = (t8461 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14479 = (((t14477)|(t14478)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b2343 = ((int) 1);
        t14480 = (288230376151711744 - b2343);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14481 = (((t8469)&(t14480)));
        t14482 = (((t8470)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a40937 = (t14481 << 6);
        a40938 = (t14482 >> 58);
        t14483 = (((a40937)|(a40938)));
        t14484 = (t14482 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t14485 = (t8463 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a40939 = (t8463 << 6);
        a40940 = (t8464 >> 58);
        t14486 = (((a40939)|(a40940)));
        t14487 = (t8464 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t14488 = (t8465 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t14489 = (((t14487)|(t14488)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14490 = (((t14484)|(t14485)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a40941 = (t8465 << 6);
        a40942 = (t8466 >> 58);
        t14491 = (((a40941)|(a40942)));
        t14492 = (t8466 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t14493 = (((t14492)|(t14475)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a34635 = mu[2];
        a34636 = mu[3];
        a34637 = mu[4];
        a34638 = mu[5];
        a34639 = mu[6];
        a34640 = mu[7];
        MPMulQDD_L3_1(t8499, t8500, t8501, t8502, t8495, t8496, t8497, t8498, 
    t8491, t8492, t8493, t8494, t8487, t8488, t8489, t8490, 
    t14483, t14490, t14486, t14489, t14491, t14493, t14476, t14479, 
    0, 0, a34635, a34636, a34637, a34638, a34639, a34640);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14494 = (t8491 >> 1);
        a40943 = (t8491 << 63);
        a40944 = (t8492 >> 1);
        t14495 = (((a40943)|(a40944)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t14496 = (0 - b2343);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2970 = (2 - b2343);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t14499 = (((t8500)&(d2970)));
        /* MPBinAndD 64 */
        t14500 = (((t8501)&(t14496)));
        t14501 = (((t8502)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14502 = (t14499 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14503 = (t14500 >> 1);
        a40946 = (t14500 << 63);
        a40947 = (t14501 >> 1);
        t14504 = (((a40946)|(a40947)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14505 = (((t14502)|(t14503)));
        /* Begin of MPShiftLeft1D */
        t14506 = (t14501 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t14507 = (t8495 >> 1);
        a40948 = (t8495 << 63);
        a40949 = (t8496 >> 1);
        t14508 = (((a40948)|(a40949)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14509 = (((t14506)|(t14507)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t14510 = (t8496 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t14511 = (t8497 >> 1);
        a40950 = (t8497 << 63);
        a40951 = (t8498 >> 1);
        t14512 = (((a40950)|(a40951)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t14513 = (((t14510)|(t14511)));
        /* Begin of MPShiftLeft1D */
        t14514 = (t8498 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t14515 = (((t14514)|(t14494)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a34740 = modulus[2];
        a34741 = modulus[3];
        a34742 = modulus[4];
        a34743 = modulus[5];
        a34744 = modulus[6];
        a34745 = modulus[7];
        MPMulQDD_L3_1(t8483, t8484, t8485, t8486, t8479, t8480, t8481, t8482, 
    t8475, t8476, t8477, t8478, t8471, t8472, t8473, t8474, 
    t14505, t14504, t14509, t14508, t14513, t14512, t14515, t14495, 
    0, 0, a34740, a34741, a34742, a34743, a34744, a34745);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2971 = (t8458 - t8474);
        b2345 = ((t8458 < t8474));
        d2972 = (t8457 - t8473);
        d2973 = (d2972 - b2345);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40953 = ((t8457 < t8473));
        a40954 = ((t8457 == t8473));
        a40955 = ((a40954) && (b2345));
        b2346 = ((a40953) || (a40955));
        /* Begin of MPSubDDD 64 */
        d2974 = (t8456 - t8472);
        b2347 = ((t8456 < t8472));
        d2975 = (t8455 - t8471);
        d2976 = (d2975 - b2347);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2977 = (d2974 - b2346);
        b2348 = ((d2974 < b2346));
        t14516 = (d2976 - b2348);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40959 = ((t8455 < t8471));
        a40960 = ((t8455 == t8471));
        a40961 = ((a40960) && (b2347));
        a40962 = ((a40959) || (a40961));
        /* MPEqual 64 */
        a40963 = ((t8456 == t8472));
        a40964 = ((a40960) && (a40963));
        /* MPLessThan 64 */
        a40965 = ((a40964) && (b2346));
        b2349 = ((a40962) || (a40965));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2978 = (t8462 - t8478);
        b2350 = ((t8462 < t8478));
        d2979 = (t8461 - t8477);
        d2980 = (d2979 - b2350);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40968 = ((t8461 < t8477));
        a40969 = ((t8461 == t8477));
        a40970 = ((a40969) && (b2350));
        b2351 = ((a40968) || (a40970));
        /* Begin of MPSubDDD 64 */
        d2981 = (t8460 - t8476);
        b2352 = ((t8460 < t8476));
        d2982 = (t8459 - t8475);
        d2983 = (d2982 - b2352);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2984 = (d2981 - b2351);
        b2353 = ((d2981 < b2351));
        t14517 = (d2983 - b2353);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2985 = (d2978 - b2349);
        b2354 = ((d2978 < b2349));
        t14518 = (d2980 - b2354);
        /* MPLessThanDI 64 */
        a40975 = ((d2980 == 0));
        b2355 = ((a40975) && (b2354));
        /* MPSubDDI 64 */
        d2986 = (d2984 - b2355);
        b2356 = ((d2984 < b2355));
        t14519 = (t14517 - b2356);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2987 = (d2971 - a34745);
        b2357 = ((d2971 < a34745));
        d2988 = (d2973 - a34744);
        d2989 = (d2988 - b2357);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40979 = ((d2973 < a34744));
        a40980 = ((d2973 == a34744));
        a40981 = ((a40980) && (b2357));
        b2358 = ((a40979) || (a40981));
        /* Begin of MPSubDDD 64 */
        d2990 = (d2977 - a34743);
        b2359 = ((d2977 < a34743));
        d2991 = (t14516 - a34742);
        d2992 = (d2991 - b2359);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2993 = (d2990 - b2358);
        b2360 = ((d2990 < b2358));
        t14520 = (d2992 - b2360);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a40985 = ((t14516 < a34742));
        a40986 = ((t14516 == a34742));
        a40987 = ((a40986) && (b2359));
        a40988 = ((a40985) || (a40987));
        /* MPEqual 64 */
        a40989 = ((d2977 == a34743));
        a40990 = ((a40986) && (a40989));
        /* MPLessThan 64 */
        a40991 = ((a40990) && (b2358));
        b2361 = ((a40988) || (a40991));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2994 = (d2985 - a34741);
        b2362 = ((d2985 < a34741));
        d2995 = (t14518 - a34740);
        d2996 = (d2995 - b2362);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a40994 = ((t14518 < a34740));
        a40995 = ((t14518 == a34740));
        a40996 = ((a40995) && (b2362));
        b2363 = ((a40994) || (a40996));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2997 = (d2986 - b2363);
        b2364 = ((d2986 < b2363));
        t14521 = (t14519 - b2364);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2998 = (d2994 - b2361);
        b2365 = ((d2994 < b2361));
        t14522 = (d2996 - b2365);
        /* MPLessThanDI 64 */
        a41000 = ((d2996 == 0));
        b2366 = ((a41000) && (b2365));
        /* MPSubDDI 64 */
        d2999 = (d2997 - b2366);
        b2367 = ((d2997 < b2366));
        t14523 = (t14521 - b2367);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a41003 = ((t14519 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a41004 = ((d2986 == 0));
        a41005 = ((a41003) && (a41004));
        /* MPLessThan 64 */
        a41006 = ((a41005) && (b2363));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a41007 = ((d2985 == a34741));
        a41008 = ((a40995) && (a41007));
        a41009 = ((a41005) && (a41008));
        /* MPLessThan 128 */
        a41010 = ((a41009) && (b2361));
        i705 = ((a41006) || (a41010));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14524 = ((i705) ? (t14519) : (t14523));
        t14525 = ((i705) ? (d2986) : (d2999));
        /* MPCondD 64 */
        t14526 = ((i705) ? (t14518) : (t14522));
        t14527 = ((i705) ? (d2985) : (d2998));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t14528 = ((i705) ? (t14516) : (t14520));
        t14529 = ((i705) ? (d2977) : (d2993));
        /* MPCondD 64 */
        t14530 = ((i705) ? (d2973) : (d2989));
        t14531 = ((i705) ? (d2971) : (d2987));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a41011 = (1048576*blockIdx.x);
        a41012 = (2*threadIdx.x);
        a41013 = (256*i3);
        b2368 = (a41011 + a41012);
        a41014 = (b2368 + a41013);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a41015 = (2*a40907);
        a41016 = (a41015 + 1);
        /* MPAssignDD 128 */
        a41017 = (2*a41016);
        /* MPAssignDD 64 */
        a41018 = (2*a41017);
        t14532 = P1[a41018];
        a41019 = (a41018 + 1);
        t14533 = P1[a41019];
        a41020 = (a41017 + 1);
        /* MPAssignDD 64 */
        a41021 = (2*a41020);
        t14534 = P1[a41021];
        a41022 = (a41021 + 1);
        t14535 = P1[a41022];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2603 = (((uint128_t ) t14535) + ((uint128_t ) t14531));
        t14536 = ((uint64_t ) s2603);
        c1426 = (s2603 >> 64);
        s2604 = (((uint128_t ) t14534) + ((uint128_t ) t14530));
        s2605 = (((uint128_t ) s2604) + ((uint128_t ) c1426));
        t14537 = ((uint64_t ) s2605);
        c1427 = (s2605 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2606 = (((uint128_t ) t14533) + ((uint128_t ) t14529));
        t14538 = ((uint64_t ) s2606);
        c1428 = (s2606 >> 64);
        s2607 = (((uint128_t ) t14532) + ((uint128_t ) t14528));
        s2608 = (((uint128_t ) s2607) + ((uint128_t ) c1428));
        t14539 = ((uint64_t ) s2608);
        c1429 = (s2608 >> 64);
        /* MPPropagateCarry 64 */
        t14540 = (t14538 + c1427);
        a41023 = ((t14540 == 0));
        a41024 = (t14539 + c1427);
        t14541 = ((a41023) ? (a41024) : (t14539));
        a41025 = ((t14541 == 0));
        a41026 = ((a41025) && (a41023));
        a41027 = (c1429 + c1427);
        t14542 = ((a41026) ? (a41027) : (c1429));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a41031 = (2*a41015);
        a41032 = (a41031 + 1);
        /* MPAssignDD 64 */
        a41033 = (2*a41032);
        t14544 = P1[a41033];
        a41034 = (a41033 + 1);
        t14545 = P1[a41034];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2609 = (((uint128_t ) t14545) + ((uint128_t ) t14527));
        t14546 = ((uint64_t ) s2609);
        c1430 = (s2609 >> 64);
        s2610 = (((uint128_t ) t14544) + ((uint128_t ) t14526));
        s2611 = (((uint128_t ) s2610) + ((uint128_t ) c1430));
        t14547 = ((uint64_t ) s2611);
        c1431 = (s2611 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t14548 = ((uint64_t ) t14525);
        c1432 = (t14525 >> 64);
        s2612 = (((uint128_t ) t14524) + ((uint128_t ) c1432));
        t14549 = ((uint64_t ) s2612);
        /* MPPropagateCarry 64 */
        t14550 = (t14548 + c1431);
        a41035 = ((t14550 == 0));
        a41036 = (t14549 + c1431);
        t14551 = ((a41035) ? (a41036) : (t14549));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2613 = (((uint128_t ) t14546) + ((uint128_t ) t14542));
        t14554 = ((uint64_t ) s2613);
        c1434 = (s2613 >> 64);
        s2614 = (((uint128_t ) t14547) + ((uint128_t ) c1434));
        t14555 = ((uint64_t ) s2614);
        /* MPEqualDI 64 */
        a41043 = ((t14555 == 0));
        a41044 = ((t14554 == 0));
        a41045 = ((a41043) && (a41044));
        /* MPAddDDI 64 */
        s2615 = (((uint128_t ) t14550) + ((uint128_t ) t14542));
        t14556 = ((uint64_t ) s2615);
        c1435 = (s2615 >> 64);
        s2616 = (((uint128_t ) t14551) + ((uint128_t ) c1435));
        t14557 = ((uint64_t ) s2616);
        /* MPCondD 64 */
        t14558 = ((a41045) ? (t14557) : (t14551));
        t14559 = ((a41045) ? (t14556) : (t14550));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a41046 = ((0 < t14558));
        a41047 = ((0 == t14558));
        a41048 = ((0 < t14559));
        a41049 = ((a41047) && (a41048));
        a41050 = ((a41046) || (a41049));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a41051 = ((0 == t14559));
        a41052 = ((a41047) && (a41051));
        /* MPLessThan 64 */
        a41053 = ((a34740 < t14555));
        a41054 = ((a34740 == t14555));
        a41055 = ((a34741 < t14554));
        a41056 = ((a41054) && (a41055));
        a41057 = ((a41053) || (a41056));
        a41058 = ((a41052) && (a41057));
        a41059 = ((a41050) || (a41058));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a41060 = ((a34741 == t14554));
        a41061 = ((a41054) && (a41060));
        a41062 = ((a41052) && (a41061));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a41063 = ((a34742 < t14541));
        a41064 = ((a34742 == t14541));
        a41065 = ((a34743 < t14540));
        a41066 = ((a41064) && (a41065));
        a41067 = ((a41063) || (a41066));
        /* MPEqual 64 */
        a41068 = ((a34743 == t14540));
        a41069 = ((a41064) && (a41068));
        /* MPLessThan 64 */
        a41070 = ((a34744 < t14537));
        a41071 = ((a34744 == t14537));
        a41072 = ((a34745 < t14536));
        a41073 = ((a41071) && (a41072));
        a41074 = ((a41070) || (a41073));
        a41075 = ((a41069) && (a41074));
        a41076 = ((a41067) || (a41075));
        a41077 = ((a41062) && (a41076));
        i706 = ((a41059) || (a41077));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d3000 = (t14536 - a34745);
        b2369 = ((t14536 < a34745));
        d3001 = (t14537 - a34744);
        d3002 = (d3001 - b2369);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a41079 = ((t14537 < a34744));
        a41080 = ((t14537 == a34744));
        a41081 = ((a41080) && (b2369));
        b2370 = ((a41079) || (a41081));
        /* Begin of MPSubDDD 64 */
        d3003 = (t14540 - a34743);
        b2371 = ((t14540 < a34743));
        d3004 = (t14541 - a34742);
        d3005 = (d3004 - b2371);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d3006 = (d3003 - b2370);
        b2372 = ((d3003 < b2370));
        t14560 = (d3005 - b2372);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a41085 = ((t14541 < a34742));
        a41086 = ((t14541 == a34742));
        a41087 = ((a41086) && (b2371));
        a41088 = ((a41085) || (a41087));
        /* MPEqual 64 */
        a41089 = ((t14540 == a34743));
        a41090 = ((a41086) && (a41089));
        /* MPLessThan 64 */
        a41091 = ((a41090) && (b2370));
        b2373 = ((a41088) || (a41091));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d3007 = (t14554 - a34741);
        b2374 = ((t14554 < a34741));
        d3008 = (t14555 - a34740);
        d3009 = (d3008 - b2374);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d3010 = (d3007 - b2373);
        b2375 = ((d3007 < b2373));
        t14561 = (d3009 - b2375);
        /* End of MPSubDDD 256 */
        a41095 = (2*a41014);
        /* MPCondD 128 */
        a41096 = (2*a41095);
        a41097 = (a41096 + 1);
        /* MPCondD 64 */
        a41098 = (2*a41097);
        Y[a41098] = ((i706) ? (t14561) : (t14555));
        a41099 = (a41098 + 1);
        Y[a41099] = ((i706) ? (d3010) : (t14554));
        a41100 = (a41095 + 1);
        /* MPCondD 128 */
        a41101 = (2*a41100);
        /* MPCondD 64 */
        a41102 = (2*a41101);
        Y[a41102] = ((i706) ? (t14560) : (t14541));
        a41103 = (a41102 + 1);
        Y[a41103] = ((i706) ? (d3006) : (t14540));
        a41104 = (a41101 + 1);
        /* MPCondD 64 */
        a41105 = (2*a41104);
        Y[a41105] = ((i706) ? (d3002) : (t14537));
        a41106 = (a41105 + 1);
        Y[a41106] = ((i706) ? (d3000) : (t14536));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        a41107 = (a41014 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d3011 = (t14535 - t14531);
        b2376 = ((t14535 < t14531));
        d3012 = (t14534 - t14530);
        d3013 = (d3012 - b2376);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a41109 = ((t14534 < t14530));
        a41110 = ((t14534 == t14530));
        a41111 = ((a41110) && (b2376));
        b2377 = ((a41109) || (a41111));
        /* Begin of MPSubDDD 64 */
        d3014 = (t14533 - t14529);
        b2378 = ((t14533 < t14529));
        d3015 = (t14532 - t14528);
        d3016 = (d3015 - b2378);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d3017 = (d3014 - b2377);
        b2379 = ((d3014 < b2377));
        t14562 = (d3016 - b2379);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a41115 = ((t14532 < t14528));
        a41116 = ((t14532 == t14528));
        a41117 = ((a41116) && (b2378));
        a41118 = ((a41115) || (a41117));
        /* MPEqual 64 */
        a41119 = ((t14533 == t14529));
        a41120 = ((a41116) && (a41119));
        /* MPLessThan 64 */
        a41121 = ((a41120) && (b2377));
        b2380 = ((a41118) || (a41121));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d3018 = (t14545 - t14527);
        b2381 = ((t14545 < t14527));
        d3019 = (t14544 - t14526);
        d3020 = (d3019 - b2381);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d3021 = (d3018 - b2380);
        b2382 = ((d3018 < b2380));
        t14563 = (d3020 - b2382);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2617 = (((uint128_t ) d3011) + ((uint128_t ) a34745));
        t14564 = ((uint64_t ) s2617);
        c1436 = (s2617 >> 64);
        s2618 = (((uint128_t ) d3013) + ((uint128_t ) a34744));
        s2619 = (((uint128_t ) s2618) + ((uint128_t ) c1436));
        t14565 = ((uint64_t ) s2619);
        c1437 = (s2619 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2620 = (((uint128_t ) d3017) + ((uint128_t ) a34743));
        t14566 = ((uint64_t ) s2620);
        c1438 = (s2620 >> 64);
        s2621 = (((uint128_t ) t14562) + ((uint128_t ) a34742));
        s2622 = (((uint128_t ) s2621) + ((uint128_t ) c1438));
        t14567 = ((uint64_t ) s2622);
        c1439 = (s2622 >> 64);
        /* MPPropagateCarry 64 */
        t14568 = (t14566 + c1437);
        a41125 = ((t14568 == 0));
        a41126 = (t14567 + c1437);
        t14569 = ((a41125) ? (a41126) : (t14567));
        a41127 = ((t14569 == 0));
        a41128 = ((a41127) && (a41125));
        a41129 = (c1439 + c1437);
        t14570 = ((a41128) ? (a41129) : (c1439));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2623 = (((uint128_t ) d3021) + ((uint128_t ) a34741));
        t14572 = ((uint64_t ) s2623);
        c1440 = (s2623 >> 64);
        s2624 = (((uint128_t ) t14563) + ((uint128_t ) a34740));
        s2625 = (((uint128_t ) s2624) + ((uint128_t ) c1440));
        t14573 = ((uint64_t ) s2625);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2626 = (((uint128_t ) t14572) + ((uint128_t ) t14570));
        t14574 = ((uint64_t ) s2626);
        c1442 = (s2626 >> 64);
        s2627 = (((uint128_t ) t14573) + ((uint128_t ) c1442));
        t14575 = ((uint64_t ) s2627);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a41133 = ((0 < t14524));
        a41134 = ((0 == t14524));
        a41135 = ((0 < t14525));
        a41136 = ((a41134) && (a41135));
        a41137 = ((a41133) || (a41136));
        /* MPEqual 64 */
        a41138 = ((0 == t14525));
        a41139 = ((a41134) && (a41138));
        /* MPLessThan 64 */
        a41140 = ((t14544 < t14526));
        a41141 = ((t14544 == t14526));
        a41142 = ((a41141) && (b2381));
        a41143 = ((a41140) || (a41142));
        a41144 = ((a41139) && (a41143));
        a41145 = ((a41137) || (a41144));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a41146 = ((t14545 == t14527));
        a41147 = ((a41141) && (a41146));
        a41148 = ((a41139) && (a41147));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a41149 = ((a41148) && (b2380));
        i707 = ((a41145) || (a41149));
        a41150 = (2*a41107);
        /* MPCondD 128 */
        a41151 = (2*a41150);
        a41152 = (a41151 + 1);
        /* MPCondD 64 */
        a41153 = (2*a41152);
        Y[a41153] = ((i707) ? (t14575) : (t14563));
        a41154 = (a41153 + 1);
        Y[a41154] = ((i707) ? (t14574) : (d3021));
        a41155 = (a41150 + 1);
        /* MPCondD 128 */
        a41156 = (2*a41155);
        /* MPCondD 64 */
        a41157 = (2*a41156);
        Y[a41157] = ((i707) ? (t14569) : (t14562));
        a41158 = (a41157 + 1);
        Y[a41158] = ((i707) ? (t14568) : (d3017));
        a41159 = (a41156 + 1);
        /* MPCondD 64 */
        a41160 = (2*a41159);
        Y[a41160] = ((i707) ? (t14565) : (d3013));
        a41161 = (a41160 + 1);
        Y[a41161] = ((i707) ? (t14564) : (d3011));
        /* End of MPModSub 256 */
    }
}

void nttmpcuda(uint64_t  *Y, uint64_t  *X, uint64_t modulus[2], uint64_t  *twiddles, uint64_t mu[2]) {
    dim3 b100(128, 1, 1), b101(128, 1, 1), b102(128, 1, 1), b103(128, 1, 1), b104(128, 1, 1), b105(128, 1, 1), b106(128, 1, 1), b107(128, 1, 1), 
    b108(128, 1, 1), b109(128, 1, 1), b110(128, 1, 1), b111(128, 1, 1), b112(128, 1, 1), b113(128, 1, 1), b114(128, 1, 1), b115(128, 1, 1), 
    b116(128, 1, 1), b117(128, 1, 1), b98(128, 1, 1), b99(128, 1, 1), g1(2, 1, 1), g10(2, 1, 1), g11(2, 1, 1), g12(2, 1, 1), 
    g13(2, 1, 1), g14(2, 1, 1), g15(2, 1, 1), g16(2, 1, 1), g17(2, 1, 1), g18(2, 1, 1), g19(2, 1, 1), g2(2, 1, 1), 
    g20(2, 1, 1), g3(2, 1, 1), g4(2, 1, 1), g5(2, 1, 1), g6(2, 1, 1), g7(2, 1, 1), g8(2, 1, 1), g9(2, 1, 1);
    ker_code0<<<g1, b98>>>(X, Y, modulus, twiddles, mu);
    ker_code1<<<g2, b99>>>(X, Y, modulus, twiddles, mu);
    ker_code2<<<g3, b100>>>(X, Y, modulus, twiddles, mu);
    ker_code3<<<g4, b101>>>(X, Y, modulus, twiddles, mu);
    ker_code4<<<g5, b102>>>(X, Y, modulus, twiddles, mu);
    ker_code5<<<g6, b103>>>(X, Y, modulus, twiddles, mu);
    ker_code6<<<g7, b104>>>(X, Y, modulus, twiddles, mu);
    ker_code7<<<g8, b105>>>(X, Y, modulus, twiddles, mu);
    ker_code8<<<g9, b106>>>(X, Y, modulus, twiddles, mu);
    ker_code9<<<g10, b107>>>(X, Y, modulus, twiddles, mu);
    ker_code10<<<g11, b108>>>(X, Y, modulus, twiddles, mu);
    ker_code11<<<g12, b109>>>(X, Y, modulus, twiddles, mu);
    ker_code12<<<g13, b110>>>(X, Y, modulus, twiddles, mu);
    ker_code13<<<g14, b111>>>(X, Y, modulus, twiddles, mu);
    ker_code14<<<g15, b112>>>(X, Y, modulus, twiddles, mu);
    ker_code15<<<g16, b113>>>(X, Y, modulus, twiddles, mu);
    ker_code16<<<g17, b114>>>(X, Y, modulus, twiddles, mu);
    ker_code17<<<g18, b115>>>(X, Y, modulus, twiddles, mu);
    ker_code18<<<g19, b116>>>(X, Y, modulus, twiddles, mu);
    ker_code19<<<g20, b117>>>(X, Y, modulus, twiddles, mu);
}

void destroy_nttmpcuda() {
    /* skip */
}
