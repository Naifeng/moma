
/*
 * This code was generated by Spiral 8.5.1, www.spiral.net
 */

#include <stdint.h>
__device__ uint64_t P2[1048576];
__device__ uint64_t P1[1048576];

__device__ void MPMulQDD_L3(uint64_t &t6747, uint64_t &t6748, uint64_t &t6745, uint64_t &t6746, uint64_t &t6737, uint64_t &t6738, uint64_t &t6735, uint64_t &t6736, uint64_t &t6727, uint64_t &t6728, uint64_t &t6725, uint64_t &t6726, uint64_t &t3573, uint64_t &t3578, uint64_t &t3581, uint64_t &t3582, uint64_t t6763, uint64_t t6764, uint64_t t6761, uint64_t t6762, uint64_t t6767, uint64_t t6768, uint64_t t6765, uint64_t t6766, uint64_t t6755, uint64_t t6756, uint64_t t6753, uint64_t t6754, uint64_t t6759, uint64_t t6760, uint64_t t6757, uint64_t t6758) {
    int a25235, a25237, a25238, a25248, a25250, a25251, a25256, a25279, 
            a25281, a25282, a25292, a25294, a25295, a25300, a25323, a25325, 
            a25326, a25336, a25338, a25339, a25344, a25367, a25369, a25370, 
            a25380, a25382, a25383, a25388, a25395, a25397, a25398, a25403, 
            a25405, a25406, a25411, a25412, a25413, a25414, a25415, a25416, 
            a25417, a25421, a25423, a25424, a25429, a25430, a25431, a25436, 
            a25438, a25439, a25444, a25445, a25446, a25447, a25448, a25449, 
            a25450, a25451, a25452, a25453, c578, c579, c580, c581, 
            c582, c583, c584, c585, c586, c587, c588, c589, 
            c590, c591, c592, c593, c594, c595, c596, c597, 
            c598, c599, c600, c601, c602, c604, c605, c606, 
            c607, c608, c609, c610, c611, c612, c613, c614, 
            c615, c616, c617, c618, c619, c620, c621, c622, 
            c623, c624, c625, c626, c627, c628, c630, c631, 
            c632, c633, c634, c635, c636, c637, c638, c639, 
            c640, c641, c642, c643, c644, c645, c646, c647, 
            c648, c649, c650, c651, c652, c653, c654, c656, 
            c657, c658, c659, c660, c661, c662, c663, c664, 
            c665, c666, c667, c668, c669, c670, c671, c672, 
            c673, c674, c675, c676, c677, c678, c679, c680, 
            c682, c683, c684, c685, c686, c687, c688, c689, 
            c690, c691, c692, c693, c694, c695, c696, c697, 
            c698, c699, c700, c701, c702, c703, c704, c705, 
            c706, c707, c709, c710;
    uint64_t a25236, a25239, a25249, a25252, a25257, a25280, a25283, a25293, 
            a25296, a25301, a25324, a25327, a25337, a25340, a25345, a25368, 
            a25371, a25381, a25384, a25389, a25396, a25399, a25404, a25407, 
            a25422, a25425, a25437, a25440, t8241, t8242, t8243, t8244, 
            t8245, t8246, t8247, t8248, t8249, t8250, t8251, t8252, 
            t8253, t8254, t8255, t8256, t8257, t8258, t8259, t8260, 
            t8261, t8262, t8263, t8264, t8265, t8266, t8267, t8268, 
            t8269, t8270, t8271, t8272, t8273, t8274, t8275, t8276, 
            t8277, t8278, t8279, t8280, t8281, t8282, t8283, t8284, 
            t8285, t8286, t8287, t8288, t8289, t8290, t8291, t8292, 
            t8293, t8294, t8295, t8296, t8297, t8298, t8299, t8300, 
            t8301, t8302, t8303, t8305, t8306, t8307, t8308, t8309, 
            t8310, t8311, t8312, t8313, t8315, t8316, t8317, t8318, 
            t8321, t8322, t8323, t8324, t8325, t8326, t8327, t8328, 
            t8329, t8330, t8331, t8332, t8333, t8334, t8335, t8336, 
            t8337, t8338, t8339, t8340, t8341, t8342, t8343, t8344, 
            t8345, t8346, t8347, t8348, t8349, t8350, t8351, t8352, 
            t8353, t8354, t8355, t8356, t8357, t8358, t8359, t8360, 
            t8361, t8362, t8363, t8364, t8365, t8366, t8367, t8368, 
            t8369, t8370, t8371, t8372, t8373, t8374, t8375, t8376, 
            t8377, t8378, t8379, t8380, t8381, t8382, t8383, t8385, 
            t8386, t8387, t8388, t8389, t8390, t8391, t8392, t8393, 
            t8395, t8396, t8397, t8398, t8401, t8402, t8403, t8404, 
            t8405, t8406, t8407, t8408, t8409, t8410, t8411, t8412, 
            t8413, t8414, t8415, t8416, t8417, t8418, t8419, t8420, 
            t8421, t8422, t8423, t8424, t8425, t8426, t8427, t8428, 
            t8429, t8430, t8431, t8432, t8433, t8434, t8435, t8436, 
            t8437, t8438, t8439, t8440, t8441, t8442, t8443, t8444, 
            t8445, t8446, t8447, t8448, t8449, t8450, t8451, t8452, 
            t8453, t8454, t8455, t8456, t8457, t8458, t8459, t8460, 
            t8461, t8462, t8463, t8465, t8466, t8467, t8468, t8469, 
            t8470, t8471, t8472, t8473, t8475, t8476, t8477, t8478, 
            t8481, t8482, t8483, t8484, t8485, t8486, t8487, t8488, 
            t8489, t8490, t8491, t8492, t8493, t8494, t8495, t8496, 
            t8497, t8498, t8499, t8500, t8501, t8502, t8503, t8504, 
            t8505, t8506, t8507, t8508, t8509, t8510, t8511, t8512, 
            t8513, t8514, t8515, t8516, t8517, t8518, t8519, t8520, 
            t8521, t8522, t8523, t8524, t8525, t8526, t8527, t8528, 
            t8529, t8530, t8531, t8532, t8533, t8534, t8535, t8536, 
            t8537, t8538, t8539, t8540, t8541, t8542, t8543, t8545, 
            t8546, t8547, t8548, t8549, t8550, t8551, t8552, t8553, 
            t8555, t8556, t8557, t8558, t8561, t8562, t8563, t8564, 
            t8565, t8566, t8567, t8569, t8570, t8571, t8572, t8573, 
            t8574, t8575, t8577, t8578, t8579, t8580, t8581, t8582, 
            t8583, t8584, t8585, t8586, t8587, t8588, t8589, t8590, 
            t8591, t8592, t8594, t8595, t8596, t8597, t8598, t8599, 
            t8600, t8601, t8602, t8604, t8605, t8606, t8607, t8608, 
            t8609, t8610, t8611, t8612, t8613, t8614, t8615;
    uint128_t a25219, a25220, a25221, a25222, a25223, a25224, a25225, a25226, 
            a25227, a25228, a25229, a25230, a25231, a25232, a25233, a25234, 
            a25263, a25264, a25265, a25266, a25267, a25268, a25269, a25270, 
            a25271, a25272, a25273, a25274, a25275, a25276, a25277, a25278, 
            a25307, a25308, a25309, a25310, a25311, a25312, a25313, a25314, 
            a25315, a25316, a25317, a25318, a25319, a25320, a25321, a25322, 
            a25351, a25352, a25353, a25354, a25355, a25356, a25357, a25358, 
            a25359, a25360, a25361, a25362, a25363, a25364, a25365, a25366, 
            s1166, s1167, s1168, s1169, s1170, s1171, s1172, s1173, 
            s1174, s1175, s1176, s1177, s1178, s1179, s1180, s1181, 
            s1182, s1183, s1184, s1185, s1186, s1187, s1188, s1189, 
            s1190, s1191, s1192, s1193, s1194, s1195, s1196, s1197, 
            s1198, s1199, s1200, s1201, s1202, s1203, s1204, s1205, 
            s1206, s1207, s1208, s1209, s1210, s1211, s1212, s1213, 
            s1214, s1215, s1216, s1217, s1218, s1219, s1220, s1221, 
            s1222, s1223, s1224, s1225, s1226, s1227, s1228, s1229, 
            s1230, s1231, s1232, s1233, s1234, s1235, s1236, s1237, 
            s1238, s1239, s1240, s1241, s1242, s1243, s1244, s1245, 
            s1246, s1247, s1248, s1249, s1250, s1251, s1252, s1253, 
            s1254, s1255, s1256, s1257, s1258, s1259, s1260, s1261, 
            s1262, s1263, s1264, s1265, s1266, s1267, s1268, s1269, 
            s1270, s1271, s1272, s1273, s1274, s1275, s1276, s1277, 
            s1278, s1279, s1280, s1281, s1282, s1283, s1284, s1285, 
            s1286, s1287, s1288, s1289, s1290, s1291, s1292, s1293, 
            s1294, s1295, s1296, s1297, s1298, s1299, s1300, s1301, 
            s1302, s1303, s1304, s1305, s1306, s1307, s1308, s1309, 
            s1310, s1311, s1312, s1313, s1314, s1315, s1316, s1317, 
            s1318, s1319, s1320, s1321, s1322, s1323, s1324, s1325, 
            s1326, s1327, s1328, s1329, s1330, s1331, s1332, s1333, 
            s1334, s1335, s1336, s1337, s1338, s1339, s1340, s1341, 
            s1342, s1343, s1344, s1345, s1346, s1347, s1348, s1349, 
            s1350, s1351, s1352, s1353, s1354, s1355, s1356, s1357, 
            s1358, s1359, s1360, s1361, s1362, s1363, s1364, s1365, 
            s1366, s1367, s1368, s1369, s1370, s1371, s1372, s1373, 
            s1374, s1375, s1376, s1377, s1378, s1379, s1380, s1381, 
            s1382, s1383, s1384, s1385, s1386, s1387, s1388, s1389, 
            s1390, s1391, s1392, s1393, s1394, s1395;
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25219 = (((uint128_t ) t6766)*((uint128_t ) t6758));
    t8241 = (a25219 >> 64);
    t8242 = ((uint64_t ) a25219);
    a25220 = (((uint128_t ) t6765)*((uint128_t ) t6757));
    t8243 = (a25220 >> 64);
    t8244 = ((uint64_t ) a25220);
    a25221 = (((uint128_t ) t6765)*((uint128_t ) t6758));
    t8245 = (a25221 >> 64);
    t8246 = ((uint64_t ) a25221);
    a25222 = (((uint128_t ) t6766)*((uint128_t ) t6757));
    t8247 = (a25222 >> 64);
    t8248 = ((uint64_t ) a25222);
    /* MPAddQDD 64 */
    s1166 = (((uint128_t ) t8246) + ((uint128_t ) t8248));
    t8249 = ((uint64_t ) s1166);
    c578 = (s1166 >> 64);
    s1167 = (((uint128_t ) t8245) + ((uint128_t ) t8247));
    s1168 = (((uint128_t ) s1167) + ((uint128_t ) c578));
    t8250 = ((uint64_t ) s1168);
    c579 = (s1168 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8251 = ((uint64_t ) t8242);
    s1169 = (((uint128_t ) t8241) + ((uint128_t ) t8249));
    t8252 = ((uint64_t ) s1169);
    c580 = (s1169 >> 64);
    s1170 = (((uint128_t ) t8244) + ((uint128_t ) t8250));
    s1171 = (((uint128_t ) s1170) + ((uint128_t ) c580));
    t8253 = ((uint64_t ) s1171);
    c581 = (s1171 >> 64);
    s1172 = (((uint128_t ) t8243) + ((uint128_t ) c579));
    s1173 = (((uint128_t ) s1172) + ((uint128_t ) c581));
    t8254 = ((uint64_t ) s1173);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25223 = (((uint128_t ) t6768)*((uint128_t ) t6760));
    t8255 = (a25223 >> 64);
    t8256 = ((uint64_t ) a25223);
    a25224 = (((uint128_t ) t6767)*((uint128_t ) t6759));
    t8257 = (a25224 >> 64);
    t8258 = ((uint64_t ) a25224);
    a25225 = (((uint128_t ) t6767)*((uint128_t ) t6760));
    t8259 = (a25225 >> 64);
    t8260 = ((uint64_t ) a25225);
    a25226 = (((uint128_t ) t6768)*((uint128_t ) t6759));
    t8261 = (a25226 >> 64);
    t8262 = ((uint64_t ) a25226);
    /* MPAddQDD 64 */
    s1174 = (((uint128_t ) t8260) + ((uint128_t ) t8262));
    t8263 = ((uint64_t ) s1174);
    c582 = (s1174 >> 64);
    s1175 = (((uint128_t ) t8259) + ((uint128_t ) t8261));
    s1176 = (((uint128_t ) s1175) + ((uint128_t ) c582));
    t8264 = ((uint64_t ) s1176);
    c583 = (s1176 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8265 = ((uint64_t ) t8256);
    s1177 = (((uint128_t ) t8255) + ((uint128_t ) t8263));
    t8266 = ((uint64_t ) s1177);
    c584 = (s1177 >> 64);
    s1178 = (((uint128_t ) t8258) + ((uint128_t ) t8264));
    s1179 = (((uint128_t ) s1178) + ((uint128_t ) c584));
    t8267 = ((uint64_t ) s1179);
    c585 = (s1179 >> 64);
    s1180 = (((uint128_t ) t8257) + ((uint128_t ) c583));
    s1181 = (((uint128_t ) s1180) + ((uint128_t ) c585));
    t8268 = ((uint64_t ) s1181);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25227 = (((uint128_t ) t6768)*((uint128_t ) t6758));
    t8269 = (a25227 >> 64);
    t8270 = ((uint64_t ) a25227);
    a25228 = (((uint128_t ) t6767)*((uint128_t ) t6757));
    t8271 = (a25228 >> 64);
    t8272 = ((uint64_t ) a25228);
    a25229 = (((uint128_t ) t6767)*((uint128_t ) t6758));
    t8273 = (a25229 >> 64);
    t8274 = ((uint64_t ) a25229);
    a25230 = (((uint128_t ) t6768)*((uint128_t ) t6757));
    t8275 = (a25230 >> 64);
    t8276 = ((uint64_t ) a25230);
    /* MPAddQDD 64 */
    s1182 = (((uint128_t ) t8274) + ((uint128_t ) t8276));
    t8277 = ((uint64_t ) s1182);
    c586 = (s1182 >> 64);
    s1183 = (((uint128_t ) t8273) + ((uint128_t ) t8275));
    s1184 = (((uint128_t ) s1183) + ((uint128_t ) c586));
    t8278 = ((uint64_t ) s1184);
    c587 = (s1184 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8279 = ((uint64_t ) t8270);
    s1185 = (((uint128_t ) t8269) + ((uint128_t ) t8277));
    t8280 = ((uint64_t ) s1185);
    c588 = (s1185 >> 64);
    s1186 = (((uint128_t ) t8272) + ((uint128_t ) t8278));
    s1187 = (((uint128_t ) s1186) + ((uint128_t ) c588));
    t8281 = ((uint64_t ) s1187);
    c589 = (s1187 >> 64);
    s1188 = (((uint128_t ) t8271) + ((uint128_t ) c587));
    s1189 = (((uint128_t ) s1188) + ((uint128_t ) c589));
    t8282 = ((uint64_t ) s1189);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25231 = (((uint128_t ) t6766)*((uint128_t ) t6760));
    t8283 = (a25231 >> 64);
    t8284 = ((uint64_t ) a25231);
    a25232 = (((uint128_t ) t6765)*((uint128_t ) t6759));
    t8285 = (a25232 >> 64);
    t8286 = ((uint64_t ) a25232);
    a25233 = (((uint128_t ) t6765)*((uint128_t ) t6760));
    t8287 = (a25233 >> 64);
    t8288 = ((uint64_t ) a25233);
    a25234 = (((uint128_t ) t6766)*((uint128_t ) t6759));
    t8289 = (a25234 >> 64);
    t8290 = ((uint64_t ) a25234);
    /* MPAddQDD 64 */
    s1190 = (((uint128_t ) t8288) + ((uint128_t ) t8290));
    t8291 = ((uint64_t ) s1190);
    c590 = (s1190 >> 64);
    s1191 = (((uint128_t ) t8287) + ((uint128_t ) t8289));
    s1192 = (((uint128_t ) s1191) + ((uint128_t ) c590));
    t8292 = ((uint64_t ) s1192);
    c591 = (s1192 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8293 = ((uint64_t ) t8284);
    s1193 = (((uint128_t ) t8283) + ((uint128_t ) t8291));
    t8294 = ((uint64_t ) s1193);
    c592 = (s1193 >> 64);
    s1194 = (((uint128_t ) t8286) + ((uint128_t ) t8292));
    s1195 = (((uint128_t ) s1194) + ((uint128_t ) c592));
    t8295 = ((uint64_t ) s1195);
    c593 = (s1195 >> 64);
    s1196 = (((uint128_t ) t8285) + ((uint128_t ) c591));
    s1197 = (((uint128_t ) s1196) + ((uint128_t ) c593));
    t8296 = ((uint64_t ) s1197);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1198 = (((uint128_t ) t8279) + ((uint128_t ) t8293));
    t8297 = ((uint64_t ) s1198);
    c594 = (s1198 >> 64);
    s1199 = (((uint128_t ) t8280) + ((uint128_t ) t8294));
    s1200 = (((uint128_t ) s1199) + ((uint128_t ) c594));
    t8298 = ((uint64_t ) s1200);
    c595 = (s1200 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1201 = (((uint128_t ) t8281) + ((uint128_t ) t8295));
    t8299 = ((uint64_t ) s1201);
    c596 = (s1201 >> 64);
    s1202 = (((uint128_t ) t8282) + ((uint128_t ) t8296));
    s1203 = (((uint128_t ) s1202) + ((uint128_t ) c596));
    t8300 = ((uint64_t ) s1203);
    c597 = (s1203 >> 64);
    /* MPPropagateCarry 64 */
    t8301 = (t8299 + c595);
    a25235 = ((t8301 == 0));
    a25236 = (t8300 + c595);
    t8302 = ((a25235) ? (a25236) : (t8300));
    a25237 = ((t8302 == 0));
    a25238 = ((a25237) && (a25235));
    a25239 = (c597 + c595);
    t8303 = ((a25238) ? (a25239) : (c597));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t8305 = ((uint64_t ) t8251);
    t8306 = ((uint64_t ) t8252);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1204 = (((uint128_t ) t8253) + ((uint128_t ) t8297));
    t8307 = ((uint64_t ) s1204);
    c598 = (s1204 >> 64);
    s1205 = (((uint128_t ) t8254) + ((uint128_t ) t8298));
    s1206 = (((uint128_t ) s1205) + ((uint128_t ) c598));
    t8308 = ((uint64_t ) s1206);
    c599 = (s1206 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1207 = (((uint128_t ) t8265) + ((uint128_t ) t8301));
    t8309 = ((uint64_t ) s1207);
    c600 = (s1207 >> 64);
    s1208 = (((uint128_t ) t8266) + ((uint128_t ) t8302));
    s1209 = (((uint128_t ) s1208) + ((uint128_t ) c600));
    t8310 = ((uint64_t ) s1209);
    c601 = (s1209 >> 64);
    /* MPPropagateCarry 64 */
    t8311 = (t8309 + c599);
    a25248 = ((t8311 == 0));
    a25249 = (t8310 + c599);
    t8312 = ((a25248) ? (a25249) : (t8310));
    a25250 = ((t8312 == 0));
    a25251 = ((a25250) && (a25248));
    a25252 = (c601 + c599);
    t8313 = ((a25251) ? (a25252) : (c601));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1210 = (((uint128_t ) t8267) + ((uint128_t ) t8303));
    t8315 = ((uint64_t ) s1210);
    c602 = (s1210 >> 64);
    s1211 = (((uint128_t ) t8268) + ((uint128_t ) c602));
    t8316 = ((uint64_t ) s1211);
    /* MPPropagateCarry 64 */
    t8317 = (t8315 + t8313);
    a25256 = ((t8317 == 0));
    a25257 = (t8316 + t8313);
    t8318 = ((a25256) ? (a25257) : (t8316));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25263 = (((uint128_t ) t6762)*((uint128_t ) t6754));
    t8321 = (a25263 >> 64);
    t8322 = ((uint64_t ) a25263);
    a25264 = (((uint128_t ) t6761)*((uint128_t ) t6753));
    t8323 = (a25264 >> 64);
    t8324 = ((uint64_t ) a25264);
    a25265 = (((uint128_t ) t6761)*((uint128_t ) t6754));
    t8325 = (a25265 >> 64);
    t8326 = ((uint64_t ) a25265);
    a25266 = (((uint128_t ) t6762)*((uint128_t ) t6753));
    t8327 = (a25266 >> 64);
    t8328 = ((uint64_t ) a25266);
    /* MPAddQDD 64 */
    s1212 = (((uint128_t ) t8326) + ((uint128_t ) t8328));
    t8329 = ((uint64_t ) s1212);
    c604 = (s1212 >> 64);
    s1213 = (((uint128_t ) t8325) + ((uint128_t ) t8327));
    s1214 = (((uint128_t ) s1213) + ((uint128_t ) c604));
    t8330 = ((uint64_t ) s1214);
    c605 = (s1214 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8331 = ((uint64_t ) t8322);
    s1215 = (((uint128_t ) t8321) + ((uint128_t ) t8329));
    t8332 = ((uint64_t ) s1215);
    c606 = (s1215 >> 64);
    s1216 = (((uint128_t ) t8324) + ((uint128_t ) t8330));
    s1217 = (((uint128_t ) s1216) + ((uint128_t ) c606));
    t8333 = ((uint64_t ) s1217);
    c607 = (s1217 >> 64);
    s1218 = (((uint128_t ) t8323) + ((uint128_t ) c605));
    s1219 = (((uint128_t ) s1218) + ((uint128_t ) c607));
    t8334 = ((uint64_t ) s1219);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25267 = (((uint128_t ) t6764)*((uint128_t ) t6756));
    t8335 = (a25267 >> 64);
    t8336 = ((uint64_t ) a25267);
    a25268 = (((uint128_t ) t6763)*((uint128_t ) t6755));
    t8337 = (a25268 >> 64);
    t8338 = ((uint64_t ) a25268);
    a25269 = (((uint128_t ) t6763)*((uint128_t ) t6756));
    t8339 = (a25269 >> 64);
    t8340 = ((uint64_t ) a25269);
    a25270 = (((uint128_t ) t6764)*((uint128_t ) t6755));
    t8341 = (a25270 >> 64);
    t8342 = ((uint64_t ) a25270);
    /* MPAddQDD 64 */
    s1220 = (((uint128_t ) t8340) + ((uint128_t ) t8342));
    t8343 = ((uint64_t ) s1220);
    c608 = (s1220 >> 64);
    s1221 = (((uint128_t ) t8339) + ((uint128_t ) t8341));
    s1222 = (((uint128_t ) s1221) + ((uint128_t ) c608));
    t8344 = ((uint64_t ) s1222);
    c609 = (s1222 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8345 = ((uint64_t ) t8336);
    s1223 = (((uint128_t ) t8335) + ((uint128_t ) t8343));
    t8346 = ((uint64_t ) s1223);
    c610 = (s1223 >> 64);
    s1224 = (((uint128_t ) t8338) + ((uint128_t ) t8344));
    s1225 = (((uint128_t ) s1224) + ((uint128_t ) c610));
    t8347 = ((uint64_t ) s1225);
    c611 = (s1225 >> 64);
    s1226 = (((uint128_t ) t8337) + ((uint128_t ) c609));
    s1227 = (((uint128_t ) s1226) + ((uint128_t ) c611));
    t8348 = ((uint64_t ) s1227);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25271 = (((uint128_t ) t6764)*((uint128_t ) t6754));
    t8349 = (a25271 >> 64);
    t8350 = ((uint64_t ) a25271);
    a25272 = (((uint128_t ) t6763)*((uint128_t ) t6753));
    t8351 = (a25272 >> 64);
    t8352 = ((uint64_t ) a25272);
    a25273 = (((uint128_t ) t6763)*((uint128_t ) t6754));
    t8353 = (a25273 >> 64);
    t8354 = ((uint64_t ) a25273);
    a25274 = (((uint128_t ) t6764)*((uint128_t ) t6753));
    t8355 = (a25274 >> 64);
    t8356 = ((uint64_t ) a25274);
    /* MPAddQDD 64 */
    s1228 = (((uint128_t ) t8354) + ((uint128_t ) t8356));
    t8357 = ((uint64_t ) s1228);
    c612 = (s1228 >> 64);
    s1229 = (((uint128_t ) t8353) + ((uint128_t ) t8355));
    s1230 = (((uint128_t ) s1229) + ((uint128_t ) c612));
    t8358 = ((uint64_t ) s1230);
    c613 = (s1230 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8359 = ((uint64_t ) t8350);
    s1231 = (((uint128_t ) t8349) + ((uint128_t ) t8357));
    t8360 = ((uint64_t ) s1231);
    c614 = (s1231 >> 64);
    s1232 = (((uint128_t ) t8352) + ((uint128_t ) t8358));
    s1233 = (((uint128_t ) s1232) + ((uint128_t ) c614));
    t8361 = ((uint64_t ) s1233);
    c615 = (s1233 >> 64);
    s1234 = (((uint128_t ) t8351) + ((uint128_t ) c613));
    s1235 = (((uint128_t ) s1234) + ((uint128_t ) c615));
    t8362 = ((uint64_t ) s1235);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25275 = (((uint128_t ) t6762)*((uint128_t ) t6756));
    t8363 = (a25275 >> 64);
    t8364 = ((uint64_t ) a25275);
    a25276 = (((uint128_t ) t6761)*((uint128_t ) t6755));
    t8365 = (a25276 >> 64);
    t8366 = ((uint64_t ) a25276);
    a25277 = (((uint128_t ) t6761)*((uint128_t ) t6756));
    t8367 = (a25277 >> 64);
    t8368 = ((uint64_t ) a25277);
    a25278 = (((uint128_t ) t6762)*((uint128_t ) t6755));
    t8369 = (a25278 >> 64);
    t8370 = ((uint64_t ) a25278);
    /* MPAddQDD 64 */
    s1236 = (((uint128_t ) t8368) + ((uint128_t ) t8370));
    t8371 = ((uint64_t ) s1236);
    c616 = (s1236 >> 64);
    s1237 = (((uint128_t ) t8367) + ((uint128_t ) t8369));
    s1238 = (((uint128_t ) s1237) + ((uint128_t ) c616));
    t8372 = ((uint64_t ) s1238);
    c617 = (s1238 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8373 = ((uint64_t ) t8364);
    s1239 = (((uint128_t ) t8363) + ((uint128_t ) t8371));
    t8374 = ((uint64_t ) s1239);
    c618 = (s1239 >> 64);
    s1240 = (((uint128_t ) t8366) + ((uint128_t ) t8372));
    s1241 = (((uint128_t ) s1240) + ((uint128_t ) c618));
    t8375 = ((uint64_t ) s1241);
    c619 = (s1241 >> 64);
    s1242 = (((uint128_t ) t8365) + ((uint128_t ) c617));
    s1243 = (((uint128_t ) s1242) + ((uint128_t ) c619));
    t8376 = ((uint64_t ) s1243);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1244 = (((uint128_t ) t8359) + ((uint128_t ) t8373));
    t8377 = ((uint64_t ) s1244);
    c620 = (s1244 >> 64);
    s1245 = (((uint128_t ) t8360) + ((uint128_t ) t8374));
    s1246 = (((uint128_t ) s1245) + ((uint128_t ) c620));
    t8378 = ((uint64_t ) s1246);
    c621 = (s1246 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1247 = (((uint128_t ) t8361) + ((uint128_t ) t8375));
    t8379 = ((uint64_t ) s1247);
    c622 = (s1247 >> 64);
    s1248 = (((uint128_t ) t8362) + ((uint128_t ) t8376));
    s1249 = (((uint128_t ) s1248) + ((uint128_t ) c622));
    t8380 = ((uint64_t ) s1249);
    c623 = (s1249 >> 64);
    /* MPPropagateCarry 64 */
    t8381 = (t8379 + c621);
    a25279 = ((t8381 == 0));
    a25280 = (t8380 + c621);
    t8382 = ((a25279) ? (a25280) : (t8380));
    a25281 = ((t8382 == 0));
    a25282 = ((a25281) && (a25279));
    a25283 = (c623 + c621);
    t8383 = ((a25282) ? (a25283) : (c623));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t8385 = ((uint64_t ) t8331);
    t8386 = ((uint64_t ) t8332);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1250 = (((uint128_t ) t8333) + ((uint128_t ) t8377));
    t8387 = ((uint64_t ) s1250);
    c624 = (s1250 >> 64);
    s1251 = (((uint128_t ) t8334) + ((uint128_t ) t8378));
    s1252 = (((uint128_t ) s1251) + ((uint128_t ) c624));
    t8388 = ((uint64_t ) s1252);
    c625 = (s1252 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1253 = (((uint128_t ) t8345) + ((uint128_t ) t8381));
    t8389 = ((uint64_t ) s1253);
    c626 = (s1253 >> 64);
    s1254 = (((uint128_t ) t8346) + ((uint128_t ) t8382));
    s1255 = (((uint128_t ) s1254) + ((uint128_t ) c626));
    t8390 = ((uint64_t ) s1255);
    c627 = (s1255 >> 64);
    /* MPPropagateCarry 64 */
    t8391 = (t8389 + c625);
    a25292 = ((t8391 == 0));
    a25293 = (t8390 + c625);
    t8392 = ((a25292) ? (a25293) : (t8390));
    a25294 = ((t8392 == 0));
    a25295 = ((a25294) && (a25292));
    a25296 = (c627 + c625);
    t8393 = ((a25295) ? (a25296) : (c627));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1256 = (((uint128_t ) t8347) + ((uint128_t ) t8383));
    t8395 = ((uint64_t ) s1256);
    c628 = (s1256 >> 64);
    s1257 = (((uint128_t ) t8348) + ((uint128_t ) c628));
    t8396 = ((uint64_t ) s1257);
    /* MPPropagateCarry 64 */
    t8397 = (t8395 + t8393);
    a25300 = ((t8397 == 0));
    a25301 = (t8396 + t8393);
    t8398 = ((a25300) ? (a25301) : (t8396));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25307 = (((uint128_t ) t6762)*((uint128_t ) t6758));
    t8401 = (a25307 >> 64);
    t8402 = ((uint64_t ) a25307);
    a25308 = (((uint128_t ) t6761)*((uint128_t ) t6757));
    t8403 = (a25308 >> 64);
    t8404 = ((uint64_t ) a25308);
    a25309 = (((uint128_t ) t6761)*((uint128_t ) t6758));
    t8405 = (a25309 >> 64);
    t8406 = ((uint64_t ) a25309);
    a25310 = (((uint128_t ) t6762)*((uint128_t ) t6757));
    t8407 = (a25310 >> 64);
    t8408 = ((uint64_t ) a25310);
    /* MPAddQDD 64 */
    s1258 = (((uint128_t ) t8406) + ((uint128_t ) t8408));
    t8409 = ((uint64_t ) s1258);
    c630 = (s1258 >> 64);
    s1259 = (((uint128_t ) t8405) + ((uint128_t ) t8407));
    s1260 = (((uint128_t ) s1259) + ((uint128_t ) c630));
    t8410 = ((uint64_t ) s1260);
    c631 = (s1260 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8411 = ((uint64_t ) t8402);
    s1261 = (((uint128_t ) t8401) + ((uint128_t ) t8409));
    t8412 = ((uint64_t ) s1261);
    c632 = (s1261 >> 64);
    s1262 = (((uint128_t ) t8404) + ((uint128_t ) t8410));
    s1263 = (((uint128_t ) s1262) + ((uint128_t ) c632));
    t8413 = ((uint64_t ) s1263);
    c633 = (s1263 >> 64);
    s1264 = (((uint128_t ) t8403) + ((uint128_t ) c631));
    s1265 = (((uint128_t ) s1264) + ((uint128_t ) c633));
    t8414 = ((uint64_t ) s1265);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25311 = (((uint128_t ) t6764)*((uint128_t ) t6760));
    t8415 = (a25311 >> 64);
    t8416 = ((uint64_t ) a25311);
    a25312 = (((uint128_t ) t6763)*((uint128_t ) t6759));
    t8417 = (a25312 >> 64);
    t8418 = ((uint64_t ) a25312);
    a25313 = (((uint128_t ) t6763)*((uint128_t ) t6760));
    t8419 = (a25313 >> 64);
    t8420 = ((uint64_t ) a25313);
    a25314 = (((uint128_t ) t6764)*((uint128_t ) t6759));
    t8421 = (a25314 >> 64);
    t8422 = ((uint64_t ) a25314);
    /* MPAddQDD 64 */
    s1266 = (((uint128_t ) t8420) + ((uint128_t ) t8422));
    t8423 = ((uint64_t ) s1266);
    c634 = (s1266 >> 64);
    s1267 = (((uint128_t ) t8419) + ((uint128_t ) t8421));
    s1268 = (((uint128_t ) s1267) + ((uint128_t ) c634));
    t8424 = ((uint64_t ) s1268);
    c635 = (s1268 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8425 = ((uint64_t ) t8416);
    s1269 = (((uint128_t ) t8415) + ((uint128_t ) t8423));
    t8426 = ((uint64_t ) s1269);
    c636 = (s1269 >> 64);
    s1270 = (((uint128_t ) t8418) + ((uint128_t ) t8424));
    s1271 = (((uint128_t ) s1270) + ((uint128_t ) c636));
    t8427 = ((uint64_t ) s1271);
    c637 = (s1271 >> 64);
    s1272 = (((uint128_t ) t8417) + ((uint128_t ) c635));
    s1273 = (((uint128_t ) s1272) + ((uint128_t ) c637));
    t8428 = ((uint64_t ) s1273);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25315 = (((uint128_t ) t6764)*((uint128_t ) t6758));
    t8429 = (a25315 >> 64);
    t8430 = ((uint64_t ) a25315);
    a25316 = (((uint128_t ) t6763)*((uint128_t ) t6757));
    t8431 = (a25316 >> 64);
    t8432 = ((uint64_t ) a25316);
    a25317 = (((uint128_t ) t6763)*((uint128_t ) t6758));
    t8433 = (a25317 >> 64);
    t8434 = ((uint64_t ) a25317);
    a25318 = (((uint128_t ) t6764)*((uint128_t ) t6757));
    t8435 = (a25318 >> 64);
    t8436 = ((uint64_t ) a25318);
    /* MPAddQDD 64 */
    s1274 = (((uint128_t ) t8434) + ((uint128_t ) t8436));
    t8437 = ((uint64_t ) s1274);
    c638 = (s1274 >> 64);
    s1275 = (((uint128_t ) t8433) + ((uint128_t ) t8435));
    s1276 = (((uint128_t ) s1275) + ((uint128_t ) c638));
    t8438 = ((uint64_t ) s1276);
    c639 = (s1276 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8439 = ((uint64_t ) t8430);
    s1277 = (((uint128_t ) t8429) + ((uint128_t ) t8437));
    t8440 = ((uint64_t ) s1277);
    c640 = (s1277 >> 64);
    s1278 = (((uint128_t ) t8432) + ((uint128_t ) t8438));
    s1279 = (((uint128_t ) s1278) + ((uint128_t ) c640));
    t8441 = ((uint64_t ) s1279);
    c641 = (s1279 >> 64);
    s1280 = (((uint128_t ) t8431) + ((uint128_t ) c639));
    s1281 = (((uint128_t ) s1280) + ((uint128_t ) c641));
    t8442 = ((uint64_t ) s1281);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25319 = (((uint128_t ) t6762)*((uint128_t ) t6760));
    t8443 = (a25319 >> 64);
    t8444 = ((uint64_t ) a25319);
    a25320 = (((uint128_t ) t6761)*((uint128_t ) t6759));
    t8445 = (a25320 >> 64);
    t8446 = ((uint64_t ) a25320);
    a25321 = (((uint128_t ) t6761)*((uint128_t ) t6760));
    t8447 = (a25321 >> 64);
    t8448 = ((uint64_t ) a25321);
    a25322 = (((uint128_t ) t6762)*((uint128_t ) t6759));
    t8449 = (a25322 >> 64);
    t8450 = ((uint64_t ) a25322);
    /* MPAddQDD 64 */
    s1282 = (((uint128_t ) t8448) + ((uint128_t ) t8450));
    t8451 = ((uint64_t ) s1282);
    c642 = (s1282 >> 64);
    s1283 = (((uint128_t ) t8447) + ((uint128_t ) t8449));
    s1284 = (((uint128_t ) s1283) + ((uint128_t ) c642));
    t8452 = ((uint64_t ) s1284);
    c643 = (s1284 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8453 = ((uint64_t ) t8444);
    s1285 = (((uint128_t ) t8443) + ((uint128_t ) t8451));
    t8454 = ((uint64_t ) s1285);
    c644 = (s1285 >> 64);
    s1286 = (((uint128_t ) t8446) + ((uint128_t ) t8452));
    s1287 = (((uint128_t ) s1286) + ((uint128_t ) c644));
    t8455 = ((uint64_t ) s1287);
    c645 = (s1287 >> 64);
    s1288 = (((uint128_t ) t8445) + ((uint128_t ) c643));
    s1289 = (((uint128_t ) s1288) + ((uint128_t ) c645));
    t8456 = ((uint64_t ) s1289);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1290 = (((uint128_t ) t8439) + ((uint128_t ) t8453));
    t8457 = ((uint64_t ) s1290);
    c646 = (s1290 >> 64);
    s1291 = (((uint128_t ) t8440) + ((uint128_t ) t8454));
    s1292 = (((uint128_t ) s1291) + ((uint128_t ) c646));
    t8458 = ((uint64_t ) s1292);
    c647 = (s1292 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1293 = (((uint128_t ) t8441) + ((uint128_t ) t8455));
    t8459 = ((uint64_t ) s1293);
    c648 = (s1293 >> 64);
    s1294 = (((uint128_t ) t8442) + ((uint128_t ) t8456));
    s1295 = (((uint128_t ) s1294) + ((uint128_t ) c648));
    t8460 = ((uint64_t ) s1295);
    c649 = (s1295 >> 64);
    /* MPPropagateCarry 64 */
    t8461 = (t8459 + c647);
    a25323 = ((t8461 == 0));
    a25324 = (t8460 + c647);
    t8462 = ((a25323) ? (a25324) : (t8460));
    a25325 = ((t8462 == 0));
    a25326 = ((a25325) && (a25323));
    a25327 = (c649 + c647);
    t8463 = ((a25326) ? (a25327) : (c649));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t8465 = ((uint64_t ) t8411);
    t8466 = ((uint64_t ) t8412);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1296 = (((uint128_t ) t8413) + ((uint128_t ) t8457));
    t8467 = ((uint64_t ) s1296);
    c650 = (s1296 >> 64);
    s1297 = (((uint128_t ) t8414) + ((uint128_t ) t8458));
    s1298 = (((uint128_t ) s1297) + ((uint128_t ) c650));
    t8468 = ((uint64_t ) s1298);
    c651 = (s1298 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1299 = (((uint128_t ) t8425) + ((uint128_t ) t8461));
    t8469 = ((uint64_t ) s1299);
    c652 = (s1299 >> 64);
    s1300 = (((uint128_t ) t8426) + ((uint128_t ) t8462));
    s1301 = (((uint128_t ) s1300) + ((uint128_t ) c652));
    t8470 = ((uint64_t ) s1301);
    c653 = (s1301 >> 64);
    /* MPPropagateCarry 64 */
    t8471 = (t8469 + c651);
    a25336 = ((t8471 == 0));
    a25337 = (t8470 + c651);
    t8472 = ((a25336) ? (a25337) : (t8470));
    a25338 = ((t8472 == 0));
    a25339 = ((a25338) && (a25336));
    a25340 = (c653 + c651);
    t8473 = ((a25339) ? (a25340) : (c653));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1302 = (((uint128_t ) t8427) + ((uint128_t ) t8463));
    t8475 = ((uint64_t ) s1302);
    c654 = (s1302 >> 64);
    s1303 = (((uint128_t ) t8428) + ((uint128_t ) c654));
    t8476 = ((uint64_t ) s1303);
    /* MPPropagateCarry 64 */
    t8477 = (t8475 + t8473);
    a25344 = ((t8477 == 0));
    a25345 = (t8476 + t8473);
    t8478 = ((a25344) ? (a25345) : (t8476));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25351 = (((uint128_t ) t6766)*((uint128_t ) t6754));
    t8481 = (a25351 >> 64);
    t8482 = ((uint64_t ) a25351);
    a25352 = (((uint128_t ) t6765)*((uint128_t ) t6753));
    t8483 = (a25352 >> 64);
    t8484 = ((uint64_t ) a25352);
    a25353 = (((uint128_t ) t6765)*((uint128_t ) t6754));
    t8485 = (a25353 >> 64);
    t8486 = ((uint64_t ) a25353);
    a25354 = (((uint128_t ) t6766)*((uint128_t ) t6753));
    t8487 = (a25354 >> 64);
    t8488 = ((uint64_t ) a25354);
    /* MPAddQDD 64 */
    s1304 = (((uint128_t ) t8486) + ((uint128_t ) t8488));
    t8489 = ((uint64_t ) s1304);
    c656 = (s1304 >> 64);
    s1305 = (((uint128_t ) t8485) + ((uint128_t ) t8487));
    s1306 = (((uint128_t ) s1305) + ((uint128_t ) c656));
    t8490 = ((uint64_t ) s1306);
    c657 = (s1306 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8491 = ((uint64_t ) t8482);
    s1307 = (((uint128_t ) t8481) + ((uint128_t ) t8489));
    t8492 = ((uint64_t ) s1307);
    c658 = (s1307 >> 64);
    s1308 = (((uint128_t ) t8484) + ((uint128_t ) t8490));
    s1309 = (((uint128_t ) s1308) + ((uint128_t ) c658));
    t8493 = ((uint64_t ) s1309);
    c659 = (s1309 >> 64);
    s1310 = (((uint128_t ) t8483) + ((uint128_t ) c657));
    s1311 = (((uint128_t ) s1310) + ((uint128_t ) c659));
    t8494 = ((uint64_t ) s1311);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25355 = (((uint128_t ) t6768)*((uint128_t ) t6756));
    t8495 = (a25355 >> 64);
    t8496 = ((uint64_t ) a25355);
    a25356 = (((uint128_t ) t6767)*((uint128_t ) t6755));
    t8497 = (a25356 >> 64);
    t8498 = ((uint64_t ) a25356);
    a25357 = (((uint128_t ) t6767)*((uint128_t ) t6756));
    t8499 = (a25357 >> 64);
    t8500 = ((uint64_t ) a25357);
    a25358 = (((uint128_t ) t6768)*((uint128_t ) t6755));
    t8501 = (a25358 >> 64);
    t8502 = ((uint64_t ) a25358);
    /* MPAddQDD 64 */
    s1312 = (((uint128_t ) t8500) + ((uint128_t ) t8502));
    t8503 = ((uint64_t ) s1312);
    c660 = (s1312 >> 64);
    s1313 = (((uint128_t ) t8499) + ((uint128_t ) t8501));
    s1314 = (((uint128_t ) s1313) + ((uint128_t ) c660));
    t8504 = ((uint64_t ) s1314);
    c661 = (s1314 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8505 = ((uint64_t ) t8496);
    s1315 = (((uint128_t ) t8495) + ((uint128_t ) t8503));
    t8506 = ((uint64_t ) s1315);
    c662 = (s1315 >> 64);
    s1316 = (((uint128_t ) t8498) + ((uint128_t ) t8504));
    s1317 = (((uint128_t ) s1316) + ((uint128_t ) c662));
    t8507 = ((uint64_t ) s1317);
    c663 = (s1317 >> 64);
    s1318 = (((uint128_t ) t8497) + ((uint128_t ) c661));
    s1319 = (((uint128_t ) s1318) + ((uint128_t ) c663));
    t8508 = ((uint64_t ) s1319);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25359 = (((uint128_t ) t6768)*((uint128_t ) t6754));
    t8509 = (a25359 >> 64);
    t8510 = ((uint64_t ) a25359);
    a25360 = (((uint128_t ) t6767)*((uint128_t ) t6753));
    t8511 = (a25360 >> 64);
    t8512 = ((uint64_t ) a25360);
    a25361 = (((uint128_t ) t6767)*((uint128_t ) t6754));
    t8513 = (a25361 >> 64);
    t8514 = ((uint64_t ) a25361);
    a25362 = (((uint128_t ) t6768)*((uint128_t ) t6753));
    t8515 = (a25362 >> 64);
    t8516 = ((uint64_t ) a25362);
    /* MPAddQDD 64 */
    s1320 = (((uint128_t ) t8514) + ((uint128_t ) t8516));
    t8517 = ((uint64_t ) s1320);
    c664 = (s1320 >> 64);
    s1321 = (((uint128_t ) t8513) + ((uint128_t ) t8515));
    s1322 = (((uint128_t ) s1321) + ((uint128_t ) c664));
    t8518 = ((uint64_t ) s1322);
    c665 = (s1322 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8519 = ((uint64_t ) t8510);
    s1323 = (((uint128_t ) t8509) + ((uint128_t ) t8517));
    t8520 = ((uint64_t ) s1323);
    c666 = (s1323 >> 64);
    s1324 = (((uint128_t ) t8512) + ((uint128_t ) t8518));
    s1325 = (((uint128_t ) s1324) + ((uint128_t ) c666));
    t8521 = ((uint64_t ) s1325);
    c667 = (s1325 >> 64);
    s1326 = (((uint128_t ) t8511) + ((uint128_t ) c665));
    s1327 = (((uint128_t ) s1326) + ((uint128_t ) c667));
    t8522 = ((uint64_t ) s1327);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25363 = (((uint128_t ) t6766)*((uint128_t ) t6756));
    t8523 = (a25363 >> 64);
    t8524 = ((uint64_t ) a25363);
    a25364 = (((uint128_t ) t6765)*((uint128_t ) t6755));
    t8525 = (a25364 >> 64);
    t8526 = ((uint64_t ) a25364);
    a25365 = (((uint128_t ) t6765)*((uint128_t ) t6756));
    t8527 = (a25365 >> 64);
    t8528 = ((uint64_t ) a25365);
    a25366 = (((uint128_t ) t6766)*((uint128_t ) t6755));
    t8529 = (a25366 >> 64);
    t8530 = ((uint64_t ) a25366);
    /* MPAddQDD 64 */
    s1328 = (((uint128_t ) t8528) + ((uint128_t ) t8530));
    t8531 = ((uint64_t ) s1328);
    c668 = (s1328 >> 64);
    s1329 = (((uint128_t ) t8527) + ((uint128_t ) t8529));
    s1330 = (((uint128_t ) s1329) + ((uint128_t ) c668));
    t8532 = ((uint64_t ) s1330);
    c669 = (s1330 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8533 = ((uint64_t ) t8524);
    s1331 = (((uint128_t ) t8523) + ((uint128_t ) t8531));
    t8534 = ((uint64_t ) s1331);
    c670 = (s1331 >> 64);
    s1332 = (((uint128_t ) t8526) + ((uint128_t ) t8532));
    s1333 = (((uint128_t ) s1332) + ((uint128_t ) c670));
    t8535 = ((uint64_t ) s1333);
    c671 = (s1333 >> 64);
    s1334 = (((uint128_t ) t8525) + ((uint128_t ) c669));
    s1335 = (((uint128_t ) s1334) + ((uint128_t ) c671));
    t8536 = ((uint64_t ) s1335);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1336 = (((uint128_t ) t8519) + ((uint128_t ) t8533));
    t8537 = ((uint64_t ) s1336);
    c672 = (s1336 >> 64);
    s1337 = (((uint128_t ) t8520) + ((uint128_t ) t8534));
    s1338 = (((uint128_t ) s1337) + ((uint128_t ) c672));
    t8538 = ((uint64_t ) s1338);
    c673 = (s1338 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1339 = (((uint128_t ) t8521) + ((uint128_t ) t8535));
    t8539 = ((uint64_t ) s1339);
    c674 = (s1339 >> 64);
    s1340 = (((uint128_t ) t8522) + ((uint128_t ) t8536));
    s1341 = (((uint128_t ) s1340) + ((uint128_t ) c674));
    t8540 = ((uint64_t ) s1341);
    c675 = (s1341 >> 64);
    /* MPPropagateCarry 64 */
    t8541 = (t8539 + c673);
    a25367 = ((t8541 == 0));
    a25368 = (t8540 + c673);
    t8542 = ((a25367) ? (a25368) : (t8540));
    a25369 = ((t8542 == 0));
    a25370 = ((a25369) && (a25367));
    a25371 = (c675 + c673);
    t8543 = ((a25370) ? (a25371) : (c675));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t8545 = ((uint64_t ) t8491);
    t8546 = ((uint64_t ) t8492);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1342 = (((uint128_t ) t8493) + ((uint128_t ) t8537));
    t8547 = ((uint64_t ) s1342);
    c676 = (s1342 >> 64);
    s1343 = (((uint128_t ) t8494) + ((uint128_t ) t8538));
    s1344 = (((uint128_t ) s1343) + ((uint128_t ) c676));
    t8548 = ((uint64_t ) s1344);
    c677 = (s1344 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1345 = (((uint128_t ) t8505) + ((uint128_t ) t8541));
    t8549 = ((uint64_t ) s1345);
    c678 = (s1345 >> 64);
    s1346 = (((uint128_t ) t8506) + ((uint128_t ) t8542));
    s1347 = (((uint128_t ) s1346) + ((uint128_t ) c678));
    t8550 = ((uint64_t ) s1347);
    c679 = (s1347 >> 64);
    /* MPPropagateCarry 64 */
    t8551 = (t8549 + c677);
    a25380 = ((t8551 == 0));
    a25381 = (t8550 + c677);
    t8552 = ((a25380) ? (a25381) : (t8550));
    a25382 = ((t8552 == 0));
    a25383 = ((a25382) && (a25380));
    a25384 = (c679 + c677);
    t8553 = ((a25383) ? (a25384) : (c679));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1348 = (((uint128_t ) t8507) + ((uint128_t ) t8543));
    t8555 = ((uint64_t ) s1348);
    c680 = (s1348 >> 64);
    s1349 = (((uint128_t ) t8508) + ((uint128_t ) c680));
    t8556 = ((uint64_t ) s1349);
    /* MPPropagateCarry 64 */
    t8557 = (t8555 + t8553);
    a25388 = ((t8557 == 0));
    a25389 = (t8556 + t8553);
    t8558 = ((a25388) ? (a25389) : (t8556));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* MPAddQDD 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1350 = (((uint128_t ) t8465) + ((uint128_t ) t8545));
    t8561 = ((uint64_t ) s1350);
    c682 = (s1350 >> 64);
    s1351 = (((uint128_t ) t8466) + ((uint128_t ) t8546));
    s1352 = (((uint128_t ) s1351) + ((uint128_t ) c682));
    t8562 = ((uint64_t ) s1352);
    c683 = (s1352 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1353 = (((uint128_t ) t8467) + ((uint128_t ) t8547));
    t8563 = ((uint64_t ) s1353);
    c684 = (s1353 >> 64);
    s1354 = (((uint128_t ) t8468) + ((uint128_t ) t8548));
    s1355 = (((uint128_t ) s1354) + ((uint128_t ) c684));
    t8564 = ((uint64_t ) s1355);
    c685 = (s1355 >> 64);
    /* MPPropagateCarry 64 */
    t8565 = (t8563 + c683);
    a25395 = ((t8565 == 0));
    a25396 = (t8564 + c683);
    t8566 = ((a25395) ? (a25396) : (t8564));
    a25397 = ((t8566 == 0));
    a25398 = ((a25397) && (a25395));
    a25399 = (c685 + c683);
    t8567 = ((a25398) ? (a25399) : (c685));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1356 = (((uint128_t ) t8471) + ((uint128_t ) t8551));
    t8569 = ((uint64_t ) s1356);
    c686 = (s1356 >> 64);
    s1357 = (((uint128_t ) t8472) + ((uint128_t ) t8552));
    s1358 = (((uint128_t ) s1357) + ((uint128_t ) c686));
    t8570 = ((uint64_t ) s1358);
    c687 = (s1358 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1359 = (((uint128_t ) t8477) + ((uint128_t ) t8557));
    t8571 = ((uint64_t ) s1359);
    c688 = (s1359 >> 64);
    s1360 = (((uint128_t ) t8478) + ((uint128_t ) t8558));
    s1361 = (((uint128_t ) s1360) + ((uint128_t ) c688));
    t8572 = ((uint64_t ) s1361);
    c689 = (s1361 >> 64);
    /* MPPropagateCarry 64 */
    t8573 = (t8571 + c687);
    a25403 = ((t8573 == 0));
    a25404 = (t8572 + c687);
    t8574 = ((a25403) ? (a25404) : (t8572));
    a25405 = ((t8574 == 0));
    a25406 = ((a25405) && (a25403));
    a25407 = (c689 + c687);
    t8575 = ((a25406) ? (a25407) : (c689));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    s1362 = (((uint128_t ) t8569) + ((uint128_t ) t8567));
    t8577 = ((uint64_t ) s1362);
    c690 = (s1362 >> 64);
    s1363 = (((uint128_t ) t8570) + ((uint128_t ) c690));
    t8578 = ((uint64_t ) s1363);
    /* MPEqualDI 64 */
    a25411 = ((t8578 == 0));
    a25412 = ((t8577 == 0));
    a25413 = ((a25411) && (a25412));
    /* MPAddDDI 64 */
    s1364 = (((uint128_t ) t8573) + ((uint128_t ) t8567));
    t8579 = ((uint64_t ) s1364);
    c691 = (s1364 >> 64);
    s1365 = (((uint128_t ) t8574) + ((uint128_t ) c691));
    t8580 = ((uint64_t ) s1365);
    /* MPCondD 64 */
    t8581 = ((a25413) ? (t8580) : (t8574));
    t8582 = ((a25413) ? (t8579) : (t8573));
    /* MPEqualDI 64 */
    a25414 = ((t8581 == 0));
    a25415 = ((t8582 == 0));
    a25416 = ((a25414) && (a25415));
    /* MPEqualDI 64 */
    a25417 = ((a25416) && (a25413));
    /* MPAddDII 64 */
    t8583 = (t8575 + t8567);
    /* MPCondDDI 64 */
    t8584 = ((a25417) ? (t8583) : (t8575));
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPTypeCastDI 128 */
    /* MPTypeCastDI 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    t3582 = ((uint64_t ) t8305);
    t3581 = ((uint64_t ) t8306);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    t3578 = ((uint64_t ) t8307);
    t8585 = ((uint64_t ) t8308);
    /* MPPropagateCarry 64 */
    t3573 = t8585;
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1366 = (((uint128_t ) t8311) + ((uint128_t ) t8561));
    t8586 = ((uint64_t ) s1366);
    c692 = (s1366 >> 64);
    s1367 = (((uint128_t ) t8312) + ((uint128_t ) t8562));
    s1368 = (((uint128_t ) s1367) + ((uint128_t ) c692));
    t8587 = ((uint64_t ) s1368);
    c693 = (s1368 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1369 = (((uint128_t ) t8317) + ((uint128_t ) t8565));
    t8588 = ((uint64_t ) s1369);
    c694 = (s1369 >> 64);
    s1370 = (((uint128_t ) t8318) + ((uint128_t ) t8566));
    s1371 = (((uint128_t ) s1370) + ((uint128_t ) c694));
    t8589 = ((uint64_t ) s1371);
    c695 = (s1371 >> 64);
    /* MPPropagateCarry 64 */
    t8590 = (t8588 + c693);
    a25421 = ((t8590 == 0));
    a25422 = (t8589 + c693);
    t8591 = ((a25421) ? (a25422) : (t8589));
    a25423 = ((t8591 == 0));
    a25424 = ((a25423) && (a25421));
    a25425 = (c695 + c693);
    t8592 = ((a25424) ? (a25425) : (c695));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    t6726 = ((uint64_t ) t8586);
    c696 = (t8586 >> 64);
    s1372 = (((uint128_t ) t8587) + ((uint128_t ) c696));
    t6725 = ((uint64_t ) s1372);
    /* MPEqualDI 64 */
    a25429 = ((t6725 == 0));
    a25430 = ((t6726 == 0));
    a25431 = ((a25429) && (a25430));
    /* MPAddDDI 64 */
    t8594 = ((uint64_t ) t8590);
    c697 = (t8590 >> 64);
    s1373 = (((uint128_t ) t8591) + ((uint128_t ) c697));
    t8595 = ((uint64_t ) s1373);
    /* MPCondD 64 */
    t6727 = ((a25431) ? (t8595) : (t8591));
    t6728 = ((a25431) ? (t8594) : (t8590));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDII 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1374 = (((uint128_t ) t8385) + ((uint128_t ) t8577));
    t8596 = ((uint64_t ) s1374);
    c698 = (s1374 >> 64);
    s1375 = (((uint128_t ) t8386) + ((uint128_t ) t8578));
    s1376 = (((uint128_t ) s1375) + ((uint128_t ) c698));
    t8597 = ((uint64_t ) s1376);
    c699 = (s1376 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1377 = (((uint128_t ) t8387) + ((uint128_t ) t8582));
    t8598 = ((uint64_t ) s1377);
    c700 = (s1377 >> 64);
    s1378 = (((uint128_t ) t8388) + ((uint128_t ) t8581));
    s1379 = (((uint128_t ) s1378) + ((uint128_t ) c700));
    t8599 = ((uint64_t ) s1379);
    c701 = (s1379 >> 64);
    /* MPPropagateCarry 64 */
    t8600 = (t8598 + c699);
    a25436 = ((t8600 == 0));
    a25437 = (t8599 + c699);
    t8601 = ((a25436) ? (a25437) : (t8599));
    a25438 = ((t8601 == 0));
    a25439 = ((a25438) && (a25436));
    a25440 = (c701 + c699);
    t8602 = ((a25439) ? (a25440) : (c701));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1380 = (((uint128_t ) t8596) + ((uint128_t ) t8592));
    t6736 = ((uint64_t ) s1380);
    c702 = (s1380 >> 64);
    s1381 = (((uint128_t ) t8597) + ((uint128_t ) c702));
    t6735 = ((uint64_t ) s1381);
    /* MPEqualDI 64 */
    a25444 = ((t6735 == 0));
    a25445 = ((t6736 == 0));
    a25446 = ((a25444) && (a25445));
    /* MPAddDDD 64 */
    s1382 = (((uint128_t ) t8600) + ((uint128_t ) t8592));
    t8604 = ((uint64_t ) s1382);
    c703 = (s1382 >> 64);
    s1383 = (((uint128_t ) t8601) + ((uint128_t ) c703));
    t8605 = ((uint64_t ) s1383);
    /* MPCondD 64 */
    t6737 = ((a25446) ? (t8605) : (t8601));
    t6738 = ((a25446) ? (t8604) : (t8600));
    /* MPEqualDI 64 */
    a25447 = ((t6737 == 0));
    a25448 = ((t6738 == 0));
    a25449 = ((a25447) && (a25448));
    /* MPEqualDI 64 */
    a25450 = ((a25449) && (a25446));
    /* MPAddDDI 64 */
    s1384 = (((uint128_t ) t8592) + ((uint128_t ) t8602));
    t8606 = ((uint64_t ) s1384);
    c704 = (s1384 >> 64);
    s1385 = (((uint128_t ) 0) + ((uint128_t ) c704));
    t8607 = ((uint64_t ) s1385);
    /* MPCondDDI 64 */
    t8608 = ((a25450) ? (t8607) : (0));
    t8609 = ((a25450) ? (t8606) : (t8602));
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQID 128 */
    /* MPAddQDD 64 */
    s1386 = (((uint128_t ) t8391) + ((uint128_t ) t8584));
    t8610 = ((uint64_t ) s1386);
    c705 = (s1386 >> 64);
    s1387 = (((uint128_t ) t8392) + ((uint128_t ) c705));
    t8611 = ((uint64_t ) s1387);
    c706 = (s1387 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1388 = (((uint128_t ) t8397) + ((uint128_t ) c706));
    t8612 = ((uint64_t ) s1388);
    c707 = (s1388 >> 64);
    s1389 = (((uint128_t ) t8398) + ((uint128_t ) c707));
    t8613 = ((uint64_t ) s1389);
    /* MPExtractLow 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1390 = (((uint128_t ) t8610) + ((uint128_t ) t8609));
    t6746 = ((uint64_t ) s1390);
    c709 = (s1390 >> 64);
    s1391 = (((uint128_t ) t8611) + ((uint128_t ) t8608));
    s1392 = (((uint128_t ) s1391) + ((uint128_t ) c709));
    t6745 = ((uint64_t ) s1392);
    /* MPEqualDI 64 */
    a25451 = ((t6745 == 0));
    a25452 = ((t6746 == 0));
    a25453 = ((a25451) && (a25452));
    /* MPAddDDD 64 */
    s1393 = (((uint128_t ) t8612) + ((uint128_t ) t8609));
    t8614 = ((uint64_t ) s1393);
    c710 = (s1393 >> 64);
    s1394 = (((uint128_t ) t8613) + ((uint128_t ) t8608));
    s1395 = (((uint128_t ) s1394) + ((uint128_t ) c710));
    t8615 = ((uint64_t ) s1395);
    /* MPCondD 64 */
    t6747 = ((a25453) ? (t8615) : (t8613));
    t6748 = ((a25453) ? (t8614) : (t8612));
    /* MPExtractLow 128 */
    /* End of MPAddQQQ 256 */
    /* End of MPMulQDD_Schoolbook_Full */
}

__device__ void MPMulQDD_L3_1(uint64_t &t6747, uint64_t &t6748, uint64_t &t6745, uint64_t &t6746, uint64_t &t6737, uint64_t &t6738, uint64_t &t6735, uint64_t &t6736, uint64_t &t6727, uint64_t &t6728, uint64_t &t6725, uint64_t &t6726, uint64_t &t3573, uint64_t &t3578, uint64_t &t3581, uint64_t &t3582, uint64_t t6763, uint64_t t6764, uint64_t t6761, uint64_t t6762, uint64_t t6767, uint64_t t6768, uint64_t t6765, uint64_t t6766, uint64_t t6755, uint64_t t6756, uint64_t t6753, uint64_t t6754, uint64_t t6759, uint64_t t6760, uint64_t t6757, uint64_t t6758) {
    int a25470, a25472, a25473, a25483, a25485, a25486, a25491, a25506, 
            a25519, a25550, a25552, a25553, a25563, a25565, a25566, a25571, 
            a25586, a25588, a25589, a25599, a25601, a25602, a25607, a25614, 
            a25616, a25617, a25622, a25624, a25625, a25630, a25631, a25632, 
            a25633, a25634, a25635, a25636, a25640, a25642, a25643, a25648, 
            a25649, a25650, a25655, a25657, a25658, a25663, a25664, a25665, 
            a25666, a25667, a25668, a25669, c711, c712, c713, c714, 
            c715, c716, c717, c718, c719, c720, c721, c722, 
            c723, c724, c725, c726, c727, c728, c729, c730, 
            c731, c732, c733, c734, c735, c737, c738, c739, 
            c740, c741, c742, c743, c744, c745, c746, c747, 
            c748, c749, c750, c751, c753, c754, c755, c759, 
            c760, c761, c762, c763, c764, c765, c766, c767, 
            c768, c769, c770, c771, c772, c773, c774, c775, 
            c776, c777, c778, c779, c780, c781, c782, c783, 
            c785, c786, c787, c788, c789, c790, c791, c792, 
            c793, c794, c795, c796, c797, c798, c799, c800, 
            c801, c803, c804, c805, c806, c807, c808, c809, 
            c810, c811, c812, c813, c814, c815, c816, c817, 
            c818, c819, c820, c821, c822, c823, c824, c825, 
            c826, c830;
    uint64_t a25471, a25474, a25484, a25487, a25492, a25507, a25520, a25551, 
            a25554, a25564, a25567, a25572, a25587, a25590, a25600, a25603, 
            a25608, a25615, a25618, a25623, a25626, a25641, a25644, a25656, 
            a25659, t8616, t8617, t8618, t8619, t8620, t8621, t8622, 
            t8623, t8624, t8625, t8626, t8627, t8628, t8629, t8630, 
            t8631, t8632, t8633, t8634, t8635, t8636, t8637, t8638, 
            t8639, t8640, t8641, t8642, t8643, t8644, t8645, t8646, 
            t8647, t8648, t8649, t8650, t8651, t8652, t8653, t8654, 
            t8655, t8656, t8657, t8658, t8659, t8660, t8661, t8662, 
            t8663, t8664, t8665, t8666, t8667, t8668, t8669, t8670, 
            t8671, t8672, t8673, t8674, t8675, t8676, t8677, t8678, 
            t8680, t8681, t8682, t8683, t8684, t8685, t8686, t8687, 
            t8688, t8690, t8691, t8692, t8693, t8696, t8697, t8698, 
            t8699, t8700, t8701, t8702, t8703, t8704, t8705, t8706, 
            t8707, t8708, t8709, t8710, t8711, t8712, t8713, t8714, 
            t8715, t8716, t8717, t8718, t8719, t8720, t8721, t8722, 
            t8723, t8724, t8725, t8726, t8727, t8728, t8729, t8730, 
            t8731, t8732, t8733, t8734, t8735, t8736, t8739, t8740, 
            t8741, t8742, t8743, t8744, t8745, t8746, t8755, t8756, 
            t8757, t8758, t8759, t8760, t8761, t8762, t8763, t8764, 
            t8765, t8766, t8767, t8768, t8769, t8770, t8771, t8772, 
            t8773, t8774, t8775, t8776, t8777, t8778, t8779, t8780, 
            t8781, t8782, t8783, t8784, t8785, t8786, t8787, t8788, 
            t8789, t8790, t8791, t8792, t8793, t8794, t8795, t8796, 
            t8797, t8798, t8799, t8800, t8801, t8802, t8803, t8804, 
            t8805, t8806, t8807, t8808, t8809, t8810, t8811, t8812, 
            t8813, t8814, t8815, t8816, t8817, t8819, t8820, t8821, 
            t8822, t8823, t8824, t8825, t8826, t8827, t8829, t8830, 
            t8831, t8832, t8835, t8836, t8837, t8838, t8839, t8840, 
            t8841, t8842, t8843, t8844, t8845, t8846, t8847, t8848, 
            t8849, t8850, t8851, t8852, t8853, t8854, t8855, t8856, 
            t8857, t8858, t8859, t8860, t8861, t8862, t8863, t8864, 
            t8865, t8866, t8867, t8868, t8869, t8871, t8872, t8873, 
            t8874, t8875, t8876, t8877, t8878, t8879, t8881, t8882, 
            t8883, t8884, t8887, t8888, t8889, t8890, t8891, t8892, 
            t8893, t8895, t8896, t8897, t8898, t8899, t8900, t8901, 
            t8903, t8904, t8905, t8906, t8907, t8908, t8909, t8910, 
            t8911, t8912, t8913, t8914, t8915, t8916, t8917, t8918, 
            t8920, t8921, t8922, t8923, t8924, t8925, t8926, t8927, 
            t8928, t8930, t8931, t8932, t8933, t8934, t8935, t8936, 
            t8937;
    uint128_t a25454, a25455, a25456, a25457, a25458, a25459, a25460, a25461, 
            a25462, a25463, a25464, a25465, a25466, a25467, a25468, a25469, 
            a25498, a25499, a25500, a25501, a25502, a25503, a25504, a25505, 
            a25534, a25535, a25536, a25537, a25538, a25539, a25540, a25541, 
            a25542, a25543, a25544, a25545, a25546, a25547, a25548, a25549, 
            a25578, a25579, a25580, a25581, a25582, a25583, a25584, a25585, 
            s1396, s1397, s1398, s1399, s1400, s1401, s1402, s1403, 
            s1404, s1405, s1406, s1407, s1408, s1409, s1410, s1411, 
            s1412, s1413, s1414, s1415, s1416, s1417, s1418, s1419, 
            s1420, s1421, s1422, s1423, s1424, s1425, s1426, s1427, 
            s1428, s1429, s1430, s1431, s1432, s1433, s1434, s1435, 
            s1436, s1437, s1438, s1439, s1440, s1441, s1442, s1443, 
            s1444, s1445, s1446, s1447, s1448, s1449, s1450, s1451, 
            s1452, s1453, s1454, s1455, s1456, s1457, s1458, s1459, 
            s1460, s1461, s1462, s1463, s1464, s1465, s1466, s1467, 
            s1468, s1469, s1470, s1471, s1472, s1473, s1474, s1475, 
            s1478, s1479, s1480, s1481, s1482, s1483, s1484, s1485, 
            s1486, s1487, s1488, s1489, s1490, s1491, s1492, s1493, 
            s1494, s1495, s1496, s1497, s1498, s1499, s1500, s1501, 
            s1502, s1503, s1504, s1505, s1506, s1507, s1508, s1509, 
            s1510, s1511, s1512, s1513, s1514, s1515, s1516, s1517, 
            s1518, s1519, s1520, s1521, s1522, s1523, s1524, s1525, 
            s1526, s1527, s1528, s1529, s1530, s1531, s1532, s1533, 
            s1534, s1535, s1536, s1537, s1538, s1539, s1540, s1541, 
            s1542, s1543, s1544, s1545, s1546, s1547, s1548, s1549, 
            s1550, s1551, s1552, s1553, s1554, s1555, s1556, s1557, 
            s1558, s1559, s1560, s1561, s1562, s1563, s1564, s1565, 
            s1566, s1567, s1568, s1569, s1570, s1571, s1572, s1573, 
            s1574, s1575, s1576, s1577, s1578, s1579, s1580, s1581, 
            s1582, s1583, s1584, s1585, s1586, s1587, s1588, s1589, 
            s1590, s1591, s1594, s1595, s1596;
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25454 = (((uint128_t ) t6766)*((uint128_t ) t6758));
    t8616 = (a25454 >> 64);
    t8617 = ((uint64_t ) a25454);
    a25455 = (((uint128_t ) t6765)*((uint128_t ) t6757));
    t8618 = (a25455 >> 64);
    t8619 = ((uint64_t ) a25455);
    a25456 = (((uint128_t ) t6765)*((uint128_t ) t6758));
    t8620 = (a25456 >> 64);
    t8621 = ((uint64_t ) a25456);
    a25457 = (((uint128_t ) t6766)*((uint128_t ) t6757));
    t8622 = (a25457 >> 64);
    t8623 = ((uint64_t ) a25457);
    /* MPAddQDD 64 */
    s1396 = (((uint128_t ) t8621) + ((uint128_t ) t8623));
    t8624 = ((uint64_t ) s1396);
    c711 = (s1396 >> 64);
    s1397 = (((uint128_t ) t8620) + ((uint128_t ) t8622));
    s1398 = (((uint128_t ) s1397) + ((uint128_t ) c711));
    t8625 = ((uint64_t ) s1398);
    c712 = (s1398 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8626 = ((uint64_t ) t8617);
    s1399 = (((uint128_t ) t8616) + ((uint128_t ) t8624));
    t8627 = ((uint64_t ) s1399);
    c713 = (s1399 >> 64);
    s1400 = (((uint128_t ) t8619) + ((uint128_t ) t8625));
    s1401 = (((uint128_t ) s1400) + ((uint128_t ) c713));
    t8628 = ((uint64_t ) s1401);
    c714 = (s1401 >> 64);
    s1402 = (((uint128_t ) t8618) + ((uint128_t ) c712));
    s1403 = (((uint128_t ) s1402) + ((uint128_t ) c714));
    t8629 = ((uint64_t ) s1403);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25458 = (((uint128_t ) t6768)*((uint128_t ) t6760));
    t8630 = (a25458 >> 64);
    t8631 = ((uint64_t ) a25458);
    a25459 = (((uint128_t ) t6767)*((uint128_t ) t6759));
    t8632 = (a25459 >> 64);
    t8633 = ((uint64_t ) a25459);
    a25460 = (((uint128_t ) t6767)*((uint128_t ) t6760));
    t8634 = (a25460 >> 64);
    t8635 = ((uint64_t ) a25460);
    a25461 = (((uint128_t ) t6768)*((uint128_t ) t6759));
    t8636 = (a25461 >> 64);
    t8637 = ((uint64_t ) a25461);
    /* MPAddQDD 64 */
    s1404 = (((uint128_t ) t8635) + ((uint128_t ) t8637));
    t8638 = ((uint64_t ) s1404);
    c715 = (s1404 >> 64);
    s1405 = (((uint128_t ) t8634) + ((uint128_t ) t8636));
    s1406 = (((uint128_t ) s1405) + ((uint128_t ) c715));
    t8639 = ((uint64_t ) s1406);
    c716 = (s1406 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8640 = ((uint64_t ) t8631);
    s1407 = (((uint128_t ) t8630) + ((uint128_t ) t8638));
    t8641 = ((uint64_t ) s1407);
    c717 = (s1407 >> 64);
    s1408 = (((uint128_t ) t8633) + ((uint128_t ) t8639));
    s1409 = (((uint128_t ) s1408) + ((uint128_t ) c717));
    t8642 = ((uint64_t ) s1409);
    c718 = (s1409 >> 64);
    s1410 = (((uint128_t ) t8632) + ((uint128_t ) c716));
    s1411 = (((uint128_t ) s1410) + ((uint128_t ) c718));
    t8643 = ((uint64_t ) s1411);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25462 = (((uint128_t ) t6768)*((uint128_t ) t6758));
    t8644 = (a25462 >> 64);
    t8645 = ((uint64_t ) a25462);
    a25463 = (((uint128_t ) t6767)*((uint128_t ) t6757));
    t8646 = (a25463 >> 64);
    t8647 = ((uint64_t ) a25463);
    a25464 = (((uint128_t ) t6767)*((uint128_t ) t6758));
    t8648 = (a25464 >> 64);
    t8649 = ((uint64_t ) a25464);
    a25465 = (((uint128_t ) t6768)*((uint128_t ) t6757));
    t8650 = (a25465 >> 64);
    t8651 = ((uint64_t ) a25465);
    /* MPAddQDD 64 */
    s1412 = (((uint128_t ) t8649) + ((uint128_t ) t8651));
    t8652 = ((uint64_t ) s1412);
    c719 = (s1412 >> 64);
    s1413 = (((uint128_t ) t8648) + ((uint128_t ) t8650));
    s1414 = (((uint128_t ) s1413) + ((uint128_t ) c719));
    t8653 = ((uint64_t ) s1414);
    c720 = (s1414 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8654 = ((uint64_t ) t8645);
    s1415 = (((uint128_t ) t8644) + ((uint128_t ) t8652));
    t8655 = ((uint64_t ) s1415);
    c721 = (s1415 >> 64);
    s1416 = (((uint128_t ) t8647) + ((uint128_t ) t8653));
    s1417 = (((uint128_t ) s1416) + ((uint128_t ) c721));
    t8656 = ((uint64_t ) s1417);
    c722 = (s1417 >> 64);
    s1418 = (((uint128_t ) t8646) + ((uint128_t ) c720));
    s1419 = (((uint128_t ) s1418) + ((uint128_t ) c722));
    t8657 = ((uint64_t ) s1419);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25466 = (((uint128_t ) t6766)*((uint128_t ) t6760));
    t8658 = (a25466 >> 64);
    t8659 = ((uint64_t ) a25466);
    a25467 = (((uint128_t ) t6765)*((uint128_t ) t6759));
    t8660 = (a25467 >> 64);
    t8661 = ((uint64_t ) a25467);
    a25468 = (((uint128_t ) t6765)*((uint128_t ) t6760));
    t8662 = (a25468 >> 64);
    t8663 = ((uint64_t ) a25468);
    a25469 = (((uint128_t ) t6766)*((uint128_t ) t6759));
    t8664 = (a25469 >> 64);
    t8665 = ((uint64_t ) a25469);
    /* MPAddQDD 64 */
    s1420 = (((uint128_t ) t8663) + ((uint128_t ) t8665));
    t8666 = ((uint64_t ) s1420);
    c723 = (s1420 >> 64);
    s1421 = (((uint128_t ) t8662) + ((uint128_t ) t8664));
    s1422 = (((uint128_t ) s1421) + ((uint128_t ) c723));
    t8667 = ((uint64_t ) s1422);
    c724 = (s1422 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8668 = ((uint64_t ) t8659);
    s1423 = (((uint128_t ) t8658) + ((uint128_t ) t8666));
    t8669 = ((uint64_t ) s1423);
    c725 = (s1423 >> 64);
    s1424 = (((uint128_t ) t8661) + ((uint128_t ) t8667));
    s1425 = (((uint128_t ) s1424) + ((uint128_t ) c725));
    t8670 = ((uint64_t ) s1425);
    c726 = (s1425 >> 64);
    s1426 = (((uint128_t ) t8660) + ((uint128_t ) c724));
    s1427 = (((uint128_t ) s1426) + ((uint128_t ) c726));
    t8671 = ((uint64_t ) s1427);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1428 = (((uint128_t ) t8654) + ((uint128_t ) t8668));
    t8672 = ((uint64_t ) s1428);
    c727 = (s1428 >> 64);
    s1429 = (((uint128_t ) t8655) + ((uint128_t ) t8669));
    s1430 = (((uint128_t ) s1429) + ((uint128_t ) c727));
    t8673 = ((uint64_t ) s1430);
    c728 = (s1430 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1431 = (((uint128_t ) t8656) + ((uint128_t ) t8670));
    t8674 = ((uint64_t ) s1431);
    c729 = (s1431 >> 64);
    s1432 = (((uint128_t ) t8657) + ((uint128_t ) t8671));
    s1433 = (((uint128_t ) s1432) + ((uint128_t ) c729));
    t8675 = ((uint64_t ) s1433);
    c730 = (s1433 >> 64);
    /* MPPropagateCarry 64 */
    t8676 = (t8674 + c728);
    a25470 = ((t8676 == 0));
    a25471 = (t8675 + c728);
    t8677 = ((a25470) ? (a25471) : (t8675));
    a25472 = ((t8677 == 0));
    a25473 = ((a25472) && (a25470));
    a25474 = (c730 + c728);
    t8678 = ((a25473) ? (a25474) : (c730));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t8680 = ((uint64_t ) t8626);
    t8681 = ((uint64_t ) t8627);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1434 = (((uint128_t ) t8628) + ((uint128_t ) t8672));
    t8682 = ((uint64_t ) s1434);
    c731 = (s1434 >> 64);
    s1435 = (((uint128_t ) t8629) + ((uint128_t ) t8673));
    s1436 = (((uint128_t ) s1435) + ((uint128_t ) c731));
    t8683 = ((uint64_t ) s1436);
    c732 = (s1436 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1437 = (((uint128_t ) t8640) + ((uint128_t ) t8676));
    t8684 = ((uint64_t ) s1437);
    c733 = (s1437 >> 64);
    s1438 = (((uint128_t ) t8641) + ((uint128_t ) t8677));
    s1439 = (((uint128_t ) s1438) + ((uint128_t ) c733));
    t8685 = ((uint64_t ) s1439);
    c734 = (s1439 >> 64);
    /* MPPropagateCarry 64 */
    t8686 = (t8684 + c732);
    a25483 = ((t8686 == 0));
    a25484 = (t8685 + c732);
    t8687 = ((a25483) ? (a25484) : (t8685));
    a25485 = ((t8687 == 0));
    a25486 = ((a25485) && (a25483));
    a25487 = (c734 + c732);
    t8688 = ((a25486) ? (a25487) : (c734));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1440 = (((uint128_t ) t8642) + ((uint128_t ) t8678));
    t8690 = ((uint64_t ) s1440);
    c735 = (s1440 >> 64);
    s1441 = (((uint128_t ) t8643) + ((uint128_t ) c735));
    t8691 = ((uint64_t ) s1441);
    /* MPPropagateCarry 64 */
    t8692 = (t8690 + t8688);
    a25491 = ((t8692 == 0));
    a25492 = (t8691 + t8688);
    t8693 = ((a25491) ? (a25492) : (t8691));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25498 = (((uint128_t ) t6762)*((uint128_t ) t6754));
    t8696 = (a25498 >> 64);
    t8697 = ((uint64_t ) a25498);
    a25499 = (((uint128_t ) t6761)*((uint128_t ) t6753));
    t8698 = (a25499 >> 64);
    t8699 = ((uint64_t ) a25499);
    a25500 = (((uint128_t ) t6761)*((uint128_t ) t6754));
    t8700 = (a25500 >> 64);
    t8701 = ((uint64_t ) a25500);
    a25501 = (((uint128_t ) t6762)*((uint128_t ) t6753));
    t8702 = (a25501 >> 64);
    t8703 = ((uint64_t ) a25501);
    /* MPAddQDD 64 */
    s1442 = (((uint128_t ) t8701) + ((uint128_t ) t8703));
    t8704 = ((uint64_t ) s1442);
    c737 = (s1442 >> 64);
    s1443 = (((uint128_t ) t8700) + ((uint128_t ) t8702));
    s1444 = (((uint128_t ) s1443) + ((uint128_t ) c737));
    t8705 = ((uint64_t ) s1444);
    c738 = (s1444 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8706 = ((uint64_t ) t8697);
    s1445 = (((uint128_t ) t8696) + ((uint128_t ) t8704));
    t8707 = ((uint64_t ) s1445);
    c739 = (s1445 >> 64);
    s1446 = (((uint128_t ) t8699) + ((uint128_t ) t8705));
    s1447 = (((uint128_t ) s1446) + ((uint128_t ) c739));
    t8708 = ((uint64_t ) s1447);
    c740 = (s1447 >> 64);
    s1448 = (((uint128_t ) t8698) + ((uint128_t ) c738));
    s1449 = (((uint128_t ) s1448) + ((uint128_t ) c740));
    t8709 = ((uint64_t ) s1449);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    t8710 = ((uint64_t ) 0);
    /* MPAddQDD 64 */
    s1450 = (((uint128_t ) t8710) + ((uint128_t ) t8710));
    t8711 = ((uint64_t ) s1450);
    c741 = (s1450 >> 64);
    s1451 = (((uint128_t ) 0) + ((uint128_t ) c741));
    t8712 = ((uint64_t ) s1451);
    c742 = (s1451 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8713 = ((uint64_t ) t8710);
    t8714 = ((uint64_t ) t8711);
    c743 = (t8711 >> 64);
    s1452 = (((uint128_t ) t8710) + ((uint128_t ) t8712));
    s1453 = (((uint128_t ) s1452) + ((uint128_t ) c743));
    t8715 = ((uint64_t ) s1453);
    c744 = (s1453 >> 64);
    s1454 = (((uint128_t ) 0) + ((uint128_t ) c742));
    s1455 = (((uint128_t ) s1454) + ((uint128_t ) c744));
    t8716 = ((uint64_t ) s1455);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25502 = (((uint128_t ) t6764)*((uint128_t ) t6754));
    t8717 = (a25502 >> 64);
    t8718 = ((uint64_t ) a25502);
    a25503 = (((uint128_t ) t6763)*((uint128_t ) t6753));
    t8719 = (a25503 >> 64);
    t8720 = ((uint64_t ) a25503);
    a25504 = (((uint128_t ) t6763)*((uint128_t ) t6754));
    t8721 = (a25504 >> 64);
    t8722 = ((uint64_t ) a25504);
    a25505 = (((uint128_t ) t6764)*((uint128_t ) t6753));
    t8723 = (a25505 >> 64);
    t8724 = ((uint64_t ) a25505);
    /* MPAddQDD 64 */
    s1456 = (((uint128_t ) t8722) + ((uint128_t ) t8724));
    t8725 = ((uint64_t ) s1456);
    c745 = (s1456 >> 64);
    s1457 = (((uint128_t ) t8721) + ((uint128_t ) t8723));
    s1458 = (((uint128_t ) s1457) + ((uint128_t ) c745));
    t8726 = ((uint64_t ) s1458);
    c746 = (s1458 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8727 = ((uint64_t ) t8718);
    s1459 = (((uint128_t ) t8717) + ((uint128_t ) t8725));
    t8728 = ((uint64_t ) s1459);
    c747 = (s1459 >> 64);
    s1460 = (((uint128_t ) t8720) + ((uint128_t ) t8726));
    s1461 = (((uint128_t ) s1460) + ((uint128_t ) c747));
    t8729 = ((uint64_t ) s1461);
    c748 = (s1461 >> 64);
    s1462 = (((uint128_t ) t8719) + ((uint128_t ) c746));
    s1463 = (((uint128_t ) s1462) + ((uint128_t ) c748));
    t8730 = ((uint64_t ) s1463);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1464 = (((uint128_t ) t8727) + ((uint128_t ) t8713));
    t8731 = ((uint64_t ) s1464);
    c749 = (s1464 >> 64);
    s1465 = (((uint128_t ) t8728) + ((uint128_t ) t8714));
    s1466 = (((uint128_t ) s1465) + ((uint128_t ) c749));
    t8732 = ((uint64_t ) s1466);
    c750 = (s1466 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1467 = (((uint128_t ) t8729) + ((uint128_t ) t8715));
    t8733 = ((uint64_t ) s1467);
    c751 = (s1467 >> 64);
    s1468 = (((uint128_t ) t8730) + ((uint128_t ) t8716));
    s1469 = (((uint128_t ) s1468) + ((uint128_t ) c751));
    t8734 = ((uint64_t ) s1469);
    /* MPPropagateCarry 64 */
    t8735 = (t8733 + c750);
    a25506 = ((t8735 == 0));
    a25507 = (t8734 + c750);
    t8736 = ((a25506) ? (a25507) : (t8734));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t8739 = ((uint64_t ) t8706);
    t8740 = ((uint64_t ) t8707);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1470 = (((uint128_t ) t8708) + ((uint128_t ) t8731));
    t8741 = ((uint64_t ) s1470);
    c753 = (s1470 >> 64);
    s1471 = (((uint128_t ) t8709) + ((uint128_t ) t8732));
    s1472 = (((uint128_t ) s1471) + ((uint128_t ) c753));
    t8742 = ((uint64_t ) s1472);
    c754 = (s1472 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1473 = (((uint128_t ) t8713) + ((uint128_t ) t8735));
    t8743 = ((uint64_t ) s1473);
    c755 = (s1473 >> 64);
    s1474 = (((uint128_t ) t8714) + ((uint128_t ) t8736));
    s1475 = (((uint128_t ) s1474) + ((uint128_t ) c755));
    t8744 = ((uint64_t ) s1475);
    /* MPPropagateCarry 64 */
    t8745 = (t8743 + c754);
    a25519 = ((t8745 == 0));
    a25520 = (t8744 + c754);
    t8746 = ((a25519) ? (a25520) : (t8744));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25534 = (((uint128_t ) t6762)*((uint128_t ) t6758));
    t8755 = (a25534 >> 64);
    t8756 = ((uint64_t ) a25534);
    a25535 = (((uint128_t ) t6761)*((uint128_t ) t6757));
    t8757 = (a25535 >> 64);
    t8758 = ((uint64_t ) a25535);
    a25536 = (((uint128_t ) t6761)*((uint128_t ) t6758));
    t8759 = (a25536 >> 64);
    t8760 = ((uint64_t ) a25536);
    a25537 = (((uint128_t ) t6762)*((uint128_t ) t6757));
    t8761 = (a25537 >> 64);
    t8762 = ((uint64_t ) a25537);
    /* MPAddQDD 64 */
    s1478 = (((uint128_t ) t8760) + ((uint128_t ) t8762));
    t8763 = ((uint64_t ) s1478);
    c759 = (s1478 >> 64);
    s1479 = (((uint128_t ) t8759) + ((uint128_t ) t8761));
    s1480 = (((uint128_t ) s1479) + ((uint128_t ) c759));
    t8764 = ((uint64_t ) s1480);
    c760 = (s1480 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8765 = ((uint64_t ) t8756);
    s1481 = (((uint128_t ) t8755) + ((uint128_t ) t8763));
    t8766 = ((uint64_t ) s1481);
    c761 = (s1481 >> 64);
    s1482 = (((uint128_t ) t8758) + ((uint128_t ) t8764));
    s1483 = (((uint128_t ) s1482) + ((uint128_t ) c761));
    t8767 = ((uint64_t ) s1483);
    c762 = (s1483 >> 64);
    s1484 = (((uint128_t ) t8757) + ((uint128_t ) c760));
    s1485 = (((uint128_t ) s1484) + ((uint128_t ) c762));
    t8768 = ((uint64_t ) s1485);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25538 = (((uint128_t ) t6764)*((uint128_t ) t6760));
    t8769 = (a25538 >> 64);
    t8770 = ((uint64_t ) a25538);
    a25539 = (((uint128_t ) t6763)*((uint128_t ) t6759));
    t8771 = (a25539 >> 64);
    t8772 = ((uint64_t ) a25539);
    a25540 = (((uint128_t ) t6763)*((uint128_t ) t6760));
    t8773 = (a25540 >> 64);
    t8774 = ((uint64_t ) a25540);
    a25541 = (((uint128_t ) t6764)*((uint128_t ) t6759));
    t8775 = (a25541 >> 64);
    t8776 = ((uint64_t ) a25541);
    /* MPAddQDD 64 */
    s1486 = (((uint128_t ) t8774) + ((uint128_t ) t8776));
    t8777 = ((uint64_t ) s1486);
    c763 = (s1486 >> 64);
    s1487 = (((uint128_t ) t8773) + ((uint128_t ) t8775));
    s1488 = (((uint128_t ) s1487) + ((uint128_t ) c763));
    t8778 = ((uint64_t ) s1488);
    c764 = (s1488 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8779 = ((uint64_t ) t8770);
    s1489 = (((uint128_t ) t8769) + ((uint128_t ) t8777));
    t8780 = ((uint64_t ) s1489);
    c765 = (s1489 >> 64);
    s1490 = (((uint128_t ) t8772) + ((uint128_t ) t8778));
    s1491 = (((uint128_t ) s1490) + ((uint128_t ) c765));
    t8781 = ((uint64_t ) s1491);
    c766 = (s1491 >> 64);
    s1492 = (((uint128_t ) t8771) + ((uint128_t ) c764));
    s1493 = (((uint128_t ) s1492) + ((uint128_t ) c766));
    t8782 = ((uint64_t ) s1493);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25542 = (((uint128_t ) t6764)*((uint128_t ) t6758));
    t8783 = (a25542 >> 64);
    t8784 = ((uint64_t ) a25542);
    a25543 = (((uint128_t ) t6763)*((uint128_t ) t6757));
    t8785 = (a25543 >> 64);
    t8786 = ((uint64_t ) a25543);
    a25544 = (((uint128_t ) t6763)*((uint128_t ) t6758));
    t8787 = (a25544 >> 64);
    t8788 = ((uint64_t ) a25544);
    a25545 = (((uint128_t ) t6764)*((uint128_t ) t6757));
    t8789 = (a25545 >> 64);
    t8790 = ((uint64_t ) a25545);
    /* MPAddQDD 64 */
    s1494 = (((uint128_t ) t8788) + ((uint128_t ) t8790));
    t8791 = ((uint64_t ) s1494);
    c767 = (s1494 >> 64);
    s1495 = (((uint128_t ) t8787) + ((uint128_t ) t8789));
    s1496 = (((uint128_t ) s1495) + ((uint128_t ) c767));
    t8792 = ((uint64_t ) s1496);
    c768 = (s1496 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8793 = ((uint64_t ) t8784);
    s1497 = (((uint128_t ) t8783) + ((uint128_t ) t8791));
    t8794 = ((uint64_t ) s1497);
    c769 = (s1497 >> 64);
    s1498 = (((uint128_t ) t8786) + ((uint128_t ) t8792));
    s1499 = (((uint128_t ) s1498) + ((uint128_t ) c769));
    t8795 = ((uint64_t ) s1499);
    c770 = (s1499 >> 64);
    s1500 = (((uint128_t ) t8785) + ((uint128_t ) c768));
    s1501 = (((uint128_t ) s1500) + ((uint128_t ) c770));
    t8796 = ((uint64_t ) s1501);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25546 = (((uint128_t ) t6762)*((uint128_t ) t6760));
    t8797 = (a25546 >> 64);
    t8798 = ((uint64_t ) a25546);
    a25547 = (((uint128_t ) t6761)*((uint128_t ) t6759));
    t8799 = (a25547 >> 64);
    t8800 = ((uint64_t ) a25547);
    a25548 = (((uint128_t ) t6761)*((uint128_t ) t6760));
    t8801 = (a25548 >> 64);
    t8802 = ((uint64_t ) a25548);
    a25549 = (((uint128_t ) t6762)*((uint128_t ) t6759));
    t8803 = (a25549 >> 64);
    t8804 = ((uint64_t ) a25549);
    /* MPAddQDD 64 */
    s1502 = (((uint128_t ) t8802) + ((uint128_t ) t8804));
    t8805 = ((uint64_t ) s1502);
    c771 = (s1502 >> 64);
    s1503 = (((uint128_t ) t8801) + ((uint128_t ) t8803));
    s1504 = (((uint128_t ) s1503) + ((uint128_t ) c771));
    t8806 = ((uint64_t ) s1504);
    c772 = (s1504 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8807 = ((uint64_t ) t8798);
    s1505 = (((uint128_t ) t8797) + ((uint128_t ) t8805));
    t8808 = ((uint64_t ) s1505);
    c773 = (s1505 >> 64);
    s1506 = (((uint128_t ) t8800) + ((uint128_t ) t8806));
    s1507 = (((uint128_t ) s1506) + ((uint128_t ) c773));
    t8809 = ((uint64_t ) s1507);
    c774 = (s1507 >> 64);
    s1508 = (((uint128_t ) t8799) + ((uint128_t ) c772));
    s1509 = (((uint128_t ) s1508) + ((uint128_t ) c774));
    t8810 = ((uint64_t ) s1509);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1510 = (((uint128_t ) t8793) + ((uint128_t ) t8807));
    t8811 = ((uint64_t ) s1510);
    c775 = (s1510 >> 64);
    s1511 = (((uint128_t ) t8794) + ((uint128_t ) t8808));
    s1512 = (((uint128_t ) s1511) + ((uint128_t ) c775));
    t8812 = ((uint64_t ) s1512);
    c776 = (s1512 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1513 = (((uint128_t ) t8795) + ((uint128_t ) t8809));
    t8813 = ((uint64_t ) s1513);
    c777 = (s1513 >> 64);
    s1514 = (((uint128_t ) t8796) + ((uint128_t ) t8810));
    s1515 = (((uint128_t ) s1514) + ((uint128_t ) c777));
    t8814 = ((uint64_t ) s1515);
    c778 = (s1515 >> 64);
    /* MPPropagateCarry 64 */
    t8815 = (t8813 + c776);
    a25550 = ((t8815 == 0));
    a25551 = (t8814 + c776);
    t8816 = ((a25550) ? (a25551) : (t8814));
    a25552 = ((t8816 == 0));
    a25553 = ((a25552) && (a25550));
    a25554 = (c778 + c776);
    t8817 = ((a25553) ? (a25554) : (c778));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t8819 = ((uint64_t ) t8765);
    t8820 = ((uint64_t ) t8766);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1516 = (((uint128_t ) t8767) + ((uint128_t ) t8811));
    t8821 = ((uint64_t ) s1516);
    c779 = (s1516 >> 64);
    s1517 = (((uint128_t ) t8768) + ((uint128_t ) t8812));
    s1518 = (((uint128_t ) s1517) + ((uint128_t ) c779));
    t8822 = ((uint64_t ) s1518);
    c780 = (s1518 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1519 = (((uint128_t ) t8779) + ((uint128_t ) t8815));
    t8823 = ((uint64_t ) s1519);
    c781 = (s1519 >> 64);
    s1520 = (((uint128_t ) t8780) + ((uint128_t ) t8816));
    s1521 = (((uint128_t ) s1520) + ((uint128_t ) c781));
    t8824 = ((uint64_t ) s1521);
    c782 = (s1521 >> 64);
    /* MPPropagateCarry 64 */
    t8825 = (t8823 + c780);
    a25563 = ((t8825 == 0));
    a25564 = (t8824 + c780);
    t8826 = ((a25563) ? (a25564) : (t8824));
    a25565 = ((t8826 == 0));
    a25566 = ((a25565) && (a25563));
    a25567 = (c782 + c780);
    t8827 = ((a25566) ? (a25567) : (c782));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1522 = (((uint128_t ) t8781) + ((uint128_t ) t8817));
    t8829 = ((uint64_t ) s1522);
    c783 = (s1522 >> 64);
    s1523 = (((uint128_t ) t8782) + ((uint128_t ) c783));
    t8830 = ((uint64_t ) s1523);
    /* MPPropagateCarry 64 */
    t8831 = (t8829 + t8827);
    a25571 = ((t8831 == 0));
    a25572 = (t8830 + t8827);
    t8832 = ((a25571) ? (a25572) : (t8830));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25578 = (((uint128_t ) t6766)*((uint128_t ) t6754));
    t8835 = (a25578 >> 64);
    t8836 = ((uint64_t ) a25578);
    a25579 = (((uint128_t ) t6765)*((uint128_t ) t6753));
    t8837 = (a25579 >> 64);
    t8838 = ((uint64_t ) a25579);
    a25580 = (((uint128_t ) t6765)*((uint128_t ) t6754));
    t8839 = (a25580 >> 64);
    t8840 = ((uint64_t ) a25580);
    a25581 = (((uint128_t ) t6766)*((uint128_t ) t6753));
    t8841 = (a25581 >> 64);
    t8842 = ((uint64_t ) a25581);
    /* MPAddQDD 64 */
    s1524 = (((uint128_t ) t8840) + ((uint128_t ) t8842));
    t8843 = ((uint64_t ) s1524);
    c785 = (s1524 >> 64);
    s1525 = (((uint128_t ) t8839) + ((uint128_t ) t8841));
    s1526 = (((uint128_t ) s1525) + ((uint128_t ) c785));
    t8844 = ((uint64_t ) s1526);
    c786 = (s1526 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8845 = ((uint64_t ) t8836);
    s1527 = (((uint128_t ) t8835) + ((uint128_t ) t8843));
    t8846 = ((uint64_t ) s1527);
    c787 = (s1527 >> 64);
    s1528 = (((uint128_t ) t8838) + ((uint128_t ) t8844));
    s1529 = (((uint128_t ) s1528) + ((uint128_t ) c787));
    t8847 = ((uint64_t ) s1529);
    c788 = (s1529 >> 64);
    s1530 = (((uint128_t ) t8837) + ((uint128_t ) c786));
    s1531 = (((uint128_t ) s1530) + ((uint128_t ) c788));
    t8848 = ((uint64_t ) s1531);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25582 = (((uint128_t ) t6768)*((uint128_t ) t6754));
    t8849 = (a25582 >> 64);
    t8850 = ((uint64_t ) a25582);
    a25583 = (((uint128_t ) t6767)*((uint128_t ) t6753));
    t8851 = (a25583 >> 64);
    t8852 = ((uint64_t ) a25583);
    a25584 = (((uint128_t ) t6767)*((uint128_t ) t6754));
    t8853 = (a25584 >> 64);
    t8854 = ((uint64_t ) a25584);
    a25585 = (((uint128_t ) t6768)*((uint128_t ) t6753));
    t8855 = (a25585 >> 64);
    t8856 = ((uint64_t ) a25585);
    /* MPAddQDD 64 */
    s1532 = (((uint128_t ) t8854) + ((uint128_t ) t8856));
    t8857 = ((uint64_t ) s1532);
    c789 = (s1532 >> 64);
    s1533 = (((uint128_t ) t8853) + ((uint128_t ) t8855));
    s1534 = (((uint128_t ) s1533) + ((uint128_t ) c789));
    t8858 = ((uint64_t ) s1534);
    c790 = (s1534 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8859 = ((uint64_t ) t8850);
    s1535 = (((uint128_t ) t8849) + ((uint128_t ) t8857));
    t8860 = ((uint64_t ) s1535);
    c791 = (s1535 >> 64);
    s1536 = (((uint128_t ) t8852) + ((uint128_t ) t8858));
    s1537 = (((uint128_t ) s1536) + ((uint128_t ) c791));
    t8861 = ((uint64_t ) s1537);
    c792 = (s1537 >> 64);
    s1538 = (((uint128_t ) t8851) + ((uint128_t ) c790));
    s1539 = (((uint128_t ) s1538) + ((uint128_t ) c792));
    t8862 = ((uint64_t ) s1539);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1540 = (((uint128_t ) t8859) + ((uint128_t ) t8713));
    t8863 = ((uint64_t ) s1540);
    c793 = (s1540 >> 64);
    s1541 = (((uint128_t ) t8860) + ((uint128_t ) t8714));
    s1542 = (((uint128_t ) s1541) + ((uint128_t ) c793));
    t8864 = ((uint64_t ) s1542);
    c794 = (s1542 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1543 = (((uint128_t ) t8861) + ((uint128_t ) t8715));
    t8865 = ((uint64_t ) s1543);
    c795 = (s1543 >> 64);
    s1544 = (((uint128_t ) t8862) + ((uint128_t ) t8716));
    s1545 = (((uint128_t ) s1544) + ((uint128_t ) c795));
    t8866 = ((uint64_t ) s1545);
    c796 = (s1545 >> 64);
    /* MPPropagateCarry 64 */
    t8867 = (t8865 + c794);
    a25586 = ((t8867 == 0));
    a25587 = (t8866 + c794);
    t8868 = ((a25586) ? (a25587) : (t8866));
    a25588 = ((t8868 == 0));
    a25589 = ((a25588) && (a25586));
    a25590 = (c796 + c794);
    t8869 = ((a25589) ? (a25590) : (c796));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t8871 = ((uint64_t ) t8845);
    t8872 = ((uint64_t ) t8846);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1546 = (((uint128_t ) t8847) + ((uint128_t ) t8863));
    t8873 = ((uint64_t ) s1546);
    c797 = (s1546 >> 64);
    s1547 = (((uint128_t ) t8848) + ((uint128_t ) t8864));
    s1548 = (((uint128_t ) s1547) + ((uint128_t ) c797));
    t8874 = ((uint64_t ) s1548);
    c798 = (s1548 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1549 = (((uint128_t ) t8713) + ((uint128_t ) t8867));
    t8875 = ((uint64_t ) s1549);
    c799 = (s1549 >> 64);
    s1550 = (((uint128_t ) t8714) + ((uint128_t ) t8868));
    s1551 = (((uint128_t ) s1550) + ((uint128_t ) c799));
    t8876 = ((uint64_t ) s1551);
    c800 = (s1551 >> 64);
    /* MPPropagateCarry 64 */
    t8877 = (t8875 + c798);
    a25599 = ((t8877 == 0));
    a25600 = (t8876 + c798);
    t8878 = ((a25599) ? (a25600) : (t8876));
    a25601 = ((t8878 == 0));
    a25602 = ((a25601) && (a25599));
    a25603 = (c800 + c798);
    t8879 = ((a25602) ? (a25603) : (c800));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1552 = (((uint128_t ) t8715) + ((uint128_t ) t8869));
    t8881 = ((uint64_t ) s1552);
    c801 = (s1552 >> 64);
    s1553 = (((uint128_t ) t8716) + ((uint128_t ) c801));
    t8882 = ((uint64_t ) s1553);
    /* MPPropagateCarry 64 */
    t8883 = (t8881 + t8879);
    a25607 = ((t8883 == 0));
    a25608 = (t8882 + t8879);
    t8884 = ((a25607) ? (a25608) : (t8882));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* MPAddQDD 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1554 = (((uint128_t ) t8819) + ((uint128_t ) t8871));
    t8887 = ((uint64_t ) s1554);
    c803 = (s1554 >> 64);
    s1555 = (((uint128_t ) t8820) + ((uint128_t ) t8872));
    s1556 = (((uint128_t ) s1555) + ((uint128_t ) c803));
    t8888 = ((uint64_t ) s1556);
    c804 = (s1556 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1557 = (((uint128_t ) t8821) + ((uint128_t ) t8873));
    t8889 = ((uint64_t ) s1557);
    c805 = (s1557 >> 64);
    s1558 = (((uint128_t ) t8822) + ((uint128_t ) t8874));
    s1559 = (((uint128_t ) s1558) + ((uint128_t ) c805));
    t8890 = ((uint64_t ) s1559);
    c806 = (s1559 >> 64);
    /* MPPropagateCarry 64 */
    t8891 = (t8889 + c804);
    a25614 = ((t8891 == 0));
    a25615 = (t8890 + c804);
    t8892 = ((a25614) ? (a25615) : (t8890));
    a25616 = ((t8892 == 0));
    a25617 = ((a25616) && (a25614));
    a25618 = (c806 + c804);
    t8893 = ((a25617) ? (a25618) : (c806));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1560 = (((uint128_t ) t8825) + ((uint128_t ) t8877));
    t8895 = ((uint64_t ) s1560);
    c807 = (s1560 >> 64);
    s1561 = (((uint128_t ) t8826) + ((uint128_t ) t8878));
    s1562 = (((uint128_t ) s1561) + ((uint128_t ) c807));
    t8896 = ((uint64_t ) s1562);
    c808 = (s1562 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1563 = (((uint128_t ) t8831) + ((uint128_t ) t8883));
    t8897 = ((uint64_t ) s1563);
    c809 = (s1563 >> 64);
    s1564 = (((uint128_t ) t8832) + ((uint128_t ) t8884));
    s1565 = (((uint128_t ) s1564) + ((uint128_t ) c809));
    t8898 = ((uint64_t ) s1565);
    c810 = (s1565 >> 64);
    /* MPPropagateCarry 64 */
    t8899 = (t8897 + c808);
    a25622 = ((t8899 == 0));
    a25623 = (t8898 + c808);
    t8900 = ((a25622) ? (a25623) : (t8898));
    a25624 = ((t8900 == 0));
    a25625 = ((a25624) && (a25622));
    a25626 = (c810 + c808);
    t8901 = ((a25625) ? (a25626) : (c810));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    s1566 = (((uint128_t ) t8895) + ((uint128_t ) t8893));
    t8903 = ((uint64_t ) s1566);
    c811 = (s1566 >> 64);
    s1567 = (((uint128_t ) t8896) + ((uint128_t ) c811));
    t8904 = ((uint64_t ) s1567);
    /* MPEqualDI 64 */
    a25630 = ((t8904 == 0));
    a25631 = ((t8903 == 0));
    a25632 = ((a25630) && (a25631));
    /* MPAddDDI 64 */
    s1568 = (((uint128_t ) t8899) + ((uint128_t ) t8893));
    t8905 = ((uint64_t ) s1568);
    c812 = (s1568 >> 64);
    s1569 = (((uint128_t ) t8900) + ((uint128_t ) c812));
    t8906 = ((uint64_t ) s1569);
    /* MPCondD 64 */
    t8907 = ((a25632) ? (t8906) : (t8900));
    t8908 = ((a25632) ? (t8905) : (t8899));
    /* MPEqualDI 64 */
    a25633 = ((t8907 == 0));
    a25634 = ((t8908 == 0));
    a25635 = ((a25633) && (a25634));
    /* MPEqualDI 64 */
    a25636 = ((a25635) && (a25632));
    /* MPAddDII 64 */
    t8909 = (t8901 + t8893);
    /* MPCondDDI 64 */
    t8910 = ((a25636) ? (t8909) : (t8901));
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPTypeCastDI 128 */
    /* MPTypeCastDI 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    t3582 = ((uint64_t ) t8680);
    t3581 = ((uint64_t ) t8681);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    t3578 = ((uint64_t ) t8682);
    t8911 = ((uint64_t ) t8683);
    /* MPPropagateCarry 64 */
    t3573 = t8911;
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1570 = (((uint128_t ) t8686) + ((uint128_t ) t8887));
    t8912 = ((uint64_t ) s1570);
    c813 = (s1570 >> 64);
    s1571 = (((uint128_t ) t8687) + ((uint128_t ) t8888));
    s1572 = (((uint128_t ) s1571) + ((uint128_t ) c813));
    t8913 = ((uint64_t ) s1572);
    c814 = (s1572 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1573 = (((uint128_t ) t8692) + ((uint128_t ) t8891));
    t8914 = ((uint64_t ) s1573);
    c815 = (s1573 >> 64);
    s1574 = (((uint128_t ) t8693) + ((uint128_t ) t8892));
    s1575 = (((uint128_t ) s1574) + ((uint128_t ) c815));
    t8915 = ((uint64_t ) s1575);
    c816 = (s1575 >> 64);
    /* MPPropagateCarry 64 */
    t8916 = (t8914 + c814);
    a25640 = ((t8916 == 0));
    a25641 = (t8915 + c814);
    t8917 = ((a25640) ? (a25641) : (t8915));
    a25642 = ((t8917 == 0));
    a25643 = ((a25642) && (a25640));
    a25644 = (c816 + c814);
    t8918 = ((a25643) ? (a25644) : (c816));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    t6726 = ((uint64_t ) t8912);
    c817 = (t8912 >> 64);
    s1576 = (((uint128_t ) t8913) + ((uint128_t ) c817));
    t6725 = ((uint64_t ) s1576);
    /* MPEqualDI 64 */
    a25648 = ((t6725 == 0));
    a25649 = ((t6726 == 0));
    a25650 = ((a25648) && (a25649));
    /* MPAddDDI 64 */
    t8920 = ((uint64_t ) t8916);
    c818 = (t8916 >> 64);
    s1577 = (((uint128_t ) t8917) + ((uint128_t ) c818));
    t8921 = ((uint64_t ) s1577);
    /* MPCondD 64 */
    t6727 = ((a25650) ? (t8921) : (t8917));
    t6728 = ((a25650) ? (t8920) : (t8916));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDII 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1578 = (((uint128_t ) t8739) + ((uint128_t ) t8903));
    t8922 = ((uint64_t ) s1578);
    c819 = (s1578 >> 64);
    s1579 = (((uint128_t ) t8740) + ((uint128_t ) t8904));
    s1580 = (((uint128_t ) s1579) + ((uint128_t ) c819));
    t8923 = ((uint64_t ) s1580);
    c820 = (s1580 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1581 = (((uint128_t ) t8741) + ((uint128_t ) t8908));
    t8924 = ((uint64_t ) s1581);
    c821 = (s1581 >> 64);
    s1582 = (((uint128_t ) t8742) + ((uint128_t ) t8907));
    s1583 = (((uint128_t ) s1582) + ((uint128_t ) c821));
    t8925 = ((uint64_t ) s1583);
    c822 = (s1583 >> 64);
    /* MPPropagateCarry 64 */
    t8926 = (t8924 + c820);
    a25655 = ((t8926 == 0));
    a25656 = (t8925 + c820);
    t8927 = ((a25655) ? (a25656) : (t8925));
    a25657 = ((t8927 == 0));
    a25658 = ((a25657) && (a25655));
    a25659 = (c822 + c820);
    t8928 = ((a25658) ? (a25659) : (c822));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1584 = (((uint128_t ) t8922) + ((uint128_t ) t8918));
    t6736 = ((uint64_t ) s1584);
    c823 = (s1584 >> 64);
    s1585 = (((uint128_t ) t8923) + ((uint128_t ) c823));
    t6735 = ((uint64_t ) s1585);
    /* MPEqualDI 64 */
    a25663 = ((t6735 == 0));
    a25664 = ((t6736 == 0));
    a25665 = ((a25663) && (a25664));
    /* MPAddDDD 64 */
    s1586 = (((uint128_t ) t8926) + ((uint128_t ) t8918));
    t8930 = ((uint64_t ) s1586);
    c824 = (s1586 >> 64);
    s1587 = (((uint128_t ) t8927) + ((uint128_t ) c824));
    t8931 = ((uint64_t ) s1587);
    /* MPCondD 64 */
    t6737 = ((a25665) ? (t8931) : (t8927));
    t6738 = ((a25665) ? (t8930) : (t8926));
    /* MPEqualDI 64 */
    a25666 = ((t6737 == 0));
    a25667 = ((t6738 == 0));
    a25668 = ((a25666) && (a25667));
    /* MPEqualDI 64 */
    a25669 = ((a25668) && (a25665));
    /* MPAddDDI 64 */
    s1588 = (((uint128_t ) t8918) + ((uint128_t ) t8928));
    t8932 = ((uint64_t ) s1588);
    c825 = (s1588 >> 64);
    s1589 = (((uint128_t ) 0) + ((uint128_t ) c825));
    t8933 = ((uint64_t ) s1589);
    /* MPCondDDI 64 */
    t8934 = ((a25669) ? (t8933) : (0));
    t8935 = ((a25669) ? (t8932) : (t8928));
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQID 128 */
    /* MPAddQDD 64 */
    s1590 = (((uint128_t ) t8745) + ((uint128_t ) t8910));
    t8936 = ((uint64_t ) s1590);
    c826 = (s1590 >> 64);
    s1591 = (((uint128_t ) t8746) + ((uint128_t ) c826));
    t8937 = ((uint64_t ) s1591);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    /* MPExtractLow 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1594 = (((uint128_t ) t8936) + ((uint128_t ) t8935));
    t6746 = ((uint64_t ) s1594);
    c830 = (s1594 >> 64);
    s1595 = (((uint128_t ) t8937) + ((uint128_t ) t8934));
    s1596 = (((uint128_t ) s1595) + ((uint128_t ) c830));
    t6745 = ((uint64_t ) s1596);
    /* MPEqualDI 64 */
    /* MPAddDDD 64 */
    /* MPCondD 64 */
    /* MPExtractLow 128 */
    /* End of MPAddQQQ 256 */
    /* End of MPMulQDD_Schoolbook_Full */
}

__device__ void MPMulQDD_L3_2(uint64_t &t6747, uint64_t &t6748, uint64_t &t6745, uint64_t &t6746, uint64_t &t6737, uint64_t &t6738, uint64_t &t6735, uint64_t &t6736, uint64_t &t6727, uint64_t &t6728, uint64_t &t6725, uint64_t &t6726, uint64_t &t3573, uint64_t &t3578, uint64_t &t3581, uint64_t &t3582, uint64_t t6763, uint64_t t6764, uint64_t t6761, uint64_t t6762, uint64_t t6767, uint64_t t6768, uint64_t t6765, uint64_t t6766, uint64_t t6755, uint64_t t6756, uint64_t t6753, uint64_t t6754, uint64_t t6759, uint64_t t6760, uint64_t t6757, uint64_t t6758) {
    int a25689, a25691, a25692, a25702, a25704, a25705, a25710, a25757, 
            a25759, a25760, a25770, a25772, a25773, a25778, a25793, a25795, 
            a25796, a25806, a25808, a25809, a25814, a25821, a25823, a25824, 
            a25829, a25837, a25838, a25839, a25847, a25849, a25850, a25855, 
            a25856, a25857, a25862, a25870, a25871, a25872, c832, c833, 
            c834, c835, c836, c837, c838, c839, c840, c841, 
            c842, c843, c844, c845, c846, c847, c848, c849, 
            c850, c851, c852, c853, c854, c855, c856, c858, 
            c859, c860, c861, c862, c863, c864, c865, c866, 
            c870, c876, c877, c878, c879, c880, c881, c882, 
            c883, c884, c885, c886, c887, c888, c889, c890, 
            c891, c892, c894, c895, c896, c897, c898, c899, 
            c900, c901, c902, c903, c904, c905, c906, c907, 
            c908, c909, c910, c912, c913, c914, c915, c916, 
            c917, c918, c920, c921, c922, c923, c924, c925, 
            c926, c927, c928, c929, c930, c932, c933;
    uint64_t a25690, a25693, a25703, a25706, a25711, a25758, a25761, a25771, 
            a25774, a25779, a25794, a25797, a25807, a25810, a25815, a25822, 
            a25825, a25830, a25848, a25851, a25863, t8942, t8943, t8944, 
            t8945, t8946, t8947, t8948, t8949, t8950, t8951, t8952, 
            t8953, t8954, t8955, t8956, t8957, t8958, t8959, t8960, 
            t8961, t8962, t8963, t8964, t8965, t8966, t8967, t8968, 
            t8969, t8970, t8971, t8972, t8973, t8974, t8975, t8976, 
            t8977, t8978, t8979, t8980, t8981, t8982, t8983, t8984, 
            t8985, t8986, t8987, t8988, t8989, t8990, t8991, t8992, 
            t8993, t8994, t8995, t8996, t8997, t8998, t8999, t9000, 
            t9001, t9002, t9003, t9004, t9006, t9007, t9008, t9009, 
            t9010, t9011, t9012, t9013, t9014, t9016, t9017, t9018, 
            t9019, t9022, t9023, t9024, t9025, t9026, t9027, t9028, 
            t9029, t9030, t9031, t9032, t9033, t9034, t9035, t9036, 
            t9037, t9038, t9039, t9040, t9041, t9042, t9043, t9044, 
            t9051, t9052, t9053, t9054, t9067, t9068, t9069, t9070, 
            t9071, t9072, t9073, t9074, t9075, t9076, t9077, t9078, 
            t9079, t9080, t9081, t9082, t9083, t9084, t9085, t9086, 
            t9087, t9088, t9089, t9090, t9091, t9092, t9093, t9094, 
            t9095, t9096, t9097, t9098, t9099, t9100, t9101, t9103, 
            t9104, t9105, t9106, t9107, t9108, t9109, t9110, t9111, 
            t9113, t9114, t9115, t9116, t9119, t9120, t9121, t9122, 
            t9123, t9124, t9125, t9126, t9127, t9128, t9129, t9130, 
            t9131, t9132, t9133, t9134, t9135, t9136, t9137, t9138, 
            t9139, t9140, t9141, t9142, t9143, t9144, t9145, t9146, 
            t9147, t9148, t9149, t9150, t9151, t9152, t9153, t9155, 
            t9156, t9157, t9158, t9159, t9160, t9161, t9162, t9163, 
            t9165, t9166, t9167, t9168, t9171, t9172, t9173, t9174, 
            t9175, t9176, t9177, t9179, t9180, t9181, t9182, t9183, 
            t9184, t9187, t9188, t9189, t9190, t9191, t9192, t9195, 
            t9196, t9197, t9198, t9199, t9200, t9201, t9202, t9204, 
            t9205, t9206, t9207, t9208, t9209, t9210, t9211, t9214, 
            t9215;
    uint128_t a25673, a25674, a25675, a25676, a25677, a25678, a25679, a25680, 
            a25681, a25682, a25683, a25684, a25685, a25686, a25687, a25688, 
            a25717, a25718, a25719, a25720, a25749, a25750, a25751, a25752, 
            a25753, a25754, a25755, a25756, a25785, a25786, a25787, a25788, 
            a25789, a25790, a25791, a25792, s1600, s1601, s1602, s1603, 
            s1604, s1605, s1606, s1607, s1608, s1609, s1610, s1611, 
            s1612, s1613, s1614, s1615, s1616, s1617, s1618, s1619, 
            s1620, s1621, s1622, s1623, s1624, s1625, s1626, s1627, 
            s1628, s1629, s1630, s1631, s1632, s1633, s1634, s1635, 
            s1636, s1637, s1638, s1639, s1640, s1641, s1642, s1643, 
            s1644, s1645, s1646, s1647, s1648, s1649, s1650, s1651, 
            s1652, s1653, s1654, s1655, s1656, s1657, s1658, s1659, 
            s1660, s1661, s1662, s1666, s1667, s1668, s1674, s1675, 
            s1676, s1677, s1678, s1679, s1680, s1681, s1682, s1683, 
            s1684, s1685, s1686, s1687, s1688, s1689, s1690, s1691, 
            s1692, s1693, s1694, s1695, s1696, s1697, s1698, s1699, 
            s1700, s1701, s1702, s1703, s1704, s1705, s1706, s1707, 
            s1708, s1709, s1710, s1711, s1712, s1713, s1714, s1715, 
            s1716, s1717, s1718, s1719, s1720, s1721, s1722, s1723, 
            s1724, s1725, s1726, s1727, s1728, s1729, s1730, s1731, 
            s1732, s1733, s1734, s1735, s1736, s1737, s1738, s1739, 
            s1740, s1741, s1742, s1743, s1744, s1745, s1746, s1747, 
            s1748, s1749, s1750, s1751, s1752, s1753, s1754, s1755, 
            s1756, s1757, s1758, s1759, s1760, s1761, s1762, s1763, 
            s1764, s1765, s1766, s1767;
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25673 = (((uint128_t ) t6766)*((uint128_t ) t6758));
    t8942 = (a25673 >> 64);
    t8943 = ((uint64_t ) a25673);
    a25674 = (((uint128_t ) t6765)*((uint128_t ) t6757));
    t8944 = (a25674 >> 64);
    t8945 = ((uint64_t ) a25674);
    a25675 = (((uint128_t ) t6765)*((uint128_t ) t6758));
    t8946 = (a25675 >> 64);
    t8947 = ((uint64_t ) a25675);
    a25676 = (((uint128_t ) t6766)*((uint128_t ) t6757));
    t8948 = (a25676 >> 64);
    t8949 = ((uint64_t ) a25676);
    /* MPAddQDD 64 */
    s1600 = (((uint128_t ) t8947) + ((uint128_t ) t8949));
    t8950 = ((uint64_t ) s1600);
    c832 = (s1600 >> 64);
    s1601 = (((uint128_t ) t8946) + ((uint128_t ) t8948));
    s1602 = (((uint128_t ) s1601) + ((uint128_t ) c832));
    t8951 = ((uint64_t ) s1602);
    c833 = (s1602 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8952 = ((uint64_t ) t8943);
    s1603 = (((uint128_t ) t8942) + ((uint128_t ) t8950));
    t8953 = ((uint64_t ) s1603);
    c834 = (s1603 >> 64);
    s1604 = (((uint128_t ) t8945) + ((uint128_t ) t8951));
    s1605 = (((uint128_t ) s1604) + ((uint128_t ) c834));
    t8954 = ((uint64_t ) s1605);
    c835 = (s1605 >> 64);
    s1606 = (((uint128_t ) t8944) + ((uint128_t ) c833));
    s1607 = (((uint128_t ) s1606) + ((uint128_t ) c835));
    t8955 = ((uint64_t ) s1607);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25677 = (((uint128_t ) t6768)*((uint128_t ) t6760));
    t8956 = (a25677 >> 64);
    t8957 = ((uint64_t ) a25677);
    a25678 = (((uint128_t ) t6767)*((uint128_t ) t6759));
    t8958 = (a25678 >> 64);
    t8959 = ((uint64_t ) a25678);
    a25679 = (((uint128_t ) t6767)*((uint128_t ) t6760));
    t8960 = (a25679 >> 64);
    t8961 = ((uint64_t ) a25679);
    a25680 = (((uint128_t ) t6768)*((uint128_t ) t6759));
    t8962 = (a25680 >> 64);
    t8963 = ((uint64_t ) a25680);
    /* MPAddQDD 64 */
    s1608 = (((uint128_t ) t8961) + ((uint128_t ) t8963));
    t8964 = ((uint64_t ) s1608);
    c836 = (s1608 >> 64);
    s1609 = (((uint128_t ) t8960) + ((uint128_t ) t8962));
    s1610 = (((uint128_t ) s1609) + ((uint128_t ) c836));
    t8965 = ((uint64_t ) s1610);
    c837 = (s1610 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8966 = ((uint64_t ) t8957);
    s1611 = (((uint128_t ) t8956) + ((uint128_t ) t8964));
    t8967 = ((uint64_t ) s1611);
    c838 = (s1611 >> 64);
    s1612 = (((uint128_t ) t8959) + ((uint128_t ) t8965));
    s1613 = (((uint128_t ) s1612) + ((uint128_t ) c838));
    t8968 = ((uint64_t ) s1613);
    c839 = (s1613 >> 64);
    s1614 = (((uint128_t ) t8958) + ((uint128_t ) c837));
    s1615 = (((uint128_t ) s1614) + ((uint128_t ) c839));
    t8969 = ((uint64_t ) s1615);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25681 = (((uint128_t ) t6768)*((uint128_t ) t6758));
    t8970 = (a25681 >> 64);
    t8971 = ((uint64_t ) a25681);
    a25682 = (((uint128_t ) t6767)*((uint128_t ) t6757));
    t8972 = (a25682 >> 64);
    t8973 = ((uint64_t ) a25682);
    a25683 = (((uint128_t ) t6767)*((uint128_t ) t6758));
    t8974 = (a25683 >> 64);
    t8975 = ((uint64_t ) a25683);
    a25684 = (((uint128_t ) t6768)*((uint128_t ) t6757));
    t8976 = (a25684 >> 64);
    t8977 = ((uint64_t ) a25684);
    /* MPAddQDD 64 */
    s1616 = (((uint128_t ) t8975) + ((uint128_t ) t8977));
    t8978 = ((uint64_t ) s1616);
    c840 = (s1616 >> 64);
    s1617 = (((uint128_t ) t8974) + ((uint128_t ) t8976));
    s1618 = (((uint128_t ) s1617) + ((uint128_t ) c840));
    t8979 = ((uint64_t ) s1618);
    c841 = (s1618 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8980 = ((uint64_t ) t8971);
    s1619 = (((uint128_t ) t8970) + ((uint128_t ) t8978));
    t8981 = ((uint64_t ) s1619);
    c842 = (s1619 >> 64);
    s1620 = (((uint128_t ) t8973) + ((uint128_t ) t8979));
    s1621 = (((uint128_t ) s1620) + ((uint128_t ) c842));
    t8982 = ((uint64_t ) s1621);
    c843 = (s1621 >> 64);
    s1622 = (((uint128_t ) t8972) + ((uint128_t ) c841));
    s1623 = (((uint128_t ) s1622) + ((uint128_t ) c843));
    t8983 = ((uint64_t ) s1623);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25685 = (((uint128_t ) t6766)*((uint128_t ) t6760));
    t8984 = (a25685 >> 64);
    t8985 = ((uint64_t ) a25685);
    a25686 = (((uint128_t ) t6765)*((uint128_t ) t6759));
    t8986 = (a25686 >> 64);
    t8987 = ((uint64_t ) a25686);
    a25687 = (((uint128_t ) t6765)*((uint128_t ) t6760));
    t8988 = (a25687 >> 64);
    t8989 = ((uint64_t ) a25687);
    a25688 = (((uint128_t ) t6766)*((uint128_t ) t6759));
    t8990 = (a25688 >> 64);
    t8991 = ((uint64_t ) a25688);
    /* MPAddQDD 64 */
    s1624 = (((uint128_t ) t8989) + ((uint128_t ) t8991));
    t8992 = ((uint64_t ) s1624);
    c844 = (s1624 >> 64);
    s1625 = (((uint128_t ) t8988) + ((uint128_t ) t8990));
    s1626 = (((uint128_t ) s1625) + ((uint128_t ) c844));
    t8993 = ((uint64_t ) s1626);
    c845 = (s1626 >> 64);
    /* Begin of MPAddQQQ 64 */
    t8994 = ((uint64_t ) t8985);
    s1627 = (((uint128_t ) t8984) + ((uint128_t ) t8992));
    t8995 = ((uint64_t ) s1627);
    c846 = (s1627 >> 64);
    s1628 = (((uint128_t ) t8987) + ((uint128_t ) t8993));
    s1629 = (((uint128_t ) s1628) + ((uint128_t ) c846));
    t8996 = ((uint64_t ) s1629);
    c847 = (s1629 >> 64);
    s1630 = (((uint128_t ) t8986) + ((uint128_t ) c845));
    s1631 = (((uint128_t ) s1630) + ((uint128_t ) c847));
    t8997 = ((uint64_t ) s1631);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1632 = (((uint128_t ) t8980) + ((uint128_t ) t8994));
    t8998 = ((uint64_t ) s1632);
    c848 = (s1632 >> 64);
    s1633 = (((uint128_t ) t8981) + ((uint128_t ) t8995));
    s1634 = (((uint128_t ) s1633) + ((uint128_t ) c848));
    t8999 = ((uint64_t ) s1634);
    c849 = (s1634 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1635 = (((uint128_t ) t8982) + ((uint128_t ) t8996));
    t9000 = ((uint64_t ) s1635);
    c850 = (s1635 >> 64);
    s1636 = (((uint128_t ) t8983) + ((uint128_t ) t8997));
    s1637 = (((uint128_t ) s1636) + ((uint128_t ) c850));
    t9001 = ((uint64_t ) s1637);
    c851 = (s1637 >> 64);
    /* MPPropagateCarry 64 */
    t9002 = (t9000 + c849);
    a25689 = ((t9002 == 0));
    a25690 = (t9001 + c849);
    t9003 = ((a25689) ? (a25690) : (t9001));
    a25691 = ((t9003 == 0));
    a25692 = ((a25691) && (a25689));
    a25693 = (c851 + c849);
    t9004 = ((a25692) ? (a25693) : (c851));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t9006 = ((uint64_t ) t8952);
    t9007 = ((uint64_t ) t8953);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1638 = (((uint128_t ) t8954) + ((uint128_t ) t8998));
    t9008 = ((uint64_t ) s1638);
    c852 = (s1638 >> 64);
    s1639 = (((uint128_t ) t8955) + ((uint128_t ) t8999));
    s1640 = (((uint128_t ) s1639) + ((uint128_t ) c852));
    t9009 = ((uint64_t ) s1640);
    c853 = (s1640 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1641 = (((uint128_t ) t8966) + ((uint128_t ) t9002));
    t9010 = ((uint64_t ) s1641);
    c854 = (s1641 >> 64);
    s1642 = (((uint128_t ) t8967) + ((uint128_t ) t9003));
    s1643 = (((uint128_t ) s1642) + ((uint128_t ) c854));
    t9011 = ((uint64_t ) s1643);
    c855 = (s1643 >> 64);
    /* MPPropagateCarry 64 */
    t9012 = (t9010 + c853);
    a25702 = ((t9012 == 0));
    a25703 = (t9011 + c853);
    t9013 = ((a25702) ? (a25703) : (t9011));
    a25704 = ((t9013 == 0));
    a25705 = ((a25704) && (a25702));
    a25706 = (c855 + c853);
    t9014 = ((a25705) ? (a25706) : (c855));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1644 = (((uint128_t ) t8968) + ((uint128_t ) t9004));
    t9016 = ((uint64_t ) s1644);
    c856 = (s1644 >> 64);
    s1645 = (((uint128_t ) t8969) + ((uint128_t ) c856));
    t9017 = ((uint64_t ) s1645);
    /* MPPropagateCarry 64 */
    t9018 = (t9016 + t9014);
    a25710 = ((t9018 == 0));
    a25711 = (t9017 + t9014);
    t9019 = ((a25710) ? (a25711) : (t9017));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25717 = (((uint128_t ) t6762)*((uint128_t ) t6754));
    t9022 = (a25717 >> 64);
    t9023 = ((uint64_t ) a25717);
    a25718 = (((uint128_t ) t6761)*((uint128_t ) t6753));
    t9024 = (a25718 >> 64);
    t9025 = ((uint64_t ) a25718);
    a25719 = (((uint128_t ) t6761)*((uint128_t ) t6754));
    t9026 = (a25719 >> 64);
    t9027 = ((uint64_t ) a25719);
    a25720 = (((uint128_t ) t6762)*((uint128_t ) t6753));
    t9028 = (a25720 >> 64);
    t9029 = ((uint64_t ) a25720);
    /* MPAddQDD 64 */
    s1646 = (((uint128_t ) t9027) + ((uint128_t ) t9029));
    t9030 = ((uint64_t ) s1646);
    c858 = (s1646 >> 64);
    s1647 = (((uint128_t ) t9026) + ((uint128_t ) t9028));
    s1648 = (((uint128_t ) s1647) + ((uint128_t ) c858));
    t9031 = ((uint64_t ) s1648);
    c859 = (s1648 >> 64);
    /* Begin of MPAddQQQ 64 */
    t9032 = ((uint64_t ) t9023);
    s1649 = (((uint128_t ) t9022) + ((uint128_t ) t9030));
    t9033 = ((uint64_t ) s1649);
    c860 = (s1649 >> 64);
    s1650 = (((uint128_t ) t9025) + ((uint128_t ) t9031));
    s1651 = (((uint128_t ) s1650) + ((uint128_t ) c860));
    t9034 = ((uint64_t ) s1651);
    c861 = (s1651 >> 64);
    s1652 = (((uint128_t ) t9024) + ((uint128_t ) c859));
    s1653 = (((uint128_t ) s1652) + ((uint128_t ) c861));
    t9035 = ((uint64_t ) s1653);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    t9036 = ((uint64_t ) 0);
    /* MPAddQDD 64 */
    s1654 = (((uint128_t ) t9036) + ((uint128_t ) t9036));
    t9037 = ((uint64_t ) s1654);
    c862 = (s1654 >> 64);
    s1655 = (((uint128_t ) 0) + ((uint128_t ) c862));
    t9038 = ((uint64_t ) s1655);
    c863 = (s1655 >> 64);
    /* Begin of MPAddQQQ 64 */
    t9039 = ((uint64_t ) t9036);
    t9040 = ((uint64_t ) t9037);
    c864 = (t9037 >> 64);
    s1656 = (((uint128_t ) t9036) + ((uint128_t ) t9038));
    s1657 = (((uint128_t ) s1656) + ((uint128_t ) c864));
    t9041 = ((uint64_t ) s1657);
    c865 = (s1657 >> 64);
    s1658 = (((uint128_t ) 0) + ((uint128_t ) c863));
    s1659 = (((uint128_t ) s1658) + ((uint128_t ) c865));
    t9042 = ((uint64_t ) s1659);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1660 = (((uint128_t ) t9039) + ((uint128_t ) t9039));
    t9043 = ((uint64_t ) s1660);
    c866 = (s1660 >> 64);
    s1661 = (((uint128_t ) t9040) + ((uint128_t ) t9040));
    s1662 = (((uint128_t ) s1661) + ((uint128_t ) c866));
    t9044 = ((uint64_t ) s1662);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t9051 = ((uint64_t ) t9032);
    t9052 = ((uint64_t ) t9033);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1666 = (((uint128_t ) t9034) + ((uint128_t ) t9043));
    t9053 = ((uint64_t ) s1666);
    c870 = (s1666 >> 64);
    s1667 = (((uint128_t ) t9035) + ((uint128_t ) t9044));
    s1668 = (((uint128_t ) s1667) + ((uint128_t ) c870));
    t9054 = ((uint64_t ) s1668);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25749 = (((uint128_t ) t6762)*((uint128_t ) t6758));
    t9067 = (a25749 >> 64);
    t9068 = ((uint64_t ) a25749);
    a25750 = (((uint128_t ) t6761)*((uint128_t ) t6757));
    t9069 = (a25750 >> 64);
    t9070 = ((uint64_t ) a25750);
    a25751 = (((uint128_t ) t6761)*((uint128_t ) t6758));
    t9071 = (a25751 >> 64);
    t9072 = ((uint64_t ) a25751);
    a25752 = (((uint128_t ) t6762)*((uint128_t ) t6757));
    t9073 = (a25752 >> 64);
    t9074 = ((uint64_t ) a25752);
    /* MPAddQDD 64 */
    s1674 = (((uint128_t ) t9072) + ((uint128_t ) t9074));
    t9075 = ((uint64_t ) s1674);
    c876 = (s1674 >> 64);
    s1675 = (((uint128_t ) t9071) + ((uint128_t ) t9073));
    s1676 = (((uint128_t ) s1675) + ((uint128_t ) c876));
    t9076 = ((uint64_t ) s1676);
    c877 = (s1676 >> 64);
    /* Begin of MPAddQQQ 64 */
    t9077 = ((uint64_t ) t9068);
    s1677 = (((uint128_t ) t9067) + ((uint128_t ) t9075));
    t9078 = ((uint64_t ) s1677);
    c878 = (s1677 >> 64);
    s1678 = (((uint128_t ) t9070) + ((uint128_t ) t9076));
    s1679 = (((uint128_t ) s1678) + ((uint128_t ) c878));
    t9079 = ((uint64_t ) s1679);
    c879 = (s1679 >> 64);
    s1680 = (((uint128_t ) t9069) + ((uint128_t ) c877));
    s1681 = (((uint128_t ) s1680) + ((uint128_t ) c879));
    t9080 = ((uint64_t ) s1681);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25753 = (((uint128_t ) t6762)*((uint128_t ) t6760));
    t9081 = (a25753 >> 64);
    t9082 = ((uint64_t ) a25753);
    a25754 = (((uint128_t ) t6761)*((uint128_t ) t6759));
    t9083 = (a25754 >> 64);
    t9084 = ((uint64_t ) a25754);
    a25755 = (((uint128_t ) t6761)*((uint128_t ) t6760));
    t9085 = (a25755 >> 64);
    t9086 = ((uint64_t ) a25755);
    a25756 = (((uint128_t ) t6762)*((uint128_t ) t6759));
    t9087 = (a25756 >> 64);
    t9088 = ((uint64_t ) a25756);
    /* MPAddQDD 64 */
    s1682 = (((uint128_t ) t9086) + ((uint128_t ) t9088));
    t9089 = ((uint64_t ) s1682);
    c880 = (s1682 >> 64);
    s1683 = (((uint128_t ) t9085) + ((uint128_t ) t9087));
    s1684 = (((uint128_t ) s1683) + ((uint128_t ) c880));
    t9090 = ((uint64_t ) s1684);
    c881 = (s1684 >> 64);
    /* Begin of MPAddQQQ 64 */
    t9091 = ((uint64_t ) t9082);
    s1685 = (((uint128_t ) t9081) + ((uint128_t ) t9089));
    t9092 = ((uint64_t ) s1685);
    c882 = (s1685 >> 64);
    s1686 = (((uint128_t ) t9084) + ((uint128_t ) t9090));
    s1687 = (((uint128_t ) s1686) + ((uint128_t ) c882));
    t9093 = ((uint64_t ) s1687);
    c883 = (s1687 >> 64);
    s1688 = (((uint128_t ) t9083) + ((uint128_t ) c881));
    s1689 = (((uint128_t ) s1688) + ((uint128_t ) c883));
    t9094 = ((uint64_t ) s1689);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1690 = (((uint128_t ) t9039) + ((uint128_t ) t9091));
    t9095 = ((uint64_t ) s1690);
    c884 = (s1690 >> 64);
    s1691 = (((uint128_t ) t9040) + ((uint128_t ) t9092));
    s1692 = (((uint128_t ) s1691) + ((uint128_t ) c884));
    t9096 = ((uint64_t ) s1692);
    c885 = (s1692 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1693 = (((uint128_t ) t9041) + ((uint128_t ) t9093));
    t9097 = ((uint64_t ) s1693);
    c886 = (s1693 >> 64);
    s1694 = (((uint128_t ) t9042) + ((uint128_t ) t9094));
    s1695 = (((uint128_t ) s1694) + ((uint128_t ) c886));
    t9098 = ((uint64_t ) s1695);
    c887 = (s1695 >> 64);
    /* MPPropagateCarry 64 */
    t9099 = (t9097 + c885);
    a25757 = ((t9099 == 0));
    a25758 = (t9098 + c885);
    t9100 = ((a25757) ? (a25758) : (t9098));
    a25759 = ((t9100 == 0));
    a25760 = ((a25759) && (a25757));
    a25761 = (c887 + c885);
    t9101 = ((a25760) ? (a25761) : (c887));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t9103 = ((uint64_t ) t9077);
    t9104 = ((uint64_t ) t9078);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1696 = (((uint128_t ) t9079) + ((uint128_t ) t9095));
    t9105 = ((uint64_t ) s1696);
    c888 = (s1696 >> 64);
    s1697 = (((uint128_t ) t9080) + ((uint128_t ) t9096));
    s1698 = (((uint128_t ) s1697) + ((uint128_t ) c888));
    t9106 = ((uint64_t ) s1698);
    c889 = (s1698 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1699 = (((uint128_t ) t9039) + ((uint128_t ) t9099));
    t9107 = ((uint64_t ) s1699);
    c890 = (s1699 >> 64);
    s1700 = (((uint128_t ) t9040) + ((uint128_t ) t9100));
    s1701 = (((uint128_t ) s1700) + ((uint128_t ) c890));
    t9108 = ((uint64_t ) s1701);
    c891 = (s1701 >> 64);
    /* MPPropagateCarry 64 */
    t9109 = (t9107 + c889);
    a25770 = ((t9109 == 0));
    a25771 = (t9108 + c889);
    t9110 = ((a25770) ? (a25771) : (t9108));
    a25772 = ((t9110 == 0));
    a25773 = ((a25772) && (a25770));
    a25774 = (c891 + c889);
    t9111 = ((a25773) ? (a25774) : (c891));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1702 = (((uint128_t ) t9041) + ((uint128_t ) t9101));
    t9113 = ((uint64_t ) s1702);
    c892 = (s1702 >> 64);
    s1703 = (((uint128_t ) t9042) + ((uint128_t ) c892));
    t9114 = ((uint64_t ) s1703);
    /* MPPropagateCarry 64 */
    t9115 = (t9113 + t9111);
    a25778 = ((t9115 == 0));
    a25779 = (t9114 + t9111);
    t9116 = ((a25778) ? (a25779) : (t9114));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25785 = (((uint128_t ) t6766)*((uint128_t ) t6754));
    t9119 = (a25785 >> 64);
    t9120 = ((uint64_t ) a25785);
    a25786 = (((uint128_t ) t6765)*((uint128_t ) t6753));
    t9121 = (a25786 >> 64);
    t9122 = ((uint64_t ) a25786);
    a25787 = (((uint128_t ) t6765)*((uint128_t ) t6754));
    t9123 = (a25787 >> 64);
    t9124 = ((uint64_t ) a25787);
    a25788 = (((uint128_t ) t6766)*((uint128_t ) t6753));
    t9125 = (a25788 >> 64);
    t9126 = ((uint64_t ) a25788);
    /* MPAddQDD 64 */
    s1704 = (((uint128_t ) t9124) + ((uint128_t ) t9126));
    t9127 = ((uint64_t ) s1704);
    c894 = (s1704 >> 64);
    s1705 = (((uint128_t ) t9123) + ((uint128_t ) t9125));
    s1706 = (((uint128_t ) s1705) + ((uint128_t ) c894));
    t9128 = ((uint64_t ) s1706);
    c895 = (s1706 >> 64);
    /* Begin of MPAddQQQ 64 */
    t9129 = ((uint64_t ) t9120);
    s1707 = (((uint128_t ) t9119) + ((uint128_t ) t9127));
    t9130 = ((uint64_t ) s1707);
    c896 = (s1707 >> 64);
    s1708 = (((uint128_t ) t9122) + ((uint128_t ) t9128));
    s1709 = (((uint128_t ) s1708) + ((uint128_t ) c896));
    t9131 = ((uint64_t ) s1709);
    c897 = (s1709 >> 64);
    s1710 = (((uint128_t ) t9121) + ((uint128_t ) c895));
    s1711 = (((uint128_t ) s1710) + ((uint128_t ) c897));
    t9132 = ((uint64_t ) s1711);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a25789 = (((uint128_t ) t6768)*((uint128_t ) t6754));
    t9133 = (a25789 >> 64);
    t9134 = ((uint64_t ) a25789);
    a25790 = (((uint128_t ) t6767)*((uint128_t ) t6753));
    t9135 = (a25790 >> 64);
    t9136 = ((uint64_t ) a25790);
    a25791 = (((uint128_t ) t6767)*((uint128_t ) t6754));
    t9137 = (a25791 >> 64);
    t9138 = ((uint64_t ) a25791);
    a25792 = (((uint128_t ) t6768)*((uint128_t ) t6753));
    t9139 = (a25792 >> 64);
    t9140 = ((uint64_t ) a25792);
    /* MPAddQDD 64 */
    s1712 = (((uint128_t ) t9138) + ((uint128_t ) t9140));
    t9141 = ((uint64_t ) s1712);
    c898 = (s1712 >> 64);
    s1713 = (((uint128_t ) t9137) + ((uint128_t ) t9139));
    s1714 = (((uint128_t ) s1713) + ((uint128_t ) c898));
    t9142 = ((uint64_t ) s1714);
    c899 = (s1714 >> 64);
    /* Begin of MPAddQQQ 64 */
    t9143 = ((uint64_t ) t9134);
    s1715 = (((uint128_t ) t9133) + ((uint128_t ) t9141));
    t9144 = ((uint64_t ) s1715);
    c900 = (s1715 >> 64);
    s1716 = (((uint128_t ) t9136) + ((uint128_t ) t9142));
    s1717 = (((uint128_t ) s1716) + ((uint128_t ) c900));
    t9145 = ((uint64_t ) s1717);
    c901 = (s1717 >> 64);
    s1718 = (((uint128_t ) t9135) + ((uint128_t ) c899));
    s1719 = (((uint128_t ) s1718) + ((uint128_t ) c901));
    t9146 = ((uint64_t ) s1719);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* MPAddQDD 64 */
    /* Begin of MPAddQQQ 64 */
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1720 = (((uint128_t ) t9143) + ((uint128_t ) t9039));
    t9147 = ((uint64_t ) s1720);
    c902 = (s1720 >> 64);
    s1721 = (((uint128_t ) t9144) + ((uint128_t ) t9040));
    s1722 = (((uint128_t ) s1721) + ((uint128_t ) c902));
    t9148 = ((uint64_t ) s1722);
    c903 = (s1722 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1723 = (((uint128_t ) t9145) + ((uint128_t ) t9041));
    t9149 = ((uint64_t ) s1723);
    c904 = (s1723 >> 64);
    s1724 = (((uint128_t ) t9146) + ((uint128_t ) t9042));
    s1725 = (((uint128_t ) s1724) + ((uint128_t ) c904));
    t9150 = ((uint64_t ) s1725);
    c905 = (s1725 >> 64);
    /* MPPropagateCarry 64 */
    t9151 = (t9149 + c903);
    a25793 = ((t9151 == 0));
    a25794 = (t9150 + c903);
    t9152 = ((a25793) ? (a25794) : (t9150));
    a25795 = ((t9152 == 0));
    a25796 = ((a25795) && (a25793));
    a25797 = (c905 + c903);
    t9153 = ((a25796) ? (a25797) : (c905));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t9155 = ((uint64_t ) t9129);
    t9156 = ((uint64_t ) t9130);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1726 = (((uint128_t ) t9131) + ((uint128_t ) t9147));
    t9157 = ((uint64_t ) s1726);
    c906 = (s1726 >> 64);
    s1727 = (((uint128_t ) t9132) + ((uint128_t ) t9148));
    s1728 = (((uint128_t ) s1727) + ((uint128_t ) c906));
    t9158 = ((uint64_t ) s1728);
    c907 = (s1728 >> 64);
    /* MPPropagateCarry 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1729 = (((uint128_t ) t9039) + ((uint128_t ) t9151));
    t9159 = ((uint64_t ) s1729);
    c908 = (s1729 >> 64);
    s1730 = (((uint128_t ) t9040) + ((uint128_t ) t9152));
    s1731 = (((uint128_t ) s1730) + ((uint128_t ) c908));
    t9160 = ((uint64_t ) s1731);
    c909 = (s1731 >> 64);
    /* MPPropagateCarry 64 */
    t9161 = (t9159 + c907);
    a25806 = ((t9161 == 0));
    a25807 = (t9160 + c907);
    t9162 = ((a25806) ? (a25807) : (t9160));
    a25808 = ((t9162 == 0));
    a25809 = ((a25808) && (a25806));
    a25810 = (c909 + c907);
    t9163 = ((a25809) ? (a25810) : (c909));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s1732 = (((uint128_t ) t9041) + ((uint128_t ) t9153));
    t9165 = ((uint64_t ) s1732);
    c910 = (s1732 >> 64);
    s1733 = (((uint128_t ) t9042) + ((uint128_t ) c910));
    t9166 = ((uint64_t ) s1733);
    /* MPPropagateCarry 64 */
    t9167 = (t9165 + t9163);
    a25814 = ((t9167 == 0));
    a25815 = (t9166 + t9163);
    t9168 = ((a25814) ? (a25815) : (t9166));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 128 */
    /* MPExtractLow 128 */
    /* MPAddQDD 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1734 = (((uint128_t ) t9103) + ((uint128_t ) t9155));
    t9171 = ((uint64_t ) s1734);
    c912 = (s1734 >> 64);
    s1735 = (((uint128_t ) t9104) + ((uint128_t ) t9156));
    s1736 = (((uint128_t ) s1735) + ((uint128_t ) c912));
    t9172 = ((uint64_t ) s1736);
    c913 = (s1736 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1737 = (((uint128_t ) t9105) + ((uint128_t ) t9157));
    t9173 = ((uint64_t ) s1737);
    c914 = (s1737 >> 64);
    s1738 = (((uint128_t ) t9106) + ((uint128_t ) t9158));
    s1739 = (((uint128_t ) s1738) + ((uint128_t ) c914));
    t9174 = ((uint64_t ) s1739);
    c915 = (s1739 >> 64);
    /* MPPropagateCarry 64 */
    t9175 = (t9173 + c913);
    a25821 = ((t9175 == 0));
    a25822 = (t9174 + c913);
    t9176 = ((a25821) ? (a25822) : (t9174));
    a25823 = ((t9176 == 0));
    a25824 = ((a25823) && (a25821));
    a25825 = (c915 + c913);
    t9177 = ((a25824) ? (a25825) : (c915));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1740 = (((uint128_t ) t9109) + ((uint128_t ) t9161));
    t9179 = ((uint64_t ) s1740);
    c916 = (s1740 >> 64);
    s1741 = (((uint128_t ) t9110) + ((uint128_t ) t9162));
    s1742 = (((uint128_t ) s1741) + ((uint128_t ) c916));
    t9180 = ((uint64_t ) s1742);
    c917 = (s1742 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1743 = (((uint128_t ) t9115) + ((uint128_t ) t9167));
    t9181 = ((uint64_t ) s1743);
    c918 = (s1743 >> 64);
    s1744 = (((uint128_t ) t9116) + ((uint128_t ) t9168));
    s1745 = (((uint128_t ) s1744) + ((uint128_t ) c918));
    t9182 = ((uint64_t ) s1745);
    /* MPPropagateCarry 64 */
    t9183 = (t9181 + c917);
    a25829 = ((t9183 == 0));
    a25830 = (t9182 + c917);
    t9184 = ((a25829) ? (a25830) : (t9182));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    s1746 = (((uint128_t ) t9179) + ((uint128_t ) t9177));
    t9187 = ((uint64_t ) s1746);
    c920 = (s1746 >> 64);
    s1747 = (((uint128_t ) t9180) + ((uint128_t ) c920));
    t9188 = ((uint64_t ) s1747);
    /* MPEqualDI 64 */
    a25837 = ((t9188 == 0));
    a25838 = ((t9187 == 0));
    a25839 = ((a25837) && (a25838));
    /* MPAddDDI 64 */
    s1748 = (((uint128_t ) t9183) + ((uint128_t ) t9177));
    t9189 = ((uint64_t ) s1748);
    c921 = (s1748 >> 64);
    s1749 = (((uint128_t ) t9184) + ((uint128_t ) c921));
    t9190 = ((uint64_t ) s1749);
    /* MPCondD 64 */
    t9191 = ((a25839) ? (t9190) : (t9184));
    t9192 = ((a25839) ? (t9189) : (t9183));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDII 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPTypeCastDI 128 */
    /* MPTypeCastDI 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 256 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    t3582 = ((uint64_t ) t9006);
    t3581 = ((uint64_t ) t9007);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    t3578 = ((uint64_t ) t9008);
    t9195 = ((uint64_t ) t9009);
    /* MPPropagateCarry 64 */
    t3573 = t9195;
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1750 = (((uint128_t ) t9012) + ((uint128_t ) t9171));
    t9196 = ((uint64_t ) s1750);
    c922 = (s1750 >> 64);
    s1751 = (((uint128_t ) t9013) + ((uint128_t ) t9172));
    s1752 = (((uint128_t ) s1751) + ((uint128_t ) c922));
    t9197 = ((uint64_t ) s1752);
    c923 = (s1752 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1753 = (((uint128_t ) t9018) + ((uint128_t ) t9175));
    t9198 = ((uint64_t ) s1753);
    c924 = (s1753 >> 64);
    s1754 = (((uint128_t ) t9019) + ((uint128_t ) t9176));
    s1755 = (((uint128_t ) s1754) + ((uint128_t ) c924));
    t9199 = ((uint64_t ) s1755);
    c925 = (s1755 >> 64);
    /* MPPropagateCarry 64 */
    t9200 = (t9198 + c923);
    a25847 = ((t9200 == 0));
    a25848 = (t9199 + c923);
    t9201 = ((a25847) ? (a25848) : (t9199));
    a25849 = ((t9201 == 0));
    a25850 = ((a25849) && (a25847));
    a25851 = (c925 + c923);
    t9202 = ((a25850) ? (a25851) : (c925));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDI 64 */
    t6726 = ((uint64_t ) t9196);
    c926 = (t9196 >> 64);
    s1756 = (((uint128_t ) t9197) + ((uint128_t ) c926));
    t6725 = ((uint64_t ) s1756);
    /* MPEqualDI 64 */
    a25855 = ((t6725 == 0));
    a25856 = ((t6726 == 0));
    a25857 = ((a25855) && (a25856));
    /* MPAddDDI 64 */
    t9204 = ((uint64_t ) t9200);
    c927 = (t9200 >> 64);
    s1757 = (((uint128_t ) t9201) + ((uint128_t ) c927));
    t9205 = ((uint64_t ) s1757);
    /* MPCondD 64 */
    t6727 = ((a25857) ? (t9205) : (t9201));
    t6728 = ((a25857) ? (t9204) : (t9200));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDII 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s1758 = (((uint128_t ) t9051) + ((uint128_t ) t9187));
    t9206 = ((uint64_t ) s1758);
    c928 = (s1758 >> 64);
    s1759 = (((uint128_t ) t9052) + ((uint128_t ) t9188));
    s1760 = (((uint128_t ) s1759) + ((uint128_t ) c928));
    t9207 = ((uint64_t ) s1760);
    c929 = (s1760 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s1761 = (((uint128_t ) t9053) + ((uint128_t ) t9192));
    t9208 = ((uint64_t ) s1761);
    c930 = (s1761 >> 64);
    s1762 = (((uint128_t ) t9054) + ((uint128_t ) t9191));
    s1763 = (((uint128_t ) s1762) + ((uint128_t ) c930));
    t9209 = ((uint64_t ) s1763);
    /* MPPropagateCarry 64 */
    t9210 = (t9208 + c929);
    a25862 = ((t9210 == 0));
    a25863 = (t9209 + c929);
    t9211 = ((a25862) ? (a25863) : (t9209));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    s1764 = (((uint128_t ) t9206) + ((uint128_t ) t9202));
    t6736 = ((uint64_t ) s1764);
    c932 = (s1764 >> 64);
    s1765 = (((uint128_t ) t9207) + ((uint128_t ) c932));
    t6735 = ((uint64_t ) s1765);
    /* MPEqualDI 64 */
    a25870 = ((t6735 == 0));
    a25871 = ((t6736 == 0));
    a25872 = ((a25870) && (a25871));
    /* MPAddDDD 64 */
    s1766 = (((uint128_t ) t9210) + ((uint128_t ) t9202));
    t9214 = ((uint64_t ) s1766);
    c933 = (s1766 >> 64);
    s1767 = (((uint128_t ) t9211) + ((uint128_t ) c933));
    t9215 = ((uint64_t ) s1767);
    /* MPCondD 64 */
    t6737 = ((a25872) ? (t9215) : (t9211));
    t6738 = ((a25872) ? (t9214) : (t9210));
    /* MPEqualDI 64 */
    /* MPEqualDI 64 */
    /* MPAddDDI 64 */
    /* MPCondDDI 64 */
    /* MPExtractLow 128 */
    /* MPExtractCarry 128 */
    /* MPAddQID 128 */
    /* MPAddQDD 64 */
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    /* MPExtractLow 64 */
    /* MPPropagateCarry 128 */
    /* MPAddDDD 64 */
    /* MPEqualDI 64 */
    /* MPAddDDD 64 */
    /* MPCondD 64 */
    /* MPExtractLow 128 */
    /* End of MPAddQQQ 256 */
    /* End of MPMulQDD_Schoolbook_Full */
}

void init_nttmpcuda() {
    /* skip */
}

__global__ void ker_code0(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a25880, a25881, a25882, a25883, a25884, a25885, a25886, a25887, 
            a25888, a25889, a25890, a25891, a25892, a25893, a25894, a25895, 
            a25914, a25915, a25916, a25920, a25921, a25922, a25923, a25924, 
            a25925, a25926, a25929, a25930, a25931, a25936, a25940, a25941, 
            a25942, a25946, a25947, a25948, a25949, a25950, a25951, a25952, 
            a25955, a25956, a25957, a25961, a25964, a25965, a25966, a25967, 
            a25968, a25969, a25970, a25971, a25972, a25973, a25974, a25975, 
            a25976, a25977, a25978, a25979, a25980, a25981, a25982, a25983, 
            a25985, a25986, a25991, a25992, a25993, a25994, a25995, a26003, 
            a26004, a26005, a26006, a26007, a26008, a26009, a26010, a26011, 
            a26012, a26013, a26014, a26015, a26016, a26017, a26018, a26019, 
            a26020, a26021, a26022, a26023, a26024, a26025, a26026, a26027, 
            a26028, a26029, a26030, a26031, a26032, a26033, a26034, a26035, 
            a26036, a26037, a26039, a26040, a26041, a26045, a26046, a26047, 
            a26048, a26049, a26050, a26051, a26055, a26056, a26057, a26058, 
            a26059, a26060, a26061, a26062, a26063, a26064, a26065, a26066, 
            a26067, a26069, a26070, a26071, a26075, a26076, a26077, a26078, 
            a26079, a26080, a26081, a26085, a26087, a26088, a26093, a26094, 
            a26095, a26096, a26097, a26098, a26099, a26100, a26101, a26102, 
            a26103, a26104, a26105, a26106, a26107, a26108, a26109, a26110, 
            a26111, a26112, a26113, a26114, a26115, a26116, a26117, a26118, 
            a26119, a26120, a26121, b1089, b1090, b1092, b1093, b1094, 
            b1095, b1096, b1097, b1098, b1099, b1100, b1101, b1102, 
            b1103, b1104, b1105, b1106, b1107, b1108, b1109, b1110, 
            b1111, b1112, b1113, b1114, b1115, b1116, b1117, b1118, 
            b1119, b1120, b1121, b1122, b1123, b1124, b1125, b1126, 
            b1127, b1128, b1129, c941, c942, c943, c944, c945, 
            c946, c947, c949, c950, c951, c952, c953, c954, 
            c955, c957, i456, i457, i458;
    uint64_t a12598, a12599, a12600, a12601, a12602, a12603, a12703, a12704, 
            a12705, a12706, a12707, a12708, a25896, a25897, a25898, a25899, 
            a25900, a25901, a25902, a25903, a25904, a25905, a25907, a25908, 
            a25909, a25910, a25911, a25912, a25984, a25987, a25996, a26086, 
            a26089, d1388, d1389, d1390, d1391, d1392, d1393, d1394, 
            d1395, d1396, d1397, d1398, d1399, d1400, d1401, d1402, 
            d1403, d1404, d1405, d1406, d1407, d1408, d1409, d1410, 
            d1411, d1412, d1413, d1414, d1415, d1416, d1417, d1418, 
            d1419, d1420, d1421, d1422, d1423, d1424, d1425, d1426, 
            d1427, d1428, d1429, d1430, d1431, d1432, d1433, d1434, 
            d1435, d1436, d1437, d1438, d1439, t7617, t7618, t7619, 
            t7620, t7621, t7622, t7623, t7624, t7625, t7626, t7627, 
            t7628, t7629, t7630, t7631, t7632, t7633, t7634, t7635, 
            t7636, t7637, t7638, t7639, t7640, t7641, t7642, t7643, 
            t7644, t7645, t7646, t7647, t7648, t7649, t7650, t7651, 
            t7652, t7653, t7654, t7655, t7656, t7657, t7658, t7659, 
            t7660, t7661, t7662, t7663, t7664, t9226, t9227, t9228, 
            t9229, t9230, t9231, t9232, t9233, t9234, t9235, t9236, 
            t9237, t9238, t9239, t9240, t9241, t9242, t9243, t9244, 
            t9245, t9246, t9247, t9248, t9249, t9250, t9251, t9252, 
            t9253, t9256, t9257, t9258, t9259, t9260, t9261, t9262, 
            t9263, t9264, t9265, t9266, t9267, t9268, t9269, t9270, 
            t9271, t9272, t9273, t9274, t9275, t9276, t9277, t9278, 
            t9279, t9280, t9281, t9282, t9283, t9284, t9285, t9286, 
            t9287, t9288, t9289, t9290, t9291, t9292, t9293, t9294, 
            t9295, t9296, t9297, t9298, t9299, t9301, t9302, t9303, 
            t9304, t9305, t9306, t9307, t9308, t9311, t9312, t9313, 
            t9314, t9315, t9316, t9317, t9318, t9319, t9320, t9321, 
            t9322, t9323, t9324, t9325, t9326, t9327, t9329, t9330, 
            t9331, t9332;
    uint128_t s1780, s1781, s1782, s1783, s1784, s1785, s1786, s1787, 
            s1788, s1789, s1790, s1791, s1792, s1793, s1794, s1795, 
            s1796, s1797, s1798, s1799, s1800, s1801, s1802, s1803, 
            s1804;
    for(int i29 = 0; i29 <= 63; i29++) {
        a25880 = (16384*blockIdx.x);
        a25881 = (128*i29);
        b1089 = (a25880 + threadIdx.x);
        a25882 = (b1089 + a25881);
        a25883 = (a25882 + 8192);
        /* Begin of MPModMul 256 */
        a25884 = (2*a25883);
        a25885 = (a25884 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a25886 = (2*a25884);
        a25887 = (a25886 + 1);
        /* MPAssignDD 64 */
        a25888 = (2*a25887);
        t9226 = X[a25888];
        a25889 = (a25888 + 1);
        t9227 = X[a25889];
        /* MPAssignDD 128 */
        a25890 = (2*a25885);
        /* MPAssignDD 64 */
        a25891 = (2*a25890);
        t9228 = X[a25891];
        a25892 = (a25891 + 1);
        t9229 = X[a25892];
        a25893 = (a25890 + 1);
        /* MPAssignDD 64 */
        a25894 = (2*a25893);
        t9230 = X[a25894];
        a25895 = (a25894 + 1);
        t9231 = X[a25895];
        MPMulQDD_L3_2(t7651, t7652, t7649, t7650, t7655, t7656, t7653, t7654, 
    t7659, t7660, t7657, t7658, t7663, t7664, t7661, t7662, 
    0, 0, twiddles[10], twiddles[11], twiddles[12], twiddles[13], twiddles[14], twiddles[15], 
    0, 0, t9226, t9227, t9228, t9229, t9230, t9231);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9232 = (t7659 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a25896 = (t7659 << 6);
        a25897 = (t7660 >> 58);
        t9233 = (((a25896)|(a25897)));
        t9234 = (t7660 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9235 = (t7657 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9236 = (((t9234)|(t9235)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1090 = ((int) 1);
        t9237 = (288230376151711744 - b1090);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9238 = (((t7649)&(t9237)));
        t9239 = (((t7650)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a25898 = (t9238 << 6);
        a25899 = (t9239 >> 58);
        t9240 = (((a25898)|(a25899)));
        t9241 = (t9239 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9242 = (t7655 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a25900 = (t7655 << 6);
        a25901 = (t7656 >> 58);
        t9243 = (((a25900)|(a25901)));
        t9244 = (t7656 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9245 = (t7653 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9246 = (((t9244)|(t9245)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9247 = (((t9241)|(t9242)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a25902 = (t7653 << 6);
        a25903 = (t7654 >> 58);
        t9248 = (((a25902)|(a25903)));
        t9249 = (t7654 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9250 = (((t9249)|(t9232)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a12598 = mu[2];
        a12599 = mu[3];
        a12600 = mu[4];
        a12601 = mu[5];
        a12602 = mu[6];
        a12603 = mu[7];
        MPMulQDD_L3_1(t7619, t7620, t7617, t7618, t7623, t7624, t7621, t7622, 
    t7627, t7628, t7625, t7626, t7631, t7632, t7629, t7630, 
    t9240, t9247, t9243, t9246, t9248, t9250, t9233, t9236, 
    0, 0, a12598, a12599, a12600, a12601, a12602, a12603);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9251 = (t7627 >> 1);
        a25904 = (t7627 << 63);
        a25905 = (t7628 >> 1);
        t9252 = (((a25904)|(a25905)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t9253 = (0 - b1090);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1388 = (2 - b1090);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9256 = (((t7620)&(d1388)));
        /* MPBinAndD 64 */
        t9257 = (((t7617)&(t9253)));
        t9258 = (((t7618)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9259 = (t9256 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9260 = (t9257 >> 1);
        a25907 = (t9257 << 63);
        a25908 = (t9258 >> 1);
        t9261 = (((a25907)|(a25908)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9262 = (((t9259)|(t9260)));
        /* Begin of MPShiftLeft1D */
        t9263 = (t9258 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9264 = (t7623 >> 1);
        a25909 = (t7623 << 63);
        a25910 = (t7624 >> 1);
        t9265 = (((a25909)|(a25910)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9266 = (((t9263)|(t9264)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9267 = (t7624 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9268 = (t7621 >> 1);
        a25911 = (t7621 << 63);
        a25912 = (t7622 >> 1);
        t9269 = (((a25911)|(a25912)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9270 = (((t9267)|(t9268)));
        /* Begin of MPShiftLeft1D */
        t9271 = (t7622 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9272 = (((t9271)|(t9251)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a12703 = modulus[2];
        a12704 = modulus[3];
        a12705 = modulus[4];
        a12706 = modulus[5];
        a12707 = modulus[6];
        a12708 = modulus[7];
        MPMulQDD_L3_1(t7635, t7636, t7633, t7634, t7639, t7640, t7637, t7638, 
    t7643, t7644, t7641, t7642, t7647, t7648, t7645, t7646, 
    t9262, t9261, t9266, t9265, t9270, t9269, t9272, t9252, 
    0, 0, a12703, a12704, a12705, a12706, a12707, a12708);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1389 = (t7662 - t7646);
        b1092 = ((t7662 < t7646));
        d1390 = (t7661 - t7645);
        d1391 = (d1390 - b1092);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a25914 = ((t7661 < t7645));
        a25915 = ((t7661 == t7645));
        a25916 = ((a25915) && (b1092));
        b1093 = ((a25914) || (a25916));
        /* Begin of MPSubDDD 64 */
        d1392 = (t7664 - t7648);
        b1094 = ((t7664 < t7648));
        d1393 = (t7663 - t7647);
        d1394 = (d1393 - b1094);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1395 = (d1392 - b1093);
        b1095 = ((d1392 < b1093));
        t9273 = (d1394 - b1095);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a25920 = ((t7663 < t7647));
        a25921 = ((t7663 == t7647));
        a25922 = ((a25921) && (b1094));
        a25923 = ((a25920) || (a25922));
        /* MPEqual 64 */
        a25924 = ((t7664 == t7648));
        a25925 = ((a25921) && (a25924));
        /* MPLessThan 64 */
        a25926 = ((a25925) && (b1093));
        b1096 = ((a25923) || (a25926));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1396 = (t7658 - t7642);
        b1097 = ((t7658 < t7642));
        d1397 = (t7657 - t7641);
        d1398 = (d1397 - b1097);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a25929 = ((t7657 < t7641));
        a25930 = ((t7657 == t7641));
        a25931 = ((a25930) && (b1097));
        b1098 = ((a25929) || (a25931));
        /* Begin of MPSubDDD 64 */
        d1399 = (t7660 - t7644);
        b1099 = ((t7660 < t7644));
        d1400 = (t7659 - t7643);
        d1401 = (d1400 - b1099);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1402 = (d1399 - b1098);
        b1100 = ((d1399 < b1098));
        t9274 = (d1401 - b1100);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1403 = (d1396 - b1096);
        b1101 = ((d1396 < b1096));
        t9275 = (d1398 - b1101);
        /* MPLessThanDI 64 */
        a25936 = ((d1398 == 0));
        b1102 = ((a25936) && (b1101));
        /* MPSubDDI 64 */
        d1404 = (d1402 - b1102);
        b1103 = ((d1402 < b1102));
        t9276 = (t9274 - b1103);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1405 = (d1389 - a12708);
        b1104 = ((d1389 < a12708));
        d1406 = (d1391 - a12707);
        d1407 = (d1406 - b1104);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a25940 = ((d1391 < a12707));
        a25941 = ((d1391 == a12707));
        a25942 = ((a25941) && (b1104));
        b1105 = ((a25940) || (a25942));
        /* Begin of MPSubDDD 64 */
        d1408 = (d1395 - a12706);
        b1106 = ((d1395 < a12706));
        d1409 = (t9273 - a12705);
        d1410 = (d1409 - b1106);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1411 = (d1408 - b1105);
        b1107 = ((d1408 < b1105));
        t9277 = (d1410 - b1107);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a25946 = ((t9273 < a12705));
        a25947 = ((t9273 == a12705));
        a25948 = ((a25947) && (b1106));
        a25949 = ((a25946) || (a25948));
        /* MPEqual 64 */
        a25950 = ((d1395 == a12706));
        a25951 = ((a25947) && (a25950));
        /* MPLessThan 64 */
        a25952 = ((a25951) && (b1105));
        b1108 = ((a25949) || (a25952));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1412 = (d1403 - a12704);
        b1109 = ((d1403 < a12704));
        d1413 = (t9275 - a12703);
        d1414 = (d1413 - b1109);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a25955 = ((t9275 < a12703));
        a25956 = ((t9275 == a12703));
        a25957 = ((a25956) && (b1109));
        b1110 = ((a25955) || (a25957));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1415 = (d1404 - b1110);
        b1111 = ((d1404 < b1110));
        t9278 = (t9276 - b1111);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1416 = (d1412 - b1108);
        b1112 = ((d1412 < b1108));
        t9279 = (d1414 - b1112);
        /* MPLessThanDI 64 */
        a25961 = ((d1414 == 0));
        b1113 = ((a25961) && (b1112));
        /* MPSubDDI 64 */
        d1417 = (d1415 - b1113);
        b1114 = ((d1415 < b1113));
        t9280 = (t9278 - b1114);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a25964 = ((t9276 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a25965 = ((d1404 == 0));
        a25966 = ((a25964) && (a25965));
        /* MPLessThan 64 */
        a25967 = ((a25966) && (b1110));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a25968 = ((d1403 == a12704));
        a25969 = ((a25956) && (a25968));
        a25970 = ((a25966) && (a25969));
        /* MPLessThan 128 */
        a25971 = ((a25970) && (b1108));
        i456 = ((a25967) || (a25971));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9281 = ((i456) ? (t9276) : (t9280));
        t9282 = ((i456) ? (d1404) : (d1417));
        /* MPCondD 64 */
        t9283 = ((i456) ? (t9275) : (t9279));
        t9284 = ((i456) ? (d1403) : (d1416));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9285 = ((i456) ? (t9273) : (t9277));
        t9286 = ((i456) ? (d1395) : (d1411));
        /* MPCondD 64 */
        t9287 = ((i456) ? (d1391) : (d1407));
        t9288 = ((i456) ? (d1389) : (d1405));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a25972 = (256*i29);
        a25973 = (2*threadIdx.x);
        a25974 = (a25972 + a25973);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a25975 = (2*a25882);
        a25976 = (a25975 + 1);
        /* MPAssignDD 128 */
        a25977 = (2*a25976);
        /* MPAssignDD 64 */
        a25978 = (2*a25977);
        t9289 = X[a25978];
        a25979 = (a25978 + 1);
        t9290 = X[a25979];
        a25980 = (a25977 + 1);
        /* MPAssignDD 64 */
        a25981 = (2*a25980);
        t9291 = X[a25981];
        a25982 = (a25981 + 1);
        t9292 = X[a25982];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1780 = (((uint128_t ) t9292) + ((uint128_t ) t9288));
        t9293 = ((uint64_t ) s1780);
        c941 = (s1780 >> 64);
        s1781 = (((uint128_t ) t9291) + ((uint128_t ) t9287));
        s1782 = (((uint128_t ) s1781) + ((uint128_t ) c941));
        t9294 = ((uint64_t ) s1782);
        c942 = (s1782 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1783 = (((uint128_t ) t9290) + ((uint128_t ) t9286));
        t9295 = ((uint64_t ) s1783);
        c943 = (s1783 >> 64);
        s1784 = (((uint128_t ) t9289) + ((uint128_t ) t9285));
        s1785 = (((uint128_t ) s1784) + ((uint128_t ) c943));
        t9296 = ((uint64_t ) s1785);
        c944 = (s1785 >> 64);
        /* MPPropagateCarry 64 */
        t9297 = (t9295 + c942);
        a25983 = ((t9297 == 0));
        a25984 = (t9296 + c942);
        t9298 = ((a25983) ? (a25984) : (t9296));
        a25985 = ((t9298 == 0));
        a25986 = ((a25985) && (a25983));
        a25987 = (c944 + c942);
        t9299 = ((a25986) ? (a25987) : (c944));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a25991 = (2*a25975);
        a25992 = (a25991 + 1);
        /* MPAssignDD 64 */
        a25993 = (2*a25992);
        t9301 = X[a25993];
        a25994 = (a25993 + 1);
        t9302 = X[a25994];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1786 = (((uint128_t ) t9302) + ((uint128_t ) t9284));
        t9303 = ((uint64_t ) s1786);
        c945 = (s1786 >> 64);
        s1787 = (((uint128_t ) t9301) + ((uint128_t ) t9283));
        s1788 = (((uint128_t ) s1787) + ((uint128_t ) c945));
        t9304 = ((uint64_t ) s1788);
        c946 = (s1788 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t9305 = ((uint64_t ) t9282);
        c947 = (t9282 >> 64);
        s1789 = (((uint128_t ) t9281) + ((uint128_t ) c947));
        t9306 = ((uint64_t ) s1789);
        /* MPPropagateCarry 64 */
        t9307 = (t9305 + c946);
        a25995 = ((t9307 == 0));
        a25996 = (t9306 + c946);
        t9308 = ((a25995) ? (a25996) : (t9306));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1790 = (((uint128_t ) t9303) + ((uint128_t ) t9299));
        t9311 = ((uint64_t ) s1790);
        c949 = (s1790 >> 64);
        s1791 = (((uint128_t ) t9304) + ((uint128_t ) c949));
        t9312 = ((uint64_t ) s1791);
        /* MPEqualDI 64 */
        a26003 = ((t9312 == 0));
        a26004 = ((t9311 == 0));
        a26005 = ((a26003) && (a26004));
        /* MPAddDDI 64 */
        s1792 = (((uint128_t ) t9307) + ((uint128_t ) t9299));
        t9313 = ((uint64_t ) s1792);
        c950 = (s1792 >> 64);
        s1793 = (((uint128_t ) t9308) + ((uint128_t ) c950));
        t9314 = ((uint64_t ) s1793);
        /* MPCondD 64 */
        t9315 = ((a26005) ? (t9314) : (t9308));
        t9316 = ((a26005) ? (t9313) : (t9307));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a26006 = ((0 < t9315));
        a26007 = ((0 == t9315));
        a26008 = ((0 < t9316));
        a26009 = ((a26007) && (a26008));
        a26010 = ((a26006) || (a26009));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a26011 = ((0 == t9316));
        a26012 = ((a26007) && (a26011));
        /* MPLessThan 64 */
        a26013 = ((a12703 < t9312));
        a26014 = ((a12703 == t9312));
        a26015 = ((a12704 < t9311));
        a26016 = ((a26014) && (a26015));
        a26017 = ((a26013) || (a26016));
        a26018 = ((a26012) && (a26017));
        a26019 = ((a26010) || (a26018));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26020 = ((a12704 == t9311));
        a26021 = ((a26014) && (a26020));
        a26022 = ((a26012) && (a26021));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26023 = ((a12705 < t9298));
        a26024 = ((a12705 == t9298));
        a26025 = ((a12706 < t9297));
        a26026 = ((a26024) && (a26025));
        a26027 = ((a26023) || (a26026));
        /* MPEqual 64 */
        a26028 = ((a12706 == t9297));
        a26029 = ((a26024) && (a26028));
        /* MPLessThan 64 */
        a26030 = ((a12707 < t9294));
        a26031 = ((a12707 == t9294));
        a26032 = ((a12708 < t9293));
        a26033 = ((a26031) && (a26032));
        a26034 = ((a26030) || (a26033));
        a26035 = ((a26029) && (a26034));
        a26036 = ((a26027) || (a26035));
        a26037 = ((a26022) && (a26036));
        i457 = ((a26019) || (a26037));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1418 = (t9293 - a12708);
        b1115 = ((t9293 < a12708));
        d1419 = (t9294 - a12707);
        d1420 = (d1419 - b1115);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26039 = ((t9294 < a12707));
        a26040 = ((t9294 == a12707));
        a26041 = ((a26040) && (b1115));
        b1116 = ((a26039) || (a26041));
        /* Begin of MPSubDDD 64 */
        d1421 = (t9297 - a12706);
        b1117 = ((t9297 < a12706));
        d1422 = (t9298 - a12705);
        d1423 = (d1422 - b1117);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1424 = (d1421 - b1116);
        b1118 = ((d1421 < b1116));
        t9317 = (d1423 - b1118);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26045 = ((t9298 < a12705));
        a26046 = ((t9298 == a12705));
        a26047 = ((a26046) && (b1117));
        a26048 = ((a26045) || (a26047));
        /* MPEqual 64 */
        a26049 = ((t9297 == a12706));
        a26050 = ((a26046) && (a26049));
        /* MPLessThan 64 */
        a26051 = ((a26050) && (b1116));
        b1119 = ((a26048) || (a26051));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1425 = (t9311 - a12704);
        b1120 = ((t9311 < a12704));
        d1426 = (t9312 - a12703);
        d1427 = (d1426 - b1120);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1428 = (d1425 - b1119);
        b1121 = ((d1425 < b1119));
        t9318 = (d1427 - b1121);
        /* End of MPSubDDD 256 */
        a26055 = (2*a25974);
        /* MPCondD 128 */
        a26056 = (2*a26055);
        a26057 = (a26056 + 1);
        /* MPCondD 64 */
        a26058 = (2*a26057);
        P1[a26058] = ((i457) ? (t9318) : (t9312));
        a26059 = (a26058 + 1);
        P1[a26059] = ((i457) ? (d1428) : (t9311));
        a26060 = (a26055 + 1);
        /* MPCondD 128 */
        a26061 = (2*a26060);
        /* MPCondD 64 */
        a26062 = (2*a26061);
        P1[a26062] = ((i457) ? (t9317) : (t9298));
        a26063 = (a26062 + 1);
        P1[a26063] = ((i457) ? (d1424) : (t9297));
        a26064 = (a26061 + 1);
        /* MPCondD 64 */
        a26065 = (2*a26064);
        P1[a26065] = ((i457) ? (d1420) : (t9294));
        a26066 = (a26065 + 1);
        P1[a26066] = ((i457) ? (d1418) : (t9293));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1122 = (a25973 + a25972);
        a26067 = (b1122 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1429 = (t9292 - t9288);
        b1123 = ((t9292 < t9288));
        d1430 = (t9291 - t9287);
        d1431 = (d1430 - b1123);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26069 = ((t9291 < t9287));
        a26070 = ((t9291 == t9287));
        a26071 = ((a26070) && (b1123));
        b1124 = ((a26069) || (a26071));
        /* Begin of MPSubDDD 64 */
        d1432 = (t9290 - t9286);
        b1125 = ((t9290 < t9286));
        d1433 = (t9289 - t9285);
        d1434 = (d1433 - b1125);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1435 = (d1432 - b1124);
        b1126 = ((d1432 < b1124));
        t9319 = (d1434 - b1126);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26075 = ((t9289 < t9285));
        a26076 = ((t9289 == t9285));
        a26077 = ((a26076) && (b1125));
        a26078 = ((a26075) || (a26077));
        /* MPEqual 64 */
        a26079 = ((t9290 == t9286));
        a26080 = ((a26076) && (a26079));
        /* MPLessThan 64 */
        a26081 = ((a26080) && (b1124));
        b1127 = ((a26078) || (a26081));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1436 = (t9302 - t9284);
        b1128 = ((t9302 < t9284));
        d1437 = (t9301 - t9283);
        d1438 = (d1437 - b1128);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1439 = (d1436 - b1127);
        b1129 = ((d1436 < b1127));
        t9320 = (d1438 - b1129);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1794 = (((uint128_t ) d1429) + ((uint128_t ) a12708));
        t9321 = ((uint64_t ) s1794);
        c951 = (s1794 >> 64);
        s1795 = (((uint128_t ) d1431) + ((uint128_t ) a12707));
        s1796 = (((uint128_t ) s1795) + ((uint128_t ) c951));
        t9322 = ((uint64_t ) s1796);
        c952 = (s1796 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1797 = (((uint128_t ) d1435) + ((uint128_t ) a12706));
        t9323 = ((uint64_t ) s1797);
        c953 = (s1797 >> 64);
        s1798 = (((uint128_t ) t9319) + ((uint128_t ) a12705));
        s1799 = (((uint128_t ) s1798) + ((uint128_t ) c953));
        t9324 = ((uint64_t ) s1799);
        c954 = (s1799 >> 64);
        /* MPPropagateCarry 64 */
        t9325 = (t9323 + c952);
        a26085 = ((t9325 == 0));
        a26086 = (t9324 + c952);
        t9326 = ((a26085) ? (a26086) : (t9324));
        a26087 = ((t9326 == 0));
        a26088 = ((a26087) && (a26085));
        a26089 = (c954 + c952);
        t9327 = ((a26088) ? (a26089) : (c954));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1800 = (((uint128_t ) d1439) + ((uint128_t ) a12704));
        t9329 = ((uint64_t ) s1800);
        c955 = (s1800 >> 64);
        s1801 = (((uint128_t ) t9320) + ((uint128_t ) a12703));
        s1802 = (((uint128_t ) s1801) + ((uint128_t ) c955));
        t9330 = ((uint64_t ) s1802);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1803 = (((uint128_t ) t9329) + ((uint128_t ) t9327));
        t9331 = ((uint64_t ) s1803);
        c957 = (s1803 >> 64);
        s1804 = (((uint128_t ) t9330) + ((uint128_t ) c957));
        t9332 = ((uint64_t ) s1804);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26093 = ((0 < t9281));
        a26094 = ((0 == t9281));
        a26095 = ((0 < t9282));
        a26096 = ((a26094) && (a26095));
        a26097 = ((a26093) || (a26096));
        /* MPEqual 64 */
        a26098 = ((0 == t9282));
        a26099 = ((a26094) && (a26098));
        /* MPLessThan 64 */
        a26100 = ((t9301 < t9283));
        a26101 = ((t9301 == t9283));
        a26102 = ((a26101) && (b1128));
        a26103 = ((a26100) || (a26102));
        a26104 = ((a26099) && (a26103));
        a26105 = ((a26097) || (a26104));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26106 = ((t9302 == t9284));
        a26107 = ((a26101) && (a26106));
        a26108 = ((a26099) && (a26107));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a26109 = ((a26108) && (b1127));
        i458 = ((a26105) || (a26109));
        a26110 = (2*a26067);
        /* MPCondD 128 */
        a26111 = (2*a26110);
        a26112 = (a26111 + 1);
        /* MPCondD 64 */
        a26113 = (2*a26112);
        P1[a26113] = ((i458) ? (t9332) : (t9320));
        a26114 = (a26113 + 1);
        P1[a26114] = ((i458) ? (t9331) : (d1439));
        a26115 = (a26110 + 1);
        /* MPCondD 128 */
        a26116 = (2*a26115);
        /* MPCondD 64 */
        a26117 = (2*a26116);
        P1[a26117] = ((i458) ? (t9326) : (t9319));
        a26118 = (a26117 + 1);
        P1[a26118] = ((i458) ? (t9325) : (d1435));
        a26119 = (a26116 + 1);
        /* MPCondD 64 */
        a26120 = (2*a26119);
        P1[a26120] = ((i458) ? (t9322) : (d1431));
        a26121 = (a26120 + 1);
        P1[a26121] = ((i458) ? (t9321) : (d1429));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code1(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a26122, a26123, a26124, a26125, a26126, a26127, a26128, a26129, 
            a26130, a26131, a26132, a26133, a26134, a26135, a26136, a26137, 
            a26138, a26139, a26140, a26141, a26142, a26143, a26144, a26145, 
            a26146, a26147, a26148, a26149, a26150, a26169, a26170, a26171, 
            a26175, a26176, a26177, a26178, a26179, a26180, a26181, a26184, 
            a26185, a26186, a26191, a26195, a26196, a26197, a26201, a26202, 
            a26203, a26204, a26205, a26206, a26207, a26210, a26211, a26212, 
            a26216, a26219, a26220, a26221, a26222, a26223, a26224, a26225, 
            a26226, a26227, a26228, a26229, a26230, a26231, a26232, a26233, 
            a26234, a26235, a26236, a26237, a26238, a26240, a26241, a26246, 
            a26247, a26248, a26249, a26250, a26258, a26259, a26260, a26261, 
            a26262, a26263, a26264, a26265, a26266, a26267, a26268, a26269, 
            a26270, a26271, a26272, a26273, a26274, a26275, a26276, a26277, 
            a26278, a26279, a26280, a26281, a26282, a26283, a26284, a26285, 
            a26286, a26287, a26288, a26289, a26290, a26291, a26292, a26294, 
            a26295, a26296, a26300, a26301, a26302, a26303, a26304, a26305, 
            a26306, a26310, a26311, a26312, a26313, a26314, a26315, a26316, 
            a26317, a26318, a26319, a26320, a26321, a26322, a26324, a26325, 
            a26326, a26330, a26331, a26332, a26333, a26334, a26335, a26336, 
            a26340, a26342, a26343, a26348, a26349, a26350, a26351, a26352, 
            a26353, a26354, a26355, a26356, a26357, a26358, a26359, a26360, 
            a26361, a26362, a26363, a26364, a26365, a26366, a26367, a26368, 
            a26369, a26370, a26371, a26372, a26373, a26374, a26375, a26376, 
            b1130, b1131, b1133, b1134, b1135, b1136, b1137, b1138, 
            b1139, b1140, b1141, b1142, b1143, b1144, b1145, b1146, 
            b1147, b1148, b1149, b1150, b1151, b1152, b1153, b1154, 
            b1155, b1156, b1157, b1158, b1159, b1160, b1161, b1162, 
            b1163, b1164, b1165, b1166, b1167, b1168, b1169, b1170, 
            c958, c959, c960, c961, c962, c963, c964, c966, 
            c967, c968, c969, c970, c971, c972, c974, i459, 
            i460, i461;
    uint64_t a13509, a13510, a13511, a13512, a13513, a13514, a13614, a13615, 
            a13616, a13617, a13618, a13619, a26151, a26152, a26153, a26154, 
            a26155, a26156, a26157, a26158, a26159, a26160, a26162, a26163, 
            a26164, a26165, a26166, a26167, a26239, a26242, a26251, a26341, 
            a26344, d1440, d1441, d1442, d1443, d1444, d1445, d1446, 
            d1447, d1448, d1449, d1450, d1451, d1452, d1453, d1454, 
            d1455, d1456, d1457, d1458, d1459, d1460, d1461, d1462, 
            d1463, d1464, d1465, d1466, d1467, d1468, d1469, d1470, 
            d1471, d1472, d1473, d1474, d1475, d1476, d1477, d1478, 
            d1479, d1480, d1481, d1482, d1483, d1484, d1485, d1486, 
            d1487, d1488, d1489, d1490, d1491, t7553, t7554, t7555, 
            t7556, t7557, t7558, t7559, t7560, t7561, t7562, t7563, 
            t7564, t7565, t7566, t7567, t7568, t7569, t7570, t7571, 
            t7572, t7573, t7574, t7575, t7576, t7577, t7578, t7579, 
            t7580, t7581, t7582, t7583, t7584, t7585, t7586, t7587, 
            t7588, t7589, t7590, t7591, t7592, t7593, t7594, t7595, 
            t7596, t7597, t7598, t7599, t7600, t9333, t9334, t9335, 
            t9336, t9337, t9338, t9339, t9340, t9341, t9342, t9343, 
            t9344, t9345, t9346, t9347, t9348, t9349, t9350, t9351, 
            t9352, t9353, t9354, t9355, t9356, t9357, t9358, t9359, 
            t9360, t9361, t9362, t9363, t9364, t9365, t9366, t9369, 
            t9370, t9371, t9372, t9373, t9374, t9375, t9376, t9377, 
            t9378, t9379, t9380, t9381, t9382, t9383, t9384, t9385, 
            t9386, t9387, t9388, t9389, t9390, t9391, t9392, t9393, 
            t9394, t9395, t9396, t9397, t9398, t9399, t9400, t9401, 
            t9402, t9403, t9404, t9405, t9406, t9407, t9408, t9409, 
            t9410, t9411, t9412, t9414, t9415, t9416, t9417, t9418, 
            t9419, t9420, t9421, t9424, t9425, t9426, t9427, t9428, 
            t9429, t9430, t9431, t9432, t9433, t9434, t9435, t9436, 
            t9437, t9438, t9439, t9440, t9442, t9443, t9444, t9445;
    uint128_t s1805, s1806, s1807, s1808, s1809, s1810, s1811, s1812, 
            s1813, s1814, s1815, s1816, s1817, s1818, s1819, s1820, 
            s1821, s1822, s1823, s1824, s1825, s1826, s1827, s1828, 
            s1829;
    for(int i27 = 0; i27 <= 63; i27++) {
        a26122 = (128*i27);
        a26123 = (a26122 + threadIdx.x);
        b1130 = (threadIdx.x + a26122);
        a26124 = (b1130 + 8192);
        a26125 = (a26124 % 2);
        a26126 = (2 + a26125);
        /* Begin of MPModMul 256 */
        a26127 = (2*a26126);
        a26128 = (a26127 + 1);
        a26129 = (2*a26124);
        a26130 = (a26129 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26131 = (2*a26127);
        a26132 = (a26131 + 1);
        /* MPAssignDD 64 */
        a26133 = (2*a26132);
        t9333 = twiddles[a26133];
        a26134 = (a26133 + 1);
        t9334 = twiddles[a26134];
        /* MPAssignDD 128 */
        a26135 = (2*a26128);
        /* MPAssignDD 64 */
        a26136 = (2*a26135);
        t9335 = twiddles[a26136];
        a26137 = (a26136 + 1);
        t9336 = twiddles[a26137];
        a26138 = (a26135 + 1);
        /* MPAssignDD 64 */
        a26139 = (2*a26138);
        t9337 = twiddles[a26139];
        a26140 = (a26139 + 1);
        t9338 = twiddles[a26140];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26141 = (2*a26129);
        a26142 = (a26141 + 1);
        /* MPAssignDD 64 */
        a26143 = (2*a26142);
        t9339 = P1[a26143];
        a26144 = (a26143 + 1);
        t9340 = P1[a26144];
        /* MPAssignDD 128 */
        a26145 = (2*a26130);
        /* MPAssignDD 64 */
        a26146 = (2*a26145);
        t9341 = P1[a26146];
        a26147 = (a26146 + 1);
        t9342 = P1[a26147];
        a26148 = (a26145 + 1);
        /* MPAssignDD 64 */
        a26149 = (2*a26148);
        t9343 = P1[a26149];
        a26150 = (a26149 + 1);
        t9344 = P1[a26150];
        MPMulQDD_L3_2(t7587, t7588, t7585, t7586, t7591, t7592, t7589, t7590, 
    t7595, t7596, t7593, t7594, t7599, t7600, t7597, t7598, 
    0, 0, t9333, t9334, t9335, t9336, t9337, t9338, 
    0, 0, t9339, t9340, t9341, t9342, t9343, t9344);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9345 = (t7595 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a26151 = (t7595 << 6);
        a26152 = (t7596 >> 58);
        t9346 = (((a26151)|(a26152)));
        t9347 = (t7596 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9348 = (t7593 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9349 = (((t9347)|(t9348)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1131 = ((int) 1);
        t9350 = (288230376151711744 - b1131);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9351 = (((t7585)&(t9350)));
        t9352 = (((t7586)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a26153 = (t9351 << 6);
        a26154 = (t9352 >> 58);
        t9353 = (((a26153)|(a26154)));
        t9354 = (t9352 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9355 = (t7591 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a26155 = (t7591 << 6);
        a26156 = (t7592 >> 58);
        t9356 = (((a26155)|(a26156)));
        t9357 = (t7592 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9358 = (t7589 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9359 = (((t9357)|(t9358)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9360 = (((t9354)|(t9355)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a26157 = (t7589 << 6);
        a26158 = (t7590 >> 58);
        t9361 = (((a26157)|(a26158)));
        t9362 = (t7590 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9363 = (((t9362)|(t9345)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a13509 = mu[2];
        a13510 = mu[3];
        a13511 = mu[4];
        a13512 = mu[5];
        a13513 = mu[6];
        a13514 = mu[7];
        MPMulQDD_L3_1(t7555, t7556, t7553, t7554, t7559, t7560, t7557, t7558, 
    t7563, t7564, t7561, t7562, t7567, t7568, t7565, t7566, 
    t9353, t9360, t9356, t9359, t9361, t9363, t9346, t9349, 
    0, 0, a13509, a13510, a13511, a13512, a13513, a13514);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9364 = (t7563 >> 1);
        a26159 = (t7563 << 63);
        a26160 = (t7564 >> 1);
        t9365 = (((a26159)|(a26160)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t9366 = (0 - b1131);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1440 = (2 - b1131);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9369 = (((t7556)&(d1440)));
        /* MPBinAndD 64 */
        t9370 = (((t7553)&(t9366)));
        t9371 = (((t7554)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9372 = (t9369 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9373 = (t9370 >> 1);
        a26162 = (t9370 << 63);
        a26163 = (t9371 >> 1);
        t9374 = (((a26162)|(a26163)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9375 = (((t9372)|(t9373)));
        /* Begin of MPShiftLeft1D */
        t9376 = (t9371 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9377 = (t7559 >> 1);
        a26164 = (t7559 << 63);
        a26165 = (t7560 >> 1);
        t9378 = (((a26164)|(a26165)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9379 = (((t9376)|(t9377)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9380 = (t7560 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9381 = (t7557 >> 1);
        a26166 = (t7557 << 63);
        a26167 = (t7558 >> 1);
        t9382 = (((a26166)|(a26167)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9383 = (((t9380)|(t9381)));
        /* Begin of MPShiftLeft1D */
        t9384 = (t7558 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9385 = (((t9384)|(t9364)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a13614 = modulus[2];
        a13615 = modulus[3];
        a13616 = modulus[4];
        a13617 = modulus[5];
        a13618 = modulus[6];
        a13619 = modulus[7];
        MPMulQDD_L3_1(t7571, t7572, t7569, t7570, t7575, t7576, t7573, t7574, 
    t7579, t7580, t7577, t7578, t7583, t7584, t7581, t7582, 
    t9375, t9374, t9379, t9378, t9383, t9382, t9385, t9365, 
    0, 0, a13614, a13615, a13616, a13617, a13618, a13619);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1441 = (t7598 - t7582);
        b1133 = ((t7598 < t7582));
        d1442 = (t7597 - t7581);
        d1443 = (d1442 - b1133);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26169 = ((t7597 < t7581));
        a26170 = ((t7597 == t7581));
        a26171 = ((a26170) && (b1133));
        b1134 = ((a26169) || (a26171));
        /* Begin of MPSubDDD 64 */
        d1444 = (t7600 - t7584);
        b1135 = ((t7600 < t7584));
        d1445 = (t7599 - t7583);
        d1446 = (d1445 - b1135);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1447 = (d1444 - b1134);
        b1136 = ((d1444 < b1134));
        t9386 = (d1446 - b1136);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26175 = ((t7599 < t7583));
        a26176 = ((t7599 == t7583));
        a26177 = ((a26176) && (b1135));
        a26178 = ((a26175) || (a26177));
        /* MPEqual 64 */
        a26179 = ((t7600 == t7584));
        a26180 = ((a26176) && (a26179));
        /* MPLessThan 64 */
        a26181 = ((a26180) && (b1134));
        b1137 = ((a26178) || (a26181));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1448 = (t7594 - t7578);
        b1138 = ((t7594 < t7578));
        d1449 = (t7593 - t7577);
        d1450 = (d1449 - b1138);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26184 = ((t7593 < t7577));
        a26185 = ((t7593 == t7577));
        a26186 = ((a26185) && (b1138));
        b1139 = ((a26184) || (a26186));
        /* Begin of MPSubDDD 64 */
        d1451 = (t7596 - t7580);
        b1140 = ((t7596 < t7580));
        d1452 = (t7595 - t7579);
        d1453 = (d1452 - b1140);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1454 = (d1451 - b1139);
        b1141 = ((d1451 < b1139));
        t9387 = (d1453 - b1141);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1455 = (d1448 - b1137);
        b1142 = ((d1448 < b1137));
        t9388 = (d1450 - b1142);
        /* MPLessThanDI 64 */
        a26191 = ((d1450 == 0));
        b1143 = ((a26191) && (b1142));
        /* MPSubDDI 64 */
        d1456 = (d1454 - b1143);
        b1144 = ((d1454 < b1143));
        t9389 = (t9387 - b1144);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1457 = (d1441 - a13619);
        b1145 = ((d1441 < a13619));
        d1458 = (d1443 - a13618);
        d1459 = (d1458 - b1145);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26195 = ((d1443 < a13618));
        a26196 = ((d1443 == a13618));
        a26197 = ((a26196) && (b1145));
        b1146 = ((a26195) || (a26197));
        /* Begin of MPSubDDD 64 */
        d1460 = (d1447 - a13617);
        b1147 = ((d1447 < a13617));
        d1461 = (t9386 - a13616);
        d1462 = (d1461 - b1147);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1463 = (d1460 - b1146);
        b1148 = ((d1460 < b1146));
        t9390 = (d1462 - b1148);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26201 = ((t9386 < a13616));
        a26202 = ((t9386 == a13616));
        a26203 = ((a26202) && (b1147));
        a26204 = ((a26201) || (a26203));
        /* MPEqual 64 */
        a26205 = ((d1447 == a13617));
        a26206 = ((a26202) && (a26205));
        /* MPLessThan 64 */
        a26207 = ((a26206) && (b1146));
        b1149 = ((a26204) || (a26207));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1464 = (d1455 - a13615);
        b1150 = ((d1455 < a13615));
        d1465 = (t9388 - a13614);
        d1466 = (d1465 - b1150);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26210 = ((t9388 < a13614));
        a26211 = ((t9388 == a13614));
        a26212 = ((a26211) && (b1150));
        b1151 = ((a26210) || (a26212));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1467 = (d1456 - b1151);
        b1152 = ((d1456 < b1151));
        t9391 = (t9389 - b1152);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1468 = (d1464 - b1149);
        b1153 = ((d1464 < b1149));
        t9392 = (d1466 - b1153);
        /* MPLessThanDI 64 */
        a26216 = ((d1466 == 0));
        b1154 = ((a26216) && (b1153));
        /* MPSubDDI 64 */
        d1469 = (d1467 - b1154);
        b1155 = ((d1467 < b1154));
        t9393 = (t9391 - b1155);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a26219 = ((t9389 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a26220 = ((d1456 == 0));
        a26221 = ((a26219) && (a26220));
        /* MPLessThan 64 */
        a26222 = ((a26221) && (b1151));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26223 = ((d1455 == a13615));
        a26224 = ((a26211) && (a26223));
        a26225 = ((a26221) && (a26224));
        /* MPLessThan 128 */
        a26226 = ((a26225) && (b1149));
        i459 = ((a26222) || (a26226));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9394 = ((i459) ? (t9389) : (t9393));
        t9395 = ((i459) ? (d1456) : (d1469));
        /* MPCondD 64 */
        t9396 = ((i459) ? (t9388) : (t9392));
        t9397 = ((i459) ? (d1455) : (d1468));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9398 = ((i459) ? (t9386) : (t9390));
        t9399 = ((i459) ? (d1447) : (d1463));
        /* MPCondD 64 */
        t9400 = ((i459) ? (d1443) : (d1459));
        t9401 = ((i459) ? (d1441) : (d1457));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a26227 = (256*i27);
        a26228 = (2*threadIdx.x);
        a26229 = (a26227 + a26228);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a26230 = (2*a26123);
        a26231 = (a26230 + 1);
        /* MPAssignDD 128 */
        a26232 = (2*a26231);
        /* MPAssignDD 64 */
        a26233 = (2*a26232);
        t9402 = P1[a26233];
        a26234 = (a26233 + 1);
        t9403 = P1[a26234];
        a26235 = (a26232 + 1);
        /* MPAssignDD 64 */
        a26236 = (2*a26235);
        t9404 = P1[a26236];
        a26237 = (a26236 + 1);
        t9405 = P1[a26237];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1805 = (((uint128_t ) t9405) + ((uint128_t ) t9401));
        t9406 = ((uint64_t ) s1805);
        c958 = (s1805 >> 64);
        s1806 = (((uint128_t ) t9404) + ((uint128_t ) t9400));
        s1807 = (((uint128_t ) s1806) + ((uint128_t ) c958));
        t9407 = ((uint64_t ) s1807);
        c959 = (s1807 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1808 = (((uint128_t ) t9403) + ((uint128_t ) t9399));
        t9408 = ((uint64_t ) s1808);
        c960 = (s1808 >> 64);
        s1809 = (((uint128_t ) t9402) + ((uint128_t ) t9398));
        s1810 = (((uint128_t ) s1809) + ((uint128_t ) c960));
        t9409 = ((uint64_t ) s1810);
        c961 = (s1810 >> 64);
        /* MPPropagateCarry 64 */
        t9410 = (t9408 + c959);
        a26238 = ((t9410 == 0));
        a26239 = (t9409 + c959);
        t9411 = ((a26238) ? (a26239) : (t9409));
        a26240 = ((t9411 == 0));
        a26241 = ((a26240) && (a26238));
        a26242 = (c961 + c959);
        t9412 = ((a26241) ? (a26242) : (c961));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26246 = (2*a26230);
        a26247 = (a26246 + 1);
        /* MPAssignDD 64 */
        a26248 = (2*a26247);
        t9414 = P1[a26248];
        a26249 = (a26248 + 1);
        t9415 = P1[a26249];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1811 = (((uint128_t ) t9415) + ((uint128_t ) t9397));
        t9416 = ((uint64_t ) s1811);
        c962 = (s1811 >> 64);
        s1812 = (((uint128_t ) t9414) + ((uint128_t ) t9396));
        s1813 = (((uint128_t ) s1812) + ((uint128_t ) c962));
        t9417 = ((uint64_t ) s1813);
        c963 = (s1813 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t9418 = ((uint64_t ) t9395);
        c964 = (t9395 >> 64);
        s1814 = (((uint128_t ) t9394) + ((uint128_t ) c964));
        t9419 = ((uint64_t ) s1814);
        /* MPPropagateCarry 64 */
        t9420 = (t9418 + c963);
        a26250 = ((t9420 == 0));
        a26251 = (t9419 + c963);
        t9421 = ((a26250) ? (a26251) : (t9419));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1815 = (((uint128_t ) t9416) + ((uint128_t ) t9412));
        t9424 = ((uint64_t ) s1815);
        c966 = (s1815 >> 64);
        s1816 = (((uint128_t ) t9417) + ((uint128_t ) c966));
        t9425 = ((uint64_t ) s1816);
        /* MPEqualDI 64 */
        a26258 = ((t9425 == 0));
        a26259 = ((t9424 == 0));
        a26260 = ((a26258) && (a26259));
        /* MPAddDDI 64 */
        s1817 = (((uint128_t ) t9420) + ((uint128_t ) t9412));
        t9426 = ((uint64_t ) s1817);
        c967 = (s1817 >> 64);
        s1818 = (((uint128_t ) t9421) + ((uint128_t ) c967));
        t9427 = ((uint64_t ) s1818);
        /* MPCondD 64 */
        t9428 = ((a26260) ? (t9427) : (t9421));
        t9429 = ((a26260) ? (t9426) : (t9420));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a26261 = ((0 < t9428));
        a26262 = ((0 == t9428));
        a26263 = ((0 < t9429));
        a26264 = ((a26262) && (a26263));
        a26265 = ((a26261) || (a26264));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a26266 = ((0 == t9429));
        a26267 = ((a26262) && (a26266));
        /* MPLessThan 64 */
        a26268 = ((a13614 < t9425));
        a26269 = ((a13614 == t9425));
        a26270 = ((a13615 < t9424));
        a26271 = ((a26269) && (a26270));
        a26272 = ((a26268) || (a26271));
        a26273 = ((a26267) && (a26272));
        a26274 = ((a26265) || (a26273));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26275 = ((a13615 == t9424));
        a26276 = ((a26269) && (a26275));
        a26277 = ((a26267) && (a26276));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26278 = ((a13616 < t9411));
        a26279 = ((a13616 == t9411));
        a26280 = ((a13617 < t9410));
        a26281 = ((a26279) && (a26280));
        a26282 = ((a26278) || (a26281));
        /* MPEqual 64 */
        a26283 = ((a13617 == t9410));
        a26284 = ((a26279) && (a26283));
        /* MPLessThan 64 */
        a26285 = ((a13618 < t9407));
        a26286 = ((a13618 == t9407));
        a26287 = ((a13619 < t9406));
        a26288 = ((a26286) && (a26287));
        a26289 = ((a26285) || (a26288));
        a26290 = ((a26284) && (a26289));
        a26291 = ((a26282) || (a26290));
        a26292 = ((a26277) && (a26291));
        i460 = ((a26274) || (a26292));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1470 = (t9406 - a13619);
        b1156 = ((t9406 < a13619));
        d1471 = (t9407 - a13618);
        d1472 = (d1471 - b1156);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26294 = ((t9407 < a13618));
        a26295 = ((t9407 == a13618));
        a26296 = ((a26295) && (b1156));
        b1157 = ((a26294) || (a26296));
        /* Begin of MPSubDDD 64 */
        d1473 = (t9410 - a13617);
        b1158 = ((t9410 < a13617));
        d1474 = (t9411 - a13616);
        d1475 = (d1474 - b1158);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1476 = (d1473 - b1157);
        b1159 = ((d1473 < b1157));
        t9430 = (d1475 - b1159);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26300 = ((t9411 < a13616));
        a26301 = ((t9411 == a13616));
        a26302 = ((a26301) && (b1158));
        a26303 = ((a26300) || (a26302));
        /* MPEqual 64 */
        a26304 = ((t9410 == a13617));
        a26305 = ((a26301) && (a26304));
        /* MPLessThan 64 */
        a26306 = ((a26305) && (b1157));
        b1160 = ((a26303) || (a26306));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1477 = (t9424 - a13615);
        b1161 = ((t9424 < a13615));
        d1478 = (t9425 - a13614);
        d1479 = (d1478 - b1161);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1480 = (d1477 - b1160);
        b1162 = ((d1477 < b1160));
        t9431 = (d1479 - b1162);
        /* End of MPSubDDD 256 */
        a26310 = (2*a26229);
        /* MPCondD 128 */
        a26311 = (2*a26310);
        a26312 = (a26311 + 1);
        /* MPCondD 64 */
        a26313 = (2*a26312);
        P2[a26313] = ((i460) ? (t9431) : (t9425));
        a26314 = (a26313 + 1);
        P2[a26314] = ((i460) ? (d1480) : (t9424));
        a26315 = (a26310 + 1);
        /* MPCondD 128 */
        a26316 = (2*a26315);
        /* MPCondD 64 */
        a26317 = (2*a26316);
        P2[a26317] = ((i460) ? (t9430) : (t9411));
        a26318 = (a26317 + 1);
        P2[a26318] = ((i460) ? (d1476) : (t9410));
        a26319 = (a26316 + 1);
        /* MPCondD 64 */
        a26320 = (2*a26319);
        P2[a26320] = ((i460) ? (d1472) : (t9407));
        a26321 = (a26320 + 1);
        P2[a26321] = ((i460) ? (d1470) : (t9406));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1163 = (a26228 + a26227);
        a26322 = (b1163 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1481 = (t9405 - t9401);
        b1164 = ((t9405 < t9401));
        d1482 = (t9404 - t9400);
        d1483 = (d1482 - b1164);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26324 = ((t9404 < t9400));
        a26325 = ((t9404 == t9400));
        a26326 = ((a26325) && (b1164));
        b1165 = ((a26324) || (a26326));
        /* Begin of MPSubDDD 64 */
        d1484 = (t9403 - t9399);
        b1166 = ((t9403 < t9399));
        d1485 = (t9402 - t9398);
        d1486 = (d1485 - b1166);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1487 = (d1484 - b1165);
        b1167 = ((d1484 < b1165));
        t9432 = (d1486 - b1167);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26330 = ((t9402 < t9398));
        a26331 = ((t9402 == t9398));
        a26332 = ((a26331) && (b1166));
        a26333 = ((a26330) || (a26332));
        /* MPEqual 64 */
        a26334 = ((t9403 == t9399));
        a26335 = ((a26331) && (a26334));
        /* MPLessThan 64 */
        a26336 = ((a26335) && (b1165));
        b1168 = ((a26333) || (a26336));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1488 = (t9415 - t9397);
        b1169 = ((t9415 < t9397));
        d1489 = (t9414 - t9396);
        d1490 = (d1489 - b1169);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1491 = (d1488 - b1168);
        b1170 = ((d1488 < b1168));
        t9433 = (d1490 - b1170);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1819 = (((uint128_t ) d1481) + ((uint128_t ) a13619));
        t9434 = ((uint64_t ) s1819);
        c968 = (s1819 >> 64);
        s1820 = (((uint128_t ) d1483) + ((uint128_t ) a13618));
        s1821 = (((uint128_t ) s1820) + ((uint128_t ) c968));
        t9435 = ((uint64_t ) s1821);
        c969 = (s1821 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1822 = (((uint128_t ) d1487) + ((uint128_t ) a13617));
        t9436 = ((uint64_t ) s1822);
        c970 = (s1822 >> 64);
        s1823 = (((uint128_t ) t9432) + ((uint128_t ) a13616));
        s1824 = (((uint128_t ) s1823) + ((uint128_t ) c970));
        t9437 = ((uint64_t ) s1824);
        c971 = (s1824 >> 64);
        /* MPPropagateCarry 64 */
        t9438 = (t9436 + c969);
        a26340 = ((t9438 == 0));
        a26341 = (t9437 + c969);
        t9439 = ((a26340) ? (a26341) : (t9437));
        a26342 = ((t9439 == 0));
        a26343 = ((a26342) && (a26340));
        a26344 = (c971 + c969);
        t9440 = ((a26343) ? (a26344) : (c971));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1825 = (((uint128_t ) d1491) + ((uint128_t ) a13615));
        t9442 = ((uint64_t ) s1825);
        c972 = (s1825 >> 64);
        s1826 = (((uint128_t ) t9433) + ((uint128_t ) a13614));
        s1827 = (((uint128_t ) s1826) + ((uint128_t ) c972));
        t9443 = ((uint64_t ) s1827);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1828 = (((uint128_t ) t9442) + ((uint128_t ) t9440));
        t9444 = ((uint64_t ) s1828);
        c974 = (s1828 >> 64);
        s1829 = (((uint128_t ) t9443) + ((uint128_t ) c974));
        t9445 = ((uint64_t ) s1829);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26348 = ((0 < t9394));
        a26349 = ((0 == t9394));
        a26350 = ((0 < t9395));
        a26351 = ((a26349) && (a26350));
        a26352 = ((a26348) || (a26351));
        /* MPEqual 64 */
        a26353 = ((0 == t9395));
        a26354 = ((a26349) && (a26353));
        /* MPLessThan 64 */
        a26355 = ((t9414 < t9396));
        a26356 = ((t9414 == t9396));
        a26357 = ((a26356) && (b1169));
        a26358 = ((a26355) || (a26357));
        a26359 = ((a26354) && (a26358));
        a26360 = ((a26352) || (a26359));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26361 = ((t9415 == t9397));
        a26362 = ((a26356) && (a26361));
        a26363 = ((a26354) && (a26362));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a26364 = ((a26363) && (b1168));
        i461 = ((a26360) || (a26364));
        a26365 = (2*a26322);
        /* MPCondD 128 */
        a26366 = (2*a26365);
        a26367 = (a26366 + 1);
        /* MPCondD 64 */
        a26368 = (2*a26367);
        P2[a26368] = ((i461) ? (t9445) : (t9433));
        a26369 = (a26368 + 1);
        P2[a26369] = ((i461) ? (t9444) : (d1491));
        a26370 = (a26365 + 1);
        /* MPCondD 128 */
        a26371 = (2*a26370);
        /* MPCondD 64 */
        a26372 = (2*a26371);
        P2[a26372] = ((i461) ? (t9439) : (t9432));
        a26373 = (a26372 + 1);
        P2[a26373] = ((i461) ? (t9438) : (d1487));
        a26374 = (a26371 + 1);
        /* MPCondD 64 */
        a26375 = (2*a26374);
        P2[a26375] = ((i461) ? (t9435) : (d1483));
        a26376 = (a26375 + 1);
        P2[a26376] = ((i461) ? (t9434) : (d1481));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code2(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a26377, a26378, a26379, a26380, a26381, a26382, a26383, a26384, 
            a26385, a26386, a26387, a26388, a26389, a26390, a26391, a26392, 
            a26393, a26394, a26395, a26396, a26397, a26398, a26399, a26400, 
            a26401, a26402, a26403, a26404, a26405, a26424, a26425, a26426, 
            a26430, a26431, a26432, a26433, a26434, a26435, a26436, a26439, 
            a26440, a26441, a26446, a26450, a26451, a26452, a26456, a26457, 
            a26458, a26459, a26460, a26461, a26462, a26465, a26466, a26467, 
            a26471, a26474, a26475, a26476, a26477, a26478, a26479, a26480, 
            a26481, a26482, a26483, a26484, a26485, a26486, a26487, a26488, 
            a26489, a26490, a26491, a26492, a26493, a26495, a26496, a26501, 
            a26502, a26503, a26504, a26505, a26513, a26514, a26515, a26516, 
            a26517, a26518, a26519, a26520, a26521, a26522, a26523, a26524, 
            a26525, a26526, a26527, a26528, a26529, a26530, a26531, a26532, 
            a26533, a26534, a26535, a26536, a26537, a26538, a26539, a26540, 
            a26541, a26542, a26543, a26544, a26545, a26546, a26547, a26549, 
            a26550, a26551, a26555, a26556, a26557, a26558, a26559, a26560, 
            a26561, a26565, a26566, a26567, a26568, a26569, a26570, a26571, 
            a26572, a26573, a26574, a26575, a26576, a26577, a26579, a26580, 
            a26581, a26585, a26586, a26587, a26588, a26589, a26590, a26591, 
            a26595, a26597, a26598, a26603, a26604, a26605, a26606, a26607, 
            a26608, a26609, a26610, a26611, a26612, a26613, a26614, a26615, 
            a26616, a26617, a26618, a26619, a26620, a26621, a26622, a26623, 
            a26624, a26625, a26626, a26627, a26628, a26629, a26630, a26631, 
            b1171, b1172, b1174, b1175, b1176, b1177, b1178, b1179, 
            b1180, b1181, b1182, b1183, b1184, b1185, b1186, b1187, 
            b1188, b1189, b1190, b1191, b1192, b1193, b1194, b1195, 
            b1196, b1197, b1198, b1199, b1200, b1201, b1202, b1203, 
            b1204, b1205, b1206, b1207, b1208, b1209, b1210, b1211, 
            c975, c976, c977, c978, c979, c980, c981, c983, 
            c984, c985, c986, c987, c988, c989, c991, i462, 
            i463, i464;
    uint64_t a14420, a14421, a14422, a14423, a14424, a14425, a14525, a14526, 
            a14527, a14528, a14529, a14530, a26406, a26407, a26408, a26409, 
            a26410, a26411, a26412, a26413, a26414, a26415, a26417, a26418, 
            a26419, a26420, a26421, a26422, a26494, a26497, a26506, a26596, 
            a26599, d1492, d1493, d1494, d1495, d1496, d1497, d1498, 
            d1499, d1500, d1501, d1502, d1503, d1504, d1505, d1506, 
            d1507, d1508, d1509, d1510, d1511, d1512, d1513, d1514, 
            d1515, d1516, d1517, d1518, d1519, d1520, d1521, d1522, 
            d1523, d1524, d1525, d1526, d1527, d1528, d1529, d1530, 
            d1531, d1532, d1533, d1534, d1535, d1536, d1537, d1538, 
            d1539, d1540, d1541, d1542, d1543, t7489, t7490, t7491, 
            t7492, t7493, t7494, t7495, t7496, t7497, t7498, t7499, 
            t7500, t7501, t7502, t7503, t7504, t7505, t7506, t7507, 
            t7508, t7509, t7510, t7511, t7512, t7513, t7514, t7515, 
            t7516, t7517, t7518, t7519, t7520, t7521, t7522, t7523, 
            t7524, t7525, t7526, t7527, t7528, t7529, t7530, t7531, 
            t7532, t7533, t7534, t7535, t7536, t9446, t9447, t9448, 
            t9449, t9450, t9451, t9452, t9453, t9454, t9455, t9456, 
            t9457, t9458, t9459, t9460, t9461, t9462, t9463, t9464, 
            t9465, t9466, t9467, t9468, t9469, t9470, t9471, t9472, 
            t9473, t9474, t9475, t9476, t9477, t9478, t9479, t9482, 
            t9483, t9484, t9485, t9486, t9487, t9488, t9489, t9490, 
            t9491, t9492, t9493, t9494, t9495, t9496, t9497, t9498, 
            t9499, t9500, t9501, t9502, t9503, t9504, t9505, t9506, 
            t9507, t9508, t9509, t9510, t9511, t9512, t9513, t9514, 
            t9515, t9516, t9517, t9518, t9519, t9520, t9521, t9522, 
            t9523, t9524, t9525, t9527, t9528, t9529, t9530, t9531, 
            t9532, t9533, t9534, t9537, t9538, t9539, t9540, t9541, 
            t9542, t9543, t9544, t9545, t9546, t9547, t9548, t9549, 
            t9550, t9551, t9552, t9553, t9555, t9556, t9557, t9558;
    uint128_t s1830, s1831, s1832, s1833, s1834, s1835, s1836, s1837, 
            s1838, s1839, s1840, s1841, s1842, s1843, s1844, s1845, 
            s1846, s1847, s1848, s1849, s1850, s1851, s1852, s1853, 
            s1854;
    for(int i25 = 0; i25 <= 63; i25++) {
        a26377 = (128*i25);
        a26378 = (a26377 + threadIdx.x);
        b1171 = (threadIdx.x + a26377);
        a26379 = (b1171 + 8192);
        a26380 = (a26379 % 4);
        a26381 = (4 + a26380);
        /* Begin of MPModMul 256 */
        a26382 = (2*a26381);
        a26383 = (a26382 + 1);
        a26384 = (2*a26379);
        a26385 = (a26384 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26386 = (2*a26382);
        a26387 = (a26386 + 1);
        /* MPAssignDD 64 */
        a26388 = (2*a26387);
        t9446 = twiddles[a26388];
        a26389 = (a26388 + 1);
        t9447 = twiddles[a26389];
        /* MPAssignDD 128 */
        a26390 = (2*a26383);
        /* MPAssignDD 64 */
        a26391 = (2*a26390);
        t9448 = twiddles[a26391];
        a26392 = (a26391 + 1);
        t9449 = twiddles[a26392];
        a26393 = (a26390 + 1);
        /* MPAssignDD 64 */
        a26394 = (2*a26393);
        t9450 = twiddles[a26394];
        a26395 = (a26394 + 1);
        t9451 = twiddles[a26395];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26396 = (2*a26384);
        a26397 = (a26396 + 1);
        /* MPAssignDD 64 */
        a26398 = (2*a26397);
        t9452 = P2[a26398];
        a26399 = (a26398 + 1);
        t9453 = P2[a26399];
        /* MPAssignDD 128 */
        a26400 = (2*a26385);
        /* MPAssignDD 64 */
        a26401 = (2*a26400);
        t9454 = P2[a26401];
        a26402 = (a26401 + 1);
        t9455 = P2[a26402];
        a26403 = (a26400 + 1);
        /* MPAssignDD 64 */
        a26404 = (2*a26403);
        t9456 = P2[a26404];
        a26405 = (a26404 + 1);
        t9457 = P2[a26405];
        MPMulQDD_L3_2(t7523, t7524, t7521, t7522, t7527, t7528, t7525, t7526, 
    t7531, t7532, t7529, t7530, t7535, t7536, t7533, t7534, 
    0, 0, t9446, t9447, t9448, t9449, t9450, t9451, 
    0, 0, t9452, t9453, t9454, t9455, t9456, t9457);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9458 = (t7531 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a26406 = (t7531 << 6);
        a26407 = (t7532 >> 58);
        t9459 = (((a26406)|(a26407)));
        t9460 = (t7532 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9461 = (t7529 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9462 = (((t9460)|(t9461)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1172 = ((int) 1);
        t9463 = (288230376151711744 - b1172);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9464 = (((t7521)&(t9463)));
        t9465 = (((t7522)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a26408 = (t9464 << 6);
        a26409 = (t9465 >> 58);
        t9466 = (((a26408)|(a26409)));
        t9467 = (t9465 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9468 = (t7527 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a26410 = (t7527 << 6);
        a26411 = (t7528 >> 58);
        t9469 = (((a26410)|(a26411)));
        t9470 = (t7528 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9471 = (t7525 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9472 = (((t9470)|(t9471)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9473 = (((t9467)|(t9468)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a26412 = (t7525 << 6);
        a26413 = (t7526 >> 58);
        t9474 = (((a26412)|(a26413)));
        t9475 = (t7526 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9476 = (((t9475)|(t9458)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a14420 = mu[2];
        a14421 = mu[3];
        a14422 = mu[4];
        a14423 = mu[5];
        a14424 = mu[6];
        a14425 = mu[7];
        MPMulQDD_L3_1(t7491, t7492, t7489, t7490, t7495, t7496, t7493, t7494, 
    t7499, t7500, t7497, t7498, t7503, t7504, t7501, t7502, 
    t9466, t9473, t9469, t9472, t9474, t9476, t9459, t9462, 
    0, 0, a14420, a14421, a14422, a14423, a14424, a14425);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9477 = (t7499 >> 1);
        a26414 = (t7499 << 63);
        a26415 = (t7500 >> 1);
        t9478 = (((a26414)|(a26415)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t9479 = (0 - b1172);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1492 = (2 - b1172);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9482 = (((t7492)&(d1492)));
        /* MPBinAndD 64 */
        t9483 = (((t7489)&(t9479)));
        t9484 = (((t7490)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9485 = (t9482 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9486 = (t9483 >> 1);
        a26417 = (t9483 << 63);
        a26418 = (t9484 >> 1);
        t9487 = (((a26417)|(a26418)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9488 = (((t9485)|(t9486)));
        /* Begin of MPShiftLeft1D */
        t9489 = (t9484 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9490 = (t7495 >> 1);
        a26419 = (t7495 << 63);
        a26420 = (t7496 >> 1);
        t9491 = (((a26419)|(a26420)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9492 = (((t9489)|(t9490)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9493 = (t7496 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9494 = (t7493 >> 1);
        a26421 = (t7493 << 63);
        a26422 = (t7494 >> 1);
        t9495 = (((a26421)|(a26422)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9496 = (((t9493)|(t9494)));
        /* Begin of MPShiftLeft1D */
        t9497 = (t7494 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9498 = (((t9497)|(t9477)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a14525 = modulus[2];
        a14526 = modulus[3];
        a14527 = modulus[4];
        a14528 = modulus[5];
        a14529 = modulus[6];
        a14530 = modulus[7];
        MPMulQDD_L3_1(t7507, t7508, t7505, t7506, t7511, t7512, t7509, t7510, 
    t7515, t7516, t7513, t7514, t7519, t7520, t7517, t7518, 
    t9488, t9487, t9492, t9491, t9496, t9495, t9498, t9478, 
    0, 0, a14525, a14526, a14527, a14528, a14529, a14530);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1493 = (t7534 - t7518);
        b1174 = ((t7534 < t7518));
        d1494 = (t7533 - t7517);
        d1495 = (d1494 - b1174);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26424 = ((t7533 < t7517));
        a26425 = ((t7533 == t7517));
        a26426 = ((a26425) && (b1174));
        b1175 = ((a26424) || (a26426));
        /* Begin of MPSubDDD 64 */
        d1496 = (t7536 - t7520);
        b1176 = ((t7536 < t7520));
        d1497 = (t7535 - t7519);
        d1498 = (d1497 - b1176);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1499 = (d1496 - b1175);
        b1177 = ((d1496 < b1175));
        t9499 = (d1498 - b1177);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26430 = ((t7535 < t7519));
        a26431 = ((t7535 == t7519));
        a26432 = ((a26431) && (b1176));
        a26433 = ((a26430) || (a26432));
        /* MPEqual 64 */
        a26434 = ((t7536 == t7520));
        a26435 = ((a26431) && (a26434));
        /* MPLessThan 64 */
        a26436 = ((a26435) && (b1175));
        b1178 = ((a26433) || (a26436));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1500 = (t7530 - t7514);
        b1179 = ((t7530 < t7514));
        d1501 = (t7529 - t7513);
        d1502 = (d1501 - b1179);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26439 = ((t7529 < t7513));
        a26440 = ((t7529 == t7513));
        a26441 = ((a26440) && (b1179));
        b1180 = ((a26439) || (a26441));
        /* Begin of MPSubDDD 64 */
        d1503 = (t7532 - t7516);
        b1181 = ((t7532 < t7516));
        d1504 = (t7531 - t7515);
        d1505 = (d1504 - b1181);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1506 = (d1503 - b1180);
        b1182 = ((d1503 < b1180));
        t9500 = (d1505 - b1182);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1507 = (d1500 - b1178);
        b1183 = ((d1500 < b1178));
        t9501 = (d1502 - b1183);
        /* MPLessThanDI 64 */
        a26446 = ((d1502 == 0));
        b1184 = ((a26446) && (b1183));
        /* MPSubDDI 64 */
        d1508 = (d1506 - b1184);
        b1185 = ((d1506 < b1184));
        t9502 = (t9500 - b1185);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1509 = (d1493 - a14530);
        b1186 = ((d1493 < a14530));
        d1510 = (d1495 - a14529);
        d1511 = (d1510 - b1186);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26450 = ((d1495 < a14529));
        a26451 = ((d1495 == a14529));
        a26452 = ((a26451) && (b1186));
        b1187 = ((a26450) || (a26452));
        /* Begin of MPSubDDD 64 */
        d1512 = (d1499 - a14528);
        b1188 = ((d1499 < a14528));
        d1513 = (t9499 - a14527);
        d1514 = (d1513 - b1188);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1515 = (d1512 - b1187);
        b1189 = ((d1512 < b1187));
        t9503 = (d1514 - b1189);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26456 = ((t9499 < a14527));
        a26457 = ((t9499 == a14527));
        a26458 = ((a26457) && (b1188));
        a26459 = ((a26456) || (a26458));
        /* MPEqual 64 */
        a26460 = ((d1499 == a14528));
        a26461 = ((a26457) && (a26460));
        /* MPLessThan 64 */
        a26462 = ((a26461) && (b1187));
        b1190 = ((a26459) || (a26462));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1516 = (d1507 - a14526);
        b1191 = ((d1507 < a14526));
        d1517 = (t9501 - a14525);
        d1518 = (d1517 - b1191);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26465 = ((t9501 < a14525));
        a26466 = ((t9501 == a14525));
        a26467 = ((a26466) && (b1191));
        b1192 = ((a26465) || (a26467));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1519 = (d1508 - b1192);
        b1193 = ((d1508 < b1192));
        t9504 = (t9502 - b1193);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1520 = (d1516 - b1190);
        b1194 = ((d1516 < b1190));
        t9505 = (d1518 - b1194);
        /* MPLessThanDI 64 */
        a26471 = ((d1518 == 0));
        b1195 = ((a26471) && (b1194));
        /* MPSubDDI 64 */
        d1521 = (d1519 - b1195);
        b1196 = ((d1519 < b1195));
        t9506 = (t9504 - b1196);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a26474 = ((t9502 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a26475 = ((d1508 == 0));
        a26476 = ((a26474) && (a26475));
        /* MPLessThan 64 */
        a26477 = ((a26476) && (b1192));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26478 = ((d1507 == a14526));
        a26479 = ((a26466) && (a26478));
        a26480 = ((a26476) && (a26479));
        /* MPLessThan 128 */
        a26481 = ((a26480) && (b1190));
        i462 = ((a26477) || (a26481));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9507 = ((i462) ? (t9502) : (t9506));
        t9508 = ((i462) ? (d1508) : (d1521));
        /* MPCondD 64 */
        t9509 = ((i462) ? (t9501) : (t9505));
        t9510 = ((i462) ? (d1507) : (d1520));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9511 = ((i462) ? (t9499) : (t9503));
        t9512 = ((i462) ? (d1499) : (d1515));
        /* MPCondD 64 */
        t9513 = ((i462) ? (d1495) : (d1511));
        t9514 = ((i462) ? (d1493) : (d1509));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a26482 = (256*i25);
        a26483 = (2*threadIdx.x);
        a26484 = (a26482 + a26483);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a26485 = (2*a26378);
        a26486 = (a26485 + 1);
        /* MPAssignDD 128 */
        a26487 = (2*a26486);
        /* MPAssignDD 64 */
        a26488 = (2*a26487);
        t9515 = P2[a26488];
        a26489 = (a26488 + 1);
        t9516 = P2[a26489];
        a26490 = (a26487 + 1);
        /* MPAssignDD 64 */
        a26491 = (2*a26490);
        t9517 = P2[a26491];
        a26492 = (a26491 + 1);
        t9518 = P2[a26492];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1830 = (((uint128_t ) t9518) + ((uint128_t ) t9514));
        t9519 = ((uint64_t ) s1830);
        c975 = (s1830 >> 64);
        s1831 = (((uint128_t ) t9517) + ((uint128_t ) t9513));
        s1832 = (((uint128_t ) s1831) + ((uint128_t ) c975));
        t9520 = ((uint64_t ) s1832);
        c976 = (s1832 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1833 = (((uint128_t ) t9516) + ((uint128_t ) t9512));
        t9521 = ((uint64_t ) s1833);
        c977 = (s1833 >> 64);
        s1834 = (((uint128_t ) t9515) + ((uint128_t ) t9511));
        s1835 = (((uint128_t ) s1834) + ((uint128_t ) c977));
        t9522 = ((uint64_t ) s1835);
        c978 = (s1835 >> 64);
        /* MPPropagateCarry 64 */
        t9523 = (t9521 + c976);
        a26493 = ((t9523 == 0));
        a26494 = (t9522 + c976);
        t9524 = ((a26493) ? (a26494) : (t9522));
        a26495 = ((t9524 == 0));
        a26496 = ((a26495) && (a26493));
        a26497 = (c978 + c976);
        t9525 = ((a26496) ? (a26497) : (c978));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26501 = (2*a26485);
        a26502 = (a26501 + 1);
        /* MPAssignDD 64 */
        a26503 = (2*a26502);
        t9527 = P2[a26503];
        a26504 = (a26503 + 1);
        t9528 = P2[a26504];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1836 = (((uint128_t ) t9528) + ((uint128_t ) t9510));
        t9529 = ((uint64_t ) s1836);
        c979 = (s1836 >> 64);
        s1837 = (((uint128_t ) t9527) + ((uint128_t ) t9509));
        s1838 = (((uint128_t ) s1837) + ((uint128_t ) c979));
        t9530 = ((uint64_t ) s1838);
        c980 = (s1838 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t9531 = ((uint64_t ) t9508);
        c981 = (t9508 >> 64);
        s1839 = (((uint128_t ) t9507) + ((uint128_t ) c981));
        t9532 = ((uint64_t ) s1839);
        /* MPPropagateCarry 64 */
        t9533 = (t9531 + c980);
        a26505 = ((t9533 == 0));
        a26506 = (t9532 + c980);
        t9534 = ((a26505) ? (a26506) : (t9532));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1840 = (((uint128_t ) t9529) + ((uint128_t ) t9525));
        t9537 = ((uint64_t ) s1840);
        c983 = (s1840 >> 64);
        s1841 = (((uint128_t ) t9530) + ((uint128_t ) c983));
        t9538 = ((uint64_t ) s1841);
        /* MPEqualDI 64 */
        a26513 = ((t9538 == 0));
        a26514 = ((t9537 == 0));
        a26515 = ((a26513) && (a26514));
        /* MPAddDDI 64 */
        s1842 = (((uint128_t ) t9533) + ((uint128_t ) t9525));
        t9539 = ((uint64_t ) s1842);
        c984 = (s1842 >> 64);
        s1843 = (((uint128_t ) t9534) + ((uint128_t ) c984));
        t9540 = ((uint64_t ) s1843);
        /* MPCondD 64 */
        t9541 = ((a26515) ? (t9540) : (t9534));
        t9542 = ((a26515) ? (t9539) : (t9533));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a26516 = ((0 < t9541));
        a26517 = ((0 == t9541));
        a26518 = ((0 < t9542));
        a26519 = ((a26517) && (a26518));
        a26520 = ((a26516) || (a26519));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a26521 = ((0 == t9542));
        a26522 = ((a26517) && (a26521));
        /* MPLessThan 64 */
        a26523 = ((a14525 < t9538));
        a26524 = ((a14525 == t9538));
        a26525 = ((a14526 < t9537));
        a26526 = ((a26524) && (a26525));
        a26527 = ((a26523) || (a26526));
        a26528 = ((a26522) && (a26527));
        a26529 = ((a26520) || (a26528));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26530 = ((a14526 == t9537));
        a26531 = ((a26524) && (a26530));
        a26532 = ((a26522) && (a26531));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26533 = ((a14527 < t9524));
        a26534 = ((a14527 == t9524));
        a26535 = ((a14528 < t9523));
        a26536 = ((a26534) && (a26535));
        a26537 = ((a26533) || (a26536));
        /* MPEqual 64 */
        a26538 = ((a14528 == t9523));
        a26539 = ((a26534) && (a26538));
        /* MPLessThan 64 */
        a26540 = ((a14529 < t9520));
        a26541 = ((a14529 == t9520));
        a26542 = ((a14530 < t9519));
        a26543 = ((a26541) && (a26542));
        a26544 = ((a26540) || (a26543));
        a26545 = ((a26539) && (a26544));
        a26546 = ((a26537) || (a26545));
        a26547 = ((a26532) && (a26546));
        i463 = ((a26529) || (a26547));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1522 = (t9519 - a14530);
        b1197 = ((t9519 < a14530));
        d1523 = (t9520 - a14529);
        d1524 = (d1523 - b1197);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26549 = ((t9520 < a14529));
        a26550 = ((t9520 == a14529));
        a26551 = ((a26550) && (b1197));
        b1198 = ((a26549) || (a26551));
        /* Begin of MPSubDDD 64 */
        d1525 = (t9523 - a14528);
        b1199 = ((t9523 < a14528));
        d1526 = (t9524 - a14527);
        d1527 = (d1526 - b1199);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1528 = (d1525 - b1198);
        b1200 = ((d1525 < b1198));
        t9543 = (d1527 - b1200);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26555 = ((t9524 < a14527));
        a26556 = ((t9524 == a14527));
        a26557 = ((a26556) && (b1199));
        a26558 = ((a26555) || (a26557));
        /* MPEqual 64 */
        a26559 = ((t9523 == a14528));
        a26560 = ((a26556) && (a26559));
        /* MPLessThan 64 */
        a26561 = ((a26560) && (b1198));
        b1201 = ((a26558) || (a26561));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1529 = (t9537 - a14526);
        b1202 = ((t9537 < a14526));
        d1530 = (t9538 - a14525);
        d1531 = (d1530 - b1202);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1532 = (d1529 - b1201);
        b1203 = ((d1529 < b1201));
        t9544 = (d1531 - b1203);
        /* End of MPSubDDD 256 */
        a26565 = (2*a26484);
        /* MPCondD 128 */
        a26566 = (2*a26565);
        a26567 = (a26566 + 1);
        /* MPCondD 64 */
        a26568 = (2*a26567);
        P1[a26568] = ((i463) ? (t9544) : (t9538));
        a26569 = (a26568 + 1);
        P1[a26569] = ((i463) ? (d1532) : (t9537));
        a26570 = (a26565 + 1);
        /* MPCondD 128 */
        a26571 = (2*a26570);
        /* MPCondD 64 */
        a26572 = (2*a26571);
        P1[a26572] = ((i463) ? (t9543) : (t9524));
        a26573 = (a26572 + 1);
        P1[a26573] = ((i463) ? (d1528) : (t9523));
        a26574 = (a26571 + 1);
        /* MPCondD 64 */
        a26575 = (2*a26574);
        P1[a26575] = ((i463) ? (d1524) : (t9520));
        a26576 = (a26575 + 1);
        P1[a26576] = ((i463) ? (d1522) : (t9519));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1204 = (a26483 + a26482);
        a26577 = (b1204 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1533 = (t9518 - t9514);
        b1205 = ((t9518 < t9514));
        d1534 = (t9517 - t9513);
        d1535 = (d1534 - b1205);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26579 = ((t9517 < t9513));
        a26580 = ((t9517 == t9513));
        a26581 = ((a26580) && (b1205));
        b1206 = ((a26579) || (a26581));
        /* Begin of MPSubDDD 64 */
        d1536 = (t9516 - t9512);
        b1207 = ((t9516 < t9512));
        d1537 = (t9515 - t9511);
        d1538 = (d1537 - b1207);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1539 = (d1536 - b1206);
        b1208 = ((d1536 < b1206));
        t9545 = (d1538 - b1208);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26585 = ((t9515 < t9511));
        a26586 = ((t9515 == t9511));
        a26587 = ((a26586) && (b1207));
        a26588 = ((a26585) || (a26587));
        /* MPEqual 64 */
        a26589 = ((t9516 == t9512));
        a26590 = ((a26586) && (a26589));
        /* MPLessThan 64 */
        a26591 = ((a26590) && (b1206));
        b1209 = ((a26588) || (a26591));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1540 = (t9528 - t9510);
        b1210 = ((t9528 < t9510));
        d1541 = (t9527 - t9509);
        d1542 = (d1541 - b1210);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1543 = (d1540 - b1209);
        b1211 = ((d1540 < b1209));
        t9546 = (d1542 - b1211);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1844 = (((uint128_t ) d1533) + ((uint128_t ) a14530));
        t9547 = ((uint64_t ) s1844);
        c985 = (s1844 >> 64);
        s1845 = (((uint128_t ) d1535) + ((uint128_t ) a14529));
        s1846 = (((uint128_t ) s1845) + ((uint128_t ) c985));
        t9548 = ((uint64_t ) s1846);
        c986 = (s1846 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1847 = (((uint128_t ) d1539) + ((uint128_t ) a14528));
        t9549 = ((uint64_t ) s1847);
        c987 = (s1847 >> 64);
        s1848 = (((uint128_t ) t9545) + ((uint128_t ) a14527));
        s1849 = (((uint128_t ) s1848) + ((uint128_t ) c987));
        t9550 = ((uint64_t ) s1849);
        c988 = (s1849 >> 64);
        /* MPPropagateCarry 64 */
        t9551 = (t9549 + c986);
        a26595 = ((t9551 == 0));
        a26596 = (t9550 + c986);
        t9552 = ((a26595) ? (a26596) : (t9550));
        a26597 = ((t9552 == 0));
        a26598 = ((a26597) && (a26595));
        a26599 = (c988 + c986);
        t9553 = ((a26598) ? (a26599) : (c988));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1850 = (((uint128_t ) d1543) + ((uint128_t ) a14526));
        t9555 = ((uint64_t ) s1850);
        c989 = (s1850 >> 64);
        s1851 = (((uint128_t ) t9546) + ((uint128_t ) a14525));
        s1852 = (((uint128_t ) s1851) + ((uint128_t ) c989));
        t9556 = ((uint64_t ) s1852);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1853 = (((uint128_t ) t9555) + ((uint128_t ) t9553));
        t9557 = ((uint64_t ) s1853);
        c991 = (s1853 >> 64);
        s1854 = (((uint128_t ) t9556) + ((uint128_t ) c991));
        t9558 = ((uint64_t ) s1854);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26603 = ((0 < t9507));
        a26604 = ((0 == t9507));
        a26605 = ((0 < t9508));
        a26606 = ((a26604) && (a26605));
        a26607 = ((a26603) || (a26606));
        /* MPEqual 64 */
        a26608 = ((0 == t9508));
        a26609 = ((a26604) && (a26608));
        /* MPLessThan 64 */
        a26610 = ((t9527 < t9509));
        a26611 = ((t9527 == t9509));
        a26612 = ((a26611) && (b1210));
        a26613 = ((a26610) || (a26612));
        a26614 = ((a26609) && (a26613));
        a26615 = ((a26607) || (a26614));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26616 = ((t9528 == t9510));
        a26617 = ((a26611) && (a26616));
        a26618 = ((a26609) && (a26617));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a26619 = ((a26618) && (b1209));
        i464 = ((a26615) || (a26619));
        a26620 = (2*a26577);
        /* MPCondD 128 */
        a26621 = (2*a26620);
        a26622 = (a26621 + 1);
        /* MPCondD 64 */
        a26623 = (2*a26622);
        P1[a26623] = ((i464) ? (t9558) : (t9546));
        a26624 = (a26623 + 1);
        P1[a26624] = ((i464) ? (t9557) : (d1543));
        a26625 = (a26620 + 1);
        /* MPCondD 128 */
        a26626 = (2*a26625);
        /* MPCondD 64 */
        a26627 = (2*a26626);
        P1[a26627] = ((i464) ? (t9552) : (t9545));
        a26628 = (a26627 + 1);
        P1[a26628] = ((i464) ? (t9551) : (d1539));
        a26629 = (a26626 + 1);
        /* MPCondD 64 */
        a26630 = (2*a26629);
        P1[a26630] = ((i464) ? (t9548) : (d1535));
        a26631 = (a26630 + 1);
        P1[a26631] = ((i464) ? (t9547) : (d1533));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code3(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a26632, a26633, a26634, a26635, a26636, a26637, a26638, a26639, 
            a26640, a26641, a26642, a26643, a26644, a26645, a26646, a26647, 
            a26648, a26649, a26650, a26651, a26652, a26653, a26654, a26655, 
            a26656, a26657, a26658, a26659, a26660, a26679, a26680, a26681, 
            a26685, a26686, a26687, a26688, a26689, a26690, a26691, a26694, 
            a26695, a26696, a26701, a26705, a26706, a26707, a26711, a26712, 
            a26713, a26714, a26715, a26716, a26717, a26720, a26721, a26722, 
            a26726, a26729, a26730, a26731, a26732, a26733, a26734, a26735, 
            a26736, a26737, a26738, a26739, a26740, a26741, a26742, a26743, 
            a26744, a26745, a26746, a26747, a26748, a26750, a26751, a26756, 
            a26757, a26758, a26759, a26760, a26768, a26769, a26770, a26771, 
            a26772, a26773, a26774, a26775, a26776, a26777, a26778, a26779, 
            a26780, a26781, a26782, a26783, a26784, a26785, a26786, a26787, 
            a26788, a26789, a26790, a26791, a26792, a26793, a26794, a26795, 
            a26796, a26797, a26798, a26799, a26800, a26801, a26802, a26804, 
            a26805, a26806, a26810, a26811, a26812, a26813, a26814, a26815, 
            a26816, a26820, a26821, a26822, a26823, a26824, a26825, a26826, 
            a26827, a26828, a26829, a26830, a26831, a26832, a26834, a26835, 
            a26836, a26840, a26841, a26842, a26843, a26844, a26845, a26846, 
            a26850, a26852, a26853, a26858, a26859, a26860, a26861, a26862, 
            a26863, a26864, a26865, a26866, a26867, a26868, a26869, a26870, 
            a26871, a26872, a26873, a26874, a26875, a26876, a26877, a26878, 
            a26879, a26880, a26881, a26882, a26883, a26884, a26885, a26886, 
            b1212, b1213, b1215, b1216, b1217, b1218, b1219, b1220, 
            b1221, b1222, b1223, b1224, b1225, b1226, b1227, b1228, 
            b1229, b1230, b1231, b1232, b1233, b1234, b1235, b1236, 
            b1237, b1238, b1239, b1240, b1241, b1242, b1243, b1244, 
            b1245, b1246, b1247, b1248, b1249, b1250, b1251, b1252, 
            c1000, c1001, c1002, c1003, c1004, c1005, c1006, c1008, 
            c992, c993, c994, c995, c996, c997, c998, i465, 
            i466, i467;
    uint64_t a15331, a15332, a15333, a15334, a15335, a15336, a15436, a15437, 
            a15438, a15439, a15440, a15441, a26661, a26662, a26663, a26664, 
            a26665, a26666, a26667, a26668, a26669, a26670, a26672, a26673, 
            a26674, a26675, a26676, a26677, a26749, a26752, a26761, a26851, 
            a26854, d1544, d1545, d1546, d1547, d1548, d1549, d1550, 
            d1551, d1552, d1553, d1554, d1555, d1556, d1557, d1558, 
            d1559, d1560, d1561, d1562, d1563, d1564, d1565, d1566, 
            d1567, d1568, d1569, d1570, d1571, d1572, d1573, d1574, 
            d1575, d1576, d1577, d1578, d1579, d1580, d1581, d1582, 
            d1583, d1584, d1585, d1586, d1587, d1588, d1589, d1590, 
            d1591, d1592, d1593, d1594, d1595, t7425, t7426, t7427, 
            t7428, t7429, t7430, t7431, t7432, t7433, t7434, t7435, 
            t7436, t7437, t7438, t7439, t7440, t7441, t7442, t7443, 
            t7444, t7445, t7446, t7447, t7448, t7449, t7450, t7451, 
            t7452, t7453, t7454, t7455, t7456, t7457, t7458, t7459, 
            t7460, t7461, t7462, t7463, t7464, t7465, t7466, t7467, 
            t7468, t7469, t7470, t7471, t7472, t9559, t9560, t9561, 
            t9562, t9563, t9564, t9565, t9566, t9567, t9568, t9569, 
            t9570, t9571, t9572, t9573, t9574, t9575, t9576, t9577, 
            t9578, t9579, t9580, t9581, t9582, t9583, t9584, t9585, 
            t9586, t9587, t9588, t9589, t9590, t9591, t9592, t9595, 
            t9596, t9597, t9598, t9599, t9600, t9601, t9602, t9603, 
            t9604, t9605, t9606, t9607, t9608, t9609, t9610, t9611, 
            t9612, t9613, t9614, t9615, t9616, t9617, t9618, t9619, 
            t9620, t9621, t9622, t9623, t9624, t9625, t9626, t9627, 
            t9628, t9629, t9630, t9631, t9632, t9633, t9634, t9635, 
            t9636, t9637, t9638, t9640, t9641, t9642, t9643, t9644, 
            t9645, t9646, t9647, t9650, t9651, t9652, t9653, t9654, 
            t9655, t9656, t9657, t9658, t9659, t9660, t9661, t9662, 
            t9663, t9664, t9665, t9666, t9668, t9669, t9670, t9671;
    uint128_t s1855, s1856, s1857, s1858, s1859, s1860, s1861, s1862, 
            s1863, s1864, s1865, s1866, s1867, s1868, s1869, s1870, 
            s1871, s1872, s1873, s1874, s1875, s1876, s1877, s1878, 
            s1879;
    for(int i23 = 0; i23 <= 63; i23++) {
        a26632 = (128*i23);
        a26633 = (a26632 + threadIdx.x);
        b1212 = (threadIdx.x + a26632);
        a26634 = (b1212 + 8192);
        a26635 = (a26634 % 8);
        a26636 = (8 + a26635);
        /* Begin of MPModMul 256 */
        a26637 = (2*a26636);
        a26638 = (a26637 + 1);
        a26639 = (2*a26634);
        a26640 = (a26639 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26641 = (2*a26637);
        a26642 = (a26641 + 1);
        /* MPAssignDD 64 */
        a26643 = (2*a26642);
        t9559 = twiddles[a26643];
        a26644 = (a26643 + 1);
        t9560 = twiddles[a26644];
        /* MPAssignDD 128 */
        a26645 = (2*a26638);
        /* MPAssignDD 64 */
        a26646 = (2*a26645);
        t9561 = twiddles[a26646];
        a26647 = (a26646 + 1);
        t9562 = twiddles[a26647];
        a26648 = (a26645 + 1);
        /* MPAssignDD 64 */
        a26649 = (2*a26648);
        t9563 = twiddles[a26649];
        a26650 = (a26649 + 1);
        t9564 = twiddles[a26650];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26651 = (2*a26639);
        a26652 = (a26651 + 1);
        /* MPAssignDD 64 */
        a26653 = (2*a26652);
        t9565 = P1[a26653];
        a26654 = (a26653 + 1);
        t9566 = P1[a26654];
        /* MPAssignDD 128 */
        a26655 = (2*a26640);
        /* MPAssignDD 64 */
        a26656 = (2*a26655);
        t9567 = P1[a26656];
        a26657 = (a26656 + 1);
        t9568 = P1[a26657];
        a26658 = (a26655 + 1);
        /* MPAssignDD 64 */
        a26659 = (2*a26658);
        t9569 = P1[a26659];
        a26660 = (a26659 + 1);
        t9570 = P1[a26660];
        MPMulQDD_L3_2(t7459, t7460, t7457, t7458, t7463, t7464, t7461, t7462, 
    t7467, t7468, t7465, t7466, t7471, t7472, t7469, t7470, 
    0, 0, t9559, t9560, t9561, t9562, t9563, t9564, 
    0, 0, t9565, t9566, t9567, t9568, t9569, t9570);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9571 = (t7467 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a26661 = (t7467 << 6);
        a26662 = (t7468 >> 58);
        t9572 = (((a26661)|(a26662)));
        t9573 = (t7468 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9574 = (t7465 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9575 = (((t9573)|(t9574)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1213 = ((int) 1);
        t9576 = (288230376151711744 - b1213);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9577 = (((t7457)&(t9576)));
        t9578 = (((t7458)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a26663 = (t9577 << 6);
        a26664 = (t9578 >> 58);
        t9579 = (((a26663)|(a26664)));
        t9580 = (t9578 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9581 = (t7463 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a26665 = (t7463 << 6);
        a26666 = (t7464 >> 58);
        t9582 = (((a26665)|(a26666)));
        t9583 = (t7464 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9584 = (t7461 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9585 = (((t9583)|(t9584)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9586 = (((t9580)|(t9581)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a26667 = (t7461 << 6);
        a26668 = (t7462 >> 58);
        t9587 = (((a26667)|(a26668)));
        t9588 = (t7462 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9589 = (((t9588)|(t9571)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a15331 = mu[2];
        a15332 = mu[3];
        a15333 = mu[4];
        a15334 = mu[5];
        a15335 = mu[6];
        a15336 = mu[7];
        MPMulQDD_L3_1(t7427, t7428, t7425, t7426, t7431, t7432, t7429, t7430, 
    t7435, t7436, t7433, t7434, t7439, t7440, t7437, t7438, 
    t9579, t9586, t9582, t9585, t9587, t9589, t9572, t9575, 
    0, 0, a15331, a15332, a15333, a15334, a15335, a15336);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9590 = (t7435 >> 1);
        a26669 = (t7435 << 63);
        a26670 = (t7436 >> 1);
        t9591 = (((a26669)|(a26670)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t9592 = (0 - b1213);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1544 = (2 - b1213);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9595 = (((t7428)&(d1544)));
        /* MPBinAndD 64 */
        t9596 = (((t7425)&(t9592)));
        t9597 = (((t7426)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9598 = (t9595 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9599 = (t9596 >> 1);
        a26672 = (t9596 << 63);
        a26673 = (t9597 >> 1);
        t9600 = (((a26672)|(a26673)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9601 = (((t9598)|(t9599)));
        /* Begin of MPShiftLeft1D */
        t9602 = (t9597 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9603 = (t7431 >> 1);
        a26674 = (t7431 << 63);
        a26675 = (t7432 >> 1);
        t9604 = (((a26674)|(a26675)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9605 = (((t9602)|(t9603)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9606 = (t7432 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9607 = (t7429 >> 1);
        a26676 = (t7429 << 63);
        a26677 = (t7430 >> 1);
        t9608 = (((a26676)|(a26677)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9609 = (((t9606)|(t9607)));
        /* Begin of MPShiftLeft1D */
        t9610 = (t7430 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9611 = (((t9610)|(t9590)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a15436 = modulus[2];
        a15437 = modulus[3];
        a15438 = modulus[4];
        a15439 = modulus[5];
        a15440 = modulus[6];
        a15441 = modulus[7];
        MPMulQDD_L3_1(t7443, t7444, t7441, t7442, t7447, t7448, t7445, t7446, 
    t7451, t7452, t7449, t7450, t7455, t7456, t7453, t7454, 
    t9601, t9600, t9605, t9604, t9609, t9608, t9611, t9591, 
    0, 0, a15436, a15437, a15438, a15439, a15440, a15441);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1545 = (t7470 - t7454);
        b1215 = ((t7470 < t7454));
        d1546 = (t7469 - t7453);
        d1547 = (d1546 - b1215);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26679 = ((t7469 < t7453));
        a26680 = ((t7469 == t7453));
        a26681 = ((a26680) && (b1215));
        b1216 = ((a26679) || (a26681));
        /* Begin of MPSubDDD 64 */
        d1548 = (t7472 - t7456);
        b1217 = ((t7472 < t7456));
        d1549 = (t7471 - t7455);
        d1550 = (d1549 - b1217);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1551 = (d1548 - b1216);
        b1218 = ((d1548 < b1216));
        t9612 = (d1550 - b1218);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26685 = ((t7471 < t7455));
        a26686 = ((t7471 == t7455));
        a26687 = ((a26686) && (b1217));
        a26688 = ((a26685) || (a26687));
        /* MPEqual 64 */
        a26689 = ((t7472 == t7456));
        a26690 = ((a26686) && (a26689));
        /* MPLessThan 64 */
        a26691 = ((a26690) && (b1216));
        b1219 = ((a26688) || (a26691));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1552 = (t7466 - t7450);
        b1220 = ((t7466 < t7450));
        d1553 = (t7465 - t7449);
        d1554 = (d1553 - b1220);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26694 = ((t7465 < t7449));
        a26695 = ((t7465 == t7449));
        a26696 = ((a26695) && (b1220));
        b1221 = ((a26694) || (a26696));
        /* Begin of MPSubDDD 64 */
        d1555 = (t7468 - t7452);
        b1222 = ((t7468 < t7452));
        d1556 = (t7467 - t7451);
        d1557 = (d1556 - b1222);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1558 = (d1555 - b1221);
        b1223 = ((d1555 < b1221));
        t9613 = (d1557 - b1223);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1559 = (d1552 - b1219);
        b1224 = ((d1552 < b1219));
        t9614 = (d1554 - b1224);
        /* MPLessThanDI 64 */
        a26701 = ((d1554 == 0));
        b1225 = ((a26701) && (b1224));
        /* MPSubDDI 64 */
        d1560 = (d1558 - b1225);
        b1226 = ((d1558 < b1225));
        t9615 = (t9613 - b1226);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1561 = (d1545 - a15441);
        b1227 = ((d1545 < a15441));
        d1562 = (d1547 - a15440);
        d1563 = (d1562 - b1227);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26705 = ((d1547 < a15440));
        a26706 = ((d1547 == a15440));
        a26707 = ((a26706) && (b1227));
        b1228 = ((a26705) || (a26707));
        /* Begin of MPSubDDD 64 */
        d1564 = (d1551 - a15439);
        b1229 = ((d1551 < a15439));
        d1565 = (t9612 - a15438);
        d1566 = (d1565 - b1229);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1567 = (d1564 - b1228);
        b1230 = ((d1564 < b1228));
        t9616 = (d1566 - b1230);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26711 = ((t9612 < a15438));
        a26712 = ((t9612 == a15438));
        a26713 = ((a26712) && (b1229));
        a26714 = ((a26711) || (a26713));
        /* MPEqual 64 */
        a26715 = ((d1551 == a15439));
        a26716 = ((a26712) && (a26715));
        /* MPLessThan 64 */
        a26717 = ((a26716) && (b1228));
        b1231 = ((a26714) || (a26717));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1568 = (d1559 - a15437);
        b1232 = ((d1559 < a15437));
        d1569 = (t9614 - a15436);
        d1570 = (d1569 - b1232);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26720 = ((t9614 < a15436));
        a26721 = ((t9614 == a15436));
        a26722 = ((a26721) && (b1232));
        b1233 = ((a26720) || (a26722));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1571 = (d1560 - b1233);
        b1234 = ((d1560 < b1233));
        t9617 = (t9615 - b1234);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1572 = (d1568 - b1231);
        b1235 = ((d1568 < b1231));
        t9618 = (d1570 - b1235);
        /* MPLessThanDI 64 */
        a26726 = ((d1570 == 0));
        b1236 = ((a26726) && (b1235));
        /* MPSubDDI 64 */
        d1573 = (d1571 - b1236);
        b1237 = ((d1571 < b1236));
        t9619 = (t9617 - b1237);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a26729 = ((t9615 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a26730 = ((d1560 == 0));
        a26731 = ((a26729) && (a26730));
        /* MPLessThan 64 */
        a26732 = ((a26731) && (b1233));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26733 = ((d1559 == a15437));
        a26734 = ((a26721) && (a26733));
        a26735 = ((a26731) && (a26734));
        /* MPLessThan 128 */
        a26736 = ((a26735) && (b1231));
        i465 = ((a26732) || (a26736));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9620 = ((i465) ? (t9615) : (t9619));
        t9621 = ((i465) ? (d1560) : (d1573));
        /* MPCondD 64 */
        t9622 = ((i465) ? (t9614) : (t9618));
        t9623 = ((i465) ? (d1559) : (d1572));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9624 = ((i465) ? (t9612) : (t9616));
        t9625 = ((i465) ? (d1551) : (d1567));
        /* MPCondD 64 */
        t9626 = ((i465) ? (d1547) : (d1563));
        t9627 = ((i465) ? (d1545) : (d1561));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a26737 = (256*i23);
        a26738 = (2*threadIdx.x);
        a26739 = (a26737 + a26738);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a26740 = (2*a26633);
        a26741 = (a26740 + 1);
        /* MPAssignDD 128 */
        a26742 = (2*a26741);
        /* MPAssignDD 64 */
        a26743 = (2*a26742);
        t9628 = P1[a26743];
        a26744 = (a26743 + 1);
        t9629 = P1[a26744];
        a26745 = (a26742 + 1);
        /* MPAssignDD 64 */
        a26746 = (2*a26745);
        t9630 = P1[a26746];
        a26747 = (a26746 + 1);
        t9631 = P1[a26747];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1855 = (((uint128_t ) t9631) + ((uint128_t ) t9627));
        t9632 = ((uint64_t ) s1855);
        c992 = (s1855 >> 64);
        s1856 = (((uint128_t ) t9630) + ((uint128_t ) t9626));
        s1857 = (((uint128_t ) s1856) + ((uint128_t ) c992));
        t9633 = ((uint64_t ) s1857);
        c993 = (s1857 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1858 = (((uint128_t ) t9629) + ((uint128_t ) t9625));
        t9634 = ((uint64_t ) s1858);
        c994 = (s1858 >> 64);
        s1859 = (((uint128_t ) t9628) + ((uint128_t ) t9624));
        s1860 = (((uint128_t ) s1859) + ((uint128_t ) c994));
        t9635 = ((uint64_t ) s1860);
        c995 = (s1860 >> 64);
        /* MPPropagateCarry 64 */
        t9636 = (t9634 + c993);
        a26748 = ((t9636 == 0));
        a26749 = (t9635 + c993);
        t9637 = ((a26748) ? (a26749) : (t9635));
        a26750 = ((t9637 == 0));
        a26751 = ((a26750) && (a26748));
        a26752 = (c995 + c993);
        t9638 = ((a26751) ? (a26752) : (c995));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26756 = (2*a26740);
        a26757 = (a26756 + 1);
        /* MPAssignDD 64 */
        a26758 = (2*a26757);
        t9640 = P1[a26758];
        a26759 = (a26758 + 1);
        t9641 = P1[a26759];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1861 = (((uint128_t ) t9641) + ((uint128_t ) t9623));
        t9642 = ((uint64_t ) s1861);
        c996 = (s1861 >> 64);
        s1862 = (((uint128_t ) t9640) + ((uint128_t ) t9622));
        s1863 = (((uint128_t ) s1862) + ((uint128_t ) c996));
        t9643 = ((uint64_t ) s1863);
        c997 = (s1863 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t9644 = ((uint64_t ) t9621);
        c998 = (t9621 >> 64);
        s1864 = (((uint128_t ) t9620) + ((uint128_t ) c998));
        t9645 = ((uint64_t ) s1864);
        /* MPPropagateCarry 64 */
        t9646 = (t9644 + c997);
        a26760 = ((t9646 == 0));
        a26761 = (t9645 + c997);
        t9647 = ((a26760) ? (a26761) : (t9645));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1865 = (((uint128_t ) t9642) + ((uint128_t ) t9638));
        t9650 = ((uint64_t ) s1865);
        c1000 = (s1865 >> 64);
        s1866 = (((uint128_t ) t9643) + ((uint128_t ) c1000));
        t9651 = ((uint64_t ) s1866);
        /* MPEqualDI 64 */
        a26768 = ((t9651 == 0));
        a26769 = ((t9650 == 0));
        a26770 = ((a26768) && (a26769));
        /* MPAddDDI 64 */
        s1867 = (((uint128_t ) t9646) + ((uint128_t ) t9638));
        t9652 = ((uint64_t ) s1867);
        c1001 = (s1867 >> 64);
        s1868 = (((uint128_t ) t9647) + ((uint128_t ) c1001));
        t9653 = ((uint64_t ) s1868);
        /* MPCondD 64 */
        t9654 = ((a26770) ? (t9653) : (t9647));
        t9655 = ((a26770) ? (t9652) : (t9646));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a26771 = ((0 < t9654));
        a26772 = ((0 == t9654));
        a26773 = ((0 < t9655));
        a26774 = ((a26772) && (a26773));
        a26775 = ((a26771) || (a26774));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a26776 = ((0 == t9655));
        a26777 = ((a26772) && (a26776));
        /* MPLessThan 64 */
        a26778 = ((a15436 < t9651));
        a26779 = ((a15436 == t9651));
        a26780 = ((a15437 < t9650));
        a26781 = ((a26779) && (a26780));
        a26782 = ((a26778) || (a26781));
        a26783 = ((a26777) && (a26782));
        a26784 = ((a26775) || (a26783));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26785 = ((a15437 == t9650));
        a26786 = ((a26779) && (a26785));
        a26787 = ((a26777) && (a26786));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26788 = ((a15438 < t9637));
        a26789 = ((a15438 == t9637));
        a26790 = ((a15439 < t9636));
        a26791 = ((a26789) && (a26790));
        a26792 = ((a26788) || (a26791));
        /* MPEqual 64 */
        a26793 = ((a15439 == t9636));
        a26794 = ((a26789) && (a26793));
        /* MPLessThan 64 */
        a26795 = ((a15440 < t9633));
        a26796 = ((a15440 == t9633));
        a26797 = ((a15441 < t9632));
        a26798 = ((a26796) && (a26797));
        a26799 = ((a26795) || (a26798));
        a26800 = ((a26794) && (a26799));
        a26801 = ((a26792) || (a26800));
        a26802 = ((a26787) && (a26801));
        i466 = ((a26784) || (a26802));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1574 = (t9632 - a15441);
        b1238 = ((t9632 < a15441));
        d1575 = (t9633 - a15440);
        d1576 = (d1575 - b1238);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26804 = ((t9633 < a15440));
        a26805 = ((t9633 == a15440));
        a26806 = ((a26805) && (b1238));
        b1239 = ((a26804) || (a26806));
        /* Begin of MPSubDDD 64 */
        d1577 = (t9636 - a15439);
        b1240 = ((t9636 < a15439));
        d1578 = (t9637 - a15438);
        d1579 = (d1578 - b1240);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1580 = (d1577 - b1239);
        b1241 = ((d1577 < b1239));
        t9656 = (d1579 - b1241);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26810 = ((t9637 < a15438));
        a26811 = ((t9637 == a15438));
        a26812 = ((a26811) && (b1240));
        a26813 = ((a26810) || (a26812));
        /* MPEqual 64 */
        a26814 = ((t9636 == a15439));
        a26815 = ((a26811) && (a26814));
        /* MPLessThan 64 */
        a26816 = ((a26815) && (b1239));
        b1242 = ((a26813) || (a26816));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1581 = (t9650 - a15437);
        b1243 = ((t9650 < a15437));
        d1582 = (t9651 - a15436);
        d1583 = (d1582 - b1243);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1584 = (d1581 - b1242);
        b1244 = ((d1581 < b1242));
        t9657 = (d1583 - b1244);
        /* End of MPSubDDD 256 */
        a26820 = (2*a26739);
        /* MPCondD 128 */
        a26821 = (2*a26820);
        a26822 = (a26821 + 1);
        /* MPCondD 64 */
        a26823 = (2*a26822);
        P2[a26823] = ((i466) ? (t9657) : (t9651));
        a26824 = (a26823 + 1);
        P2[a26824] = ((i466) ? (d1584) : (t9650));
        a26825 = (a26820 + 1);
        /* MPCondD 128 */
        a26826 = (2*a26825);
        /* MPCondD 64 */
        a26827 = (2*a26826);
        P2[a26827] = ((i466) ? (t9656) : (t9637));
        a26828 = (a26827 + 1);
        P2[a26828] = ((i466) ? (d1580) : (t9636));
        a26829 = (a26826 + 1);
        /* MPCondD 64 */
        a26830 = (2*a26829);
        P2[a26830] = ((i466) ? (d1576) : (t9633));
        a26831 = (a26830 + 1);
        P2[a26831] = ((i466) ? (d1574) : (t9632));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1245 = (a26738 + a26737);
        a26832 = (b1245 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1585 = (t9631 - t9627);
        b1246 = ((t9631 < t9627));
        d1586 = (t9630 - t9626);
        d1587 = (d1586 - b1246);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26834 = ((t9630 < t9626));
        a26835 = ((t9630 == t9626));
        a26836 = ((a26835) && (b1246));
        b1247 = ((a26834) || (a26836));
        /* Begin of MPSubDDD 64 */
        d1588 = (t9629 - t9625);
        b1248 = ((t9629 < t9625));
        d1589 = (t9628 - t9624);
        d1590 = (d1589 - b1248);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1591 = (d1588 - b1247);
        b1249 = ((d1588 < b1247));
        t9658 = (d1590 - b1249);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26840 = ((t9628 < t9624));
        a26841 = ((t9628 == t9624));
        a26842 = ((a26841) && (b1248));
        a26843 = ((a26840) || (a26842));
        /* MPEqual 64 */
        a26844 = ((t9629 == t9625));
        a26845 = ((a26841) && (a26844));
        /* MPLessThan 64 */
        a26846 = ((a26845) && (b1247));
        b1250 = ((a26843) || (a26846));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1592 = (t9641 - t9623);
        b1251 = ((t9641 < t9623));
        d1593 = (t9640 - t9622);
        d1594 = (d1593 - b1251);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1595 = (d1592 - b1250);
        b1252 = ((d1592 < b1250));
        t9659 = (d1594 - b1252);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1869 = (((uint128_t ) d1585) + ((uint128_t ) a15441));
        t9660 = ((uint64_t ) s1869);
        c1002 = (s1869 >> 64);
        s1870 = (((uint128_t ) d1587) + ((uint128_t ) a15440));
        s1871 = (((uint128_t ) s1870) + ((uint128_t ) c1002));
        t9661 = ((uint64_t ) s1871);
        c1003 = (s1871 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1872 = (((uint128_t ) d1591) + ((uint128_t ) a15439));
        t9662 = ((uint64_t ) s1872);
        c1004 = (s1872 >> 64);
        s1873 = (((uint128_t ) t9658) + ((uint128_t ) a15438));
        s1874 = (((uint128_t ) s1873) + ((uint128_t ) c1004));
        t9663 = ((uint64_t ) s1874);
        c1005 = (s1874 >> 64);
        /* MPPropagateCarry 64 */
        t9664 = (t9662 + c1003);
        a26850 = ((t9664 == 0));
        a26851 = (t9663 + c1003);
        t9665 = ((a26850) ? (a26851) : (t9663));
        a26852 = ((t9665 == 0));
        a26853 = ((a26852) && (a26850));
        a26854 = (c1005 + c1003);
        t9666 = ((a26853) ? (a26854) : (c1005));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1875 = (((uint128_t ) d1595) + ((uint128_t ) a15437));
        t9668 = ((uint64_t ) s1875);
        c1006 = (s1875 >> 64);
        s1876 = (((uint128_t ) t9659) + ((uint128_t ) a15436));
        s1877 = (((uint128_t ) s1876) + ((uint128_t ) c1006));
        t9669 = ((uint64_t ) s1877);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1878 = (((uint128_t ) t9668) + ((uint128_t ) t9666));
        t9670 = ((uint64_t ) s1878);
        c1008 = (s1878 >> 64);
        s1879 = (((uint128_t ) t9669) + ((uint128_t ) c1008));
        t9671 = ((uint64_t ) s1879);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26858 = ((0 < t9620));
        a26859 = ((0 == t9620));
        a26860 = ((0 < t9621));
        a26861 = ((a26859) && (a26860));
        a26862 = ((a26858) || (a26861));
        /* MPEqual 64 */
        a26863 = ((0 == t9621));
        a26864 = ((a26859) && (a26863));
        /* MPLessThan 64 */
        a26865 = ((t9640 < t9622));
        a26866 = ((t9640 == t9622));
        a26867 = ((a26866) && (b1251));
        a26868 = ((a26865) || (a26867));
        a26869 = ((a26864) && (a26868));
        a26870 = ((a26862) || (a26869));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26871 = ((t9641 == t9623));
        a26872 = ((a26866) && (a26871));
        a26873 = ((a26864) && (a26872));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a26874 = ((a26873) && (b1250));
        i467 = ((a26870) || (a26874));
        a26875 = (2*a26832);
        /* MPCondD 128 */
        a26876 = (2*a26875);
        a26877 = (a26876 + 1);
        /* MPCondD 64 */
        a26878 = (2*a26877);
        P2[a26878] = ((i467) ? (t9671) : (t9659));
        a26879 = (a26878 + 1);
        P2[a26879] = ((i467) ? (t9670) : (d1595));
        a26880 = (a26875 + 1);
        /* MPCondD 128 */
        a26881 = (2*a26880);
        /* MPCondD 64 */
        a26882 = (2*a26881);
        P2[a26882] = ((i467) ? (t9665) : (t9658));
        a26883 = (a26882 + 1);
        P2[a26883] = ((i467) ? (t9664) : (d1591));
        a26884 = (a26881 + 1);
        /* MPCondD 64 */
        a26885 = (2*a26884);
        P2[a26885] = ((i467) ? (t9661) : (d1587));
        a26886 = (a26885 + 1);
        P2[a26886] = ((i467) ? (t9660) : (d1585));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code4(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a26887, a26888, a26889, a26890, a26891, a26892, a26893, a26894, 
            a26895, a26896, a26897, a26898, a26899, a26900, a26901, a26902, 
            a26903, a26904, a26905, a26906, a26907, a26908, a26909, a26910, 
            a26911, a26912, a26913, a26914, a26915, a26934, a26935, a26936, 
            a26940, a26941, a26942, a26943, a26944, a26945, a26946, a26949, 
            a26950, a26951, a26956, a26960, a26961, a26962, a26966, a26967, 
            a26968, a26969, a26970, a26971, a26972, a26975, a26976, a26977, 
            a26981, a26984, a26985, a26986, a26987, a26988, a26989, a26990, 
            a26991, a26992, a26993, a26994, a26995, a26996, a26997, a26998, 
            a26999, a27000, a27001, a27002, a27003, a27005, a27006, a27011, 
            a27012, a27013, a27014, a27015, a27023, a27024, a27025, a27026, 
            a27027, a27028, a27029, a27030, a27031, a27032, a27033, a27034, 
            a27035, a27036, a27037, a27038, a27039, a27040, a27041, a27042, 
            a27043, a27044, a27045, a27046, a27047, a27048, a27049, a27050, 
            a27051, a27052, a27053, a27054, a27055, a27056, a27057, a27059, 
            a27060, a27061, a27065, a27066, a27067, a27068, a27069, a27070, 
            a27071, a27075, a27076, a27077, a27078, a27079, a27080, a27081, 
            a27082, a27083, a27084, a27085, a27086, a27087, a27089, a27090, 
            a27091, a27095, a27096, a27097, a27098, a27099, a27100, a27101, 
            a27105, a27107, a27108, a27113, a27114, a27115, a27116, a27117, 
            a27118, a27119, a27120, a27121, a27122, a27123, a27124, a27125, 
            a27126, a27127, a27128, a27129, a27130, a27131, a27132, a27133, 
            a27134, a27135, a27136, a27137, a27138, a27139, a27140, a27141, 
            b1253, b1254, b1256, b1257, b1258, b1259, b1260, b1261, 
            b1262, b1263, b1264, b1265, b1266, b1267, b1268, b1269, 
            b1270, b1271, b1272, b1273, b1274, b1275, b1276, b1277, 
            b1278, b1279, b1280, b1281, b1282, b1283, b1284, b1285, 
            b1286, b1287, b1288, b1289, b1290, b1291, b1292, b1293, 
            c1009, c1010, c1011, c1012, c1013, c1014, c1015, c1017, 
            c1018, c1019, c1020, c1021, c1022, c1023, c1025, i468, 
            i469, i470;
    uint64_t a16242, a16243, a16244, a16245, a16246, a16247, a16347, a16348, 
            a16349, a16350, a16351, a16352, a26916, a26917, a26918, a26919, 
            a26920, a26921, a26922, a26923, a26924, a26925, a26927, a26928, 
            a26929, a26930, a26931, a26932, a27004, a27007, a27016, a27106, 
            a27109, d1596, d1597, d1598, d1599, d1600, d1601, d1602, 
            d1603, d1604, d1605, d1606, d1607, d1608, d1609, d1610, 
            d1611, d1612, d1613, d1614, d1615, d1616, d1617, d1618, 
            d1619, d1620, d1621, d1622, d1623, d1624, d1625, d1626, 
            d1627, d1628, d1629, d1630, d1631, d1632, d1633, d1634, 
            d1635, d1636, d1637, d1638, d1639, d1640, d1641, d1642, 
            d1643, d1644, d1645, d1646, d1647, t7361, t7362, t7363, 
            t7364, t7365, t7366, t7367, t7368, t7369, t7370, t7371, 
            t7372, t7373, t7374, t7375, t7376, t7377, t7378, t7379, 
            t7380, t7381, t7382, t7383, t7384, t7385, t7386, t7387, 
            t7388, t7389, t7390, t7391, t7392, t7393, t7394, t7395, 
            t7396, t7397, t7398, t7399, t7400, t7401, t7402, t7403, 
            t7404, t7405, t7406, t7407, t7408, t9672, t9673, t9674, 
            t9675, t9676, t9677, t9678, t9679, t9680, t9681, t9682, 
            t9683, t9684, t9685, t9686, t9687, t9688, t9689, t9690, 
            t9691, t9692, t9693, t9694, t9695, t9696, t9697, t9698, 
            t9699, t9700, t9701, t9702, t9703, t9704, t9705, t9708, 
            t9709, t9710, t9711, t9712, t9713, t9714, t9715, t9716, 
            t9717, t9718, t9719, t9720, t9721, t9722, t9723, t9724, 
            t9725, t9726, t9727, t9728, t9729, t9730, t9731, t9732, 
            t9733, t9734, t9735, t9736, t9737, t9738, t9739, t9740, 
            t9741, t9742, t9743, t9744, t9745, t9746, t9747, t9748, 
            t9749, t9750, t9751, t9753, t9754, t9755, t9756, t9757, 
            t9758, t9759, t9760, t9763, t9764, t9765, t9766, t9767, 
            t9768, t9769, t9770, t9771, t9772, t9773, t9774, t9775, 
            t9776, t9777, t9778, t9779, t9781, t9782, t9783, t9784;
    uint128_t s1880, s1881, s1882, s1883, s1884, s1885, s1886, s1887, 
            s1888, s1889, s1890, s1891, s1892, s1893, s1894, s1895, 
            s1896, s1897, s1898, s1899, s1900, s1901, s1902, s1903, 
            s1904;
    for(int i21 = 0; i21 <= 63; i21++) {
        a26887 = (128*i21);
        a26888 = (a26887 + threadIdx.x);
        b1253 = (threadIdx.x + a26887);
        a26889 = (b1253 + 8192);
        a26890 = (a26889 % 16);
        a26891 = (16 + a26890);
        /* Begin of MPModMul 256 */
        a26892 = (2*a26891);
        a26893 = (a26892 + 1);
        a26894 = (2*a26889);
        a26895 = (a26894 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26896 = (2*a26892);
        a26897 = (a26896 + 1);
        /* MPAssignDD 64 */
        a26898 = (2*a26897);
        t9672 = twiddles[a26898];
        a26899 = (a26898 + 1);
        t9673 = twiddles[a26899];
        /* MPAssignDD 128 */
        a26900 = (2*a26893);
        /* MPAssignDD 64 */
        a26901 = (2*a26900);
        t9674 = twiddles[a26901];
        a26902 = (a26901 + 1);
        t9675 = twiddles[a26902];
        a26903 = (a26900 + 1);
        /* MPAssignDD 64 */
        a26904 = (2*a26903);
        t9676 = twiddles[a26904];
        a26905 = (a26904 + 1);
        t9677 = twiddles[a26905];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a26906 = (2*a26894);
        a26907 = (a26906 + 1);
        /* MPAssignDD 64 */
        a26908 = (2*a26907);
        t9678 = P2[a26908];
        a26909 = (a26908 + 1);
        t9679 = P2[a26909];
        /* MPAssignDD 128 */
        a26910 = (2*a26895);
        /* MPAssignDD 64 */
        a26911 = (2*a26910);
        t9680 = P2[a26911];
        a26912 = (a26911 + 1);
        t9681 = P2[a26912];
        a26913 = (a26910 + 1);
        /* MPAssignDD 64 */
        a26914 = (2*a26913);
        t9682 = P2[a26914];
        a26915 = (a26914 + 1);
        t9683 = P2[a26915];
        MPMulQDD_L3_2(t7395, t7396, t7393, t7394, t7399, t7400, t7397, t7398, 
    t7403, t7404, t7401, t7402, t7407, t7408, t7405, t7406, 
    0, 0, t9672, t9673, t9674, t9675, t9676, t9677, 
    0, 0, t9678, t9679, t9680, t9681, t9682, t9683);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9684 = (t7403 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a26916 = (t7403 << 6);
        a26917 = (t7404 >> 58);
        t9685 = (((a26916)|(a26917)));
        t9686 = (t7404 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9687 = (t7401 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9688 = (((t9686)|(t9687)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1254 = ((int) 1);
        t9689 = (288230376151711744 - b1254);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9690 = (((t7393)&(t9689)));
        t9691 = (((t7394)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a26918 = (t9690 << 6);
        a26919 = (t9691 >> 58);
        t9692 = (((a26918)|(a26919)));
        t9693 = (t9691 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9694 = (t7399 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a26920 = (t7399 << 6);
        a26921 = (t7400 >> 58);
        t9695 = (((a26920)|(a26921)));
        t9696 = (t7400 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9697 = (t7397 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9698 = (((t9696)|(t9697)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9699 = (((t9693)|(t9694)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a26922 = (t7397 << 6);
        a26923 = (t7398 >> 58);
        t9700 = (((a26922)|(a26923)));
        t9701 = (t7398 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9702 = (((t9701)|(t9684)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a16242 = mu[2];
        a16243 = mu[3];
        a16244 = mu[4];
        a16245 = mu[5];
        a16246 = mu[6];
        a16247 = mu[7];
        MPMulQDD_L3_1(t7363, t7364, t7361, t7362, t7367, t7368, t7365, t7366, 
    t7371, t7372, t7369, t7370, t7375, t7376, t7373, t7374, 
    t9692, t9699, t9695, t9698, t9700, t9702, t9685, t9688, 
    0, 0, a16242, a16243, a16244, a16245, a16246, a16247);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9703 = (t7371 >> 1);
        a26924 = (t7371 << 63);
        a26925 = (t7372 >> 1);
        t9704 = (((a26924)|(a26925)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t9705 = (0 - b1254);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1596 = (2 - b1254);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9708 = (((t7364)&(d1596)));
        /* MPBinAndD 64 */
        t9709 = (((t7361)&(t9705)));
        t9710 = (((t7362)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9711 = (t9708 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9712 = (t9709 >> 1);
        a26927 = (t9709 << 63);
        a26928 = (t9710 >> 1);
        t9713 = (((a26927)|(a26928)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9714 = (((t9711)|(t9712)));
        /* Begin of MPShiftLeft1D */
        t9715 = (t9710 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9716 = (t7367 >> 1);
        a26929 = (t7367 << 63);
        a26930 = (t7368 >> 1);
        t9717 = (((a26929)|(a26930)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9718 = (((t9715)|(t9716)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9719 = (t7368 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9720 = (t7365 >> 1);
        a26931 = (t7365 << 63);
        a26932 = (t7366 >> 1);
        t9721 = (((a26931)|(a26932)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9722 = (((t9719)|(t9720)));
        /* Begin of MPShiftLeft1D */
        t9723 = (t7366 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9724 = (((t9723)|(t9703)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a16347 = modulus[2];
        a16348 = modulus[3];
        a16349 = modulus[4];
        a16350 = modulus[5];
        a16351 = modulus[6];
        a16352 = modulus[7];
        MPMulQDD_L3_1(t7379, t7380, t7377, t7378, t7383, t7384, t7381, t7382, 
    t7387, t7388, t7385, t7386, t7391, t7392, t7389, t7390, 
    t9714, t9713, t9718, t9717, t9722, t9721, t9724, t9704, 
    0, 0, a16347, a16348, a16349, a16350, a16351, a16352);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1597 = (t7406 - t7390);
        b1256 = ((t7406 < t7390));
        d1598 = (t7405 - t7389);
        d1599 = (d1598 - b1256);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26934 = ((t7405 < t7389));
        a26935 = ((t7405 == t7389));
        a26936 = ((a26935) && (b1256));
        b1257 = ((a26934) || (a26936));
        /* Begin of MPSubDDD 64 */
        d1600 = (t7408 - t7392);
        b1258 = ((t7408 < t7392));
        d1601 = (t7407 - t7391);
        d1602 = (d1601 - b1258);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1603 = (d1600 - b1257);
        b1259 = ((d1600 < b1257));
        t9725 = (d1602 - b1259);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26940 = ((t7407 < t7391));
        a26941 = ((t7407 == t7391));
        a26942 = ((a26941) && (b1258));
        a26943 = ((a26940) || (a26942));
        /* MPEqual 64 */
        a26944 = ((t7408 == t7392));
        a26945 = ((a26941) && (a26944));
        /* MPLessThan 64 */
        a26946 = ((a26945) && (b1257));
        b1260 = ((a26943) || (a26946));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1604 = (t7402 - t7386);
        b1261 = ((t7402 < t7386));
        d1605 = (t7401 - t7385);
        d1606 = (d1605 - b1261);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26949 = ((t7401 < t7385));
        a26950 = ((t7401 == t7385));
        a26951 = ((a26950) && (b1261));
        b1262 = ((a26949) || (a26951));
        /* Begin of MPSubDDD 64 */
        d1607 = (t7404 - t7388);
        b1263 = ((t7404 < t7388));
        d1608 = (t7403 - t7387);
        d1609 = (d1608 - b1263);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1610 = (d1607 - b1262);
        b1264 = ((d1607 < b1262));
        t9726 = (d1609 - b1264);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1611 = (d1604 - b1260);
        b1265 = ((d1604 < b1260));
        t9727 = (d1606 - b1265);
        /* MPLessThanDI 64 */
        a26956 = ((d1606 == 0));
        b1266 = ((a26956) && (b1265));
        /* MPSubDDI 64 */
        d1612 = (d1610 - b1266);
        b1267 = ((d1610 < b1266));
        t9728 = (t9726 - b1267);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1613 = (d1597 - a16352);
        b1268 = ((d1597 < a16352));
        d1614 = (d1599 - a16351);
        d1615 = (d1614 - b1268);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26960 = ((d1599 < a16351));
        a26961 = ((d1599 == a16351));
        a26962 = ((a26961) && (b1268));
        b1269 = ((a26960) || (a26962));
        /* Begin of MPSubDDD 64 */
        d1616 = (d1603 - a16350);
        b1270 = ((d1603 < a16350));
        d1617 = (t9725 - a16349);
        d1618 = (d1617 - b1270);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1619 = (d1616 - b1269);
        b1271 = ((d1616 < b1269));
        t9729 = (d1618 - b1271);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a26966 = ((t9725 < a16349));
        a26967 = ((t9725 == a16349));
        a26968 = ((a26967) && (b1270));
        a26969 = ((a26966) || (a26968));
        /* MPEqual 64 */
        a26970 = ((d1603 == a16350));
        a26971 = ((a26967) && (a26970));
        /* MPLessThan 64 */
        a26972 = ((a26971) && (b1269));
        b1272 = ((a26969) || (a26972));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1620 = (d1611 - a16348);
        b1273 = ((d1611 < a16348));
        d1621 = (t9727 - a16347);
        d1622 = (d1621 - b1273);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a26975 = ((t9727 < a16347));
        a26976 = ((t9727 == a16347));
        a26977 = ((a26976) && (b1273));
        b1274 = ((a26975) || (a26977));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1623 = (d1612 - b1274);
        b1275 = ((d1612 < b1274));
        t9730 = (t9728 - b1275);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1624 = (d1620 - b1272);
        b1276 = ((d1620 < b1272));
        t9731 = (d1622 - b1276);
        /* MPLessThanDI 64 */
        a26981 = ((d1622 == 0));
        b1277 = ((a26981) && (b1276));
        /* MPSubDDI 64 */
        d1625 = (d1623 - b1277);
        b1278 = ((d1623 < b1277));
        t9732 = (t9730 - b1278);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a26984 = ((t9728 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a26985 = ((d1612 == 0));
        a26986 = ((a26984) && (a26985));
        /* MPLessThan 64 */
        a26987 = ((a26986) && (b1274));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a26988 = ((d1611 == a16348));
        a26989 = ((a26976) && (a26988));
        a26990 = ((a26986) && (a26989));
        /* MPLessThan 128 */
        a26991 = ((a26990) && (b1272));
        i468 = ((a26987) || (a26991));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9733 = ((i468) ? (t9728) : (t9732));
        t9734 = ((i468) ? (d1612) : (d1625));
        /* MPCondD 64 */
        t9735 = ((i468) ? (t9727) : (t9731));
        t9736 = ((i468) ? (d1611) : (d1624));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9737 = ((i468) ? (t9725) : (t9729));
        t9738 = ((i468) ? (d1603) : (d1619));
        /* MPCondD 64 */
        t9739 = ((i468) ? (d1599) : (d1615));
        t9740 = ((i468) ? (d1597) : (d1613));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a26992 = (256*i21);
        a26993 = (2*threadIdx.x);
        a26994 = (a26992 + a26993);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a26995 = (2*a26888);
        a26996 = (a26995 + 1);
        /* MPAssignDD 128 */
        a26997 = (2*a26996);
        /* MPAssignDD 64 */
        a26998 = (2*a26997);
        t9741 = P2[a26998];
        a26999 = (a26998 + 1);
        t9742 = P2[a26999];
        a27000 = (a26997 + 1);
        /* MPAssignDD 64 */
        a27001 = (2*a27000);
        t9743 = P2[a27001];
        a27002 = (a27001 + 1);
        t9744 = P2[a27002];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1880 = (((uint128_t ) t9744) + ((uint128_t ) t9740));
        t9745 = ((uint64_t ) s1880);
        c1009 = (s1880 >> 64);
        s1881 = (((uint128_t ) t9743) + ((uint128_t ) t9739));
        s1882 = (((uint128_t ) s1881) + ((uint128_t ) c1009));
        t9746 = ((uint64_t ) s1882);
        c1010 = (s1882 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1883 = (((uint128_t ) t9742) + ((uint128_t ) t9738));
        t9747 = ((uint64_t ) s1883);
        c1011 = (s1883 >> 64);
        s1884 = (((uint128_t ) t9741) + ((uint128_t ) t9737));
        s1885 = (((uint128_t ) s1884) + ((uint128_t ) c1011));
        t9748 = ((uint64_t ) s1885);
        c1012 = (s1885 >> 64);
        /* MPPropagateCarry 64 */
        t9749 = (t9747 + c1010);
        a27003 = ((t9749 == 0));
        a27004 = (t9748 + c1010);
        t9750 = ((a27003) ? (a27004) : (t9748));
        a27005 = ((t9750 == 0));
        a27006 = ((a27005) && (a27003));
        a27007 = (c1012 + c1010);
        t9751 = ((a27006) ? (a27007) : (c1012));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27011 = (2*a26995);
        a27012 = (a27011 + 1);
        /* MPAssignDD 64 */
        a27013 = (2*a27012);
        t9753 = P2[a27013];
        a27014 = (a27013 + 1);
        t9754 = P2[a27014];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1886 = (((uint128_t ) t9754) + ((uint128_t ) t9736));
        t9755 = ((uint64_t ) s1886);
        c1013 = (s1886 >> 64);
        s1887 = (((uint128_t ) t9753) + ((uint128_t ) t9735));
        s1888 = (((uint128_t ) s1887) + ((uint128_t ) c1013));
        t9756 = ((uint64_t ) s1888);
        c1014 = (s1888 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t9757 = ((uint64_t ) t9734);
        c1015 = (t9734 >> 64);
        s1889 = (((uint128_t ) t9733) + ((uint128_t ) c1015));
        t9758 = ((uint64_t ) s1889);
        /* MPPropagateCarry 64 */
        t9759 = (t9757 + c1014);
        a27015 = ((t9759 == 0));
        a27016 = (t9758 + c1014);
        t9760 = ((a27015) ? (a27016) : (t9758));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1890 = (((uint128_t ) t9755) + ((uint128_t ) t9751));
        t9763 = ((uint64_t ) s1890);
        c1017 = (s1890 >> 64);
        s1891 = (((uint128_t ) t9756) + ((uint128_t ) c1017));
        t9764 = ((uint64_t ) s1891);
        /* MPEqualDI 64 */
        a27023 = ((t9764 == 0));
        a27024 = ((t9763 == 0));
        a27025 = ((a27023) && (a27024));
        /* MPAddDDI 64 */
        s1892 = (((uint128_t ) t9759) + ((uint128_t ) t9751));
        t9765 = ((uint64_t ) s1892);
        c1018 = (s1892 >> 64);
        s1893 = (((uint128_t ) t9760) + ((uint128_t ) c1018));
        t9766 = ((uint64_t ) s1893);
        /* MPCondD 64 */
        t9767 = ((a27025) ? (t9766) : (t9760));
        t9768 = ((a27025) ? (t9765) : (t9759));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a27026 = ((0 < t9767));
        a27027 = ((0 == t9767));
        a27028 = ((0 < t9768));
        a27029 = ((a27027) && (a27028));
        a27030 = ((a27026) || (a27029));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a27031 = ((0 == t9768));
        a27032 = ((a27027) && (a27031));
        /* MPLessThan 64 */
        a27033 = ((a16347 < t9764));
        a27034 = ((a16347 == t9764));
        a27035 = ((a16348 < t9763));
        a27036 = ((a27034) && (a27035));
        a27037 = ((a27033) || (a27036));
        a27038 = ((a27032) && (a27037));
        a27039 = ((a27030) || (a27038));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27040 = ((a16348 == t9763));
        a27041 = ((a27034) && (a27040));
        a27042 = ((a27032) && (a27041));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27043 = ((a16349 < t9750));
        a27044 = ((a16349 == t9750));
        a27045 = ((a16350 < t9749));
        a27046 = ((a27044) && (a27045));
        a27047 = ((a27043) || (a27046));
        /* MPEqual 64 */
        a27048 = ((a16350 == t9749));
        a27049 = ((a27044) && (a27048));
        /* MPLessThan 64 */
        a27050 = ((a16351 < t9746));
        a27051 = ((a16351 == t9746));
        a27052 = ((a16352 < t9745));
        a27053 = ((a27051) && (a27052));
        a27054 = ((a27050) || (a27053));
        a27055 = ((a27049) && (a27054));
        a27056 = ((a27047) || (a27055));
        a27057 = ((a27042) && (a27056));
        i469 = ((a27039) || (a27057));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1626 = (t9745 - a16352);
        b1279 = ((t9745 < a16352));
        d1627 = (t9746 - a16351);
        d1628 = (d1627 - b1279);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27059 = ((t9746 < a16351));
        a27060 = ((t9746 == a16351));
        a27061 = ((a27060) && (b1279));
        b1280 = ((a27059) || (a27061));
        /* Begin of MPSubDDD 64 */
        d1629 = (t9749 - a16350);
        b1281 = ((t9749 < a16350));
        d1630 = (t9750 - a16349);
        d1631 = (d1630 - b1281);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1632 = (d1629 - b1280);
        b1282 = ((d1629 < b1280));
        t9769 = (d1631 - b1282);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27065 = ((t9750 < a16349));
        a27066 = ((t9750 == a16349));
        a27067 = ((a27066) && (b1281));
        a27068 = ((a27065) || (a27067));
        /* MPEqual 64 */
        a27069 = ((t9749 == a16350));
        a27070 = ((a27066) && (a27069));
        /* MPLessThan 64 */
        a27071 = ((a27070) && (b1280));
        b1283 = ((a27068) || (a27071));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1633 = (t9763 - a16348);
        b1284 = ((t9763 < a16348));
        d1634 = (t9764 - a16347);
        d1635 = (d1634 - b1284);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1636 = (d1633 - b1283);
        b1285 = ((d1633 < b1283));
        t9770 = (d1635 - b1285);
        /* End of MPSubDDD 256 */
        a27075 = (2*a26994);
        /* MPCondD 128 */
        a27076 = (2*a27075);
        a27077 = (a27076 + 1);
        /* MPCondD 64 */
        a27078 = (2*a27077);
        P1[a27078] = ((i469) ? (t9770) : (t9764));
        a27079 = (a27078 + 1);
        P1[a27079] = ((i469) ? (d1636) : (t9763));
        a27080 = (a27075 + 1);
        /* MPCondD 128 */
        a27081 = (2*a27080);
        /* MPCondD 64 */
        a27082 = (2*a27081);
        P1[a27082] = ((i469) ? (t9769) : (t9750));
        a27083 = (a27082 + 1);
        P1[a27083] = ((i469) ? (d1632) : (t9749));
        a27084 = (a27081 + 1);
        /* MPCondD 64 */
        a27085 = (2*a27084);
        P1[a27085] = ((i469) ? (d1628) : (t9746));
        a27086 = (a27085 + 1);
        P1[a27086] = ((i469) ? (d1626) : (t9745));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1286 = (a26993 + a26992);
        a27087 = (b1286 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1637 = (t9744 - t9740);
        b1287 = ((t9744 < t9740));
        d1638 = (t9743 - t9739);
        d1639 = (d1638 - b1287);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27089 = ((t9743 < t9739));
        a27090 = ((t9743 == t9739));
        a27091 = ((a27090) && (b1287));
        b1288 = ((a27089) || (a27091));
        /* Begin of MPSubDDD 64 */
        d1640 = (t9742 - t9738);
        b1289 = ((t9742 < t9738));
        d1641 = (t9741 - t9737);
        d1642 = (d1641 - b1289);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1643 = (d1640 - b1288);
        b1290 = ((d1640 < b1288));
        t9771 = (d1642 - b1290);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27095 = ((t9741 < t9737));
        a27096 = ((t9741 == t9737));
        a27097 = ((a27096) && (b1289));
        a27098 = ((a27095) || (a27097));
        /* MPEqual 64 */
        a27099 = ((t9742 == t9738));
        a27100 = ((a27096) && (a27099));
        /* MPLessThan 64 */
        a27101 = ((a27100) && (b1288));
        b1291 = ((a27098) || (a27101));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1644 = (t9754 - t9736);
        b1292 = ((t9754 < t9736));
        d1645 = (t9753 - t9735);
        d1646 = (d1645 - b1292);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1647 = (d1644 - b1291);
        b1293 = ((d1644 < b1291));
        t9772 = (d1646 - b1293);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1894 = (((uint128_t ) d1637) + ((uint128_t ) a16352));
        t9773 = ((uint64_t ) s1894);
        c1019 = (s1894 >> 64);
        s1895 = (((uint128_t ) d1639) + ((uint128_t ) a16351));
        s1896 = (((uint128_t ) s1895) + ((uint128_t ) c1019));
        t9774 = ((uint64_t ) s1896);
        c1020 = (s1896 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1897 = (((uint128_t ) d1643) + ((uint128_t ) a16350));
        t9775 = ((uint64_t ) s1897);
        c1021 = (s1897 >> 64);
        s1898 = (((uint128_t ) t9771) + ((uint128_t ) a16349));
        s1899 = (((uint128_t ) s1898) + ((uint128_t ) c1021));
        t9776 = ((uint64_t ) s1899);
        c1022 = (s1899 >> 64);
        /* MPPropagateCarry 64 */
        t9777 = (t9775 + c1020);
        a27105 = ((t9777 == 0));
        a27106 = (t9776 + c1020);
        t9778 = ((a27105) ? (a27106) : (t9776));
        a27107 = ((t9778 == 0));
        a27108 = ((a27107) && (a27105));
        a27109 = (c1022 + c1020);
        t9779 = ((a27108) ? (a27109) : (c1022));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1900 = (((uint128_t ) d1647) + ((uint128_t ) a16348));
        t9781 = ((uint64_t ) s1900);
        c1023 = (s1900 >> 64);
        s1901 = (((uint128_t ) t9772) + ((uint128_t ) a16347));
        s1902 = (((uint128_t ) s1901) + ((uint128_t ) c1023));
        t9782 = ((uint64_t ) s1902);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1903 = (((uint128_t ) t9781) + ((uint128_t ) t9779));
        t9783 = ((uint64_t ) s1903);
        c1025 = (s1903 >> 64);
        s1904 = (((uint128_t ) t9782) + ((uint128_t ) c1025));
        t9784 = ((uint64_t ) s1904);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27113 = ((0 < t9733));
        a27114 = ((0 == t9733));
        a27115 = ((0 < t9734));
        a27116 = ((a27114) && (a27115));
        a27117 = ((a27113) || (a27116));
        /* MPEqual 64 */
        a27118 = ((0 == t9734));
        a27119 = ((a27114) && (a27118));
        /* MPLessThan 64 */
        a27120 = ((t9753 < t9735));
        a27121 = ((t9753 == t9735));
        a27122 = ((a27121) && (b1292));
        a27123 = ((a27120) || (a27122));
        a27124 = ((a27119) && (a27123));
        a27125 = ((a27117) || (a27124));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27126 = ((t9754 == t9736));
        a27127 = ((a27121) && (a27126));
        a27128 = ((a27119) && (a27127));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a27129 = ((a27128) && (b1291));
        i470 = ((a27125) || (a27129));
        a27130 = (2*a27087);
        /* MPCondD 128 */
        a27131 = (2*a27130);
        a27132 = (a27131 + 1);
        /* MPCondD 64 */
        a27133 = (2*a27132);
        P1[a27133] = ((i470) ? (t9784) : (t9772));
        a27134 = (a27133 + 1);
        P1[a27134] = ((i470) ? (t9783) : (d1647));
        a27135 = (a27130 + 1);
        /* MPCondD 128 */
        a27136 = (2*a27135);
        /* MPCondD 64 */
        a27137 = (2*a27136);
        P1[a27137] = ((i470) ? (t9778) : (t9771));
        a27138 = (a27137 + 1);
        P1[a27138] = ((i470) ? (t9777) : (d1643));
        a27139 = (a27136 + 1);
        /* MPCondD 64 */
        a27140 = (2*a27139);
        P1[a27140] = ((i470) ? (t9774) : (d1639));
        a27141 = (a27140 + 1);
        P1[a27141] = ((i470) ? (t9773) : (d1637));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code5(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a27142, a27143, a27144, a27145, a27146, a27147, a27148, a27149, 
            a27150, a27151, a27152, a27153, a27154, a27155, a27156, a27157, 
            a27158, a27159, a27160, a27161, a27162, a27163, a27164, a27165, 
            a27166, a27167, a27168, a27169, a27170, a27189, a27190, a27191, 
            a27195, a27196, a27197, a27198, a27199, a27200, a27201, a27204, 
            a27205, a27206, a27211, a27215, a27216, a27217, a27221, a27222, 
            a27223, a27224, a27225, a27226, a27227, a27230, a27231, a27232, 
            a27236, a27239, a27240, a27241, a27242, a27243, a27244, a27245, 
            a27246, a27247, a27248, a27249, a27250, a27251, a27252, a27253, 
            a27254, a27255, a27256, a27257, a27258, a27260, a27261, a27266, 
            a27267, a27268, a27269, a27270, a27278, a27279, a27280, a27281, 
            a27282, a27283, a27284, a27285, a27286, a27287, a27288, a27289, 
            a27290, a27291, a27292, a27293, a27294, a27295, a27296, a27297, 
            a27298, a27299, a27300, a27301, a27302, a27303, a27304, a27305, 
            a27306, a27307, a27308, a27309, a27310, a27311, a27312, a27314, 
            a27315, a27316, a27320, a27321, a27322, a27323, a27324, a27325, 
            a27326, a27330, a27331, a27332, a27333, a27334, a27335, a27336, 
            a27337, a27338, a27339, a27340, a27341, a27342, a27344, a27345, 
            a27346, a27350, a27351, a27352, a27353, a27354, a27355, a27356, 
            a27360, a27362, a27363, a27368, a27369, a27370, a27371, a27372, 
            a27373, a27374, a27375, a27376, a27377, a27378, a27379, a27380, 
            a27381, a27382, a27383, a27384, a27385, a27386, a27387, a27388, 
            a27389, a27390, a27391, a27392, a27393, a27394, a27395, a27396, 
            b1294, b1295, b1297, b1298, b1299, b1300, b1301, b1302, 
            b1303, b1304, b1305, b1306, b1307, b1308, b1309, b1310, 
            b1311, b1312, b1313, b1314, b1315, b1316, b1317, b1318, 
            b1319, b1320, b1321, b1322, b1323, b1324, b1325, b1326, 
            b1327, b1328, b1329, b1330, b1331, b1332, b1333, b1334, 
            c1026, c1027, c1028, c1029, c1030, c1031, c1032, c1034, 
            c1035, c1036, c1037, c1038, c1039, c1040, c1042, i471, 
            i472, i473;
    uint64_t a17153, a17154, a17155, a17156, a17157, a17158, a17258, a17259, 
            a17260, a17261, a17262, a17263, a27171, a27172, a27173, a27174, 
            a27175, a27176, a27177, a27178, a27179, a27180, a27182, a27183, 
            a27184, a27185, a27186, a27187, a27259, a27262, a27271, a27361, 
            a27364, d1648, d1649, d1650, d1651, d1652, d1653, d1654, 
            d1655, d1656, d1657, d1658, d1659, d1660, d1661, d1662, 
            d1663, d1664, d1665, d1666, d1667, d1668, d1669, d1670, 
            d1671, d1672, d1673, d1674, d1675, d1676, d1677, d1678, 
            d1679, d1680, d1681, d1682, d1683, d1684, d1685, d1686, 
            d1687, d1688, d1689, d1690, d1691, d1692, d1693, d1694, 
            d1695, d1696, d1697, d1698, d1699, t7297, t7298, t7299, 
            t7300, t7301, t7302, t7303, t7304, t7305, t7306, t7307, 
            t7308, t7309, t7310, t7311, t7312, t7313, t7314, t7315, 
            t7316, t7317, t7318, t7319, t7320, t7321, t7322, t7323, 
            t7324, t7325, t7326, t7327, t7328, t7329, t7330, t7331, 
            t7332, t7333, t7334, t7335, t7336, t7337, t7338, t7339, 
            t7340, t7341, t7342, t7343, t7344, t9785, t9786, t9787, 
            t9788, t9789, t9790, t9791, t9792, t9793, t9794, t9795, 
            t9796, t9797, t9798, t9799, t9800, t9801, t9802, t9803, 
            t9804, t9805, t9806, t9807, t9808, t9809, t9810, t9811, 
            t9812, t9813, t9814, t9815, t9816, t9817, t9818, t9821, 
            t9822, t9823, t9824, t9825, t9826, t9827, t9828, t9829, 
            t9830, t9831, t9832, t9833, t9834, t9835, t9836, t9837, 
            t9838, t9839, t9840, t9841, t9842, t9843, t9844, t9845, 
            t9846, t9847, t9848, t9849, t9850, t9851, t9852, t9853, 
            t9854, t9855, t9856, t9857, t9858, t9859, t9860, t9861, 
            t9862, t9863, t9864, t9866, t9867, t9868, t9869, t9870, 
            t9871, t9872, t9873, t9876, t9877, t9878, t9879, t9880, 
            t9881, t9882, t9883, t9884, t9885, t9886, t9887, t9888, 
            t9889, t9890, t9891, t9892, t9894, t9895, t9896, t9897;
    uint128_t s1905, s1906, s1907, s1908, s1909, s1910, s1911, s1912, 
            s1913, s1914, s1915, s1916, s1917, s1918, s1919, s1920, 
            s1921, s1922, s1923, s1924, s1925, s1926, s1927, s1928, 
            s1929;
    for(int i19 = 0; i19 <= 63; i19++) {
        a27142 = (128*i19);
        a27143 = (a27142 + threadIdx.x);
        b1294 = (threadIdx.x + a27142);
        a27144 = (b1294 + 8192);
        a27145 = (a27144 % 32);
        a27146 = (32 + a27145);
        /* Begin of MPModMul 256 */
        a27147 = (2*a27146);
        a27148 = (a27147 + 1);
        a27149 = (2*a27144);
        a27150 = (a27149 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27151 = (2*a27147);
        a27152 = (a27151 + 1);
        /* MPAssignDD 64 */
        a27153 = (2*a27152);
        t9785 = twiddles[a27153];
        a27154 = (a27153 + 1);
        t9786 = twiddles[a27154];
        /* MPAssignDD 128 */
        a27155 = (2*a27148);
        /* MPAssignDD 64 */
        a27156 = (2*a27155);
        t9787 = twiddles[a27156];
        a27157 = (a27156 + 1);
        t9788 = twiddles[a27157];
        a27158 = (a27155 + 1);
        /* MPAssignDD 64 */
        a27159 = (2*a27158);
        t9789 = twiddles[a27159];
        a27160 = (a27159 + 1);
        t9790 = twiddles[a27160];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27161 = (2*a27149);
        a27162 = (a27161 + 1);
        /* MPAssignDD 64 */
        a27163 = (2*a27162);
        t9791 = P1[a27163];
        a27164 = (a27163 + 1);
        t9792 = P1[a27164];
        /* MPAssignDD 128 */
        a27165 = (2*a27150);
        /* MPAssignDD 64 */
        a27166 = (2*a27165);
        t9793 = P1[a27166];
        a27167 = (a27166 + 1);
        t9794 = P1[a27167];
        a27168 = (a27165 + 1);
        /* MPAssignDD 64 */
        a27169 = (2*a27168);
        t9795 = P1[a27169];
        a27170 = (a27169 + 1);
        t9796 = P1[a27170];
        MPMulQDD_L3_2(t7331, t7332, t7329, t7330, t7335, t7336, t7333, t7334, 
    t7339, t7340, t7337, t7338, t7343, t7344, t7341, t7342, 
    0, 0, t9785, t9786, t9787, t9788, t9789, t9790, 
    0, 0, t9791, t9792, t9793, t9794, t9795, t9796);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9797 = (t7339 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a27171 = (t7339 << 6);
        a27172 = (t7340 >> 58);
        t9798 = (((a27171)|(a27172)));
        t9799 = (t7340 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9800 = (t7337 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9801 = (((t9799)|(t9800)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1295 = ((int) 1);
        t9802 = (288230376151711744 - b1295);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9803 = (((t7329)&(t9802)));
        t9804 = (((t7330)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a27173 = (t9803 << 6);
        a27174 = (t9804 >> 58);
        t9805 = (((a27173)|(a27174)));
        t9806 = (t9804 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9807 = (t7335 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a27175 = (t7335 << 6);
        a27176 = (t7336 >> 58);
        t9808 = (((a27175)|(a27176)));
        t9809 = (t7336 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9810 = (t7333 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9811 = (((t9809)|(t9810)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9812 = (((t9806)|(t9807)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a27177 = (t7333 << 6);
        a27178 = (t7334 >> 58);
        t9813 = (((a27177)|(a27178)));
        t9814 = (t7334 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9815 = (((t9814)|(t9797)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a17153 = mu[2];
        a17154 = mu[3];
        a17155 = mu[4];
        a17156 = mu[5];
        a17157 = mu[6];
        a17158 = mu[7];
        MPMulQDD_L3_1(t7299, t7300, t7297, t7298, t7303, t7304, t7301, t7302, 
    t7307, t7308, t7305, t7306, t7311, t7312, t7309, t7310, 
    t9805, t9812, t9808, t9811, t9813, t9815, t9798, t9801, 
    0, 0, a17153, a17154, a17155, a17156, a17157, a17158);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9816 = (t7307 >> 1);
        a27179 = (t7307 << 63);
        a27180 = (t7308 >> 1);
        t9817 = (((a27179)|(a27180)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t9818 = (0 - b1295);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1648 = (2 - b1295);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9821 = (((t7300)&(d1648)));
        /* MPBinAndD 64 */
        t9822 = (((t7297)&(t9818)));
        t9823 = (((t7298)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9824 = (t9821 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9825 = (t9822 >> 1);
        a27182 = (t9822 << 63);
        a27183 = (t9823 >> 1);
        t9826 = (((a27182)|(a27183)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9827 = (((t9824)|(t9825)));
        /* Begin of MPShiftLeft1D */
        t9828 = (t9823 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9829 = (t7303 >> 1);
        a27184 = (t7303 << 63);
        a27185 = (t7304 >> 1);
        t9830 = (((a27184)|(a27185)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9831 = (((t9828)|(t9829)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9832 = (t7304 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9833 = (t7301 >> 1);
        a27186 = (t7301 << 63);
        a27187 = (t7302 >> 1);
        t9834 = (((a27186)|(a27187)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9835 = (((t9832)|(t9833)));
        /* Begin of MPShiftLeft1D */
        t9836 = (t7302 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9837 = (((t9836)|(t9816)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a17258 = modulus[2];
        a17259 = modulus[3];
        a17260 = modulus[4];
        a17261 = modulus[5];
        a17262 = modulus[6];
        a17263 = modulus[7];
        MPMulQDD_L3_1(t7315, t7316, t7313, t7314, t7319, t7320, t7317, t7318, 
    t7323, t7324, t7321, t7322, t7327, t7328, t7325, t7326, 
    t9827, t9826, t9831, t9830, t9835, t9834, t9837, t9817, 
    0, 0, a17258, a17259, a17260, a17261, a17262, a17263);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1649 = (t7342 - t7326);
        b1297 = ((t7342 < t7326));
        d1650 = (t7341 - t7325);
        d1651 = (d1650 - b1297);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27189 = ((t7341 < t7325));
        a27190 = ((t7341 == t7325));
        a27191 = ((a27190) && (b1297));
        b1298 = ((a27189) || (a27191));
        /* Begin of MPSubDDD 64 */
        d1652 = (t7344 - t7328);
        b1299 = ((t7344 < t7328));
        d1653 = (t7343 - t7327);
        d1654 = (d1653 - b1299);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1655 = (d1652 - b1298);
        b1300 = ((d1652 < b1298));
        t9838 = (d1654 - b1300);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27195 = ((t7343 < t7327));
        a27196 = ((t7343 == t7327));
        a27197 = ((a27196) && (b1299));
        a27198 = ((a27195) || (a27197));
        /* MPEqual 64 */
        a27199 = ((t7344 == t7328));
        a27200 = ((a27196) && (a27199));
        /* MPLessThan 64 */
        a27201 = ((a27200) && (b1298));
        b1301 = ((a27198) || (a27201));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1656 = (t7338 - t7322);
        b1302 = ((t7338 < t7322));
        d1657 = (t7337 - t7321);
        d1658 = (d1657 - b1302);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27204 = ((t7337 < t7321));
        a27205 = ((t7337 == t7321));
        a27206 = ((a27205) && (b1302));
        b1303 = ((a27204) || (a27206));
        /* Begin of MPSubDDD 64 */
        d1659 = (t7340 - t7324);
        b1304 = ((t7340 < t7324));
        d1660 = (t7339 - t7323);
        d1661 = (d1660 - b1304);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1662 = (d1659 - b1303);
        b1305 = ((d1659 < b1303));
        t9839 = (d1661 - b1305);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1663 = (d1656 - b1301);
        b1306 = ((d1656 < b1301));
        t9840 = (d1658 - b1306);
        /* MPLessThanDI 64 */
        a27211 = ((d1658 == 0));
        b1307 = ((a27211) && (b1306));
        /* MPSubDDI 64 */
        d1664 = (d1662 - b1307);
        b1308 = ((d1662 < b1307));
        t9841 = (t9839 - b1308);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1665 = (d1649 - a17263);
        b1309 = ((d1649 < a17263));
        d1666 = (d1651 - a17262);
        d1667 = (d1666 - b1309);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27215 = ((d1651 < a17262));
        a27216 = ((d1651 == a17262));
        a27217 = ((a27216) && (b1309));
        b1310 = ((a27215) || (a27217));
        /* Begin of MPSubDDD 64 */
        d1668 = (d1655 - a17261);
        b1311 = ((d1655 < a17261));
        d1669 = (t9838 - a17260);
        d1670 = (d1669 - b1311);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1671 = (d1668 - b1310);
        b1312 = ((d1668 < b1310));
        t9842 = (d1670 - b1312);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27221 = ((t9838 < a17260));
        a27222 = ((t9838 == a17260));
        a27223 = ((a27222) && (b1311));
        a27224 = ((a27221) || (a27223));
        /* MPEqual 64 */
        a27225 = ((d1655 == a17261));
        a27226 = ((a27222) && (a27225));
        /* MPLessThan 64 */
        a27227 = ((a27226) && (b1310));
        b1313 = ((a27224) || (a27227));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1672 = (d1663 - a17259);
        b1314 = ((d1663 < a17259));
        d1673 = (t9840 - a17258);
        d1674 = (d1673 - b1314);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27230 = ((t9840 < a17258));
        a27231 = ((t9840 == a17258));
        a27232 = ((a27231) && (b1314));
        b1315 = ((a27230) || (a27232));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1675 = (d1664 - b1315);
        b1316 = ((d1664 < b1315));
        t9843 = (t9841 - b1316);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1676 = (d1672 - b1313);
        b1317 = ((d1672 < b1313));
        t9844 = (d1674 - b1317);
        /* MPLessThanDI 64 */
        a27236 = ((d1674 == 0));
        b1318 = ((a27236) && (b1317));
        /* MPSubDDI 64 */
        d1677 = (d1675 - b1318);
        b1319 = ((d1675 < b1318));
        t9845 = (t9843 - b1319);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a27239 = ((t9841 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a27240 = ((d1664 == 0));
        a27241 = ((a27239) && (a27240));
        /* MPLessThan 64 */
        a27242 = ((a27241) && (b1315));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27243 = ((d1663 == a17259));
        a27244 = ((a27231) && (a27243));
        a27245 = ((a27241) && (a27244));
        /* MPLessThan 128 */
        a27246 = ((a27245) && (b1313));
        i471 = ((a27242) || (a27246));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9846 = ((i471) ? (t9841) : (t9845));
        t9847 = ((i471) ? (d1664) : (d1677));
        /* MPCondD 64 */
        t9848 = ((i471) ? (t9840) : (t9844));
        t9849 = ((i471) ? (d1663) : (d1676));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9850 = ((i471) ? (t9838) : (t9842));
        t9851 = ((i471) ? (d1655) : (d1671));
        /* MPCondD 64 */
        t9852 = ((i471) ? (d1651) : (d1667));
        t9853 = ((i471) ? (d1649) : (d1665));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a27247 = (256*i19);
        a27248 = (2*threadIdx.x);
        a27249 = (a27247 + a27248);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a27250 = (2*a27143);
        a27251 = (a27250 + 1);
        /* MPAssignDD 128 */
        a27252 = (2*a27251);
        /* MPAssignDD 64 */
        a27253 = (2*a27252);
        t9854 = P1[a27253];
        a27254 = (a27253 + 1);
        t9855 = P1[a27254];
        a27255 = (a27252 + 1);
        /* MPAssignDD 64 */
        a27256 = (2*a27255);
        t9856 = P1[a27256];
        a27257 = (a27256 + 1);
        t9857 = P1[a27257];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1905 = (((uint128_t ) t9857) + ((uint128_t ) t9853));
        t9858 = ((uint64_t ) s1905);
        c1026 = (s1905 >> 64);
        s1906 = (((uint128_t ) t9856) + ((uint128_t ) t9852));
        s1907 = (((uint128_t ) s1906) + ((uint128_t ) c1026));
        t9859 = ((uint64_t ) s1907);
        c1027 = (s1907 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1908 = (((uint128_t ) t9855) + ((uint128_t ) t9851));
        t9860 = ((uint64_t ) s1908);
        c1028 = (s1908 >> 64);
        s1909 = (((uint128_t ) t9854) + ((uint128_t ) t9850));
        s1910 = (((uint128_t ) s1909) + ((uint128_t ) c1028));
        t9861 = ((uint64_t ) s1910);
        c1029 = (s1910 >> 64);
        /* MPPropagateCarry 64 */
        t9862 = (t9860 + c1027);
        a27258 = ((t9862 == 0));
        a27259 = (t9861 + c1027);
        t9863 = ((a27258) ? (a27259) : (t9861));
        a27260 = ((t9863 == 0));
        a27261 = ((a27260) && (a27258));
        a27262 = (c1029 + c1027);
        t9864 = ((a27261) ? (a27262) : (c1029));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27266 = (2*a27250);
        a27267 = (a27266 + 1);
        /* MPAssignDD 64 */
        a27268 = (2*a27267);
        t9866 = P1[a27268];
        a27269 = (a27268 + 1);
        t9867 = P1[a27269];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1911 = (((uint128_t ) t9867) + ((uint128_t ) t9849));
        t9868 = ((uint64_t ) s1911);
        c1030 = (s1911 >> 64);
        s1912 = (((uint128_t ) t9866) + ((uint128_t ) t9848));
        s1913 = (((uint128_t ) s1912) + ((uint128_t ) c1030));
        t9869 = ((uint64_t ) s1913);
        c1031 = (s1913 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t9870 = ((uint64_t ) t9847);
        c1032 = (t9847 >> 64);
        s1914 = (((uint128_t ) t9846) + ((uint128_t ) c1032));
        t9871 = ((uint64_t ) s1914);
        /* MPPropagateCarry 64 */
        t9872 = (t9870 + c1031);
        a27270 = ((t9872 == 0));
        a27271 = (t9871 + c1031);
        t9873 = ((a27270) ? (a27271) : (t9871));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1915 = (((uint128_t ) t9868) + ((uint128_t ) t9864));
        t9876 = ((uint64_t ) s1915);
        c1034 = (s1915 >> 64);
        s1916 = (((uint128_t ) t9869) + ((uint128_t ) c1034));
        t9877 = ((uint64_t ) s1916);
        /* MPEqualDI 64 */
        a27278 = ((t9877 == 0));
        a27279 = ((t9876 == 0));
        a27280 = ((a27278) && (a27279));
        /* MPAddDDI 64 */
        s1917 = (((uint128_t ) t9872) + ((uint128_t ) t9864));
        t9878 = ((uint64_t ) s1917);
        c1035 = (s1917 >> 64);
        s1918 = (((uint128_t ) t9873) + ((uint128_t ) c1035));
        t9879 = ((uint64_t ) s1918);
        /* MPCondD 64 */
        t9880 = ((a27280) ? (t9879) : (t9873));
        t9881 = ((a27280) ? (t9878) : (t9872));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a27281 = ((0 < t9880));
        a27282 = ((0 == t9880));
        a27283 = ((0 < t9881));
        a27284 = ((a27282) && (a27283));
        a27285 = ((a27281) || (a27284));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a27286 = ((0 == t9881));
        a27287 = ((a27282) && (a27286));
        /* MPLessThan 64 */
        a27288 = ((a17258 < t9877));
        a27289 = ((a17258 == t9877));
        a27290 = ((a17259 < t9876));
        a27291 = ((a27289) && (a27290));
        a27292 = ((a27288) || (a27291));
        a27293 = ((a27287) && (a27292));
        a27294 = ((a27285) || (a27293));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27295 = ((a17259 == t9876));
        a27296 = ((a27289) && (a27295));
        a27297 = ((a27287) && (a27296));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27298 = ((a17260 < t9863));
        a27299 = ((a17260 == t9863));
        a27300 = ((a17261 < t9862));
        a27301 = ((a27299) && (a27300));
        a27302 = ((a27298) || (a27301));
        /* MPEqual 64 */
        a27303 = ((a17261 == t9862));
        a27304 = ((a27299) && (a27303));
        /* MPLessThan 64 */
        a27305 = ((a17262 < t9859));
        a27306 = ((a17262 == t9859));
        a27307 = ((a17263 < t9858));
        a27308 = ((a27306) && (a27307));
        a27309 = ((a27305) || (a27308));
        a27310 = ((a27304) && (a27309));
        a27311 = ((a27302) || (a27310));
        a27312 = ((a27297) && (a27311));
        i472 = ((a27294) || (a27312));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1678 = (t9858 - a17263);
        b1320 = ((t9858 < a17263));
        d1679 = (t9859 - a17262);
        d1680 = (d1679 - b1320);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27314 = ((t9859 < a17262));
        a27315 = ((t9859 == a17262));
        a27316 = ((a27315) && (b1320));
        b1321 = ((a27314) || (a27316));
        /* Begin of MPSubDDD 64 */
        d1681 = (t9862 - a17261);
        b1322 = ((t9862 < a17261));
        d1682 = (t9863 - a17260);
        d1683 = (d1682 - b1322);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1684 = (d1681 - b1321);
        b1323 = ((d1681 < b1321));
        t9882 = (d1683 - b1323);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27320 = ((t9863 < a17260));
        a27321 = ((t9863 == a17260));
        a27322 = ((a27321) && (b1322));
        a27323 = ((a27320) || (a27322));
        /* MPEqual 64 */
        a27324 = ((t9862 == a17261));
        a27325 = ((a27321) && (a27324));
        /* MPLessThan 64 */
        a27326 = ((a27325) && (b1321));
        b1324 = ((a27323) || (a27326));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1685 = (t9876 - a17259);
        b1325 = ((t9876 < a17259));
        d1686 = (t9877 - a17258);
        d1687 = (d1686 - b1325);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1688 = (d1685 - b1324);
        b1326 = ((d1685 < b1324));
        t9883 = (d1687 - b1326);
        /* End of MPSubDDD 256 */
        a27330 = (2*a27249);
        /* MPCondD 128 */
        a27331 = (2*a27330);
        a27332 = (a27331 + 1);
        /* MPCondD 64 */
        a27333 = (2*a27332);
        P2[a27333] = ((i472) ? (t9883) : (t9877));
        a27334 = (a27333 + 1);
        P2[a27334] = ((i472) ? (d1688) : (t9876));
        a27335 = (a27330 + 1);
        /* MPCondD 128 */
        a27336 = (2*a27335);
        /* MPCondD 64 */
        a27337 = (2*a27336);
        P2[a27337] = ((i472) ? (t9882) : (t9863));
        a27338 = (a27337 + 1);
        P2[a27338] = ((i472) ? (d1684) : (t9862));
        a27339 = (a27336 + 1);
        /* MPCondD 64 */
        a27340 = (2*a27339);
        P2[a27340] = ((i472) ? (d1680) : (t9859));
        a27341 = (a27340 + 1);
        P2[a27341] = ((i472) ? (d1678) : (t9858));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1327 = (a27248 + a27247);
        a27342 = (b1327 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1689 = (t9857 - t9853);
        b1328 = ((t9857 < t9853));
        d1690 = (t9856 - t9852);
        d1691 = (d1690 - b1328);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27344 = ((t9856 < t9852));
        a27345 = ((t9856 == t9852));
        a27346 = ((a27345) && (b1328));
        b1329 = ((a27344) || (a27346));
        /* Begin of MPSubDDD 64 */
        d1692 = (t9855 - t9851);
        b1330 = ((t9855 < t9851));
        d1693 = (t9854 - t9850);
        d1694 = (d1693 - b1330);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1695 = (d1692 - b1329);
        b1331 = ((d1692 < b1329));
        t9884 = (d1694 - b1331);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27350 = ((t9854 < t9850));
        a27351 = ((t9854 == t9850));
        a27352 = ((a27351) && (b1330));
        a27353 = ((a27350) || (a27352));
        /* MPEqual 64 */
        a27354 = ((t9855 == t9851));
        a27355 = ((a27351) && (a27354));
        /* MPLessThan 64 */
        a27356 = ((a27355) && (b1329));
        b1332 = ((a27353) || (a27356));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1696 = (t9867 - t9849);
        b1333 = ((t9867 < t9849));
        d1697 = (t9866 - t9848);
        d1698 = (d1697 - b1333);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1699 = (d1696 - b1332);
        b1334 = ((d1696 < b1332));
        t9885 = (d1698 - b1334);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1919 = (((uint128_t ) d1689) + ((uint128_t ) a17263));
        t9886 = ((uint64_t ) s1919);
        c1036 = (s1919 >> 64);
        s1920 = (((uint128_t ) d1691) + ((uint128_t ) a17262));
        s1921 = (((uint128_t ) s1920) + ((uint128_t ) c1036));
        t9887 = ((uint64_t ) s1921);
        c1037 = (s1921 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1922 = (((uint128_t ) d1695) + ((uint128_t ) a17261));
        t9888 = ((uint64_t ) s1922);
        c1038 = (s1922 >> 64);
        s1923 = (((uint128_t ) t9884) + ((uint128_t ) a17260));
        s1924 = (((uint128_t ) s1923) + ((uint128_t ) c1038));
        t9889 = ((uint64_t ) s1924);
        c1039 = (s1924 >> 64);
        /* MPPropagateCarry 64 */
        t9890 = (t9888 + c1037);
        a27360 = ((t9890 == 0));
        a27361 = (t9889 + c1037);
        t9891 = ((a27360) ? (a27361) : (t9889));
        a27362 = ((t9891 == 0));
        a27363 = ((a27362) && (a27360));
        a27364 = (c1039 + c1037);
        t9892 = ((a27363) ? (a27364) : (c1039));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1925 = (((uint128_t ) d1699) + ((uint128_t ) a17259));
        t9894 = ((uint64_t ) s1925);
        c1040 = (s1925 >> 64);
        s1926 = (((uint128_t ) t9885) + ((uint128_t ) a17258));
        s1927 = (((uint128_t ) s1926) + ((uint128_t ) c1040));
        t9895 = ((uint64_t ) s1927);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1928 = (((uint128_t ) t9894) + ((uint128_t ) t9892));
        t9896 = ((uint64_t ) s1928);
        c1042 = (s1928 >> 64);
        s1929 = (((uint128_t ) t9895) + ((uint128_t ) c1042));
        t9897 = ((uint64_t ) s1929);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27368 = ((0 < t9846));
        a27369 = ((0 == t9846));
        a27370 = ((0 < t9847));
        a27371 = ((a27369) && (a27370));
        a27372 = ((a27368) || (a27371));
        /* MPEqual 64 */
        a27373 = ((0 == t9847));
        a27374 = ((a27369) && (a27373));
        /* MPLessThan 64 */
        a27375 = ((t9866 < t9848));
        a27376 = ((t9866 == t9848));
        a27377 = ((a27376) && (b1333));
        a27378 = ((a27375) || (a27377));
        a27379 = ((a27374) && (a27378));
        a27380 = ((a27372) || (a27379));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27381 = ((t9867 == t9849));
        a27382 = ((a27376) && (a27381));
        a27383 = ((a27374) && (a27382));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a27384 = ((a27383) && (b1332));
        i473 = ((a27380) || (a27384));
        a27385 = (2*a27342);
        /* MPCondD 128 */
        a27386 = (2*a27385);
        a27387 = (a27386 + 1);
        /* MPCondD 64 */
        a27388 = (2*a27387);
        P2[a27388] = ((i473) ? (t9897) : (t9885));
        a27389 = (a27388 + 1);
        P2[a27389] = ((i473) ? (t9896) : (d1699));
        a27390 = (a27385 + 1);
        /* MPCondD 128 */
        a27391 = (2*a27390);
        /* MPCondD 64 */
        a27392 = (2*a27391);
        P2[a27392] = ((i473) ? (t9891) : (t9884));
        a27393 = (a27392 + 1);
        P2[a27393] = ((i473) ? (t9890) : (d1695));
        a27394 = (a27391 + 1);
        /* MPCondD 64 */
        a27395 = (2*a27394);
        P2[a27395] = ((i473) ? (t9887) : (d1691));
        a27396 = (a27395 + 1);
        P2[a27396] = ((i473) ? (t9886) : (d1689));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code6(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a27397, a27398, a27399, a27400, a27401, a27402, a27403, a27404, 
            a27405, a27406, a27407, a27408, a27409, a27410, a27411, a27412, 
            a27413, a27414, a27415, a27416, a27417, a27418, a27419, a27420, 
            a27421, a27422, a27423, a27424, a27425, a27444, a27445, a27446, 
            a27450, a27451, a27452, a27453, a27454, a27455, a27456, a27459, 
            a27460, a27461, a27466, a27470, a27471, a27472, a27476, a27477, 
            a27478, a27479, a27480, a27481, a27482, a27485, a27486, a27487, 
            a27491, a27494, a27495, a27496, a27497, a27498, a27499, a27500, 
            a27501, a27502, a27503, a27504, a27505, a27506, a27507, a27508, 
            a27509, a27510, a27511, a27512, a27513, a27515, a27516, a27521, 
            a27522, a27523, a27524, a27525, a27533, a27534, a27535, a27536, 
            a27537, a27538, a27539, a27540, a27541, a27542, a27543, a27544, 
            a27545, a27546, a27547, a27548, a27549, a27550, a27551, a27552, 
            a27553, a27554, a27555, a27556, a27557, a27558, a27559, a27560, 
            a27561, a27562, a27563, a27564, a27565, a27566, a27567, a27569, 
            a27570, a27571, a27575, a27576, a27577, a27578, a27579, a27580, 
            a27581, a27585, a27586, a27587, a27588, a27589, a27590, a27591, 
            a27592, a27593, a27594, a27595, a27596, a27597, a27599, a27600, 
            a27601, a27605, a27606, a27607, a27608, a27609, a27610, a27611, 
            a27615, a27617, a27618, a27623, a27624, a27625, a27626, a27627, 
            a27628, a27629, a27630, a27631, a27632, a27633, a27634, a27635, 
            a27636, a27637, a27638, a27639, a27640, a27641, a27642, a27643, 
            a27644, a27645, a27646, a27647, a27648, a27649, a27650, a27651, 
            b1335, b1336, b1338, b1339, b1340, b1341, b1342, b1343, 
            b1344, b1345, b1346, b1347, b1348, b1349, b1350, b1351, 
            b1352, b1353, b1354, b1355, b1356, b1357, b1358, b1359, 
            b1360, b1361, b1362, b1363, b1364, b1365, b1366, b1367, 
            b1368, b1369, b1370, b1371, b1372, b1373, b1374, b1375, 
            c1043, c1044, c1045, c1046, c1047, c1048, c1049, c1051, 
            c1052, c1053, c1054, c1055, c1056, c1057, c1059, i474, 
            i475, i476;
    uint64_t a18064, a18065, a18066, a18067, a18068, a18069, a18169, a18170, 
            a18171, a18172, a18173, a18174, a27426, a27427, a27428, a27429, 
            a27430, a27431, a27432, a27433, a27434, a27435, a27437, a27438, 
            a27439, a27440, a27441, a27442, a27514, a27517, a27526, a27616, 
            a27619, d1700, d1701, d1702, d1703, d1704, d1705, d1706, 
            d1707, d1708, d1709, d1710, d1711, d1712, d1713, d1714, 
            d1715, d1716, d1717, d1718, d1719, d1720, d1721, d1722, 
            d1723, d1724, d1725, d1726, d1727, d1728, d1729, d1730, 
            d1731, d1732, d1733, d1734, d1735, d1736, d1737, d1738, 
            d1739, d1740, d1741, d1742, d1743, d1744, d1745, d1746, 
            d1747, d1748, d1749, d1750, d1751, t10000, t10001, t10002, 
            t10003, t10004, t10005, t10007, t10008, t10009, t10010, t7233, 
            t7234, t7235, t7236, t7237, t7238, t7239, t7240, t7241, 
            t7242, t7243, t7244, t7245, t7246, t7247, t7248, t7249, 
            t7250, t7251, t7252, t7253, t7254, t7255, t7256, t7257, 
            t7258, t7259, t7260, t7261, t7262, t7263, t7264, t7265, 
            t7266, t7267, t7268, t7269, t7270, t7271, t7272, t7273, 
            t7274, t7275, t7276, t7277, t7278, t7279, t7280, t9898, 
            t9899, t9900, t9901, t9902, t9903, t9904, t9905, t9906, 
            t9907, t9908, t9909, t9910, t9911, t9912, t9913, t9914, 
            t9915, t9916, t9917, t9918, t9919, t9920, t9921, t9922, 
            t9923, t9924, t9925, t9926, t9927, t9928, t9929, t9930, 
            t9931, t9934, t9935, t9936, t9937, t9938, t9939, t9940, 
            t9941, t9942, t9943, t9944, t9945, t9946, t9947, t9948, 
            t9949, t9950, t9951, t9952, t9953, t9954, t9955, t9956, 
            t9957, t9958, t9959, t9960, t9961, t9962, t9963, t9964, 
            t9965, t9966, t9967, t9968, t9969, t9970, t9971, t9972, 
            t9973, t9974, t9975, t9976, t9977, t9979, t9980, t9981, 
            t9982, t9983, t9984, t9985, t9986, t9989, t9990, t9991, 
            t9992, t9993, t9994, t9995, t9996, t9997, t9998, t9999;
    uint128_t s1930, s1931, s1932, s1933, s1934, s1935, s1936, s1937, 
            s1938, s1939, s1940, s1941, s1942, s1943, s1944, s1945, 
            s1946, s1947, s1948, s1949, s1950, s1951, s1952, s1953, 
            s1954;
    for(int i17 = 0; i17 <= 63; i17++) {
        a27397 = (128*i17);
        a27398 = (a27397 + threadIdx.x);
        b1335 = (threadIdx.x + a27397);
        a27399 = (b1335 + 8192);
        a27400 = (a27399 % 64);
        a27401 = (64 + a27400);
        /* Begin of MPModMul 256 */
        a27402 = (2*a27401);
        a27403 = (a27402 + 1);
        a27404 = (2*a27399);
        a27405 = (a27404 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27406 = (2*a27402);
        a27407 = (a27406 + 1);
        /* MPAssignDD 64 */
        a27408 = (2*a27407);
        t9898 = twiddles[a27408];
        a27409 = (a27408 + 1);
        t9899 = twiddles[a27409];
        /* MPAssignDD 128 */
        a27410 = (2*a27403);
        /* MPAssignDD 64 */
        a27411 = (2*a27410);
        t9900 = twiddles[a27411];
        a27412 = (a27411 + 1);
        t9901 = twiddles[a27412];
        a27413 = (a27410 + 1);
        /* MPAssignDD 64 */
        a27414 = (2*a27413);
        t9902 = twiddles[a27414];
        a27415 = (a27414 + 1);
        t9903 = twiddles[a27415];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27416 = (2*a27404);
        a27417 = (a27416 + 1);
        /* MPAssignDD 64 */
        a27418 = (2*a27417);
        t9904 = P2[a27418];
        a27419 = (a27418 + 1);
        t9905 = P2[a27419];
        /* MPAssignDD 128 */
        a27420 = (2*a27405);
        /* MPAssignDD 64 */
        a27421 = (2*a27420);
        t9906 = P2[a27421];
        a27422 = (a27421 + 1);
        t9907 = P2[a27422];
        a27423 = (a27420 + 1);
        /* MPAssignDD 64 */
        a27424 = (2*a27423);
        t9908 = P2[a27424];
        a27425 = (a27424 + 1);
        t9909 = P2[a27425];
        MPMulQDD_L3_2(t7267, t7268, t7265, t7266, t7271, t7272, t7269, t7270, 
    t7275, t7276, t7273, t7274, t7279, t7280, t7277, t7278, 
    0, 0, t9898, t9899, t9900, t9901, t9902, t9903, 
    0, 0, t9904, t9905, t9906, t9907, t9908, t9909);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9910 = (t7275 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a27426 = (t7275 << 6);
        a27427 = (t7276 >> 58);
        t9911 = (((a27426)|(a27427)));
        t9912 = (t7276 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9913 = (t7273 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9914 = (((t9912)|(t9913)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1336 = ((int) 1);
        t9915 = (288230376151711744 - b1336);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9916 = (((t7265)&(t9915)));
        t9917 = (((t7266)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a27428 = (t9916 << 6);
        a27429 = (t9917 >> 58);
        t9918 = (((a27428)|(a27429)));
        t9919 = (t9917 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t9920 = (t7271 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a27430 = (t7271 << 6);
        a27431 = (t7272 >> 58);
        t9921 = (((a27430)|(a27431)));
        t9922 = (t7272 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t9923 = (t7269 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t9924 = (((t9922)|(t9923)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9925 = (((t9919)|(t9920)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a27432 = (t7269 << 6);
        a27433 = (t7270 >> 58);
        t9926 = (((a27432)|(a27433)));
        t9927 = (t7270 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t9928 = (((t9927)|(t9910)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a18064 = mu[2];
        a18065 = mu[3];
        a18066 = mu[4];
        a18067 = mu[5];
        a18068 = mu[6];
        a18069 = mu[7];
        MPMulQDD_L3_1(t7235, t7236, t7233, t7234, t7239, t7240, t7237, t7238, 
    t7243, t7244, t7241, t7242, t7247, t7248, t7245, t7246, 
    t9918, t9925, t9921, t9924, t9926, t9928, t9911, t9914, 
    0, 0, a18064, a18065, a18066, a18067, a18068, a18069);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9929 = (t7243 >> 1);
        a27434 = (t7243 << 63);
        a27435 = (t7244 >> 1);
        t9930 = (((a27434)|(a27435)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t9931 = (0 - b1336);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1700 = (2 - b1336);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t9934 = (((t7236)&(d1700)));
        /* MPBinAndD 64 */
        t9935 = (((t7233)&(t9931)));
        t9936 = (((t7234)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9937 = (t9934 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9938 = (t9935 >> 1);
        a27437 = (t9935 << 63);
        a27438 = (t9936 >> 1);
        t9939 = (((a27437)|(a27438)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9940 = (((t9937)|(t9938)));
        /* Begin of MPShiftLeft1D */
        t9941 = (t9936 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t9942 = (t7239 >> 1);
        a27439 = (t7239 << 63);
        a27440 = (t7240 >> 1);
        t9943 = (((a27439)|(a27440)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9944 = (((t9941)|(t9942)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t9945 = (t7240 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t9946 = (t7237 >> 1);
        a27441 = (t7237 << 63);
        a27442 = (t7238 >> 1);
        t9947 = (((a27441)|(a27442)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t9948 = (((t9945)|(t9946)));
        /* Begin of MPShiftLeft1D */
        t9949 = (t7238 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t9950 = (((t9949)|(t9929)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a18169 = modulus[2];
        a18170 = modulus[3];
        a18171 = modulus[4];
        a18172 = modulus[5];
        a18173 = modulus[6];
        a18174 = modulus[7];
        MPMulQDD_L3_1(t7251, t7252, t7249, t7250, t7255, t7256, t7253, t7254, 
    t7259, t7260, t7257, t7258, t7263, t7264, t7261, t7262, 
    t9940, t9939, t9944, t9943, t9948, t9947, t9950, t9930, 
    0, 0, a18169, a18170, a18171, a18172, a18173, a18174);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1701 = (t7278 - t7262);
        b1338 = ((t7278 < t7262));
        d1702 = (t7277 - t7261);
        d1703 = (d1702 - b1338);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27444 = ((t7277 < t7261));
        a27445 = ((t7277 == t7261));
        a27446 = ((a27445) && (b1338));
        b1339 = ((a27444) || (a27446));
        /* Begin of MPSubDDD 64 */
        d1704 = (t7280 - t7264);
        b1340 = ((t7280 < t7264));
        d1705 = (t7279 - t7263);
        d1706 = (d1705 - b1340);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1707 = (d1704 - b1339);
        b1341 = ((d1704 < b1339));
        t9951 = (d1706 - b1341);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27450 = ((t7279 < t7263));
        a27451 = ((t7279 == t7263));
        a27452 = ((a27451) && (b1340));
        a27453 = ((a27450) || (a27452));
        /* MPEqual 64 */
        a27454 = ((t7280 == t7264));
        a27455 = ((a27451) && (a27454));
        /* MPLessThan 64 */
        a27456 = ((a27455) && (b1339));
        b1342 = ((a27453) || (a27456));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1708 = (t7274 - t7258);
        b1343 = ((t7274 < t7258));
        d1709 = (t7273 - t7257);
        d1710 = (d1709 - b1343);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27459 = ((t7273 < t7257));
        a27460 = ((t7273 == t7257));
        a27461 = ((a27460) && (b1343));
        b1344 = ((a27459) || (a27461));
        /* Begin of MPSubDDD 64 */
        d1711 = (t7276 - t7260);
        b1345 = ((t7276 < t7260));
        d1712 = (t7275 - t7259);
        d1713 = (d1712 - b1345);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1714 = (d1711 - b1344);
        b1346 = ((d1711 < b1344));
        t9952 = (d1713 - b1346);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1715 = (d1708 - b1342);
        b1347 = ((d1708 < b1342));
        t9953 = (d1710 - b1347);
        /* MPLessThanDI 64 */
        a27466 = ((d1710 == 0));
        b1348 = ((a27466) && (b1347));
        /* MPSubDDI 64 */
        d1716 = (d1714 - b1348);
        b1349 = ((d1714 < b1348));
        t9954 = (t9952 - b1349);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1717 = (d1701 - a18174);
        b1350 = ((d1701 < a18174));
        d1718 = (d1703 - a18173);
        d1719 = (d1718 - b1350);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27470 = ((d1703 < a18173));
        a27471 = ((d1703 == a18173));
        a27472 = ((a27471) && (b1350));
        b1351 = ((a27470) || (a27472));
        /* Begin of MPSubDDD 64 */
        d1720 = (d1707 - a18172);
        b1352 = ((d1707 < a18172));
        d1721 = (t9951 - a18171);
        d1722 = (d1721 - b1352);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1723 = (d1720 - b1351);
        b1353 = ((d1720 < b1351));
        t9955 = (d1722 - b1353);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27476 = ((t9951 < a18171));
        a27477 = ((t9951 == a18171));
        a27478 = ((a27477) && (b1352));
        a27479 = ((a27476) || (a27478));
        /* MPEqual 64 */
        a27480 = ((d1707 == a18172));
        a27481 = ((a27477) && (a27480));
        /* MPLessThan 64 */
        a27482 = ((a27481) && (b1351));
        b1354 = ((a27479) || (a27482));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1724 = (d1715 - a18170);
        b1355 = ((d1715 < a18170));
        d1725 = (t9953 - a18169);
        d1726 = (d1725 - b1355);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27485 = ((t9953 < a18169));
        a27486 = ((t9953 == a18169));
        a27487 = ((a27486) && (b1355));
        b1356 = ((a27485) || (a27487));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1727 = (d1716 - b1356);
        b1357 = ((d1716 < b1356));
        t9956 = (t9954 - b1357);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1728 = (d1724 - b1354);
        b1358 = ((d1724 < b1354));
        t9957 = (d1726 - b1358);
        /* MPLessThanDI 64 */
        a27491 = ((d1726 == 0));
        b1359 = ((a27491) && (b1358));
        /* MPSubDDI 64 */
        d1729 = (d1727 - b1359);
        b1360 = ((d1727 < b1359));
        t9958 = (t9956 - b1360);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a27494 = ((t9954 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a27495 = ((d1716 == 0));
        a27496 = ((a27494) && (a27495));
        /* MPLessThan 64 */
        a27497 = ((a27496) && (b1356));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27498 = ((d1715 == a18170));
        a27499 = ((a27486) && (a27498));
        a27500 = ((a27496) && (a27499));
        /* MPLessThan 128 */
        a27501 = ((a27500) && (b1354));
        i474 = ((a27497) || (a27501));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9959 = ((i474) ? (t9954) : (t9958));
        t9960 = ((i474) ? (d1716) : (d1729));
        /* MPCondD 64 */
        t9961 = ((i474) ? (t9953) : (t9957));
        t9962 = ((i474) ? (d1715) : (d1728));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t9963 = ((i474) ? (t9951) : (t9955));
        t9964 = ((i474) ? (d1707) : (d1723));
        /* MPCondD 64 */
        t9965 = ((i474) ? (d1703) : (d1719));
        t9966 = ((i474) ? (d1701) : (d1717));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a27502 = (256*i17);
        a27503 = (2*threadIdx.x);
        a27504 = (a27502 + a27503);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a27505 = (2*a27398);
        a27506 = (a27505 + 1);
        /* MPAssignDD 128 */
        a27507 = (2*a27506);
        /* MPAssignDD 64 */
        a27508 = (2*a27507);
        t9967 = P2[a27508];
        a27509 = (a27508 + 1);
        t9968 = P2[a27509];
        a27510 = (a27507 + 1);
        /* MPAssignDD 64 */
        a27511 = (2*a27510);
        t9969 = P2[a27511];
        a27512 = (a27511 + 1);
        t9970 = P2[a27512];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1930 = (((uint128_t ) t9970) + ((uint128_t ) t9966));
        t9971 = ((uint64_t ) s1930);
        c1043 = (s1930 >> 64);
        s1931 = (((uint128_t ) t9969) + ((uint128_t ) t9965));
        s1932 = (((uint128_t ) s1931) + ((uint128_t ) c1043));
        t9972 = ((uint64_t ) s1932);
        c1044 = (s1932 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1933 = (((uint128_t ) t9968) + ((uint128_t ) t9964));
        t9973 = ((uint64_t ) s1933);
        c1045 = (s1933 >> 64);
        s1934 = (((uint128_t ) t9967) + ((uint128_t ) t9963));
        s1935 = (((uint128_t ) s1934) + ((uint128_t ) c1045));
        t9974 = ((uint64_t ) s1935);
        c1046 = (s1935 >> 64);
        /* MPPropagateCarry 64 */
        t9975 = (t9973 + c1044);
        a27513 = ((t9975 == 0));
        a27514 = (t9974 + c1044);
        t9976 = ((a27513) ? (a27514) : (t9974));
        a27515 = ((t9976 == 0));
        a27516 = ((a27515) && (a27513));
        a27517 = (c1046 + c1044);
        t9977 = ((a27516) ? (a27517) : (c1046));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27521 = (2*a27505);
        a27522 = (a27521 + 1);
        /* MPAssignDD 64 */
        a27523 = (2*a27522);
        t9979 = P2[a27523];
        a27524 = (a27523 + 1);
        t9980 = P2[a27524];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1936 = (((uint128_t ) t9980) + ((uint128_t ) t9962));
        t9981 = ((uint64_t ) s1936);
        c1047 = (s1936 >> 64);
        s1937 = (((uint128_t ) t9979) + ((uint128_t ) t9961));
        s1938 = (((uint128_t ) s1937) + ((uint128_t ) c1047));
        t9982 = ((uint64_t ) s1938);
        c1048 = (s1938 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t9983 = ((uint64_t ) t9960);
        c1049 = (t9960 >> 64);
        s1939 = (((uint128_t ) t9959) + ((uint128_t ) c1049));
        t9984 = ((uint64_t ) s1939);
        /* MPPropagateCarry 64 */
        t9985 = (t9983 + c1048);
        a27525 = ((t9985 == 0));
        a27526 = (t9984 + c1048);
        t9986 = ((a27525) ? (a27526) : (t9984));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1940 = (((uint128_t ) t9981) + ((uint128_t ) t9977));
        t9989 = ((uint64_t ) s1940);
        c1051 = (s1940 >> 64);
        s1941 = (((uint128_t ) t9982) + ((uint128_t ) c1051));
        t9990 = ((uint64_t ) s1941);
        /* MPEqualDI 64 */
        a27533 = ((t9990 == 0));
        a27534 = ((t9989 == 0));
        a27535 = ((a27533) && (a27534));
        /* MPAddDDI 64 */
        s1942 = (((uint128_t ) t9985) + ((uint128_t ) t9977));
        t9991 = ((uint64_t ) s1942);
        c1052 = (s1942 >> 64);
        s1943 = (((uint128_t ) t9986) + ((uint128_t ) c1052));
        t9992 = ((uint64_t ) s1943);
        /* MPCondD 64 */
        t9993 = ((a27535) ? (t9992) : (t9986));
        t9994 = ((a27535) ? (t9991) : (t9985));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a27536 = ((0 < t9993));
        a27537 = ((0 == t9993));
        a27538 = ((0 < t9994));
        a27539 = ((a27537) && (a27538));
        a27540 = ((a27536) || (a27539));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a27541 = ((0 == t9994));
        a27542 = ((a27537) && (a27541));
        /* MPLessThan 64 */
        a27543 = ((a18169 < t9990));
        a27544 = ((a18169 == t9990));
        a27545 = ((a18170 < t9989));
        a27546 = ((a27544) && (a27545));
        a27547 = ((a27543) || (a27546));
        a27548 = ((a27542) && (a27547));
        a27549 = ((a27540) || (a27548));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27550 = ((a18170 == t9989));
        a27551 = ((a27544) && (a27550));
        a27552 = ((a27542) && (a27551));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27553 = ((a18171 < t9976));
        a27554 = ((a18171 == t9976));
        a27555 = ((a18172 < t9975));
        a27556 = ((a27554) && (a27555));
        a27557 = ((a27553) || (a27556));
        /* MPEqual 64 */
        a27558 = ((a18172 == t9975));
        a27559 = ((a27554) && (a27558));
        /* MPLessThan 64 */
        a27560 = ((a18173 < t9972));
        a27561 = ((a18173 == t9972));
        a27562 = ((a18174 < t9971));
        a27563 = ((a27561) && (a27562));
        a27564 = ((a27560) || (a27563));
        a27565 = ((a27559) && (a27564));
        a27566 = ((a27557) || (a27565));
        a27567 = ((a27552) && (a27566));
        i475 = ((a27549) || (a27567));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1730 = (t9971 - a18174);
        b1361 = ((t9971 < a18174));
        d1731 = (t9972 - a18173);
        d1732 = (d1731 - b1361);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27569 = ((t9972 < a18173));
        a27570 = ((t9972 == a18173));
        a27571 = ((a27570) && (b1361));
        b1362 = ((a27569) || (a27571));
        /* Begin of MPSubDDD 64 */
        d1733 = (t9975 - a18172);
        b1363 = ((t9975 < a18172));
        d1734 = (t9976 - a18171);
        d1735 = (d1734 - b1363);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1736 = (d1733 - b1362);
        b1364 = ((d1733 < b1362));
        t9995 = (d1735 - b1364);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27575 = ((t9976 < a18171));
        a27576 = ((t9976 == a18171));
        a27577 = ((a27576) && (b1363));
        a27578 = ((a27575) || (a27577));
        /* MPEqual 64 */
        a27579 = ((t9975 == a18172));
        a27580 = ((a27576) && (a27579));
        /* MPLessThan 64 */
        a27581 = ((a27580) && (b1362));
        b1365 = ((a27578) || (a27581));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1737 = (t9989 - a18170);
        b1366 = ((t9989 < a18170));
        d1738 = (t9990 - a18169);
        d1739 = (d1738 - b1366);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1740 = (d1737 - b1365);
        b1367 = ((d1737 < b1365));
        t9996 = (d1739 - b1367);
        /* End of MPSubDDD 256 */
        a27585 = (2*a27504);
        /* MPCondD 128 */
        a27586 = (2*a27585);
        a27587 = (a27586 + 1);
        /* MPCondD 64 */
        a27588 = (2*a27587);
        P1[a27588] = ((i475) ? (t9996) : (t9990));
        a27589 = (a27588 + 1);
        P1[a27589] = ((i475) ? (d1740) : (t9989));
        a27590 = (a27585 + 1);
        /* MPCondD 128 */
        a27591 = (2*a27590);
        /* MPCondD 64 */
        a27592 = (2*a27591);
        P1[a27592] = ((i475) ? (t9995) : (t9976));
        a27593 = (a27592 + 1);
        P1[a27593] = ((i475) ? (d1736) : (t9975));
        a27594 = (a27591 + 1);
        /* MPCondD 64 */
        a27595 = (2*a27594);
        P1[a27595] = ((i475) ? (d1732) : (t9972));
        a27596 = (a27595 + 1);
        P1[a27596] = ((i475) ? (d1730) : (t9971));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1368 = (a27503 + a27502);
        a27597 = (b1368 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1741 = (t9970 - t9966);
        b1369 = ((t9970 < t9966));
        d1742 = (t9969 - t9965);
        d1743 = (d1742 - b1369);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27599 = ((t9969 < t9965));
        a27600 = ((t9969 == t9965));
        a27601 = ((a27600) && (b1369));
        b1370 = ((a27599) || (a27601));
        /* Begin of MPSubDDD 64 */
        d1744 = (t9968 - t9964);
        b1371 = ((t9968 < t9964));
        d1745 = (t9967 - t9963);
        d1746 = (d1745 - b1371);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1747 = (d1744 - b1370);
        b1372 = ((d1744 < b1370));
        t9997 = (d1746 - b1372);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27605 = ((t9967 < t9963));
        a27606 = ((t9967 == t9963));
        a27607 = ((a27606) && (b1371));
        a27608 = ((a27605) || (a27607));
        /* MPEqual 64 */
        a27609 = ((t9968 == t9964));
        a27610 = ((a27606) && (a27609));
        /* MPLessThan 64 */
        a27611 = ((a27610) && (b1370));
        b1373 = ((a27608) || (a27611));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1748 = (t9980 - t9962);
        b1374 = ((t9980 < t9962));
        d1749 = (t9979 - t9961);
        d1750 = (d1749 - b1374);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1751 = (d1748 - b1373);
        b1375 = ((d1748 < b1373));
        t9998 = (d1750 - b1375);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1944 = (((uint128_t ) d1741) + ((uint128_t ) a18174));
        t9999 = ((uint64_t ) s1944);
        c1053 = (s1944 >> 64);
        s1945 = (((uint128_t ) d1743) + ((uint128_t ) a18173));
        s1946 = (((uint128_t ) s1945) + ((uint128_t ) c1053));
        t10000 = ((uint64_t ) s1946);
        c1054 = (s1946 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1947 = (((uint128_t ) d1747) + ((uint128_t ) a18172));
        t10001 = ((uint64_t ) s1947);
        c1055 = (s1947 >> 64);
        s1948 = (((uint128_t ) t9997) + ((uint128_t ) a18171));
        s1949 = (((uint128_t ) s1948) + ((uint128_t ) c1055));
        t10002 = ((uint64_t ) s1949);
        c1056 = (s1949 >> 64);
        /* MPPropagateCarry 64 */
        t10003 = (t10001 + c1054);
        a27615 = ((t10003 == 0));
        a27616 = (t10002 + c1054);
        t10004 = ((a27615) ? (a27616) : (t10002));
        a27617 = ((t10004 == 0));
        a27618 = ((a27617) && (a27615));
        a27619 = (c1056 + c1054);
        t10005 = ((a27618) ? (a27619) : (c1056));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1950 = (((uint128_t ) d1751) + ((uint128_t ) a18170));
        t10007 = ((uint64_t ) s1950);
        c1057 = (s1950 >> 64);
        s1951 = (((uint128_t ) t9998) + ((uint128_t ) a18169));
        s1952 = (((uint128_t ) s1951) + ((uint128_t ) c1057));
        t10008 = ((uint64_t ) s1952);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1953 = (((uint128_t ) t10007) + ((uint128_t ) t10005));
        t10009 = ((uint64_t ) s1953);
        c1059 = (s1953 >> 64);
        s1954 = (((uint128_t ) t10008) + ((uint128_t ) c1059));
        t10010 = ((uint64_t ) s1954);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27623 = ((0 < t9959));
        a27624 = ((0 == t9959));
        a27625 = ((0 < t9960));
        a27626 = ((a27624) && (a27625));
        a27627 = ((a27623) || (a27626));
        /* MPEqual 64 */
        a27628 = ((0 == t9960));
        a27629 = ((a27624) && (a27628));
        /* MPLessThan 64 */
        a27630 = ((t9979 < t9961));
        a27631 = ((t9979 == t9961));
        a27632 = ((a27631) && (b1374));
        a27633 = ((a27630) || (a27632));
        a27634 = ((a27629) && (a27633));
        a27635 = ((a27627) || (a27634));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27636 = ((t9980 == t9962));
        a27637 = ((a27631) && (a27636));
        a27638 = ((a27629) && (a27637));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a27639 = ((a27638) && (b1373));
        i476 = ((a27635) || (a27639));
        a27640 = (2*a27597);
        /* MPCondD 128 */
        a27641 = (2*a27640);
        a27642 = (a27641 + 1);
        /* MPCondD 64 */
        a27643 = (2*a27642);
        P1[a27643] = ((i476) ? (t10010) : (t9998));
        a27644 = (a27643 + 1);
        P1[a27644] = ((i476) ? (t10009) : (d1751));
        a27645 = (a27640 + 1);
        /* MPCondD 128 */
        a27646 = (2*a27645);
        /* MPCondD 64 */
        a27647 = (2*a27646);
        P1[a27647] = ((i476) ? (t10004) : (t9997));
        a27648 = (a27647 + 1);
        P1[a27648] = ((i476) ? (t10003) : (d1747));
        a27649 = (a27646 + 1);
        /* MPCondD 64 */
        a27650 = (2*a27649);
        P1[a27650] = ((i476) ? (t10000) : (d1743));
        a27651 = (a27650 + 1);
        P1[a27651] = ((i476) ? (t9999) : (d1741));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code7(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a27652, a27653, a27654, a27655, a27656, a27657, a27658, a27659, 
            a27660, a27661, a27662, a27663, a27664, a27665, a27666, a27667, 
            a27668, a27669, a27670, a27671, a27672, a27673, a27674, a27675, 
            a27676, a27677, a27678, a27679, a27680, a27699, a27700, a27701, 
            a27705, a27706, a27707, a27708, a27709, a27710, a27711, a27714, 
            a27715, a27716, a27721, a27725, a27726, a27727, a27731, a27732, 
            a27733, a27734, a27735, a27736, a27737, a27740, a27741, a27742, 
            a27746, a27749, a27750, a27751, a27752, a27753, a27754, a27755, 
            a27756, a27757, a27758, a27759, a27760, a27761, a27762, a27763, 
            a27764, a27765, a27766, a27767, a27768, a27770, a27771, a27776, 
            a27777, a27778, a27779, a27780, a27788, a27789, a27790, a27791, 
            a27792, a27793, a27794, a27795, a27796, a27797, a27798, a27799, 
            a27800, a27801, a27802, a27803, a27804, a27805, a27806, a27807, 
            a27808, a27809, a27810, a27811, a27812, a27813, a27814, a27815, 
            a27816, a27817, a27818, a27819, a27820, a27821, a27822, a27824, 
            a27825, a27826, a27830, a27831, a27832, a27833, a27834, a27835, 
            a27836, a27840, a27841, a27842, a27843, a27844, a27845, a27846, 
            a27847, a27848, a27849, a27850, a27851, a27852, a27854, a27855, 
            a27856, a27860, a27861, a27862, a27863, a27864, a27865, a27866, 
            a27870, a27872, a27873, a27878, a27879, a27880, a27881, a27882, 
            a27883, a27884, a27885, a27886, a27887, a27888, a27889, a27890, 
            a27891, a27892, a27893, a27894, a27895, a27896, a27897, a27898, 
            a27899, a27900, a27901, a27902, a27903, a27904, a27905, a27906, 
            b1376, b1377, b1379, b1380, b1381, b1382, b1383, b1384, 
            b1385, b1386, b1387, b1388, b1389, b1390, b1391, b1392, 
            b1393, b1394, b1395, b1396, b1397, b1398, b1399, b1400, 
            b1401, b1402, b1403, b1404, b1405, b1406, b1407, b1408, 
            b1409, b1410, b1411, b1412, b1413, b1414, b1415, b1416, 
            c1060, c1061, c1062, c1063, c1064, c1065, c1066, c1068, 
            c1069, c1070, c1071, c1072, c1073, c1074, c1076, i477, 
            i478, i479;
    uint64_t a18975, a18976, a18977, a18978, a18979, a18980, a19080, a19081, 
            a19082, a19083, a19084, a19085, a27681, a27682, a27683, a27684, 
            a27685, a27686, a27687, a27688, a27689, a27690, a27692, a27693, 
            a27694, a27695, a27696, a27697, a27769, a27772, a27781, a27871, 
            a27874, d1752, d1753, d1754, d1755, d1756, d1757, d1758, 
            d1759, d1760, d1761, d1762, d1763, d1764, d1765, d1766, 
            d1767, d1768, d1769, d1770, d1771, d1772, d1773, d1774, 
            d1775, d1776, d1777, d1778, d1779, d1780, d1781, d1782, 
            d1783, d1784, d1785, d1786, d1787, d1788, d1789, d1790, 
            d1791, d1792, d1793, d1794, d1795, d1796, d1797, d1798, 
            d1799, d1800, d1801, d1802, d1803, t10011, t10012, t10013, 
            t10014, t10015, t10016, t10017, t10018, t10019, t10020, t10021, 
            t10022, t10023, t10024, t10025, t10026, t10027, t10028, t10029, 
            t10030, t10031, t10032, t10033, t10034, t10035, t10036, t10037, 
            t10038, t10039, t10040, t10041, t10042, t10043, t10044, t10047, 
            t10048, t10049, t10050, t10051, t10052, t10053, t10054, t10055, 
            t10056, t10057, t10058, t10059, t10060, t10061, t10062, t10063, 
            t10064, t10065, t10066, t10067, t10068, t10069, t10070, t10071, 
            t10072, t10073, t10074, t10075, t10076, t10077, t10078, t10079, 
            t10080, t10081, t10082, t10083, t10084, t10085, t10086, t10087, 
            t10088, t10089, t10090, t10092, t10093, t10094, t10095, t10096, 
            t10097, t10098, t10099, t10102, t10103, t10104, t10105, t10106, 
            t10107, t10108, t10109, t10110, t10111, t10112, t10113, t10114, 
            t10115, t10116, t10117, t10118, t10120, t10121, t10122, t10123, 
            t7169, t7170, t7171, t7172, t7173, t7174, t7175, t7176, 
            t7177, t7178, t7179, t7180, t7181, t7182, t7183, t7184, 
            t7185, t7186, t7187, t7188, t7189, t7190, t7191, t7192, 
            t7193, t7194, t7195, t7196, t7197, t7198, t7199, t7200, 
            t7201, t7202, t7203, t7204, t7205, t7206, t7207, t7208, 
            t7209, t7210, t7211, t7212, t7213, t7214, t7215, t7216;
    uint128_t s1955, s1956, s1957, s1958, s1959, s1960, s1961, s1962, 
            s1963, s1964, s1965, s1966, s1967, s1968, s1969, s1970, 
            s1971, s1972, s1973, s1974, s1975, s1976, s1977, s1978, 
            s1979;
    for(int i15 = 0; i15 <= 63; i15++) {
        a27652 = (128*i15);
        a27653 = (a27652 + threadIdx.x);
        b1376 = (threadIdx.x + a27652);
        a27654 = (b1376 + 8192);
        a27655 = (a27654 % 128);
        a27656 = (128 + a27655);
        /* Begin of MPModMul 256 */
        a27657 = (2*a27656);
        a27658 = (a27657 + 1);
        a27659 = (2*a27654);
        a27660 = (a27659 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27661 = (2*a27657);
        a27662 = (a27661 + 1);
        /* MPAssignDD 64 */
        a27663 = (2*a27662);
        t10011 = twiddles[a27663];
        a27664 = (a27663 + 1);
        t10012 = twiddles[a27664];
        /* MPAssignDD 128 */
        a27665 = (2*a27658);
        /* MPAssignDD 64 */
        a27666 = (2*a27665);
        t10013 = twiddles[a27666];
        a27667 = (a27666 + 1);
        t10014 = twiddles[a27667];
        a27668 = (a27665 + 1);
        /* MPAssignDD 64 */
        a27669 = (2*a27668);
        t10015 = twiddles[a27669];
        a27670 = (a27669 + 1);
        t10016 = twiddles[a27670];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27671 = (2*a27659);
        a27672 = (a27671 + 1);
        /* MPAssignDD 64 */
        a27673 = (2*a27672);
        t10017 = P1[a27673];
        a27674 = (a27673 + 1);
        t10018 = P1[a27674];
        /* MPAssignDD 128 */
        a27675 = (2*a27660);
        /* MPAssignDD 64 */
        a27676 = (2*a27675);
        t10019 = P1[a27676];
        a27677 = (a27676 + 1);
        t10020 = P1[a27677];
        a27678 = (a27675 + 1);
        /* MPAssignDD 64 */
        a27679 = (2*a27678);
        t10021 = P1[a27679];
        a27680 = (a27679 + 1);
        t10022 = P1[a27680];
        MPMulQDD_L3_2(t7203, t7204, t7201, t7202, t7207, t7208, t7205, t7206, 
    t7211, t7212, t7209, t7210, t7215, t7216, t7213, t7214, 
    0, 0, t10011, t10012, t10013, t10014, t10015, t10016, 
    0, 0, t10017, t10018, t10019, t10020, t10021, t10022);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10023 = (t7211 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a27681 = (t7211 << 6);
        a27682 = (t7212 >> 58);
        t10024 = (((a27681)|(a27682)));
        t10025 = (t7212 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10026 = (t7209 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10027 = (((t10025)|(t10026)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1377 = ((int) 1);
        t10028 = (288230376151711744 - b1377);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10029 = (((t7201)&(t10028)));
        t10030 = (((t7202)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a27683 = (t10029 << 6);
        a27684 = (t10030 >> 58);
        t10031 = (((a27683)|(a27684)));
        t10032 = (t10030 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10033 = (t7207 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a27685 = (t7207 << 6);
        a27686 = (t7208 >> 58);
        t10034 = (((a27685)|(a27686)));
        t10035 = (t7208 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10036 = (t7205 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10037 = (((t10035)|(t10036)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10038 = (((t10032)|(t10033)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a27687 = (t7205 << 6);
        a27688 = (t7206 >> 58);
        t10039 = (((a27687)|(a27688)));
        t10040 = (t7206 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10041 = (((t10040)|(t10023)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a18975 = mu[2];
        a18976 = mu[3];
        a18977 = mu[4];
        a18978 = mu[5];
        a18979 = mu[6];
        a18980 = mu[7];
        MPMulQDD_L3_1(t7171, t7172, t7169, t7170, t7175, t7176, t7173, t7174, 
    t7179, t7180, t7177, t7178, t7183, t7184, t7181, t7182, 
    t10031, t10038, t10034, t10037, t10039, t10041, t10024, t10027, 
    0, 0, a18975, a18976, a18977, a18978, a18979, a18980);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10042 = (t7179 >> 1);
        a27689 = (t7179 << 63);
        a27690 = (t7180 >> 1);
        t10043 = (((a27689)|(a27690)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t10044 = (0 - b1377);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1752 = (2 - b1377);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10047 = (((t7172)&(d1752)));
        /* MPBinAndD 64 */
        t10048 = (((t7169)&(t10044)));
        t10049 = (((t7170)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10050 = (t10047 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10051 = (t10048 >> 1);
        a27692 = (t10048 << 63);
        a27693 = (t10049 >> 1);
        t10052 = (((a27692)|(a27693)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10053 = (((t10050)|(t10051)));
        /* Begin of MPShiftLeft1D */
        t10054 = (t10049 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10055 = (t7175 >> 1);
        a27694 = (t7175 << 63);
        a27695 = (t7176 >> 1);
        t10056 = (((a27694)|(a27695)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10057 = (((t10054)|(t10055)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10058 = (t7176 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10059 = (t7173 >> 1);
        a27696 = (t7173 << 63);
        a27697 = (t7174 >> 1);
        t10060 = (((a27696)|(a27697)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10061 = (((t10058)|(t10059)));
        /* Begin of MPShiftLeft1D */
        t10062 = (t7174 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10063 = (((t10062)|(t10042)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a19080 = modulus[2];
        a19081 = modulus[3];
        a19082 = modulus[4];
        a19083 = modulus[5];
        a19084 = modulus[6];
        a19085 = modulus[7];
        MPMulQDD_L3_1(t7187, t7188, t7185, t7186, t7191, t7192, t7189, t7190, 
    t7195, t7196, t7193, t7194, t7199, t7200, t7197, t7198, 
    t10053, t10052, t10057, t10056, t10061, t10060, t10063, t10043, 
    0, 0, a19080, a19081, a19082, a19083, a19084, a19085);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1753 = (t7214 - t7198);
        b1379 = ((t7214 < t7198));
        d1754 = (t7213 - t7197);
        d1755 = (d1754 - b1379);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27699 = ((t7213 < t7197));
        a27700 = ((t7213 == t7197));
        a27701 = ((a27700) && (b1379));
        b1380 = ((a27699) || (a27701));
        /* Begin of MPSubDDD 64 */
        d1756 = (t7216 - t7200);
        b1381 = ((t7216 < t7200));
        d1757 = (t7215 - t7199);
        d1758 = (d1757 - b1381);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1759 = (d1756 - b1380);
        b1382 = ((d1756 < b1380));
        t10064 = (d1758 - b1382);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27705 = ((t7215 < t7199));
        a27706 = ((t7215 == t7199));
        a27707 = ((a27706) && (b1381));
        a27708 = ((a27705) || (a27707));
        /* MPEqual 64 */
        a27709 = ((t7216 == t7200));
        a27710 = ((a27706) && (a27709));
        /* MPLessThan 64 */
        a27711 = ((a27710) && (b1380));
        b1383 = ((a27708) || (a27711));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1760 = (t7210 - t7194);
        b1384 = ((t7210 < t7194));
        d1761 = (t7209 - t7193);
        d1762 = (d1761 - b1384);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27714 = ((t7209 < t7193));
        a27715 = ((t7209 == t7193));
        a27716 = ((a27715) && (b1384));
        b1385 = ((a27714) || (a27716));
        /* Begin of MPSubDDD 64 */
        d1763 = (t7212 - t7196);
        b1386 = ((t7212 < t7196));
        d1764 = (t7211 - t7195);
        d1765 = (d1764 - b1386);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1766 = (d1763 - b1385);
        b1387 = ((d1763 < b1385));
        t10065 = (d1765 - b1387);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1767 = (d1760 - b1383);
        b1388 = ((d1760 < b1383));
        t10066 = (d1762 - b1388);
        /* MPLessThanDI 64 */
        a27721 = ((d1762 == 0));
        b1389 = ((a27721) && (b1388));
        /* MPSubDDI 64 */
        d1768 = (d1766 - b1389);
        b1390 = ((d1766 < b1389));
        t10067 = (t10065 - b1390);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1769 = (d1753 - a19085);
        b1391 = ((d1753 < a19085));
        d1770 = (d1755 - a19084);
        d1771 = (d1770 - b1391);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27725 = ((d1755 < a19084));
        a27726 = ((d1755 == a19084));
        a27727 = ((a27726) && (b1391));
        b1392 = ((a27725) || (a27727));
        /* Begin of MPSubDDD 64 */
        d1772 = (d1759 - a19083);
        b1393 = ((d1759 < a19083));
        d1773 = (t10064 - a19082);
        d1774 = (d1773 - b1393);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1775 = (d1772 - b1392);
        b1394 = ((d1772 < b1392));
        t10068 = (d1774 - b1394);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27731 = ((t10064 < a19082));
        a27732 = ((t10064 == a19082));
        a27733 = ((a27732) && (b1393));
        a27734 = ((a27731) || (a27733));
        /* MPEqual 64 */
        a27735 = ((d1759 == a19083));
        a27736 = ((a27732) && (a27735));
        /* MPLessThan 64 */
        a27737 = ((a27736) && (b1392));
        b1395 = ((a27734) || (a27737));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1776 = (d1767 - a19081);
        b1396 = ((d1767 < a19081));
        d1777 = (t10066 - a19080);
        d1778 = (d1777 - b1396);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27740 = ((t10066 < a19080));
        a27741 = ((t10066 == a19080));
        a27742 = ((a27741) && (b1396));
        b1397 = ((a27740) || (a27742));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1779 = (d1768 - b1397);
        b1398 = ((d1768 < b1397));
        t10069 = (t10067 - b1398);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1780 = (d1776 - b1395);
        b1399 = ((d1776 < b1395));
        t10070 = (d1778 - b1399);
        /* MPLessThanDI 64 */
        a27746 = ((d1778 == 0));
        b1400 = ((a27746) && (b1399));
        /* MPSubDDI 64 */
        d1781 = (d1779 - b1400);
        b1401 = ((d1779 < b1400));
        t10071 = (t10069 - b1401);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a27749 = ((t10067 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a27750 = ((d1768 == 0));
        a27751 = ((a27749) && (a27750));
        /* MPLessThan 64 */
        a27752 = ((a27751) && (b1397));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27753 = ((d1767 == a19081));
        a27754 = ((a27741) && (a27753));
        a27755 = ((a27751) && (a27754));
        /* MPLessThan 128 */
        a27756 = ((a27755) && (b1395));
        i477 = ((a27752) || (a27756));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10072 = ((i477) ? (t10067) : (t10071));
        t10073 = ((i477) ? (d1768) : (d1781));
        /* MPCondD 64 */
        t10074 = ((i477) ? (t10066) : (t10070));
        t10075 = ((i477) ? (d1767) : (d1780));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10076 = ((i477) ? (t10064) : (t10068));
        t10077 = ((i477) ? (d1759) : (d1775));
        /* MPCondD 64 */
        t10078 = ((i477) ? (d1755) : (d1771));
        t10079 = ((i477) ? (d1753) : (d1769));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a27757 = (256*i15);
        a27758 = (2*threadIdx.x);
        a27759 = (a27757 + a27758);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a27760 = (2*a27653);
        a27761 = (a27760 + 1);
        /* MPAssignDD 128 */
        a27762 = (2*a27761);
        /* MPAssignDD 64 */
        a27763 = (2*a27762);
        t10080 = P1[a27763];
        a27764 = (a27763 + 1);
        t10081 = P1[a27764];
        a27765 = (a27762 + 1);
        /* MPAssignDD 64 */
        a27766 = (2*a27765);
        t10082 = P1[a27766];
        a27767 = (a27766 + 1);
        t10083 = P1[a27767];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1955 = (((uint128_t ) t10083) + ((uint128_t ) t10079));
        t10084 = ((uint64_t ) s1955);
        c1060 = (s1955 >> 64);
        s1956 = (((uint128_t ) t10082) + ((uint128_t ) t10078));
        s1957 = (((uint128_t ) s1956) + ((uint128_t ) c1060));
        t10085 = ((uint64_t ) s1957);
        c1061 = (s1957 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1958 = (((uint128_t ) t10081) + ((uint128_t ) t10077));
        t10086 = ((uint64_t ) s1958);
        c1062 = (s1958 >> 64);
        s1959 = (((uint128_t ) t10080) + ((uint128_t ) t10076));
        s1960 = (((uint128_t ) s1959) + ((uint128_t ) c1062));
        t10087 = ((uint64_t ) s1960);
        c1063 = (s1960 >> 64);
        /* MPPropagateCarry 64 */
        t10088 = (t10086 + c1061);
        a27768 = ((t10088 == 0));
        a27769 = (t10087 + c1061);
        t10089 = ((a27768) ? (a27769) : (t10087));
        a27770 = ((t10089 == 0));
        a27771 = ((a27770) && (a27768));
        a27772 = (c1063 + c1061);
        t10090 = ((a27771) ? (a27772) : (c1063));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27776 = (2*a27760);
        a27777 = (a27776 + 1);
        /* MPAssignDD 64 */
        a27778 = (2*a27777);
        t10092 = P1[a27778];
        a27779 = (a27778 + 1);
        t10093 = P1[a27779];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1961 = (((uint128_t ) t10093) + ((uint128_t ) t10075));
        t10094 = ((uint64_t ) s1961);
        c1064 = (s1961 >> 64);
        s1962 = (((uint128_t ) t10092) + ((uint128_t ) t10074));
        s1963 = (((uint128_t ) s1962) + ((uint128_t ) c1064));
        t10095 = ((uint64_t ) s1963);
        c1065 = (s1963 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t10096 = ((uint64_t ) t10073);
        c1066 = (t10073 >> 64);
        s1964 = (((uint128_t ) t10072) + ((uint128_t ) c1066));
        t10097 = ((uint64_t ) s1964);
        /* MPPropagateCarry 64 */
        t10098 = (t10096 + c1065);
        a27780 = ((t10098 == 0));
        a27781 = (t10097 + c1065);
        t10099 = ((a27780) ? (a27781) : (t10097));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1965 = (((uint128_t ) t10094) + ((uint128_t ) t10090));
        t10102 = ((uint64_t ) s1965);
        c1068 = (s1965 >> 64);
        s1966 = (((uint128_t ) t10095) + ((uint128_t ) c1068));
        t10103 = ((uint64_t ) s1966);
        /* MPEqualDI 64 */
        a27788 = ((t10103 == 0));
        a27789 = ((t10102 == 0));
        a27790 = ((a27788) && (a27789));
        /* MPAddDDI 64 */
        s1967 = (((uint128_t ) t10098) + ((uint128_t ) t10090));
        t10104 = ((uint64_t ) s1967);
        c1069 = (s1967 >> 64);
        s1968 = (((uint128_t ) t10099) + ((uint128_t ) c1069));
        t10105 = ((uint64_t ) s1968);
        /* MPCondD 64 */
        t10106 = ((a27790) ? (t10105) : (t10099));
        t10107 = ((a27790) ? (t10104) : (t10098));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a27791 = ((0 < t10106));
        a27792 = ((0 == t10106));
        a27793 = ((0 < t10107));
        a27794 = ((a27792) && (a27793));
        a27795 = ((a27791) || (a27794));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a27796 = ((0 == t10107));
        a27797 = ((a27792) && (a27796));
        /* MPLessThan 64 */
        a27798 = ((a19080 < t10103));
        a27799 = ((a19080 == t10103));
        a27800 = ((a19081 < t10102));
        a27801 = ((a27799) && (a27800));
        a27802 = ((a27798) || (a27801));
        a27803 = ((a27797) && (a27802));
        a27804 = ((a27795) || (a27803));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27805 = ((a19081 == t10102));
        a27806 = ((a27799) && (a27805));
        a27807 = ((a27797) && (a27806));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27808 = ((a19082 < t10089));
        a27809 = ((a19082 == t10089));
        a27810 = ((a19083 < t10088));
        a27811 = ((a27809) && (a27810));
        a27812 = ((a27808) || (a27811));
        /* MPEqual 64 */
        a27813 = ((a19083 == t10088));
        a27814 = ((a27809) && (a27813));
        /* MPLessThan 64 */
        a27815 = ((a19084 < t10085));
        a27816 = ((a19084 == t10085));
        a27817 = ((a19085 < t10084));
        a27818 = ((a27816) && (a27817));
        a27819 = ((a27815) || (a27818));
        a27820 = ((a27814) && (a27819));
        a27821 = ((a27812) || (a27820));
        a27822 = ((a27807) && (a27821));
        i478 = ((a27804) || (a27822));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1782 = (t10084 - a19085);
        b1402 = ((t10084 < a19085));
        d1783 = (t10085 - a19084);
        d1784 = (d1783 - b1402);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27824 = ((t10085 < a19084));
        a27825 = ((t10085 == a19084));
        a27826 = ((a27825) && (b1402));
        b1403 = ((a27824) || (a27826));
        /* Begin of MPSubDDD 64 */
        d1785 = (t10088 - a19083);
        b1404 = ((t10088 < a19083));
        d1786 = (t10089 - a19082);
        d1787 = (d1786 - b1404);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1788 = (d1785 - b1403);
        b1405 = ((d1785 < b1403));
        t10108 = (d1787 - b1405);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27830 = ((t10089 < a19082));
        a27831 = ((t10089 == a19082));
        a27832 = ((a27831) && (b1404));
        a27833 = ((a27830) || (a27832));
        /* MPEqual 64 */
        a27834 = ((t10088 == a19083));
        a27835 = ((a27831) && (a27834));
        /* MPLessThan 64 */
        a27836 = ((a27835) && (b1403));
        b1406 = ((a27833) || (a27836));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1789 = (t10102 - a19081);
        b1407 = ((t10102 < a19081));
        d1790 = (t10103 - a19080);
        d1791 = (d1790 - b1407);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1792 = (d1789 - b1406);
        b1408 = ((d1789 < b1406));
        t10109 = (d1791 - b1408);
        /* End of MPSubDDD 256 */
        a27840 = (2*a27759);
        /* MPCondD 128 */
        a27841 = (2*a27840);
        a27842 = (a27841 + 1);
        /* MPCondD 64 */
        a27843 = (2*a27842);
        P2[a27843] = ((i478) ? (t10109) : (t10103));
        a27844 = (a27843 + 1);
        P2[a27844] = ((i478) ? (d1792) : (t10102));
        a27845 = (a27840 + 1);
        /* MPCondD 128 */
        a27846 = (2*a27845);
        /* MPCondD 64 */
        a27847 = (2*a27846);
        P2[a27847] = ((i478) ? (t10108) : (t10089));
        a27848 = (a27847 + 1);
        P2[a27848] = ((i478) ? (d1788) : (t10088));
        a27849 = (a27846 + 1);
        /* MPCondD 64 */
        a27850 = (2*a27849);
        P2[a27850] = ((i478) ? (d1784) : (t10085));
        a27851 = (a27850 + 1);
        P2[a27851] = ((i478) ? (d1782) : (t10084));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1409 = (a27758 + a27757);
        a27852 = (b1409 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1793 = (t10083 - t10079);
        b1410 = ((t10083 < t10079));
        d1794 = (t10082 - t10078);
        d1795 = (d1794 - b1410);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27854 = ((t10082 < t10078));
        a27855 = ((t10082 == t10078));
        a27856 = ((a27855) && (b1410));
        b1411 = ((a27854) || (a27856));
        /* Begin of MPSubDDD 64 */
        d1796 = (t10081 - t10077);
        b1412 = ((t10081 < t10077));
        d1797 = (t10080 - t10076);
        d1798 = (d1797 - b1412);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1799 = (d1796 - b1411);
        b1413 = ((d1796 < b1411));
        t10110 = (d1798 - b1413);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27860 = ((t10080 < t10076));
        a27861 = ((t10080 == t10076));
        a27862 = ((a27861) && (b1412));
        a27863 = ((a27860) || (a27862));
        /* MPEqual 64 */
        a27864 = ((t10081 == t10077));
        a27865 = ((a27861) && (a27864));
        /* MPLessThan 64 */
        a27866 = ((a27865) && (b1411));
        b1414 = ((a27863) || (a27866));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1800 = (t10093 - t10075);
        b1415 = ((t10093 < t10075));
        d1801 = (t10092 - t10074);
        d1802 = (d1801 - b1415);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1803 = (d1800 - b1414);
        b1416 = ((d1800 < b1414));
        t10111 = (d1802 - b1416);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1969 = (((uint128_t ) d1793) + ((uint128_t ) a19085));
        t10112 = ((uint64_t ) s1969);
        c1070 = (s1969 >> 64);
        s1970 = (((uint128_t ) d1795) + ((uint128_t ) a19084));
        s1971 = (((uint128_t ) s1970) + ((uint128_t ) c1070));
        t10113 = ((uint64_t ) s1971);
        c1071 = (s1971 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1972 = (((uint128_t ) d1799) + ((uint128_t ) a19083));
        t10114 = ((uint64_t ) s1972);
        c1072 = (s1972 >> 64);
        s1973 = (((uint128_t ) t10110) + ((uint128_t ) a19082));
        s1974 = (((uint128_t ) s1973) + ((uint128_t ) c1072));
        t10115 = ((uint64_t ) s1974);
        c1073 = (s1974 >> 64);
        /* MPPropagateCarry 64 */
        t10116 = (t10114 + c1071);
        a27870 = ((t10116 == 0));
        a27871 = (t10115 + c1071);
        t10117 = ((a27870) ? (a27871) : (t10115));
        a27872 = ((t10117 == 0));
        a27873 = ((a27872) && (a27870));
        a27874 = (c1073 + c1071);
        t10118 = ((a27873) ? (a27874) : (c1073));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1975 = (((uint128_t ) d1803) + ((uint128_t ) a19081));
        t10120 = ((uint64_t ) s1975);
        c1074 = (s1975 >> 64);
        s1976 = (((uint128_t ) t10111) + ((uint128_t ) a19080));
        s1977 = (((uint128_t ) s1976) + ((uint128_t ) c1074));
        t10121 = ((uint64_t ) s1977);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1978 = (((uint128_t ) t10120) + ((uint128_t ) t10118));
        t10122 = ((uint64_t ) s1978);
        c1076 = (s1978 >> 64);
        s1979 = (((uint128_t ) t10121) + ((uint128_t ) c1076));
        t10123 = ((uint64_t ) s1979);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27878 = ((0 < t10072));
        a27879 = ((0 == t10072));
        a27880 = ((0 < t10073));
        a27881 = ((a27879) && (a27880));
        a27882 = ((a27878) || (a27881));
        /* MPEqual 64 */
        a27883 = ((0 == t10073));
        a27884 = ((a27879) && (a27883));
        /* MPLessThan 64 */
        a27885 = ((t10092 < t10074));
        a27886 = ((t10092 == t10074));
        a27887 = ((a27886) && (b1415));
        a27888 = ((a27885) || (a27887));
        a27889 = ((a27884) && (a27888));
        a27890 = ((a27882) || (a27889));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a27891 = ((t10093 == t10075));
        a27892 = ((a27886) && (a27891));
        a27893 = ((a27884) && (a27892));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a27894 = ((a27893) && (b1414));
        i479 = ((a27890) || (a27894));
        a27895 = (2*a27852);
        /* MPCondD 128 */
        a27896 = (2*a27895);
        a27897 = (a27896 + 1);
        /* MPCondD 64 */
        a27898 = (2*a27897);
        P2[a27898] = ((i479) ? (t10123) : (t10111));
        a27899 = (a27898 + 1);
        P2[a27899] = ((i479) ? (t10122) : (d1803));
        a27900 = (a27895 + 1);
        /* MPCondD 128 */
        a27901 = (2*a27900);
        /* MPCondD 64 */
        a27902 = (2*a27901);
        P2[a27902] = ((i479) ? (t10117) : (t10110));
        a27903 = (a27902 + 1);
        P2[a27903] = ((i479) ? (t10116) : (d1799));
        a27904 = (a27901 + 1);
        /* MPCondD 64 */
        a27905 = (2*a27904);
        P2[a27905] = ((i479) ? (t10113) : (d1795));
        a27906 = (a27905 + 1);
        P2[a27906] = ((i479) ? (t10112) : (d1793));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code8(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a27907, a27908, a27909, a27910, a27911, a27912, a27913, a27914, 
            a27915, a27916, a27917, a27918, a27919, a27920, a27921, a27922, 
            a27923, a27924, a27925, a27926, a27927, a27928, a27929, a27930, 
            a27931, a27932, a27933, a27934, a27935, a27954, a27955, a27956, 
            a27960, a27961, a27962, a27963, a27964, a27965, a27966, a27969, 
            a27970, a27971, a27976, a27980, a27981, a27982, a27986, a27987, 
            a27988, a27989, a27990, a27991, a27992, a27995, a27996, a27997, 
            a28001, a28004, a28005, a28006, a28007, a28008, a28009, a28010, 
            a28011, a28012, a28013, a28014, a28015, a28016, a28017, a28018, 
            a28019, a28020, a28021, a28022, a28023, a28025, a28026, a28031, 
            a28032, a28033, a28034, a28035, a28043, a28044, a28045, a28046, 
            a28047, a28048, a28049, a28050, a28051, a28052, a28053, a28054, 
            a28055, a28056, a28057, a28058, a28059, a28060, a28061, a28062, 
            a28063, a28064, a28065, a28066, a28067, a28068, a28069, a28070, 
            a28071, a28072, a28073, a28074, a28075, a28076, a28077, a28079, 
            a28080, a28081, a28085, a28086, a28087, a28088, a28089, a28090, 
            a28091, a28095, a28096, a28097, a28098, a28099, a28100, a28101, 
            a28102, a28103, a28104, a28105, a28106, a28107, a28109, a28110, 
            a28111, a28115, a28116, a28117, a28118, a28119, a28120, a28121, 
            a28125, a28127, a28128, a28133, a28134, a28135, a28136, a28137, 
            a28138, a28139, a28140, a28141, a28142, a28143, a28144, a28145, 
            a28146, a28147, a28148, a28149, a28150, a28151, a28152, a28153, 
            a28154, a28155, a28156, a28157, a28158, a28159, a28160, a28161, 
            b1417, b1418, b1420, b1421, b1422, b1423, b1424, b1425, 
            b1426, b1427, b1428, b1429, b1430, b1431, b1432, b1433, 
            b1434, b1435, b1436, b1437, b1438, b1439, b1440, b1441, 
            b1442, b1443, b1444, b1445, b1446, b1447, b1448, b1449, 
            b1450, b1451, b1452, b1453, b1454, b1455, b1456, b1457, 
            c1077, c1078, c1079, c1080, c1081, c1082, c1083, c1085, 
            c1086, c1087, c1088, c1089, c1090, c1091, c1093, i480, 
            i481, i482;
    uint64_t a19886, a19887, a19888, a19889, a19890, a19891, a19991, a19992, 
            a19993, a19994, a19995, a19996, a27936, a27937, a27938, a27939, 
            a27940, a27941, a27942, a27943, a27944, a27945, a27947, a27948, 
            a27949, a27950, a27951, a27952, a28024, a28027, a28036, a28126, 
            a28129, d1804, d1805, d1806, d1807, d1808, d1809, d1810, 
            d1811, d1812, d1813, d1814, d1815, d1816, d1817, d1818, 
            d1819, d1820, d1821, d1822, d1823, d1824, d1825, d1826, 
            d1827, d1828, d1829, d1830, d1831, d1832, d1833, d1834, 
            d1835, d1836, d1837, d1838, d1839, d1840, d1841, d1842, 
            d1843, d1844, d1845, d1846, d1847, d1848, d1849, d1850, 
            d1851, d1852, d1853, d1854, d1855, t10124, t10125, t10126, 
            t10127, t10128, t10129, t10130, t10131, t10132, t10133, t10134, 
            t10135, t10136, t10137, t10138, t10139, t10140, t10141, t10142, 
            t10143, t10144, t10145, t10146, t10147, t10148, t10149, t10150, 
            t10151, t10152, t10153, t10154, t10155, t10156, t10157, t10160, 
            t10161, t10162, t10163, t10164, t10165, t10166, t10167, t10168, 
            t10169, t10170, t10171, t10172, t10173, t10174, t10175, t10176, 
            t10177, t10178, t10179, t10180, t10181, t10182, t10183, t10184, 
            t10185, t10186, t10187, t10188, t10189, t10190, t10191, t10192, 
            t10193, t10194, t10195, t10196, t10197, t10198, t10199, t10200, 
            t10201, t10202, t10203, t10205, t10206, t10207, t10208, t10209, 
            t10210, t10211, t10212, t10215, t10216, t10217, t10218, t10219, 
            t10220, t10221, t10222, t10223, t10224, t10225, t10226, t10227, 
            t10228, t10229, t10230, t10231, t10233, t10234, t10235, t10236, 
            t7105, t7106, t7107, t7108, t7109, t7110, t7111, t7112, 
            t7113, t7114, t7115, t7116, t7117, t7118, t7119, t7120, 
            t7121, t7122, t7123, t7124, t7125, t7126, t7127, t7128, 
            t7129, t7130, t7131, t7132, t7133, t7134, t7135, t7136, 
            t7137, t7138, t7139, t7140, t7141, t7142, t7143, t7144, 
            t7145, t7146, t7147, t7148, t7149, t7150, t7151, t7152;
    uint128_t s1980, s1981, s1982, s1983, s1984, s1985, s1986, s1987, 
            s1988, s1989, s1990, s1991, s1992, s1993, s1994, s1995, 
            s1996, s1997, s1998, s1999, s2000, s2001, s2002, s2003, 
            s2004;
    for(int i13 = 0; i13 <= 63; i13++) {
        a27907 = (128*i13);
        a27908 = (a27907 + threadIdx.x);
        b1417 = (threadIdx.x + a27907);
        a27909 = (b1417 + 8192);
        a27910 = (a27909 % 256);
        a27911 = (256 + a27910);
        /* Begin of MPModMul 256 */
        a27912 = (2*a27911);
        a27913 = (a27912 + 1);
        a27914 = (2*a27909);
        a27915 = (a27914 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27916 = (2*a27912);
        a27917 = (a27916 + 1);
        /* MPAssignDD 64 */
        a27918 = (2*a27917);
        t10124 = twiddles[a27918];
        a27919 = (a27918 + 1);
        t10125 = twiddles[a27919];
        /* MPAssignDD 128 */
        a27920 = (2*a27913);
        /* MPAssignDD 64 */
        a27921 = (2*a27920);
        t10126 = twiddles[a27921];
        a27922 = (a27921 + 1);
        t10127 = twiddles[a27922];
        a27923 = (a27920 + 1);
        /* MPAssignDD 64 */
        a27924 = (2*a27923);
        t10128 = twiddles[a27924];
        a27925 = (a27924 + 1);
        t10129 = twiddles[a27925];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a27926 = (2*a27914);
        a27927 = (a27926 + 1);
        /* MPAssignDD 64 */
        a27928 = (2*a27927);
        t10130 = P2[a27928];
        a27929 = (a27928 + 1);
        t10131 = P2[a27929];
        /* MPAssignDD 128 */
        a27930 = (2*a27915);
        /* MPAssignDD 64 */
        a27931 = (2*a27930);
        t10132 = P2[a27931];
        a27932 = (a27931 + 1);
        t10133 = P2[a27932];
        a27933 = (a27930 + 1);
        /* MPAssignDD 64 */
        a27934 = (2*a27933);
        t10134 = P2[a27934];
        a27935 = (a27934 + 1);
        t10135 = P2[a27935];
        MPMulQDD_L3_2(t7139, t7140, t7137, t7138, t7143, t7144, t7141, t7142, 
    t7147, t7148, t7145, t7146, t7151, t7152, t7149, t7150, 
    0, 0, t10124, t10125, t10126, t10127, t10128, t10129, 
    0, 0, t10130, t10131, t10132, t10133, t10134, t10135);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10136 = (t7147 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a27936 = (t7147 << 6);
        a27937 = (t7148 >> 58);
        t10137 = (((a27936)|(a27937)));
        t10138 = (t7148 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10139 = (t7145 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10140 = (((t10138)|(t10139)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1418 = ((int) 1);
        t10141 = (288230376151711744 - b1418);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10142 = (((t7137)&(t10141)));
        t10143 = (((t7138)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a27938 = (t10142 << 6);
        a27939 = (t10143 >> 58);
        t10144 = (((a27938)|(a27939)));
        t10145 = (t10143 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10146 = (t7143 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a27940 = (t7143 << 6);
        a27941 = (t7144 >> 58);
        t10147 = (((a27940)|(a27941)));
        t10148 = (t7144 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10149 = (t7141 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10150 = (((t10148)|(t10149)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10151 = (((t10145)|(t10146)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a27942 = (t7141 << 6);
        a27943 = (t7142 >> 58);
        t10152 = (((a27942)|(a27943)));
        t10153 = (t7142 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10154 = (((t10153)|(t10136)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a19886 = mu[2];
        a19887 = mu[3];
        a19888 = mu[4];
        a19889 = mu[5];
        a19890 = mu[6];
        a19891 = mu[7];
        MPMulQDD_L3_1(t7107, t7108, t7105, t7106, t7111, t7112, t7109, t7110, 
    t7115, t7116, t7113, t7114, t7119, t7120, t7117, t7118, 
    t10144, t10151, t10147, t10150, t10152, t10154, t10137, t10140, 
    0, 0, a19886, a19887, a19888, a19889, a19890, a19891);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10155 = (t7115 >> 1);
        a27944 = (t7115 << 63);
        a27945 = (t7116 >> 1);
        t10156 = (((a27944)|(a27945)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t10157 = (0 - b1418);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1804 = (2 - b1418);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10160 = (((t7108)&(d1804)));
        /* MPBinAndD 64 */
        t10161 = (((t7105)&(t10157)));
        t10162 = (((t7106)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10163 = (t10160 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10164 = (t10161 >> 1);
        a27947 = (t10161 << 63);
        a27948 = (t10162 >> 1);
        t10165 = (((a27947)|(a27948)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10166 = (((t10163)|(t10164)));
        /* Begin of MPShiftLeft1D */
        t10167 = (t10162 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10168 = (t7111 >> 1);
        a27949 = (t7111 << 63);
        a27950 = (t7112 >> 1);
        t10169 = (((a27949)|(a27950)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10170 = (((t10167)|(t10168)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10171 = (t7112 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10172 = (t7109 >> 1);
        a27951 = (t7109 << 63);
        a27952 = (t7110 >> 1);
        t10173 = (((a27951)|(a27952)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10174 = (((t10171)|(t10172)));
        /* Begin of MPShiftLeft1D */
        t10175 = (t7110 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10176 = (((t10175)|(t10155)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a19991 = modulus[2];
        a19992 = modulus[3];
        a19993 = modulus[4];
        a19994 = modulus[5];
        a19995 = modulus[6];
        a19996 = modulus[7];
        MPMulQDD_L3_1(t7123, t7124, t7121, t7122, t7127, t7128, t7125, t7126, 
    t7131, t7132, t7129, t7130, t7135, t7136, t7133, t7134, 
    t10166, t10165, t10170, t10169, t10174, t10173, t10176, t10156, 
    0, 0, a19991, a19992, a19993, a19994, a19995, a19996);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1805 = (t7150 - t7134);
        b1420 = ((t7150 < t7134));
        d1806 = (t7149 - t7133);
        d1807 = (d1806 - b1420);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27954 = ((t7149 < t7133));
        a27955 = ((t7149 == t7133));
        a27956 = ((a27955) && (b1420));
        b1421 = ((a27954) || (a27956));
        /* Begin of MPSubDDD 64 */
        d1808 = (t7152 - t7136);
        b1422 = ((t7152 < t7136));
        d1809 = (t7151 - t7135);
        d1810 = (d1809 - b1422);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1811 = (d1808 - b1421);
        b1423 = ((d1808 < b1421));
        t10177 = (d1810 - b1423);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27960 = ((t7151 < t7135));
        a27961 = ((t7151 == t7135));
        a27962 = ((a27961) && (b1422));
        a27963 = ((a27960) || (a27962));
        /* MPEqual 64 */
        a27964 = ((t7152 == t7136));
        a27965 = ((a27961) && (a27964));
        /* MPLessThan 64 */
        a27966 = ((a27965) && (b1421));
        b1424 = ((a27963) || (a27966));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1812 = (t7146 - t7130);
        b1425 = ((t7146 < t7130));
        d1813 = (t7145 - t7129);
        d1814 = (d1813 - b1425);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27969 = ((t7145 < t7129));
        a27970 = ((t7145 == t7129));
        a27971 = ((a27970) && (b1425));
        b1426 = ((a27969) || (a27971));
        /* Begin of MPSubDDD 64 */
        d1815 = (t7148 - t7132);
        b1427 = ((t7148 < t7132));
        d1816 = (t7147 - t7131);
        d1817 = (d1816 - b1427);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1818 = (d1815 - b1426);
        b1428 = ((d1815 < b1426));
        t10178 = (d1817 - b1428);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1819 = (d1812 - b1424);
        b1429 = ((d1812 < b1424));
        t10179 = (d1814 - b1429);
        /* MPLessThanDI 64 */
        a27976 = ((d1814 == 0));
        b1430 = ((a27976) && (b1429));
        /* MPSubDDI 64 */
        d1820 = (d1818 - b1430);
        b1431 = ((d1818 < b1430));
        t10180 = (t10178 - b1431);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1821 = (d1805 - a19996);
        b1432 = ((d1805 < a19996));
        d1822 = (d1807 - a19995);
        d1823 = (d1822 - b1432);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27980 = ((d1807 < a19995));
        a27981 = ((d1807 == a19995));
        a27982 = ((a27981) && (b1432));
        b1433 = ((a27980) || (a27982));
        /* Begin of MPSubDDD 64 */
        d1824 = (d1811 - a19994);
        b1434 = ((d1811 < a19994));
        d1825 = (t10177 - a19993);
        d1826 = (d1825 - b1434);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1827 = (d1824 - b1433);
        b1435 = ((d1824 < b1433));
        t10181 = (d1826 - b1435);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a27986 = ((t10177 < a19993));
        a27987 = ((t10177 == a19993));
        a27988 = ((a27987) && (b1434));
        a27989 = ((a27986) || (a27988));
        /* MPEqual 64 */
        a27990 = ((d1811 == a19994));
        a27991 = ((a27987) && (a27990));
        /* MPLessThan 64 */
        a27992 = ((a27991) && (b1433));
        b1436 = ((a27989) || (a27992));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1828 = (d1819 - a19992);
        b1437 = ((d1819 < a19992));
        d1829 = (t10179 - a19991);
        d1830 = (d1829 - b1437);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a27995 = ((t10179 < a19991));
        a27996 = ((t10179 == a19991));
        a27997 = ((a27996) && (b1437));
        b1438 = ((a27995) || (a27997));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1831 = (d1820 - b1438);
        b1439 = ((d1820 < b1438));
        t10182 = (t10180 - b1439);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1832 = (d1828 - b1436);
        b1440 = ((d1828 < b1436));
        t10183 = (d1830 - b1440);
        /* MPLessThanDI 64 */
        a28001 = ((d1830 == 0));
        b1441 = ((a28001) && (b1440));
        /* MPSubDDI 64 */
        d1833 = (d1831 - b1441);
        b1442 = ((d1831 < b1441));
        t10184 = (t10182 - b1442);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a28004 = ((t10180 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a28005 = ((d1820 == 0));
        a28006 = ((a28004) && (a28005));
        /* MPLessThan 64 */
        a28007 = ((a28006) && (b1438));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28008 = ((d1819 == a19992));
        a28009 = ((a27996) && (a28008));
        a28010 = ((a28006) && (a28009));
        /* MPLessThan 128 */
        a28011 = ((a28010) && (b1436));
        i480 = ((a28007) || (a28011));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10185 = ((i480) ? (t10180) : (t10184));
        t10186 = ((i480) ? (d1820) : (d1833));
        /* MPCondD 64 */
        t10187 = ((i480) ? (t10179) : (t10183));
        t10188 = ((i480) ? (d1819) : (d1832));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10189 = ((i480) ? (t10177) : (t10181));
        t10190 = ((i480) ? (d1811) : (d1827));
        /* MPCondD 64 */
        t10191 = ((i480) ? (d1807) : (d1823));
        t10192 = ((i480) ? (d1805) : (d1821));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a28012 = (256*i13);
        a28013 = (2*threadIdx.x);
        a28014 = (a28012 + a28013);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a28015 = (2*a27908);
        a28016 = (a28015 + 1);
        /* MPAssignDD 128 */
        a28017 = (2*a28016);
        /* MPAssignDD 64 */
        a28018 = (2*a28017);
        t10193 = P2[a28018];
        a28019 = (a28018 + 1);
        t10194 = P2[a28019];
        a28020 = (a28017 + 1);
        /* MPAssignDD 64 */
        a28021 = (2*a28020);
        t10195 = P2[a28021];
        a28022 = (a28021 + 1);
        t10196 = P2[a28022];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1980 = (((uint128_t ) t10196) + ((uint128_t ) t10192));
        t10197 = ((uint64_t ) s1980);
        c1077 = (s1980 >> 64);
        s1981 = (((uint128_t ) t10195) + ((uint128_t ) t10191));
        s1982 = (((uint128_t ) s1981) + ((uint128_t ) c1077));
        t10198 = ((uint64_t ) s1982);
        c1078 = (s1982 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1983 = (((uint128_t ) t10194) + ((uint128_t ) t10190));
        t10199 = ((uint64_t ) s1983);
        c1079 = (s1983 >> 64);
        s1984 = (((uint128_t ) t10193) + ((uint128_t ) t10189));
        s1985 = (((uint128_t ) s1984) + ((uint128_t ) c1079));
        t10200 = ((uint64_t ) s1985);
        c1080 = (s1985 >> 64);
        /* MPPropagateCarry 64 */
        t10201 = (t10199 + c1078);
        a28023 = ((t10201 == 0));
        a28024 = (t10200 + c1078);
        t10202 = ((a28023) ? (a28024) : (t10200));
        a28025 = ((t10202 == 0));
        a28026 = ((a28025) && (a28023));
        a28027 = (c1080 + c1078);
        t10203 = ((a28026) ? (a28027) : (c1080));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28031 = (2*a28015);
        a28032 = (a28031 + 1);
        /* MPAssignDD 64 */
        a28033 = (2*a28032);
        t10205 = P2[a28033];
        a28034 = (a28033 + 1);
        t10206 = P2[a28034];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1986 = (((uint128_t ) t10206) + ((uint128_t ) t10188));
        t10207 = ((uint64_t ) s1986);
        c1081 = (s1986 >> 64);
        s1987 = (((uint128_t ) t10205) + ((uint128_t ) t10187));
        s1988 = (((uint128_t ) s1987) + ((uint128_t ) c1081));
        t10208 = ((uint64_t ) s1988);
        c1082 = (s1988 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t10209 = ((uint64_t ) t10186);
        c1083 = (t10186 >> 64);
        s1989 = (((uint128_t ) t10185) + ((uint128_t ) c1083));
        t10210 = ((uint64_t ) s1989);
        /* MPPropagateCarry 64 */
        t10211 = (t10209 + c1082);
        a28035 = ((t10211 == 0));
        a28036 = (t10210 + c1082);
        t10212 = ((a28035) ? (a28036) : (t10210));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s1990 = (((uint128_t ) t10207) + ((uint128_t ) t10203));
        t10215 = ((uint64_t ) s1990);
        c1085 = (s1990 >> 64);
        s1991 = (((uint128_t ) t10208) + ((uint128_t ) c1085));
        t10216 = ((uint64_t ) s1991);
        /* MPEqualDI 64 */
        a28043 = ((t10216 == 0));
        a28044 = ((t10215 == 0));
        a28045 = ((a28043) && (a28044));
        /* MPAddDDI 64 */
        s1992 = (((uint128_t ) t10211) + ((uint128_t ) t10203));
        t10217 = ((uint64_t ) s1992);
        c1086 = (s1992 >> 64);
        s1993 = (((uint128_t ) t10212) + ((uint128_t ) c1086));
        t10218 = ((uint64_t ) s1993);
        /* MPCondD 64 */
        t10219 = ((a28045) ? (t10218) : (t10212));
        t10220 = ((a28045) ? (t10217) : (t10211));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a28046 = ((0 < t10219));
        a28047 = ((0 == t10219));
        a28048 = ((0 < t10220));
        a28049 = ((a28047) && (a28048));
        a28050 = ((a28046) || (a28049));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a28051 = ((0 == t10220));
        a28052 = ((a28047) && (a28051));
        /* MPLessThan 64 */
        a28053 = ((a19991 < t10216));
        a28054 = ((a19991 == t10216));
        a28055 = ((a19992 < t10215));
        a28056 = ((a28054) && (a28055));
        a28057 = ((a28053) || (a28056));
        a28058 = ((a28052) && (a28057));
        a28059 = ((a28050) || (a28058));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28060 = ((a19992 == t10215));
        a28061 = ((a28054) && (a28060));
        a28062 = ((a28052) && (a28061));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28063 = ((a19993 < t10202));
        a28064 = ((a19993 == t10202));
        a28065 = ((a19994 < t10201));
        a28066 = ((a28064) && (a28065));
        a28067 = ((a28063) || (a28066));
        /* MPEqual 64 */
        a28068 = ((a19994 == t10201));
        a28069 = ((a28064) && (a28068));
        /* MPLessThan 64 */
        a28070 = ((a19995 < t10198));
        a28071 = ((a19995 == t10198));
        a28072 = ((a19996 < t10197));
        a28073 = ((a28071) && (a28072));
        a28074 = ((a28070) || (a28073));
        a28075 = ((a28069) && (a28074));
        a28076 = ((a28067) || (a28075));
        a28077 = ((a28062) && (a28076));
        i481 = ((a28059) || (a28077));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1834 = (t10197 - a19996);
        b1443 = ((t10197 < a19996));
        d1835 = (t10198 - a19995);
        d1836 = (d1835 - b1443);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28079 = ((t10198 < a19995));
        a28080 = ((t10198 == a19995));
        a28081 = ((a28080) && (b1443));
        b1444 = ((a28079) || (a28081));
        /* Begin of MPSubDDD 64 */
        d1837 = (t10201 - a19994);
        b1445 = ((t10201 < a19994));
        d1838 = (t10202 - a19993);
        d1839 = (d1838 - b1445);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1840 = (d1837 - b1444);
        b1446 = ((d1837 < b1444));
        t10221 = (d1839 - b1446);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28085 = ((t10202 < a19993));
        a28086 = ((t10202 == a19993));
        a28087 = ((a28086) && (b1445));
        a28088 = ((a28085) || (a28087));
        /* MPEqual 64 */
        a28089 = ((t10201 == a19994));
        a28090 = ((a28086) && (a28089));
        /* MPLessThan 64 */
        a28091 = ((a28090) && (b1444));
        b1447 = ((a28088) || (a28091));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1841 = (t10215 - a19992);
        b1448 = ((t10215 < a19992));
        d1842 = (t10216 - a19991);
        d1843 = (d1842 - b1448);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1844 = (d1841 - b1447);
        b1449 = ((d1841 < b1447));
        t10222 = (d1843 - b1449);
        /* End of MPSubDDD 256 */
        a28095 = (2*a28014);
        /* MPCondD 128 */
        a28096 = (2*a28095);
        a28097 = (a28096 + 1);
        /* MPCondD 64 */
        a28098 = (2*a28097);
        P1[a28098] = ((i481) ? (t10222) : (t10216));
        a28099 = (a28098 + 1);
        P1[a28099] = ((i481) ? (d1844) : (t10215));
        a28100 = (a28095 + 1);
        /* MPCondD 128 */
        a28101 = (2*a28100);
        /* MPCondD 64 */
        a28102 = (2*a28101);
        P1[a28102] = ((i481) ? (t10221) : (t10202));
        a28103 = (a28102 + 1);
        P1[a28103] = ((i481) ? (d1840) : (t10201));
        a28104 = (a28101 + 1);
        /* MPCondD 64 */
        a28105 = (2*a28104);
        P1[a28105] = ((i481) ? (d1836) : (t10198));
        a28106 = (a28105 + 1);
        P1[a28106] = ((i481) ? (d1834) : (t10197));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1450 = (a28013 + a28012);
        a28107 = (b1450 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1845 = (t10196 - t10192);
        b1451 = ((t10196 < t10192));
        d1846 = (t10195 - t10191);
        d1847 = (d1846 - b1451);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28109 = ((t10195 < t10191));
        a28110 = ((t10195 == t10191));
        a28111 = ((a28110) && (b1451));
        b1452 = ((a28109) || (a28111));
        /* Begin of MPSubDDD 64 */
        d1848 = (t10194 - t10190);
        b1453 = ((t10194 < t10190));
        d1849 = (t10193 - t10189);
        d1850 = (d1849 - b1453);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1851 = (d1848 - b1452);
        b1454 = ((d1848 < b1452));
        t10223 = (d1850 - b1454);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28115 = ((t10193 < t10189));
        a28116 = ((t10193 == t10189));
        a28117 = ((a28116) && (b1453));
        a28118 = ((a28115) || (a28117));
        /* MPEqual 64 */
        a28119 = ((t10194 == t10190));
        a28120 = ((a28116) && (a28119));
        /* MPLessThan 64 */
        a28121 = ((a28120) && (b1452));
        b1455 = ((a28118) || (a28121));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1852 = (t10206 - t10188);
        b1456 = ((t10206 < t10188));
        d1853 = (t10205 - t10187);
        d1854 = (d1853 - b1456);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1855 = (d1852 - b1455);
        b1457 = ((d1852 < b1455));
        t10224 = (d1854 - b1457);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s1994 = (((uint128_t ) d1845) + ((uint128_t ) a19996));
        t10225 = ((uint64_t ) s1994);
        c1087 = (s1994 >> 64);
        s1995 = (((uint128_t ) d1847) + ((uint128_t ) a19995));
        s1996 = (((uint128_t ) s1995) + ((uint128_t ) c1087));
        t10226 = ((uint64_t ) s1996);
        c1088 = (s1996 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s1997 = (((uint128_t ) d1851) + ((uint128_t ) a19994));
        t10227 = ((uint64_t ) s1997);
        c1089 = (s1997 >> 64);
        s1998 = (((uint128_t ) t10223) + ((uint128_t ) a19993));
        s1999 = (((uint128_t ) s1998) + ((uint128_t ) c1089));
        t10228 = ((uint64_t ) s1999);
        c1090 = (s1999 >> 64);
        /* MPPropagateCarry 64 */
        t10229 = (t10227 + c1088);
        a28125 = ((t10229 == 0));
        a28126 = (t10228 + c1088);
        t10230 = ((a28125) ? (a28126) : (t10228));
        a28127 = ((t10230 == 0));
        a28128 = ((a28127) && (a28125));
        a28129 = (c1090 + c1088);
        t10231 = ((a28128) ? (a28129) : (c1090));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2000 = (((uint128_t ) d1855) + ((uint128_t ) a19992));
        t10233 = ((uint64_t ) s2000);
        c1091 = (s2000 >> 64);
        s2001 = (((uint128_t ) t10224) + ((uint128_t ) a19991));
        s2002 = (((uint128_t ) s2001) + ((uint128_t ) c1091));
        t10234 = ((uint64_t ) s2002);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2003 = (((uint128_t ) t10233) + ((uint128_t ) t10231));
        t10235 = ((uint64_t ) s2003);
        c1093 = (s2003 >> 64);
        s2004 = (((uint128_t ) t10234) + ((uint128_t ) c1093));
        t10236 = ((uint64_t ) s2004);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28133 = ((0 < t10185));
        a28134 = ((0 == t10185));
        a28135 = ((0 < t10186));
        a28136 = ((a28134) && (a28135));
        a28137 = ((a28133) || (a28136));
        /* MPEqual 64 */
        a28138 = ((0 == t10186));
        a28139 = ((a28134) && (a28138));
        /* MPLessThan 64 */
        a28140 = ((t10205 < t10187));
        a28141 = ((t10205 == t10187));
        a28142 = ((a28141) && (b1456));
        a28143 = ((a28140) || (a28142));
        a28144 = ((a28139) && (a28143));
        a28145 = ((a28137) || (a28144));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28146 = ((t10206 == t10188));
        a28147 = ((a28141) && (a28146));
        a28148 = ((a28139) && (a28147));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a28149 = ((a28148) && (b1455));
        i482 = ((a28145) || (a28149));
        a28150 = (2*a28107);
        /* MPCondD 128 */
        a28151 = (2*a28150);
        a28152 = (a28151 + 1);
        /* MPCondD 64 */
        a28153 = (2*a28152);
        P1[a28153] = ((i482) ? (t10236) : (t10224));
        a28154 = (a28153 + 1);
        P1[a28154] = ((i482) ? (t10235) : (d1855));
        a28155 = (a28150 + 1);
        /* MPCondD 128 */
        a28156 = (2*a28155);
        /* MPCondD 64 */
        a28157 = (2*a28156);
        P1[a28157] = ((i482) ? (t10230) : (t10223));
        a28158 = (a28157 + 1);
        P1[a28158] = ((i482) ? (t10229) : (d1851));
        a28159 = (a28156 + 1);
        /* MPCondD 64 */
        a28160 = (2*a28159);
        P1[a28160] = ((i482) ? (t10226) : (d1847));
        a28161 = (a28160 + 1);
        P1[a28161] = ((i482) ? (t10225) : (d1845));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code9(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a28162, a28163, a28164, a28165, a28166, a28167, a28168, a28169, 
            a28170, a28171, a28172, a28173, a28174, a28175, a28176, a28177, 
            a28178, a28179, a28180, a28181, a28182, a28183, a28184, a28185, 
            a28186, a28187, a28188, a28189, a28190, a28209, a28210, a28211, 
            a28215, a28216, a28217, a28218, a28219, a28220, a28221, a28224, 
            a28225, a28226, a28231, a28235, a28236, a28237, a28241, a28242, 
            a28243, a28244, a28245, a28246, a28247, a28250, a28251, a28252, 
            a28256, a28259, a28260, a28261, a28262, a28263, a28264, a28265, 
            a28266, a28267, a28268, a28269, a28270, a28271, a28272, a28273, 
            a28274, a28275, a28276, a28277, a28278, a28280, a28281, a28286, 
            a28287, a28288, a28289, a28290, a28298, a28299, a28300, a28301, 
            a28302, a28303, a28304, a28305, a28306, a28307, a28308, a28309, 
            a28310, a28311, a28312, a28313, a28314, a28315, a28316, a28317, 
            a28318, a28319, a28320, a28321, a28322, a28323, a28324, a28325, 
            a28326, a28327, a28328, a28329, a28330, a28331, a28332, a28334, 
            a28335, a28336, a28340, a28341, a28342, a28343, a28344, a28345, 
            a28346, a28350, a28351, a28352, a28353, a28354, a28355, a28356, 
            a28357, a28358, a28359, a28360, a28361, a28362, a28364, a28365, 
            a28366, a28370, a28371, a28372, a28373, a28374, a28375, a28376, 
            a28380, a28382, a28383, a28388, a28389, a28390, a28391, a28392, 
            a28393, a28394, a28395, a28396, a28397, a28398, a28399, a28400, 
            a28401, a28402, a28403, a28404, a28405, a28406, a28407, a28408, 
            a28409, a28410, a28411, a28412, a28413, a28414, a28415, a28416, 
            b1458, b1459, b1461, b1462, b1463, b1464, b1465, b1466, 
            b1467, b1468, b1469, b1470, b1471, b1472, b1473, b1474, 
            b1475, b1476, b1477, b1478, b1479, b1480, b1481, b1482, 
            b1483, b1484, b1485, b1486, b1487, b1488, b1489, b1490, 
            b1491, b1492, b1493, b1494, b1495, b1496, b1497, b1498, 
            c1094, c1095, c1096, c1097, c1098, c1099, c1100, c1102, 
            c1103, c1104, c1105, c1106, c1107, c1108, c1110, i483, 
            i484, i485;
    uint64_t a20797, a20798, a20799, a20800, a20801, a20802, a20902, a20903, 
            a20904, a20905, a20906, a20907, a28191, a28192, a28193, a28194, 
            a28195, a28196, a28197, a28198, a28199, a28200, a28202, a28203, 
            a28204, a28205, a28206, a28207, a28279, a28282, a28291, a28381, 
            a28384, d1856, d1857, d1858, d1859, d1860, d1861, d1862, 
            d1863, d1864, d1865, d1866, d1867, d1868, d1869, d1870, 
            d1871, d1872, d1873, d1874, d1875, d1876, d1877, d1878, 
            d1879, d1880, d1881, d1882, d1883, d1884, d1885, d1886, 
            d1887, d1888, d1889, d1890, d1891, d1892, d1893, d1894, 
            d1895, d1896, d1897, d1898, d1899, d1900, d1901, d1902, 
            d1903, d1904, d1905, d1906, d1907, t10237, t10238, t10239, 
            t10240, t10241, t10242, t10243, t10244, t10245, t10246, t10247, 
            t10248, t10249, t10250, t10251, t10252, t10253, t10254, t10255, 
            t10256, t10257, t10258, t10259, t10260, t10261, t10262, t10263, 
            t10264, t10265, t10266, t10267, t10268, t10269, t10270, t10273, 
            t10274, t10275, t10276, t10277, t10278, t10279, t10280, t10281, 
            t10282, t10283, t10284, t10285, t10286, t10287, t10288, t10289, 
            t10290, t10291, t10292, t10293, t10294, t10295, t10296, t10297, 
            t10298, t10299, t10300, t10301, t10302, t10303, t10304, t10305, 
            t10306, t10307, t10308, t10309, t10310, t10311, t10312, t10313, 
            t10314, t10315, t10316, t10318, t10319, t10320, t10321, t10322, 
            t10323, t10324, t10325, t10328, t10329, t10330, t10331, t10332, 
            t10333, t10334, t10335, t10336, t10337, t10338, t10339, t10340, 
            t10341, t10342, t10343, t10344, t10346, t10347, t10348, t10349, 
            t7041, t7042, t7043, t7044, t7045, t7046, t7047, t7048, 
            t7049, t7050, t7051, t7052, t7053, t7054, t7055, t7056, 
            t7057, t7058, t7059, t7060, t7061, t7062, t7063, t7064, 
            t7065, t7066, t7067, t7068, t7069, t7070, t7071, t7072, 
            t7073, t7074, t7075, t7076, t7077, t7078, t7079, t7080, 
            t7081, t7082, t7083, t7084, t7085, t7086, t7087, t7088;
    uint128_t s2005, s2006, s2007, s2008, s2009, s2010, s2011, s2012, 
            s2013, s2014, s2015, s2016, s2017, s2018, s2019, s2020, 
            s2021, s2022, s2023, s2024, s2025, s2026, s2027, s2028, 
            s2029;
    for(int i11 = 0; i11 <= 63; i11++) {
        a28162 = (128*i11);
        a28163 = (a28162 + threadIdx.x);
        b1458 = (threadIdx.x + a28162);
        a28164 = (b1458 + 8192);
        a28165 = (a28164 % 512);
        a28166 = (512 + a28165);
        /* Begin of MPModMul 256 */
        a28167 = (2*a28166);
        a28168 = (a28167 + 1);
        a28169 = (2*a28164);
        a28170 = (a28169 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28171 = (2*a28167);
        a28172 = (a28171 + 1);
        /* MPAssignDD 64 */
        a28173 = (2*a28172);
        t10237 = twiddles[a28173];
        a28174 = (a28173 + 1);
        t10238 = twiddles[a28174];
        /* MPAssignDD 128 */
        a28175 = (2*a28168);
        /* MPAssignDD 64 */
        a28176 = (2*a28175);
        t10239 = twiddles[a28176];
        a28177 = (a28176 + 1);
        t10240 = twiddles[a28177];
        a28178 = (a28175 + 1);
        /* MPAssignDD 64 */
        a28179 = (2*a28178);
        t10241 = twiddles[a28179];
        a28180 = (a28179 + 1);
        t10242 = twiddles[a28180];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28181 = (2*a28169);
        a28182 = (a28181 + 1);
        /* MPAssignDD 64 */
        a28183 = (2*a28182);
        t10243 = P1[a28183];
        a28184 = (a28183 + 1);
        t10244 = P1[a28184];
        /* MPAssignDD 128 */
        a28185 = (2*a28170);
        /* MPAssignDD 64 */
        a28186 = (2*a28185);
        t10245 = P1[a28186];
        a28187 = (a28186 + 1);
        t10246 = P1[a28187];
        a28188 = (a28185 + 1);
        /* MPAssignDD 64 */
        a28189 = (2*a28188);
        t10247 = P1[a28189];
        a28190 = (a28189 + 1);
        t10248 = P1[a28190];
        MPMulQDD_L3_2(t7075, t7076, t7073, t7074, t7079, t7080, t7077, t7078, 
    t7083, t7084, t7081, t7082, t7087, t7088, t7085, t7086, 
    0, 0, t10237, t10238, t10239, t10240, t10241, t10242, 
    0, 0, t10243, t10244, t10245, t10246, t10247, t10248);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10249 = (t7083 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a28191 = (t7083 << 6);
        a28192 = (t7084 >> 58);
        t10250 = (((a28191)|(a28192)));
        t10251 = (t7084 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10252 = (t7081 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10253 = (((t10251)|(t10252)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1459 = ((int) 1);
        t10254 = (288230376151711744 - b1459);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10255 = (((t7073)&(t10254)));
        t10256 = (((t7074)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a28193 = (t10255 << 6);
        a28194 = (t10256 >> 58);
        t10257 = (((a28193)|(a28194)));
        t10258 = (t10256 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10259 = (t7079 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a28195 = (t7079 << 6);
        a28196 = (t7080 >> 58);
        t10260 = (((a28195)|(a28196)));
        t10261 = (t7080 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10262 = (t7077 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10263 = (((t10261)|(t10262)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10264 = (((t10258)|(t10259)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a28197 = (t7077 << 6);
        a28198 = (t7078 >> 58);
        t10265 = (((a28197)|(a28198)));
        t10266 = (t7078 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10267 = (((t10266)|(t10249)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a20797 = mu[2];
        a20798 = mu[3];
        a20799 = mu[4];
        a20800 = mu[5];
        a20801 = mu[6];
        a20802 = mu[7];
        MPMulQDD_L3_1(t7043, t7044, t7041, t7042, t7047, t7048, t7045, t7046, 
    t7051, t7052, t7049, t7050, t7055, t7056, t7053, t7054, 
    t10257, t10264, t10260, t10263, t10265, t10267, t10250, t10253, 
    0, 0, a20797, a20798, a20799, a20800, a20801, a20802);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10268 = (t7051 >> 1);
        a28199 = (t7051 << 63);
        a28200 = (t7052 >> 1);
        t10269 = (((a28199)|(a28200)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t10270 = (0 - b1459);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1856 = (2 - b1459);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10273 = (((t7044)&(d1856)));
        /* MPBinAndD 64 */
        t10274 = (((t7041)&(t10270)));
        t10275 = (((t7042)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10276 = (t10273 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10277 = (t10274 >> 1);
        a28202 = (t10274 << 63);
        a28203 = (t10275 >> 1);
        t10278 = (((a28202)|(a28203)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10279 = (((t10276)|(t10277)));
        /* Begin of MPShiftLeft1D */
        t10280 = (t10275 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10281 = (t7047 >> 1);
        a28204 = (t7047 << 63);
        a28205 = (t7048 >> 1);
        t10282 = (((a28204)|(a28205)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10283 = (((t10280)|(t10281)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10284 = (t7048 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10285 = (t7045 >> 1);
        a28206 = (t7045 << 63);
        a28207 = (t7046 >> 1);
        t10286 = (((a28206)|(a28207)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10287 = (((t10284)|(t10285)));
        /* Begin of MPShiftLeft1D */
        t10288 = (t7046 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10289 = (((t10288)|(t10268)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a20902 = modulus[2];
        a20903 = modulus[3];
        a20904 = modulus[4];
        a20905 = modulus[5];
        a20906 = modulus[6];
        a20907 = modulus[7];
        MPMulQDD_L3_1(t7059, t7060, t7057, t7058, t7063, t7064, t7061, t7062, 
    t7067, t7068, t7065, t7066, t7071, t7072, t7069, t7070, 
    t10279, t10278, t10283, t10282, t10287, t10286, t10289, t10269, 
    0, 0, a20902, a20903, a20904, a20905, a20906, a20907);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1857 = (t7086 - t7070);
        b1461 = ((t7086 < t7070));
        d1858 = (t7085 - t7069);
        d1859 = (d1858 - b1461);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28209 = ((t7085 < t7069));
        a28210 = ((t7085 == t7069));
        a28211 = ((a28210) && (b1461));
        b1462 = ((a28209) || (a28211));
        /* Begin of MPSubDDD 64 */
        d1860 = (t7088 - t7072);
        b1463 = ((t7088 < t7072));
        d1861 = (t7087 - t7071);
        d1862 = (d1861 - b1463);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1863 = (d1860 - b1462);
        b1464 = ((d1860 < b1462));
        t10290 = (d1862 - b1464);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28215 = ((t7087 < t7071));
        a28216 = ((t7087 == t7071));
        a28217 = ((a28216) && (b1463));
        a28218 = ((a28215) || (a28217));
        /* MPEqual 64 */
        a28219 = ((t7088 == t7072));
        a28220 = ((a28216) && (a28219));
        /* MPLessThan 64 */
        a28221 = ((a28220) && (b1462));
        b1465 = ((a28218) || (a28221));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1864 = (t7082 - t7066);
        b1466 = ((t7082 < t7066));
        d1865 = (t7081 - t7065);
        d1866 = (d1865 - b1466);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28224 = ((t7081 < t7065));
        a28225 = ((t7081 == t7065));
        a28226 = ((a28225) && (b1466));
        b1467 = ((a28224) || (a28226));
        /* Begin of MPSubDDD 64 */
        d1867 = (t7084 - t7068);
        b1468 = ((t7084 < t7068));
        d1868 = (t7083 - t7067);
        d1869 = (d1868 - b1468);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1870 = (d1867 - b1467);
        b1469 = ((d1867 < b1467));
        t10291 = (d1869 - b1469);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1871 = (d1864 - b1465);
        b1470 = ((d1864 < b1465));
        t10292 = (d1866 - b1470);
        /* MPLessThanDI 64 */
        a28231 = ((d1866 == 0));
        b1471 = ((a28231) && (b1470));
        /* MPSubDDI 64 */
        d1872 = (d1870 - b1471);
        b1472 = ((d1870 < b1471));
        t10293 = (t10291 - b1472);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1873 = (d1857 - a20907);
        b1473 = ((d1857 < a20907));
        d1874 = (d1859 - a20906);
        d1875 = (d1874 - b1473);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28235 = ((d1859 < a20906));
        a28236 = ((d1859 == a20906));
        a28237 = ((a28236) && (b1473));
        b1474 = ((a28235) || (a28237));
        /* Begin of MPSubDDD 64 */
        d1876 = (d1863 - a20905);
        b1475 = ((d1863 < a20905));
        d1877 = (t10290 - a20904);
        d1878 = (d1877 - b1475);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1879 = (d1876 - b1474);
        b1476 = ((d1876 < b1474));
        t10294 = (d1878 - b1476);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28241 = ((t10290 < a20904));
        a28242 = ((t10290 == a20904));
        a28243 = ((a28242) && (b1475));
        a28244 = ((a28241) || (a28243));
        /* MPEqual 64 */
        a28245 = ((d1863 == a20905));
        a28246 = ((a28242) && (a28245));
        /* MPLessThan 64 */
        a28247 = ((a28246) && (b1474));
        b1477 = ((a28244) || (a28247));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1880 = (d1871 - a20903);
        b1478 = ((d1871 < a20903));
        d1881 = (t10292 - a20902);
        d1882 = (d1881 - b1478);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28250 = ((t10292 < a20902));
        a28251 = ((t10292 == a20902));
        a28252 = ((a28251) && (b1478));
        b1479 = ((a28250) || (a28252));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1883 = (d1872 - b1479);
        b1480 = ((d1872 < b1479));
        t10295 = (t10293 - b1480);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1884 = (d1880 - b1477);
        b1481 = ((d1880 < b1477));
        t10296 = (d1882 - b1481);
        /* MPLessThanDI 64 */
        a28256 = ((d1882 == 0));
        b1482 = ((a28256) && (b1481));
        /* MPSubDDI 64 */
        d1885 = (d1883 - b1482);
        b1483 = ((d1883 < b1482));
        t10297 = (t10295 - b1483);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a28259 = ((t10293 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a28260 = ((d1872 == 0));
        a28261 = ((a28259) && (a28260));
        /* MPLessThan 64 */
        a28262 = ((a28261) && (b1479));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28263 = ((d1871 == a20903));
        a28264 = ((a28251) && (a28263));
        a28265 = ((a28261) && (a28264));
        /* MPLessThan 128 */
        a28266 = ((a28265) && (b1477));
        i483 = ((a28262) || (a28266));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10298 = ((i483) ? (t10293) : (t10297));
        t10299 = ((i483) ? (d1872) : (d1885));
        /* MPCondD 64 */
        t10300 = ((i483) ? (t10292) : (t10296));
        t10301 = ((i483) ? (d1871) : (d1884));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10302 = ((i483) ? (t10290) : (t10294));
        t10303 = ((i483) ? (d1863) : (d1879));
        /* MPCondD 64 */
        t10304 = ((i483) ? (d1859) : (d1875));
        t10305 = ((i483) ? (d1857) : (d1873));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a28267 = (256*i11);
        a28268 = (2*threadIdx.x);
        a28269 = (a28267 + a28268);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a28270 = (2*a28163);
        a28271 = (a28270 + 1);
        /* MPAssignDD 128 */
        a28272 = (2*a28271);
        /* MPAssignDD 64 */
        a28273 = (2*a28272);
        t10306 = P1[a28273];
        a28274 = (a28273 + 1);
        t10307 = P1[a28274];
        a28275 = (a28272 + 1);
        /* MPAssignDD 64 */
        a28276 = (2*a28275);
        t10308 = P1[a28276];
        a28277 = (a28276 + 1);
        t10309 = P1[a28277];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2005 = (((uint128_t ) t10309) + ((uint128_t ) t10305));
        t10310 = ((uint64_t ) s2005);
        c1094 = (s2005 >> 64);
        s2006 = (((uint128_t ) t10308) + ((uint128_t ) t10304));
        s2007 = (((uint128_t ) s2006) + ((uint128_t ) c1094));
        t10311 = ((uint64_t ) s2007);
        c1095 = (s2007 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2008 = (((uint128_t ) t10307) + ((uint128_t ) t10303));
        t10312 = ((uint64_t ) s2008);
        c1096 = (s2008 >> 64);
        s2009 = (((uint128_t ) t10306) + ((uint128_t ) t10302));
        s2010 = (((uint128_t ) s2009) + ((uint128_t ) c1096));
        t10313 = ((uint64_t ) s2010);
        c1097 = (s2010 >> 64);
        /* MPPropagateCarry 64 */
        t10314 = (t10312 + c1095);
        a28278 = ((t10314 == 0));
        a28279 = (t10313 + c1095);
        t10315 = ((a28278) ? (a28279) : (t10313));
        a28280 = ((t10315 == 0));
        a28281 = ((a28280) && (a28278));
        a28282 = (c1097 + c1095);
        t10316 = ((a28281) ? (a28282) : (c1097));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28286 = (2*a28270);
        a28287 = (a28286 + 1);
        /* MPAssignDD 64 */
        a28288 = (2*a28287);
        t10318 = P1[a28288];
        a28289 = (a28288 + 1);
        t10319 = P1[a28289];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2011 = (((uint128_t ) t10319) + ((uint128_t ) t10301));
        t10320 = ((uint64_t ) s2011);
        c1098 = (s2011 >> 64);
        s2012 = (((uint128_t ) t10318) + ((uint128_t ) t10300));
        s2013 = (((uint128_t ) s2012) + ((uint128_t ) c1098));
        t10321 = ((uint64_t ) s2013);
        c1099 = (s2013 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t10322 = ((uint64_t ) t10299);
        c1100 = (t10299 >> 64);
        s2014 = (((uint128_t ) t10298) + ((uint128_t ) c1100));
        t10323 = ((uint64_t ) s2014);
        /* MPPropagateCarry 64 */
        t10324 = (t10322 + c1099);
        a28290 = ((t10324 == 0));
        a28291 = (t10323 + c1099);
        t10325 = ((a28290) ? (a28291) : (t10323));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2015 = (((uint128_t ) t10320) + ((uint128_t ) t10316));
        t10328 = ((uint64_t ) s2015);
        c1102 = (s2015 >> 64);
        s2016 = (((uint128_t ) t10321) + ((uint128_t ) c1102));
        t10329 = ((uint64_t ) s2016);
        /* MPEqualDI 64 */
        a28298 = ((t10329 == 0));
        a28299 = ((t10328 == 0));
        a28300 = ((a28298) && (a28299));
        /* MPAddDDI 64 */
        s2017 = (((uint128_t ) t10324) + ((uint128_t ) t10316));
        t10330 = ((uint64_t ) s2017);
        c1103 = (s2017 >> 64);
        s2018 = (((uint128_t ) t10325) + ((uint128_t ) c1103));
        t10331 = ((uint64_t ) s2018);
        /* MPCondD 64 */
        t10332 = ((a28300) ? (t10331) : (t10325));
        t10333 = ((a28300) ? (t10330) : (t10324));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a28301 = ((0 < t10332));
        a28302 = ((0 == t10332));
        a28303 = ((0 < t10333));
        a28304 = ((a28302) && (a28303));
        a28305 = ((a28301) || (a28304));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a28306 = ((0 == t10333));
        a28307 = ((a28302) && (a28306));
        /* MPLessThan 64 */
        a28308 = ((a20902 < t10329));
        a28309 = ((a20902 == t10329));
        a28310 = ((a20903 < t10328));
        a28311 = ((a28309) && (a28310));
        a28312 = ((a28308) || (a28311));
        a28313 = ((a28307) && (a28312));
        a28314 = ((a28305) || (a28313));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28315 = ((a20903 == t10328));
        a28316 = ((a28309) && (a28315));
        a28317 = ((a28307) && (a28316));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28318 = ((a20904 < t10315));
        a28319 = ((a20904 == t10315));
        a28320 = ((a20905 < t10314));
        a28321 = ((a28319) && (a28320));
        a28322 = ((a28318) || (a28321));
        /* MPEqual 64 */
        a28323 = ((a20905 == t10314));
        a28324 = ((a28319) && (a28323));
        /* MPLessThan 64 */
        a28325 = ((a20906 < t10311));
        a28326 = ((a20906 == t10311));
        a28327 = ((a20907 < t10310));
        a28328 = ((a28326) && (a28327));
        a28329 = ((a28325) || (a28328));
        a28330 = ((a28324) && (a28329));
        a28331 = ((a28322) || (a28330));
        a28332 = ((a28317) && (a28331));
        i484 = ((a28314) || (a28332));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1886 = (t10310 - a20907);
        b1484 = ((t10310 < a20907));
        d1887 = (t10311 - a20906);
        d1888 = (d1887 - b1484);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28334 = ((t10311 < a20906));
        a28335 = ((t10311 == a20906));
        a28336 = ((a28335) && (b1484));
        b1485 = ((a28334) || (a28336));
        /* Begin of MPSubDDD 64 */
        d1889 = (t10314 - a20905);
        b1486 = ((t10314 < a20905));
        d1890 = (t10315 - a20904);
        d1891 = (d1890 - b1486);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1892 = (d1889 - b1485);
        b1487 = ((d1889 < b1485));
        t10334 = (d1891 - b1487);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28340 = ((t10315 < a20904));
        a28341 = ((t10315 == a20904));
        a28342 = ((a28341) && (b1486));
        a28343 = ((a28340) || (a28342));
        /* MPEqual 64 */
        a28344 = ((t10314 == a20905));
        a28345 = ((a28341) && (a28344));
        /* MPLessThan 64 */
        a28346 = ((a28345) && (b1485));
        b1488 = ((a28343) || (a28346));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1893 = (t10328 - a20903);
        b1489 = ((t10328 < a20903));
        d1894 = (t10329 - a20902);
        d1895 = (d1894 - b1489);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1896 = (d1893 - b1488);
        b1490 = ((d1893 < b1488));
        t10335 = (d1895 - b1490);
        /* End of MPSubDDD 256 */
        a28350 = (2*a28269);
        /* MPCondD 128 */
        a28351 = (2*a28350);
        a28352 = (a28351 + 1);
        /* MPCondD 64 */
        a28353 = (2*a28352);
        P2[a28353] = ((i484) ? (t10335) : (t10329));
        a28354 = (a28353 + 1);
        P2[a28354] = ((i484) ? (d1896) : (t10328));
        a28355 = (a28350 + 1);
        /* MPCondD 128 */
        a28356 = (2*a28355);
        /* MPCondD 64 */
        a28357 = (2*a28356);
        P2[a28357] = ((i484) ? (t10334) : (t10315));
        a28358 = (a28357 + 1);
        P2[a28358] = ((i484) ? (d1892) : (t10314));
        a28359 = (a28356 + 1);
        /* MPCondD 64 */
        a28360 = (2*a28359);
        P2[a28360] = ((i484) ? (d1888) : (t10311));
        a28361 = (a28360 + 1);
        P2[a28361] = ((i484) ? (d1886) : (t10310));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        b1491 = (a28268 + a28267);
        a28362 = (b1491 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1897 = (t10309 - t10305);
        b1492 = ((t10309 < t10305));
        d1898 = (t10308 - t10304);
        d1899 = (d1898 - b1492);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28364 = ((t10308 < t10304));
        a28365 = ((t10308 == t10304));
        a28366 = ((a28365) && (b1492));
        b1493 = ((a28364) || (a28366));
        /* Begin of MPSubDDD 64 */
        d1900 = (t10307 - t10303);
        b1494 = ((t10307 < t10303));
        d1901 = (t10306 - t10302);
        d1902 = (d1901 - b1494);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1903 = (d1900 - b1493);
        b1495 = ((d1900 < b1493));
        t10336 = (d1902 - b1495);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28370 = ((t10306 < t10302));
        a28371 = ((t10306 == t10302));
        a28372 = ((a28371) && (b1494));
        a28373 = ((a28370) || (a28372));
        /* MPEqual 64 */
        a28374 = ((t10307 == t10303));
        a28375 = ((a28371) && (a28374));
        /* MPLessThan 64 */
        a28376 = ((a28375) && (b1493));
        b1496 = ((a28373) || (a28376));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1904 = (t10319 - t10301);
        b1497 = ((t10319 < t10301));
        d1905 = (t10318 - t10300);
        d1906 = (d1905 - b1497);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1907 = (d1904 - b1496);
        b1498 = ((d1904 < b1496));
        t10337 = (d1906 - b1498);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2019 = (((uint128_t ) d1897) + ((uint128_t ) a20907));
        t10338 = ((uint64_t ) s2019);
        c1104 = (s2019 >> 64);
        s2020 = (((uint128_t ) d1899) + ((uint128_t ) a20906));
        s2021 = (((uint128_t ) s2020) + ((uint128_t ) c1104));
        t10339 = ((uint64_t ) s2021);
        c1105 = (s2021 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2022 = (((uint128_t ) d1903) + ((uint128_t ) a20905));
        t10340 = ((uint64_t ) s2022);
        c1106 = (s2022 >> 64);
        s2023 = (((uint128_t ) t10336) + ((uint128_t ) a20904));
        s2024 = (((uint128_t ) s2023) + ((uint128_t ) c1106));
        t10341 = ((uint64_t ) s2024);
        c1107 = (s2024 >> 64);
        /* MPPropagateCarry 64 */
        t10342 = (t10340 + c1105);
        a28380 = ((t10342 == 0));
        a28381 = (t10341 + c1105);
        t10343 = ((a28380) ? (a28381) : (t10341));
        a28382 = ((t10343 == 0));
        a28383 = ((a28382) && (a28380));
        a28384 = (c1107 + c1105);
        t10344 = ((a28383) ? (a28384) : (c1107));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2025 = (((uint128_t ) d1907) + ((uint128_t ) a20903));
        t10346 = ((uint64_t ) s2025);
        c1108 = (s2025 >> 64);
        s2026 = (((uint128_t ) t10337) + ((uint128_t ) a20902));
        s2027 = (((uint128_t ) s2026) + ((uint128_t ) c1108));
        t10347 = ((uint64_t ) s2027);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2028 = (((uint128_t ) t10346) + ((uint128_t ) t10344));
        t10348 = ((uint64_t ) s2028);
        c1110 = (s2028 >> 64);
        s2029 = (((uint128_t ) t10347) + ((uint128_t ) c1110));
        t10349 = ((uint64_t ) s2029);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28388 = ((0 < t10298));
        a28389 = ((0 == t10298));
        a28390 = ((0 < t10299));
        a28391 = ((a28389) && (a28390));
        a28392 = ((a28388) || (a28391));
        /* MPEqual 64 */
        a28393 = ((0 == t10299));
        a28394 = ((a28389) && (a28393));
        /* MPLessThan 64 */
        a28395 = ((t10318 < t10300));
        a28396 = ((t10318 == t10300));
        a28397 = ((a28396) && (b1497));
        a28398 = ((a28395) || (a28397));
        a28399 = ((a28394) && (a28398));
        a28400 = ((a28392) || (a28399));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28401 = ((t10319 == t10301));
        a28402 = ((a28396) && (a28401));
        a28403 = ((a28394) && (a28402));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a28404 = ((a28403) && (b1496));
        i485 = ((a28400) || (a28404));
        a28405 = (2*a28362);
        /* MPCondD 128 */
        a28406 = (2*a28405);
        a28407 = (a28406 + 1);
        /* MPCondD 64 */
        a28408 = (2*a28407);
        P2[a28408] = ((i485) ? (t10349) : (t10337));
        a28409 = (a28408 + 1);
        P2[a28409] = ((i485) ? (t10348) : (d1907));
        a28410 = (a28405 + 1);
        /* MPCondD 128 */
        a28411 = (2*a28410);
        /* MPCondD 64 */
        a28412 = (2*a28411);
        P2[a28412] = ((i485) ? (t10343) : (t10336));
        a28413 = (a28412 + 1);
        P2[a28413] = ((i485) ? (t10342) : (d1903));
        a28414 = (a28411 + 1);
        /* MPCondD 64 */
        a28415 = (2*a28414);
        P2[a28415] = ((i485) ? (t10339) : (d1899));
        a28416 = (a28415 + 1);
        P2[a28416] = ((i485) ? (t10338) : (d1897));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code10(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a28417, a28418, a28419, a28420, a28421, a28422, a28423, a28424, 
            a28425, a28426, a28427, a28428, a28429, a28430, a28431, a28432, 
            a28433, a28434, a28435, a28436, a28437, a28438, a28439, a28440, 
            a28441, a28442, a28443, a28444, a28445, a28464, a28465, a28466, 
            a28470, a28471, a28472, a28473, a28474, a28475, a28476, a28479, 
            a28480, a28481, a28486, a28490, a28491, a28492, a28496, a28497, 
            a28498, a28499, a28500, a28501, a28502, a28505, a28506, a28507, 
            a28511, a28514, a28515, a28516, a28517, a28518, a28519, a28520, 
            a28521, a28522, a28523, a28524, a28525, a28526, a28527, a28528, 
            a28529, a28530, a28531, a28532, a28533, a28535, a28536, a28541, 
            a28542, a28543, a28544, a28545, a28553, a28554, a28555, a28556, 
            a28557, a28558, a28559, a28560, a28561, a28562, a28563, a28564, 
            a28565, a28566, a28567, a28568, a28569, a28570, a28571, a28572, 
            a28573, a28574, a28575, a28576, a28577, a28578, a28579, a28580, 
            a28581, a28582, a28583, a28584, a28585, a28586, a28587, a28589, 
            a28590, a28591, a28595, a28596, a28597, a28598, a28599, a28600, 
            a28601, a28605, a28606, a28607, a28608, a28609, a28610, a28611, 
            a28612, a28613, a28614, a28615, a28616, a28617, a28619, a28620, 
            a28621, a28625, a28626, a28627, a28628, a28629, a28630, a28631, 
            a28635, a28637, a28638, a28643, a28644, a28645, a28646, a28647, 
            a28648, a28649, a28650, a28651, a28652, a28653, a28654, a28655, 
            a28656, a28657, a28658, a28659, a28660, a28661, a28662, a28663, 
            a28664, a28665, a28666, a28667, a28668, a28669, a28670, a28671, 
            b1499, b1501, b1502, b1503, b1504, b1505, b1506, b1507, 
            b1508, b1509, b1510, b1511, b1512, b1513, b1514, b1515, 
            b1516, b1517, b1518, b1519, b1520, b1521, b1522, b1523, 
            b1524, b1525, b1526, b1527, b1528, b1529, b1530, b1531, 
            b1532, b1533, b1534, b1535, b1536, b1537, c1111, c1112, 
            c1113, c1114, c1115, c1116, c1117, c1119, c1120, c1121, 
            c1122, c1123, c1124, c1125, c1127, i486, i487, i488;
    uint64_t a21708, a21709, a21710, a21711, a21712, a21713, a21813, a21814, 
            a21815, a21816, a21817, a21818, a28446, a28447, a28448, a28449, 
            a28450, a28451, a28452, a28453, a28454, a28455, a28457, a28458, 
            a28459, a28460, a28461, a28462, a28534, a28537, a28546, a28636, 
            a28639, d1908, d1909, d1910, d1911, d1912, d1913, d1914, 
            d1915, d1916, d1917, d1918, d1919, d1920, d1921, d1922, 
            d1923, d1924, d1925, d1926, d1927, d1928, d1929, d1930, 
            d1931, d1932, d1933, d1934, d1935, d1936, d1937, d1938, 
            d1939, d1940, d1941, d1942, d1943, d1944, d1945, d1946, 
            d1947, d1948, d1949, d1950, d1951, d1952, d1953, d1954, 
            d1955, d1956, d1957, d1958, d1959, t10350, t10351, t10352, 
            t10353, t10354, t10355, t10356, t10357, t10358, t10359, t10360, 
            t10361, t10362, t10363, t10364, t10365, t10366, t10367, t10368, 
            t10369, t10370, t10371, t10372, t10373, t10374, t10375, t10376, 
            t10377, t10378, t10379, t10380, t10381, t10382, t10383, t10386, 
            t10387, t10388, t10389, t10390, t10391, t10392, t10393, t10394, 
            t10395, t10396, t10397, t10398, t10399, t10400, t10401, t10402, 
            t10403, t10404, t10405, t10406, t10407, t10408, t10409, t10410, 
            t10411, t10412, t10413, t10414, t10415, t10416, t10417, t10418, 
            t10419, t10420, t10421, t10422, t10423, t10424, t10425, t10426, 
            t10427, t10428, t10429, t10431, t10432, t10433, t10434, t10435, 
            t10436, t10437, t10438, t10441, t10442, t10443, t10444, t10445, 
            t10446, t10447, t10448, t10449, t10450, t10451, t10452, t10453, 
            t10454, t10455, t10456, t10457, t10459, t10460, t10461, t10462, 
            t6977, t6978, t6979, t6980, t6981, t6982, t6983, t6984, 
            t6985, t6986, t6987, t6988, t6989, t6990, t6991, t6992, 
            t6993, t6994, t6995, t6996, t6997, t6998, t6999, t7000, 
            t7001, t7002, t7003, t7004, t7005, t7006, t7007, t7008, 
            t7009, t7010, t7011, t7012, t7013, t7014, t7015, t7016, 
            t7017, t7018, t7019, t7020, t7021, t7022, t7023, t7024;
    uint128_t s2030, s2031, s2032, s2033, s2034, s2035, s2036, s2037, 
            s2038, s2039, s2040, s2041, s2042, s2043, s2044, s2045, 
            s2046, s2047, s2048, s2049, s2050, s2051, s2052, s2053, 
            s2054;
    for(int i9 = 0; i9 <= 63; i9++) {
        a28417 = (128*i9);
        a28418 = (threadIdx.x + a28417);
        a28419 = (a28418 + 8192);
        a28420 = (a28419 % 1024);
        a28421 = (1024 + a28420);
        /* Begin of MPModMul 256 */
        a28422 = (2*a28421);
        a28423 = (a28422 + 1);
        a28424 = (2*a28419);
        a28425 = (a28424 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28426 = (2*a28422);
        a28427 = (a28426 + 1);
        /* MPAssignDD 64 */
        a28428 = (2*a28427);
        t10350 = twiddles[a28428];
        a28429 = (a28428 + 1);
        t10351 = twiddles[a28429];
        /* MPAssignDD 128 */
        a28430 = (2*a28423);
        /* MPAssignDD 64 */
        a28431 = (2*a28430);
        t10352 = twiddles[a28431];
        a28432 = (a28431 + 1);
        t10353 = twiddles[a28432];
        a28433 = (a28430 + 1);
        /* MPAssignDD 64 */
        a28434 = (2*a28433);
        t10354 = twiddles[a28434];
        a28435 = (a28434 + 1);
        t10355 = twiddles[a28435];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28436 = (2*a28424);
        a28437 = (a28436 + 1);
        /* MPAssignDD 64 */
        a28438 = (2*a28437);
        t10356 = P2[a28438];
        a28439 = (a28438 + 1);
        t10357 = P2[a28439];
        /* MPAssignDD 128 */
        a28440 = (2*a28425);
        /* MPAssignDD 64 */
        a28441 = (2*a28440);
        t10358 = P2[a28441];
        a28442 = (a28441 + 1);
        t10359 = P2[a28442];
        a28443 = (a28440 + 1);
        /* MPAssignDD 64 */
        a28444 = (2*a28443);
        t10360 = P2[a28444];
        a28445 = (a28444 + 1);
        t10361 = P2[a28445];
        MPMulQDD_L3_2(t7011, t7012, t7009, t7010, t7015, t7016, t7013, t7014, 
    t7019, t7020, t7017, t7018, t7023, t7024, t7021, t7022, 
    0, 0, t10350, t10351, t10352, t10353, t10354, t10355, 
    0, 0, t10356, t10357, t10358, t10359, t10360, t10361);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10362 = (t7019 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a28446 = (t7019 << 6);
        a28447 = (t7020 >> 58);
        t10363 = (((a28446)|(a28447)));
        t10364 = (t7020 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10365 = (t7017 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10366 = (((t10364)|(t10365)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1499 = ((int) 1);
        t10367 = (288230376151711744 - b1499);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10368 = (((t7009)&(t10367)));
        t10369 = (((t7010)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a28448 = (t10368 << 6);
        a28449 = (t10369 >> 58);
        t10370 = (((a28448)|(a28449)));
        t10371 = (t10369 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10372 = (t7015 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a28450 = (t7015 << 6);
        a28451 = (t7016 >> 58);
        t10373 = (((a28450)|(a28451)));
        t10374 = (t7016 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10375 = (t7013 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10376 = (((t10374)|(t10375)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10377 = (((t10371)|(t10372)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a28452 = (t7013 << 6);
        a28453 = (t7014 >> 58);
        t10378 = (((a28452)|(a28453)));
        t10379 = (t7014 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10380 = (((t10379)|(t10362)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a21708 = mu[2];
        a21709 = mu[3];
        a21710 = mu[4];
        a21711 = mu[5];
        a21712 = mu[6];
        a21713 = mu[7];
        MPMulQDD_L3_1(t6979, t6980, t6977, t6978, t6983, t6984, t6981, t6982, 
    t6987, t6988, t6985, t6986, t6991, t6992, t6989, t6990, 
    t10370, t10377, t10373, t10376, t10378, t10380, t10363, t10366, 
    0, 0, a21708, a21709, a21710, a21711, a21712, a21713);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10381 = (t6987 >> 1);
        a28454 = (t6987 << 63);
        a28455 = (t6988 >> 1);
        t10382 = (((a28454)|(a28455)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t10383 = (0 - b1499);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1908 = (2 - b1499);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10386 = (((t6980)&(d1908)));
        /* MPBinAndD 64 */
        t10387 = (((t6977)&(t10383)));
        t10388 = (((t6978)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10389 = (t10386 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10390 = (t10387 >> 1);
        a28457 = (t10387 << 63);
        a28458 = (t10388 >> 1);
        t10391 = (((a28457)|(a28458)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10392 = (((t10389)|(t10390)));
        /* Begin of MPShiftLeft1D */
        t10393 = (t10388 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10394 = (t6983 >> 1);
        a28459 = (t6983 << 63);
        a28460 = (t6984 >> 1);
        t10395 = (((a28459)|(a28460)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10396 = (((t10393)|(t10394)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10397 = (t6984 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10398 = (t6981 >> 1);
        a28461 = (t6981 << 63);
        a28462 = (t6982 >> 1);
        t10399 = (((a28461)|(a28462)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10400 = (((t10397)|(t10398)));
        /* Begin of MPShiftLeft1D */
        t10401 = (t6982 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10402 = (((t10401)|(t10381)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a21813 = modulus[2];
        a21814 = modulus[3];
        a21815 = modulus[4];
        a21816 = modulus[5];
        a21817 = modulus[6];
        a21818 = modulus[7];
        MPMulQDD_L3_1(t6995, t6996, t6993, t6994, t6999, t7000, t6997, t6998, 
    t7003, t7004, t7001, t7002, t7007, t7008, t7005, t7006, 
    t10392, t10391, t10396, t10395, t10400, t10399, t10402, t10382, 
    0, 0, a21813, a21814, a21815, a21816, a21817, a21818);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1909 = (t7022 - t7006);
        b1501 = ((t7022 < t7006));
        d1910 = (t7021 - t7005);
        d1911 = (d1910 - b1501);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28464 = ((t7021 < t7005));
        a28465 = ((t7021 == t7005));
        a28466 = ((a28465) && (b1501));
        b1502 = ((a28464) || (a28466));
        /* Begin of MPSubDDD 64 */
        d1912 = (t7024 - t7008);
        b1503 = ((t7024 < t7008));
        d1913 = (t7023 - t7007);
        d1914 = (d1913 - b1503);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1915 = (d1912 - b1502);
        b1504 = ((d1912 < b1502));
        t10403 = (d1914 - b1504);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28470 = ((t7023 < t7007));
        a28471 = ((t7023 == t7007));
        a28472 = ((a28471) && (b1503));
        a28473 = ((a28470) || (a28472));
        /* MPEqual 64 */
        a28474 = ((t7024 == t7008));
        a28475 = ((a28471) && (a28474));
        /* MPLessThan 64 */
        a28476 = ((a28475) && (b1502));
        b1505 = ((a28473) || (a28476));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1916 = (t7018 - t7002);
        b1506 = ((t7018 < t7002));
        d1917 = (t7017 - t7001);
        d1918 = (d1917 - b1506);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28479 = ((t7017 < t7001));
        a28480 = ((t7017 == t7001));
        a28481 = ((a28480) && (b1506));
        b1507 = ((a28479) || (a28481));
        /* Begin of MPSubDDD 64 */
        d1919 = (t7020 - t7004);
        b1508 = ((t7020 < t7004));
        d1920 = (t7019 - t7003);
        d1921 = (d1920 - b1508);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1922 = (d1919 - b1507);
        b1509 = ((d1919 < b1507));
        t10404 = (d1921 - b1509);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1923 = (d1916 - b1505);
        b1510 = ((d1916 < b1505));
        t10405 = (d1918 - b1510);
        /* MPLessThanDI 64 */
        a28486 = ((d1918 == 0));
        b1511 = ((a28486) && (b1510));
        /* MPSubDDI 64 */
        d1924 = (d1922 - b1511);
        b1512 = ((d1922 < b1511));
        t10406 = (t10404 - b1512);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1925 = (d1909 - a21818);
        b1513 = ((d1909 < a21818));
        d1926 = (d1911 - a21817);
        d1927 = (d1926 - b1513);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28490 = ((d1911 < a21817));
        a28491 = ((d1911 == a21817));
        a28492 = ((a28491) && (b1513));
        b1514 = ((a28490) || (a28492));
        /* Begin of MPSubDDD 64 */
        d1928 = (d1915 - a21816);
        b1515 = ((d1915 < a21816));
        d1929 = (t10403 - a21815);
        d1930 = (d1929 - b1515);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1931 = (d1928 - b1514);
        b1516 = ((d1928 < b1514));
        t10407 = (d1930 - b1516);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28496 = ((t10403 < a21815));
        a28497 = ((t10403 == a21815));
        a28498 = ((a28497) && (b1515));
        a28499 = ((a28496) || (a28498));
        /* MPEqual 64 */
        a28500 = ((d1915 == a21816));
        a28501 = ((a28497) && (a28500));
        /* MPLessThan 64 */
        a28502 = ((a28501) && (b1514));
        b1517 = ((a28499) || (a28502));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1932 = (d1923 - a21814);
        b1518 = ((d1923 < a21814));
        d1933 = (t10405 - a21813);
        d1934 = (d1933 - b1518);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28505 = ((t10405 < a21813));
        a28506 = ((t10405 == a21813));
        a28507 = ((a28506) && (b1518));
        b1519 = ((a28505) || (a28507));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1935 = (d1924 - b1519);
        b1520 = ((d1924 < b1519));
        t10408 = (t10406 - b1520);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1936 = (d1932 - b1517);
        b1521 = ((d1932 < b1517));
        t10409 = (d1934 - b1521);
        /* MPLessThanDI 64 */
        a28511 = ((d1934 == 0));
        b1522 = ((a28511) && (b1521));
        /* MPSubDDI 64 */
        d1937 = (d1935 - b1522);
        b1523 = ((d1935 < b1522));
        t10410 = (t10408 - b1523);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a28514 = ((t10406 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a28515 = ((d1924 == 0));
        a28516 = ((a28514) && (a28515));
        /* MPLessThan 64 */
        a28517 = ((a28516) && (b1519));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28518 = ((d1923 == a21814));
        a28519 = ((a28506) && (a28518));
        a28520 = ((a28516) && (a28519));
        /* MPLessThan 128 */
        a28521 = ((a28520) && (b1517));
        i486 = ((a28517) || (a28521));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10411 = ((i486) ? (t10406) : (t10410));
        t10412 = ((i486) ? (d1924) : (d1937));
        /* MPCondD 64 */
        t10413 = ((i486) ? (t10405) : (t10409));
        t10414 = ((i486) ? (d1923) : (d1936));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10415 = ((i486) ? (t10403) : (t10407));
        t10416 = ((i486) ? (d1915) : (d1931));
        /* MPCondD 64 */
        t10417 = ((i486) ? (d1911) : (d1927));
        t10418 = ((i486) ? (d1909) : (d1925));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a28522 = (2*threadIdx.x);
        a28523 = (256*i9);
        a28524 = (a28522 + a28523);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a28525 = (2*a28418);
        a28526 = (a28525 + 1);
        /* MPAssignDD 128 */
        a28527 = (2*a28526);
        /* MPAssignDD 64 */
        a28528 = (2*a28527);
        t10419 = P2[a28528];
        a28529 = (a28528 + 1);
        t10420 = P2[a28529];
        a28530 = (a28527 + 1);
        /* MPAssignDD 64 */
        a28531 = (2*a28530);
        t10421 = P2[a28531];
        a28532 = (a28531 + 1);
        t10422 = P2[a28532];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2030 = (((uint128_t ) t10422) + ((uint128_t ) t10418));
        t10423 = ((uint64_t ) s2030);
        c1111 = (s2030 >> 64);
        s2031 = (((uint128_t ) t10421) + ((uint128_t ) t10417));
        s2032 = (((uint128_t ) s2031) + ((uint128_t ) c1111));
        t10424 = ((uint64_t ) s2032);
        c1112 = (s2032 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2033 = (((uint128_t ) t10420) + ((uint128_t ) t10416));
        t10425 = ((uint64_t ) s2033);
        c1113 = (s2033 >> 64);
        s2034 = (((uint128_t ) t10419) + ((uint128_t ) t10415));
        s2035 = (((uint128_t ) s2034) + ((uint128_t ) c1113));
        t10426 = ((uint64_t ) s2035);
        c1114 = (s2035 >> 64);
        /* MPPropagateCarry 64 */
        t10427 = (t10425 + c1112);
        a28533 = ((t10427 == 0));
        a28534 = (t10426 + c1112);
        t10428 = ((a28533) ? (a28534) : (t10426));
        a28535 = ((t10428 == 0));
        a28536 = ((a28535) && (a28533));
        a28537 = (c1114 + c1112);
        t10429 = ((a28536) ? (a28537) : (c1114));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28541 = (2*a28525);
        a28542 = (a28541 + 1);
        /* MPAssignDD 64 */
        a28543 = (2*a28542);
        t10431 = P2[a28543];
        a28544 = (a28543 + 1);
        t10432 = P2[a28544];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2036 = (((uint128_t ) t10432) + ((uint128_t ) t10414));
        t10433 = ((uint64_t ) s2036);
        c1115 = (s2036 >> 64);
        s2037 = (((uint128_t ) t10431) + ((uint128_t ) t10413));
        s2038 = (((uint128_t ) s2037) + ((uint128_t ) c1115));
        t10434 = ((uint64_t ) s2038);
        c1116 = (s2038 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t10435 = ((uint64_t ) t10412);
        c1117 = (t10412 >> 64);
        s2039 = (((uint128_t ) t10411) + ((uint128_t ) c1117));
        t10436 = ((uint64_t ) s2039);
        /* MPPropagateCarry 64 */
        t10437 = (t10435 + c1116);
        a28545 = ((t10437 == 0));
        a28546 = (t10436 + c1116);
        t10438 = ((a28545) ? (a28546) : (t10436));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2040 = (((uint128_t ) t10433) + ((uint128_t ) t10429));
        t10441 = ((uint64_t ) s2040);
        c1119 = (s2040 >> 64);
        s2041 = (((uint128_t ) t10434) + ((uint128_t ) c1119));
        t10442 = ((uint64_t ) s2041);
        /* MPEqualDI 64 */
        a28553 = ((t10442 == 0));
        a28554 = ((t10441 == 0));
        a28555 = ((a28553) && (a28554));
        /* MPAddDDI 64 */
        s2042 = (((uint128_t ) t10437) + ((uint128_t ) t10429));
        t10443 = ((uint64_t ) s2042);
        c1120 = (s2042 >> 64);
        s2043 = (((uint128_t ) t10438) + ((uint128_t ) c1120));
        t10444 = ((uint64_t ) s2043);
        /* MPCondD 64 */
        t10445 = ((a28555) ? (t10444) : (t10438));
        t10446 = ((a28555) ? (t10443) : (t10437));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a28556 = ((0 < t10445));
        a28557 = ((0 == t10445));
        a28558 = ((0 < t10446));
        a28559 = ((a28557) && (a28558));
        a28560 = ((a28556) || (a28559));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a28561 = ((0 == t10446));
        a28562 = ((a28557) && (a28561));
        /* MPLessThan 64 */
        a28563 = ((a21813 < t10442));
        a28564 = ((a21813 == t10442));
        a28565 = ((a21814 < t10441));
        a28566 = ((a28564) && (a28565));
        a28567 = ((a28563) || (a28566));
        a28568 = ((a28562) && (a28567));
        a28569 = ((a28560) || (a28568));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28570 = ((a21814 == t10441));
        a28571 = ((a28564) && (a28570));
        a28572 = ((a28562) && (a28571));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28573 = ((a21815 < t10428));
        a28574 = ((a21815 == t10428));
        a28575 = ((a21816 < t10427));
        a28576 = ((a28574) && (a28575));
        a28577 = ((a28573) || (a28576));
        /* MPEqual 64 */
        a28578 = ((a21816 == t10427));
        a28579 = ((a28574) && (a28578));
        /* MPLessThan 64 */
        a28580 = ((a21817 < t10424));
        a28581 = ((a21817 == t10424));
        a28582 = ((a21818 < t10423));
        a28583 = ((a28581) && (a28582));
        a28584 = ((a28580) || (a28583));
        a28585 = ((a28579) && (a28584));
        a28586 = ((a28577) || (a28585));
        a28587 = ((a28572) && (a28586));
        i487 = ((a28569) || (a28587));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1938 = (t10423 - a21818);
        b1524 = ((t10423 < a21818));
        d1939 = (t10424 - a21817);
        d1940 = (d1939 - b1524);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28589 = ((t10424 < a21817));
        a28590 = ((t10424 == a21817));
        a28591 = ((a28590) && (b1524));
        b1525 = ((a28589) || (a28591));
        /* Begin of MPSubDDD 64 */
        d1941 = (t10427 - a21816);
        b1526 = ((t10427 < a21816));
        d1942 = (t10428 - a21815);
        d1943 = (d1942 - b1526);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1944 = (d1941 - b1525);
        b1527 = ((d1941 < b1525));
        t10447 = (d1943 - b1527);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28595 = ((t10428 < a21815));
        a28596 = ((t10428 == a21815));
        a28597 = ((a28596) && (b1526));
        a28598 = ((a28595) || (a28597));
        /* MPEqual 64 */
        a28599 = ((t10427 == a21816));
        a28600 = ((a28596) && (a28599));
        /* MPLessThan 64 */
        a28601 = ((a28600) && (b1525));
        b1528 = ((a28598) || (a28601));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1945 = (t10441 - a21814);
        b1529 = ((t10441 < a21814));
        d1946 = (t10442 - a21813);
        d1947 = (d1946 - b1529);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1948 = (d1945 - b1528);
        b1530 = ((d1945 < b1528));
        t10448 = (d1947 - b1530);
        /* End of MPSubDDD 256 */
        a28605 = (2*a28524);
        /* MPCondD 128 */
        a28606 = (2*a28605);
        a28607 = (a28606 + 1);
        /* MPCondD 64 */
        a28608 = (2*a28607);
        P1[a28608] = ((i487) ? (t10448) : (t10442));
        a28609 = (a28608 + 1);
        P1[a28609] = ((i487) ? (d1948) : (t10441));
        a28610 = (a28605 + 1);
        /* MPCondD 128 */
        a28611 = (2*a28610);
        /* MPCondD 64 */
        a28612 = (2*a28611);
        P1[a28612] = ((i487) ? (t10447) : (t10428));
        a28613 = (a28612 + 1);
        P1[a28613] = ((i487) ? (d1944) : (t10427));
        a28614 = (a28611 + 1);
        /* MPCondD 64 */
        a28615 = (2*a28614);
        P1[a28615] = ((i487) ? (d1940) : (t10424));
        a28616 = (a28615 + 1);
        P1[a28616] = ((i487) ? (d1938) : (t10423));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        a28617 = (a28524 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1949 = (t10422 - t10418);
        b1531 = ((t10422 < t10418));
        d1950 = (t10421 - t10417);
        d1951 = (d1950 - b1531);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28619 = ((t10421 < t10417));
        a28620 = ((t10421 == t10417));
        a28621 = ((a28620) && (b1531));
        b1532 = ((a28619) || (a28621));
        /* Begin of MPSubDDD 64 */
        d1952 = (t10420 - t10416);
        b1533 = ((t10420 < t10416));
        d1953 = (t10419 - t10415);
        d1954 = (d1953 - b1533);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1955 = (d1952 - b1532);
        b1534 = ((d1952 < b1532));
        t10449 = (d1954 - b1534);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28625 = ((t10419 < t10415));
        a28626 = ((t10419 == t10415));
        a28627 = ((a28626) && (b1533));
        a28628 = ((a28625) || (a28627));
        /* MPEqual 64 */
        a28629 = ((t10420 == t10416));
        a28630 = ((a28626) && (a28629));
        /* MPLessThan 64 */
        a28631 = ((a28630) && (b1532));
        b1535 = ((a28628) || (a28631));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1956 = (t10432 - t10414);
        b1536 = ((t10432 < t10414));
        d1957 = (t10431 - t10413);
        d1958 = (d1957 - b1536);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1959 = (d1956 - b1535);
        b1537 = ((d1956 < b1535));
        t10450 = (d1958 - b1537);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2044 = (((uint128_t ) d1949) + ((uint128_t ) a21818));
        t10451 = ((uint64_t ) s2044);
        c1121 = (s2044 >> 64);
        s2045 = (((uint128_t ) d1951) + ((uint128_t ) a21817));
        s2046 = (((uint128_t ) s2045) + ((uint128_t ) c1121));
        t10452 = ((uint64_t ) s2046);
        c1122 = (s2046 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2047 = (((uint128_t ) d1955) + ((uint128_t ) a21816));
        t10453 = ((uint64_t ) s2047);
        c1123 = (s2047 >> 64);
        s2048 = (((uint128_t ) t10449) + ((uint128_t ) a21815));
        s2049 = (((uint128_t ) s2048) + ((uint128_t ) c1123));
        t10454 = ((uint64_t ) s2049);
        c1124 = (s2049 >> 64);
        /* MPPropagateCarry 64 */
        t10455 = (t10453 + c1122);
        a28635 = ((t10455 == 0));
        a28636 = (t10454 + c1122);
        t10456 = ((a28635) ? (a28636) : (t10454));
        a28637 = ((t10456 == 0));
        a28638 = ((a28637) && (a28635));
        a28639 = (c1124 + c1122);
        t10457 = ((a28638) ? (a28639) : (c1124));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2050 = (((uint128_t ) d1959) + ((uint128_t ) a21814));
        t10459 = ((uint64_t ) s2050);
        c1125 = (s2050 >> 64);
        s2051 = (((uint128_t ) t10450) + ((uint128_t ) a21813));
        s2052 = (((uint128_t ) s2051) + ((uint128_t ) c1125));
        t10460 = ((uint64_t ) s2052);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2053 = (((uint128_t ) t10459) + ((uint128_t ) t10457));
        t10461 = ((uint64_t ) s2053);
        c1127 = (s2053 >> 64);
        s2054 = (((uint128_t ) t10460) + ((uint128_t ) c1127));
        t10462 = ((uint64_t ) s2054);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28643 = ((0 < t10411));
        a28644 = ((0 == t10411));
        a28645 = ((0 < t10412));
        a28646 = ((a28644) && (a28645));
        a28647 = ((a28643) || (a28646));
        /* MPEqual 64 */
        a28648 = ((0 == t10412));
        a28649 = ((a28644) && (a28648));
        /* MPLessThan 64 */
        a28650 = ((t10431 < t10413));
        a28651 = ((t10431 == t10413));
        a28652 = ((a28651) && (b1536));
        a28653 = ((a28650) || (a28652));
        a28654 = ((a28649) && (a28653));
        a28655 = ((a28647) || (a28654));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28656 = ((t10432 == t10414));
        a28657 = ((a28651) && (a28656));
        a28658 = ((a28649) && (a28657));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a28659 = ((a28658) && (b1535));
        i488 = ((a28655) || (a28659));
        a28660 = (2*a28617);
        /* MPCondD 128 */
        a28661 = (2*a28660);
        a28662 = (a28661 + 1);
        /* MPCondD 64 */
        a28663 = (2*a28662);
        P1[a28663] = ((i488) ? (t10462) : (t10450));
        a28664 = (a28663 + 1);
        P1[a28664] = ((i488) ? (t10461) : (d1959));
        a28665 = (a28660 + 1);
        /* MPCondD 128 */
        a28666 = (2*a28665);
        /* MPCondD 64 */
        a28667 = (2*a28666);
        P1[a28667] = ((i488) ? (t10456) : (t10449));
        a28668 = (a28667 + 1);
        P1[a28668] = ((i488) ? (t10455) : (d1955));
        a28669 = (a28666 + 1);
        /* MPCondD 64 */
        a28670 = (2*a28669);
        P1[a28670] = ((i488) ? (t10452) : (d1951));
        a28671 = (a28670 + 1);
        P1[a28671] = ((i488) ? (t10451) : (d1949));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code11(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a28672, a28673, a28674, a28675, a28676, a28677, a28678, a28679, 
            a28680, a28681, a28682, a28683, a28684, a28685, a28686, a28687, 
            a28688, a28689, a28690, a28691, a28692, a28693, a28694, a28695, 
            a28696, a28697, a28698, a28699, a28700, a28719, a28720, a28721, 
            a28725, a28726, a28727, a28728, a28729, a28730, a28731, a28734, 
            a28735, a28736, a28741, a28745, a28746, a28747, a28751, a28752, 
            a28753, a28754, a28755, a28756, a28757, a28760, a28761, a28762, 
            a28766, a28769, a28770, a28771, a28772, a28773, a28774, a28775, 
            a28776, a28777, a28778, a28779, a28780, a28781, a28782, a28783, 
            a28784, a28785, a28786, a28787, a28788, a28790, a28791, a28796, 
            a28797, a28798, a28799, a28800, a28808, a28809, a28810, a28811, 
            a28812, a28813, a28814, a28815, a28816, a28817, a28818, a28819, 
            a28820, a28821, a28822, a28823, a28824, a28825, a28826, a28827, 
            a28828, a28829, a28830, a28831, a28832, a28833, a28834, a28835, 
            a28836, a28837, a28838, a28839, a28840, a28841, a28842, a28844, 
            a28845, a28846, a28850, a28851, a28852, a28853, a28854, a28855, 
            a28856, a28860, a28861, a28862, a28863, a28864, a28865, a28866, 
            a28867, a28868, a28869, a28870, a28871, a28872, a28874, a28875, 
            a28876, a28880, a28881, a28882, a28883, a28884, a28885, a28886, 
            a28890, a28892, a28893, a28898, a28899, a28900, a28901, a28902, 
            a28903, a28904, a28905, a28906, a28907, a28908, a28909, a28910, 
            a28911, a28912, a28913, a28914, a28915, a28916, a28917, a28918, 
            a28919, a28920, a28921, a28922, a28923, a28924, a28925, a28926, 
            b1538, b1540, b1541, b1542, b1543, b1544, b1545, b1546, 
            b1547, b1548, b1549, b1550, b1551, b1552, b1553, b1554, 
            b1555, b1556, b1557, b1558, b1559, b1560, b1561, b1562, 
            b1563, b1564, b1565, b1566, b1567, b1568, b1569, b1570, 
            b1571, b1572, b1573, b1574, b1575, b1576, c1128, c1129, 
            c1130, c1131, c1132, c1133, c1134, c1136, c1137, c1138, 
            c1139, c1140, c1141, c1142, c1144, i489, i490, i491;
    uint64_t a22619, a22620, a22621, a22622, a22623, a22624, a22724, a22725, 
            a22726, a22727, a22728, a22729, a28701, a28702, a28703, a28704, 
            a28705, a28706, a28707, a28708, a28709, a28710, a28712, a28713, 
            a28714, a28715, a28716, a28717, a28789, a28792, a28801, a28891, 
            a28894, d1960, d1961, d1962, d1963, d1964, d1965, d1966, 
            d1967, d1968, d1969, d1970, d1971, d1972, d1973, d1974, 
            d1975, d1976, d1977, d1978, d1979, d1980, d1981, d1982, 
            d1983, d1984, d1985, d1986, d1987, d1988, d1989, d1990, 
            d1991, d1992, d1993, d1994, d1995, d1996, d1997, d1998, 
            d1999, d2000, d2001, d2002, d2003, d2004, d2005, d2006, 
            d2007, d2008, d2009, d2010, d2011, t10463, t10464, t10465, 
            t10466, t10467, t10468, t10469, t10470, t10471, t10472, t10473, 
            t10474, t10475, t10476, t10477, t10478, t10479, t10480, t10481, 
            t10482, t10483, t10484, t10485, t10486, t10487, t10488, t10489, 
            t10490, t10491, t10492, t10493, t10494, t10495, t10496, t10499, 
            t10500, t10501, t10502, t10503, t10504, t10505, t10506, t10507, 
            t10508, t10509, t10510, t10511, t10512, t10513, t10514, t10515, 
            t10516, t10517, t10518, t10519, t10520, t10521, t10522, t10523, 
            t10524, t10525, t10526, t10527, t10528, t10529, t10530, t10531, 
            t10532, t10533, t10534, t10535, t10536, t10537, t10538, t10539, 
            t10540, t10541, t10542, t10544, t10545, t10546, t10547, t10548, 
            t10549, t10550, t10551, t10554, t10555, t10556, t10557, t10558, 
            t10559, t10560, t10561, t10562, t10563, t10564, t10565, t10566, 
            t10567, t10568, t10569, t10570, t10572, t10573, t10574, t10575, 
            t6913, t6914, t6915, t6916, t6917, t6918, t6919, t6920, 
            t6921, t6922, t6923, t6924, t6925, t6926, t6927, t6928, 
            t6929, t6930, t6931, t6932, t6933, t6934, t6935, t6936, 
            t6937, t6938, t6939, t6940, t6941, t6942, t6943, t6944, 
            t6945, t6946, t6947, t6948, t6949, t6950, t6951, t6952, 
            t6953, t6954, t6955, t6956, t6957, t6958, t6959, t6960;
    uint128_t s2055, s2056, s2057, s2058, s2059, s2060, s2061, s2062, 
            s2063, s2064, s2065, s2066, s2067, s2068, s2069, s2070, 
            s2071, s2072, s2073, s2074, s2075, s2076, s2077, s2078, 
            s2079;
    for(int i7 = 0; i7 <= 63; i7++) {
        a28672 = (128*i7);
        a28673 = (threadIdx.x + a28672);
        a28674 = (a28673 + 8192);
        a28675 = (a28674 % 2048);
        a28676 = (2048 + a28675);
        /* Begin of MPModMul 256 */
        a28677 = (2*a28676);
        a28678 = (a28677 + 1);
        a28679 = (2*a28674);
        a28680 = (a28679 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28681 = (2*a28677);
        a28682 = (a28681 + 1);
        /* MPAssignDD 64 */
        a28683 = (2*a28682);
        t10463 = twiddles[a28683];
        a28684 = (a28683 + 1);
        t10464 = twiddles[a28684];
        /* MPAssignDD 128 */
        a28685 = (2*a28678);
        /* MPAssignDD 64 */
        a28686 = (2*a28685);
        t10465 = twiddles[a28686];
        a28687 = (a28686 + 1);
        t10466 = twiddles[a28687];
        a28688 = (a28685 + 1);
        /* MPAssignDD 64 */
        a28689 = (2*a28688);
        t10467 = twiddles[a28689];
        a28690 = (a28689 + 1);
        t10468 = twiddles[a28690];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28691 = (2*a28679);
        a28692 = (a28691 + 1);
        /* MPAssignDD 64 */
        a28693 = (2*a28692);
        t10469 = P1[a28693];
        a28694 = (a28693 + 1);
        t10470 = P1[a28694];
        /* MPAssignDD 128 */
        a28695 = (2*a28680);
        /* MPAssignDD 64 */
        a28696 = (2*a28695);
        t10471 = P1[a28696];
        a28697 = (a28696 + 1);
        t10472 = P1[a28697];
        a28698 = (a28695 + 1);
        /* MPAssignDD 64 */
        a28699 = (2*a28698);
        t10473 = P1[a28699];
        a28700 = (a28699 + 1);
        t10474 = P1[a28700];
        MPMulQDD_L3_2(t6947, t6948, t6945, t6946, t6951, t6952, t6949, t6950, 
    t6955, t6956, t6953, t6954, t6959, t6960, t6957, t6958, 
    0, 0, t10463, t10464, t10465, t10466, t10467, t10468, 
    0, 0, t10469, t10470, t10471, t10472, t10473, t10474);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10475 = (t6955 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a28701 = (t6955 << 6);
        a28702 = (t6956 >> 58);
        t10476 = (((a28701)|(a28702)));
        t10477 = (t6956 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10478 = (t6953 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10479 = (((t10477)|(t10478)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1538 = ((int) 1);
        t10480 = (288230376151711744 - b1538);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10481 = (((t6945)&(t10480)));
        t10482 = (((t6946)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a28703 = (t10481 << 6);
        a28704 = (t10482 >> 58);
        t10483 = (((a28703)|(a28704)));
        t10484 = (t10482 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10485 = (t6951 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a28705 = (t6951 << 6);
        a28706 = (t6952 >> 58);
        t10486 = (((a28705)|(a28706)));
        t10487 = (t6952 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10488 = (t6949 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10489 = (((t10487)|(t10488)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10490 = (((t10484)|(t10485)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a28707 = (t6949 << 6);
        a28708 = (t6950 >> 58);
        t10491 = (((a28707)|(a28708)));
        t10492 = (t6950 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10493 = (((t10492)|(t10475)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a22619 = mu[2];
        a22620 = mu[3];
        a22621 = mu[4];
        a22622 = mu[5];
        a22623 = mu[6];
        a22624 = mu[7];
        MPMulQDD_L3_1(t6915, t6916, t6913, t6914, t6919, t6920, t6917, t6918, 
    t6923, t6924, t6921, t6922, t6927, t6928, t6925, t6926, 
    t10483, t10490, t10486, t10489, t10491, t10493, t10476, t10479, 
    0, 0, a22619, a22620, a22621, a22622, a22623, a22624);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10494 = (t6923 >> 1);
        a28709 = (t6923 << 63);
        a28710 = (t6924 >> 1);
        t10495 = (((a28709)|(a28710)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t10496 = (0 - b1538);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d1960 = (2 - b1538);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10499 = (((t6916)&(d1960)));
        /* MPBinAndD 64 */
        t10500 = (((t6913)&(t10496)));
        t10501 = (((t6914)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10502 = (t10499 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10503 = (t10500 >> 1);
        a28712 = (t10500 << 63);
        a28713 = (t10501 >> 1);
        t10504 = (((a28712)|(a28713)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10505 = (((t10502)|(t10503)));
        /* Begin of MPShiftLeft1D */
        t10506 = (t10501 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10507 = (t6919 >> 1);
        a28714 = (t6919 << 63);
        a28715 = (t6920 >> 1);
        t10508 = (((a28714)|(a28715)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10509 = (((t10506)|(t10507)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10510 = (t6920 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10511 = (t6917 >> 1);
        a28716 = (t6917 << 63);
        a28717 = (t6918 >> 1);
        t10512 = (((a28716)|(a28717)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10513 = (((t10510)|(t10511)));
        /* Begin of MPShiftLeft1D */
        t10514 = (t6918 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10515 = (((t10514)|(t10494)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a22724 = modulus[2];
        a22725 = modulus[3];
        a22726 = modulus[4];
        a22727 = modulus[5];
        a22728 = modulus[6];
        a22729 = modulus[7];
        MPMulQDD_L3_1(t6931, t6932, t6929, t6930, t6935, t6936, t6933, t6934, 
    t6939, t6940, t6937, t6938, t6943, t6944, t6941, t6942, 
    t10505, t10504, t10509, t10508, t10513, t10512, t10515, t10495, 
    0, 0, a22724, a22725, a22726, a22727, a22728, a22729);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1961 = (t6958 - t6942);
        b1540 = ((t6958 < t6942));
        d1962 = (t6957 - t6941);
        d1963 = (d1962 - b1540);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28719 = ((t6957 < t6941));
        a28720 = ((t6957 == t6941));
        a28721 = ((a28720) && (b1540));
        b1541 = ((a28719) || (a28721));
        /* Begin of MPSubDDD 64 */
        d1964 = (t6960 - t6944);
        b1542 = ((t6960 < t6944));
        d1965 = (t6959 - t6943);
        d1966 = (d1965 - b1542);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1967 = (d1964 - b1541);
        b1543 = ((d1964 < b1541));
        t10516 = (d1966 - b1543);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28725 = ((t6959 < t6943));
        a28726 = ((t6959 == t6943));
        a28727 = ((a28726) && (b1542));
        a28728 = ((a28725) || (a28727));
        /* MPEqual 64 */
        a28729 = ((t6960 == t6944));
        a28730 = ((a28726) && (a28729));
        /* MPLessThan 64 */
        a28731 = ((a28730) && (b1541));
        b1544 = ((a28728) || (a28731));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1968 = (t6954 - t6938);
        b1545 = ((t6954 < t6938));
        d1969 = (t6953 - t6937);
        d1970 = (d1969 - b1545);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28734 = ((t6953 < t6937));
        a28735 = ((t6953 == t6937));
        a28736 = ((a28735) && (b1545));
        b1546 = ((a28734) || (a28736));
        /* Begin of MPSubDDD 64 */
        d1971 = (t6956 - t6940);
        b1547 = ((t6956 < t6940));
        d1972 = (t6955 - t6939);
        d1973 = (d1972 - b1547);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1974 = (d1971 - b1546);
        b1548 = ((d1971 < b1546));
        t10517 = (d1973 - b1548);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1975 = (d1968 - b1544);
        b1549 = ((d1968 < b1544));
        t10518 = (d1970 - b1549);
        /* MPLessThanDI 64 */
        a28741 = ((d1970 == 0));
        b1550 = ((a28741) && (b1549));
        /* MPSubDDI 64 */
        d1976 = (d1974 - b1550);
        b1551 = ((d1974 < b1550));
        t10519 = (t10517 - b1551);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1977 = (d1961 - a22729);
        b1552 = ((d1961 < a22729));
        d1978 = (d1963 - a22728);
        d1979 = (d1978 - b1552);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28745 = ((d1963 < a22728));
        a28746 = ((d1963 == a22728));
        a28747 = ((a28746) && (b1552));
        b1553 = ((a28745) || (a28747));
        /* Begin of MPSubDDD 64 */
        d1980 = (d1967 - a22727);
        b1554 = ((d1967 < a22727));
        d1981 = (t10516 - a22726);
        d1982 = (d1981 - b1554);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1983 = (d1980 - b1553);
        b1555 = ((d1980 < b1553));
        t10520 = (d1982 - b1555);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28751 = ((t10516 < a22726));
        a28752 = ((t10516 == a22726));
        a28753 = ((a28752) && (b1554));
        a28754 = ((a28751) || (a28753));
        /* MPEqual 64 */
        a28755 = ((d1967 == a22727));
        a28756 = ((a28752) && (a28755));
        /* MPLessThan 64 */
        a28757 = ((a28756) && (b1553));
        b1556 = ((a28754) || (a28757));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1984 = (d1975 - a22725);
        b1557 = ((d1975 < a22725));
        d1985 = (t10518 - a22724);
        d1986 = (d1985 - b1557);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28760 = ((t10518 < a22724));
        a28761 = ((t10518 == a22724));
        a28762 = ((a28761) && (b1557));
        b1558 = ((a28760) || (a28762));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1987 = (d1976 - b1558);
        b1559 = ((d1976 < b1558));
        t10521 = (t10519 - b1559);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d1988 = (d1984 - b1556);
        b1560 = ((d1984 < b1556));
        t10522 = (d1986 - b1560);
        /* MPLessThanDI 64 */
        a28766 = ((d1986 == 0));
        b1561 = ((a28766) && (b1560));
        /* MPSubDDI 64 */
        d1989 = (d1987 - b1561);
        b1562 = ((d1987 < b1561));
        t10523 = (t10521 - b1562);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a28769 = ((t10519 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a28770 = ((d1976 == 0));
        a28771 = ((a28769) && (a28770));
        /* MPLessThan 64 */
        a28772 = ((a28771) && (b1558));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28773 = ((d1975 == a22725));
        a28774 = ((a28761) && (a28773));
        a28775 = ((a28771) && (a28774));
        /* MPLessThan 128 */
        a28776 = ((a28775) && (b1556));
        i489 = ((a28772) || (a28776));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10524 = ((i489) ? (t10519) : (t10523));
        t10525 = ((i489) ? (d1976) : (d1989));
        /* MPCondD 64 */
        t10526 = ((i489) ? (t10518) : (t10522));
        t10527 = ((i489) ? (d1975) : (d1988));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10528 = ((i489) ? (t10516) : (t10520));
        t10529 = ((i489) ? (d1967) : (d1983));
        /* MPCondD 64 */
        t10530 = ((i489) ? (d1963) : (d1979));
        t10531 = ((i489) ? (d1961) : (d1977));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a28777 = (2*threadIdx.x);
        a28778 = (256*i7);
        a28779 = (a28777 + a28778);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a28780 = (2*a28673);
        a28781 = (a28780 + 1);
        /* MPAssignDD 128 */
        a28782 = (2*a28781);
        /* MPAssignDD 64 */
        a28783 = (2*a28782);
        t10532 = P1[a28783];
        a28784 = (a28783 + 1);
        t10533 = P1[a28784];
        a28785 = (a28782 + 1);
        /* MPAssignDD 64 */
        a28786 = (2*a28785);
        t10534 = P1[a28786];
        a28787 = (a28786 + 1);
        t10535 = P1[a28787];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2055 = (((uint128_t ) t10535) + ((uint128_t ) t10531));
        t10536 = ((uint64_t ) s2055);
        c1128 = (s2055 >> 64);
        s2056 = (((uint128_t ) t10534) + ((uint128_t ) t10530));
        s2057 = (((uint128_t ) s2056) + ((uint128_t ) c1128));
        t10537 = ((uint64_t ) s2057);
        c1129 = (s2057 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2058 = (((uint128_t ) t10533) + ((uint128_t ) t10529));
        t10538 = ((uint64_t ) s2058);
        c1130 = (s2058 >> 64);
        s2059 = (((uint128_t ) t10532) + ((uint128_t ) t10528));
        s2060 = (((uint128_t ) s2059) + ((uint128_t ) c1130));
        t10539 = ((uint64_t ) s2060);
        c1131 = (s2060 >> 64);
        /* MPPropagateCarry 64 */
        t10540 = (t10538 + c1129);
        a28788 = ((t10540 == 0));
        a28789 = (t10539 + c1129);
        t10541 = ((a28788) ? (a28789) : (t10539));
        a28790 = ((t10541 == 0));
        a28791 = ((a28790) && (a28788));
        a28792 = (c1131 + c1129);
        t10542 = ((a28791) ? (a28792) : (c1131));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28796 = (2*a28780);
        a28797 = (a28796 + 1);
        /* MPAssignDD 64 */
        a28798 = (2*a28797);
        t10544 = P1[a28798];
        a28799 = (a28798 + 1);
        t10545 = P1[a28799];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2061 = (((uint128_t ) t10545) + ((uint128_t ) t10527));
        t10546 = ((uint64_t ) s2061);
        c1132 = (s2061 >> 64);
        s2062 = (((uint128_t ) t10544) + ((uint128_t ) t10526));
        s2063 = (((uint128_t ) s2062) + ((uint128_t ) c1132));
        t10547 = ((uint64_t ) s2063);
        c1133 = (s2063 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t10548 = ((uint64_t ) t10525);
        c1134 = (t10525 >> 64);
        s2064 = (((uint128_t ) t10524) + ((uint128_t ) c1134));
        t10549 = ((uint64_t ) s2064);
        /* MPPropagateCarry 64 */
        t10550 = (t10548 + c1133);
        a28800 = ((t10550 == 0));
        a28801 = (t10549 + c1133);
        t10551 = ((a28800) ? (a28801) : (t10549));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2065 = (((uint128_t ) t10546) + ((uint128_t ) t10542));
        t10554 = ((uint64_t ) s2065);
        c1136 = (s2065 >> 64);
        s2066 = (((uint128_t ) t10547) + ((uint128_t ) c1136));
        t10555 = ((uint64_t ) s2066);
        /* MPEqualDI 64 */
        a28808 = ((t10555 == 0));
        a28809 = ((t10554 == 0));
        a28810 = ((a28808) && (a28809));
        /* MPAddDDI 64 */
        s2067 = (((uint128_t ) t10550) + ((uint128_t ) t10542));
        t10556 = ((uint64_t ) s2067);
        c1137 = (s2067 >> 64);
        s2068 = (((uint128_t ) t10551) + ((uint128_t ) c1137));
        t10557 = ((uint64_t ) s2068);
        /* MPCondD 64 */
        t10558 = ((a28810) ? (t10557) : (t10551));
        t10559 = ((a28810) ? (t10556) : (t10550));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a28811 = ((0 < t10558));
        a28812 = ((0 == t10558));
        a28813 = ((0 < t10559));
        a28814 = ((a28812) && (a28813));
        a28815 = ((a28811) || (a28814));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a28816 = ((0 == t10559));
        a28817 = ((a28812) && (a28816));
        /* MPLessThan 64 */
        a28818 = ((a22724 < t10555));
        a28819 = ((a22724 == t10555));
        a28820 = ((a22725 < t10554));
        a28821 = ((a28819) && (a28820));
        a28822 = ((a28818) || (a28821));
        a28823 = ((a28817) && (a28822));
        a28824 = ((a28815) || (a28823));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28825 = ((a22725 == t10554));
        a28826 = ((a28819) && (a28825));
        a28827 = ((a28817) && (a28826));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28828 = ((a22726 < t10541));
        a28829 = ((a22726 == t10541));
        a28830 = ((a22727 < t10540));
        a28831 = ((a28829) && (a28830));
        a28832 = ((a28828) || (a28831));
        /* MPEqual 64 */
        a28833 = ((a22727 == t10540));
        a28834 = ((a28829) && (a28833));
        /* MPLessThan 64 */
        a28835 = ((a22728 < t10537));
        a28836 = ((a22728 == t10537));
        a28837 = ((a22729 < t10536));
        a28838 = ((a28836) && (a28837));
        a28839 = ((a28835) || (a28838));
        a28840 = ((a28834) && (a28839));
        a28841 = ((a28832) || (a28840));
        a28842 = ((a28827) && (a28841));
        i490 = ((a28824) || (a28842));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1990 = (t10536 - a22729);
        b1563 = ((t10536 < a22729));
        d1991 = (t10537 - a22728);
        d1992 = (d1991 - b1563);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28844 = ((t10537 < a22728));
        a28845 = ((t10537 == a22728));
        a28846 = ((a28845) && (b1563));
        b1564 = ((a28844) || (a28846));
        /* Begin of MPSubDDD 64 */
        d1993 = (t10540 - a22727);
        b1565 = ((t10540 < a22727));
        d1994 = (t10541 - a22726);
        d1995 = (d1994 - b1565);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d1996 = (d1993 - b1564);
        b1566 = ((d1993 < b1564));
        t10560 = (d1995 - b1566);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28850 = ((t10541 < a22726));
        a28851 = ((t10541 == a22726));
        a28852 = ((a28851) && (b1565));
        a28853 = ((a28850) || (a28852));
        /* MPEqual 64 */
        a28854 = ((t10540 == a22727));
        a28855 = ((a28851) && (a28854));
        /* MPLessThan 64 */
        a28856 = ((a28855) && (b1564));
        b1567 = ((a28853) || (a28856));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d1997 = (t10554 - a22725);
        b1568 = ((t10554 < a22725));
        d1998 = (t10555 - a22724);
        d1999 = (d1998 - b1568);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2000 = (d1997 - b1567);
        b1569 = ((d1997 < b1567));
        t10561 = (d1999 - b1569);
        /* End of MPSubDDD 256 */
        a28860 = (2*a28779);
        /* MPCondD 128 */
        a28861 = (2*a28860);
        a28862 = (a28861 + 1);
        /* MPCondD 64 */
        a28863 = (2*a28862);
        P2[a28863] = ((i490) ? (t10561) : (t10555));
        a28864 = (a28863 + 1);
        P2[a28864] = ((i490) ? (d2000) : (t10554));
        a28865 = (a28860 + 1);
        /* MPCondD 128 */
        a28866 = (2*a28865);
        /* MPCondD 64 */
        a28867 = (2*a28866);
        P2[a28867] = ((i490) ? (t10560) : (t10541));
        a28868 = (a28867 + 1);
        P2[a28868] = ((i490) ? (d1996) : (t10540));
        a28869 = (a28866 + 1);
        /* MPCondD 64 */
        a28870 = (2*a28869);
        P2[a28870] = ((i490) ? (d1992) : (t10537));
        a28871 = (a28870 + 1);
        P2[a28871] = ((i490) ? (d1990) : (t10536));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        a28872 = (a28779 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2001 = (t10535 - t10531);
        b1570 = ((t10535 < t10531));
        d2002 = (t10534 - t10530);
        d2003 = (d2002 - b1570);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28874 = ((t10534 < t10530));
        a28875 = ((t10534 == t10530));
        a28876 = ((a28875) && (b1570));
        b1571 = ((a28874) || (a28876));
        /* Begin of MPSubDDD 64 */
        d2004 = (t10533 - t10529);
        b1572 = ((t10533 < t10529));
        d2005 = (t10532 - t10528);
        d2006 = (d2005 - b1572);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2007 = (d2004 - b1571);
        b1573 = ((d2004 < b1571));
        t10562 = (d2006 - b1573);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28880 = ((t10532 < t10528));
        a28881 = ((t10532 == t10528));
        a28882 = ((a28881) && (b1572));
        a28883 = ((a28880) || (a28882));
        /* MPEqual 64 */
        a28884 = ((t10533 == t10529));
        a28885 = ((a28881) && (a28884));
        /* MPLessThan 64 */
        a28886 = ((a28885) && (b1571));
        b1574 = ((a28883) || (a28886));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2008 = (t10545 - t10527);
        b1575 = ((t10545 < t10527));
        d2009 = (t10544 - t10526);
        d2010 = (d2009 - b1575);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2011 = (d2008 - b1574);
        b1576 = ((d2008 < b1574));
        t10563 = (d2010 - b1576);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2069 = (((uint128_t ) d2001) + ((uint128_t ) a22729));
        t10564 = ((uint64_t ) s2069);
        c1138 = (s2069 >> 64);
        s2070 = (((uint128_t ) d2003) + ((uint128_t ) a22728));
        s2071 = (((uint128_t ) s2070) + ((uint128_t ) c1138));
        t10565 = ((uint64_t ) s2071);
        c1139 = (s2071 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2072 = (((uint128_t ) d2007) + ((uint128_t ) a22727));
        t10566 = ((uint64_t ) s2072);
        c1140 = (s2072 >> 64);
        s2073 = (((uint128_t ) t10562) + ((uint128_t ) a22726));
        s2074 = (((uint128_t ) s2073) + ((uint128_t ) c1140));
        t10567 = ((uint64_t ) s2074);
        c1141 = (s2074 >> 64);
        /* MPPropagateCarry 64 */
        t10568 = (t10566 + c1139);
        a28890 = ((t10568 == 0));
        a28891 = (t10567 + c1139);
        t10569 = ((a28890) ? (a28891) : (t10567));
        a28892 = ((t10569 == 0));
        a28893 = ((a28892) && (a28890));
        a28894 = (c1141 + c1139);
        t10570 = ((a28893) ? (a28894) : (c1141));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2075 = (((uint128_t ) d2011) + ((uint128_t ) a22725));
        t10572 = ((uint64_t ) s2075);
        c1142 = (s2075 >> 64);
        s2076 = (((uint128_t ) t10563) + ((uint128_t ) a22724));
        s2077 = (((uint128_t ) s2076) + ((uint128_t ) c1142));
        t10573 = ((uint64_t ) s2077);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2078 = (((uint128_t ) t10572) + ((uint128_t ) t10570));
        t10574 = ((uint64_t ) s2078);
        c1144 = (s2078 >> 64);
        s2079 = (((uint128_t ) t10573) + ((uint128_t ) c1144));
        t10575 = ((uint64_t ) s2079);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28898 = ((0 < t10524));
        a28899 = ((0 == t10524));
        a28900 = ((0 < t10525));
        a28901 = ((a28899) && (a28900));
        a28902 = ((a28898) || (a28901));
        /* MPEqual 64 */
        a28903 = ((0 == t10525));
        a28904 = ((a28899) && (a28903));
        /* MPLessThan 64 */
        a28905 = ((t10544 < t10526));
        a28906 = ((t10544 == t10526));
        a28907 = ((a28906) && (b1575));
        a28908 = ((a28905) || (a28907));
        a28909 = ((a28904) && (a28908));
        a28910 = ((a28902) || (a28909));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a28911 = ((t10545 == t10527));
        a28912 = ((a28906) && (a28911));
        a28913 = ((a28904) && (a28912));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a28914 = ((a28913) && (b1574));
        i491 = ((a28910) || (a28914));
        a28915 = (2*a28872);
        /* MPCondD 128 */
        a28916 = (2*a28915);
        a28917 = (a28916 + 1);
        /* MPCondD 64 */
        a28918 = (2*a28917);
        P2[a28918] = ((i491) ? (t10575) : (t10563));
        a28919 = (a28918 + 1);
        P2[a28919] = ((i491) ? (t10574) : (d2011));
        a28920 = (a28915 + 1);
        /* MPCondD 128 */
        a28921 = (2*a28920);
        /* MPCondD 64 */
        a28922 = (2*a28921);
        P2[a28922] = ((i491) ? (t10569) : (t10562));
        a28923 = (a28922 + 1);
        P2[a28923] = ((i491) ? (t10568) : (d2007));
        a28924 = (a28921 + 1);
        /* MPCondD 64 */
        a28925 = (2*a28924);
        P2[a28925] = ((i491) ? (t10565) : (d2003));
        a28926 = (a28925 + 1);
        P2[a28926] = ((i491) ? (t10564) : (d2001));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code12(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a28927, a28928, a28929, a28930, a28931, a28932, a28933, a28934, 
            a28935, a28936, a28937, a28938, a28939, a28940, a28941, a28942, 
            a28943, a28944, a28945, a28946, a28947, a28948, a28949, a28950, 
            a28951, a28952, a28953, a28954, a28955, a28974, a28975, a28976, 
            a28980, a28981, a28982, a28983, a28984, a28985, a28986, a28989, 
            a28990, a28991, a28996, a29000, a29001, a29002, a29006, a29007, 
            a29008, a29009, a29010, a29011, a29012, a29015, a29016, a29017, 
            a29021, a29024, a29025, a29026, a29027, a29028, a29029, a29030, 
            a29031, a29032, a29033, a29034, a29035, a29036, a29037, a29038, 
            a29039, a29040, a29041, a29042, a29043, a29045, a29046, a29051, 
            a29052, a29053, a29054, a29055, a29063, a29064, a29065, a29066, 
            a29067, a29068, a29069, a29070, a29071, a29072, a29073, a29074, 
            a29075, a29076, a29077, a29078, a29079, a29080, a29081, a29082, 
            a29083, a29084, a29085, a29086, a29087, a29088, a29089, a29090, 
            a29091, a29092, a29093, a29094, a29095, a29096, a29097, a29099, 
            a29100, a29101, a29105, a29106, a29107, a29108, a29109, a29110, 
            a29111, a29115, a29116, a29117, a29118, a29119, a29120, a29121, 
            a29122, a29123, a29124, a29125, a29126, a29127, a29129, a29130, 
            a29131, a29135, a29136, a29137, a29138, a29139, a29140, a29141, 
            a29145, a29147, a29148, a29153, a29154, a29155, a29156, a29157, 
            a29158, a29159, a29160, a29161, a29162, a29163, a29164, a29165, 
            a29166, a29167, a29168, a29169, a29170, a29171, a29172, a29173, 
            a29174, a29175, a29176, a29177, a29178, a29179, a29180, a29181, 
            b1577, b1579, b1580, b1581, b1582, b1583, b1584, b1585, 
            b1586, b1587, b1588, b1589, b1590, b1591, b1592, b1593, 
            b1594, b1595, b1596, b1597, b1598, b1599, b1600, b1601, 
            b1602, b1603, b1604, b1605, b1606, b1607, b1608, b1609, 
            b1610, b1611, b1612, b1613, b1614, b1615, c1145, c1146, 
            c1147, c1148, c1149, c1150, c1151, c1153, c1154, c1155, 
            c1156, c1157, c1158, c1159, c1161, i492, i493, i494;
    uint64_t a23530, a23531, a23532, a23533, a23534, a23535, a23635, a23636, 
            a23637, a23638, a23639, a23640, a28956, a28957, a28958, a28959, 
            a28960, a28961, a28962, a28963, a28964, a28965, a28967, a28968, 
            a28969, a28970, a28971, a28972, a29044, a29047, a29056, a29146, 
            a29149, d2012, d2013, d2014, d2015, d2016, d2017, d2018, 
            d2019, d2020, d2021, d2022, d2023, d2024, d2025, d2026, 
            d2027, d2028, d2029, d2030, d2031, d2032, d2033, d2034, 
            d2035, d2036, d2037, d2038, d2039, d2040, d2041, d2042, 
            d2043, d2044, d2045, d2046, d2047, d2048, d2049, d2050, 
            d2051, d2052, d2053, d2054, d2055, d2056, d2057, d2058, 
            d2059, d2060, d2061, d2062, d2063, t10576, t10577, t10578, 
            t10579, t10580, t10581, t10582, t10583, t10584, t10585, t10586, 
            t10587, t10588, t10589, t10590, t10591, t10592, t10593, t10594, 
            t10595, t10596, t10597, t10598, t10599, t10600, t10601, t10602, 
            t10603, t10604, t10605, t10606, t10607, t10608, t10609, t10612, 
            t10613, t10614, t10615, t10616, t10617, t10618, t10619, t10620, 
            t10621, t10622, t10623, t10624, t10625, t10626, t10627, t10628, 
            t10629, t10630, t10631, t10632, t10633, t10634, t10635, t10636, 
            t10637, t10638, t10639, t10640, t10641, t10642, t10643, t10644, 
            t10645, t10646, t10647, t10648, t10649, t10650, t10651, t10652, 
            t10653, t10654, t10655, t10657, t10658, t10659, t10660, t10661, 
            t10662, t10663, t10664, t10667, t10668, t10669, t10670, t10671, 
            t10672, t10673, t10674, t10675, t10676, t10677, t10678, t10679, 
            t10680, t10681, t10682, t10683, t10685, t10686, t10687, t10688, 
            t6849, t6850, t6851, t6852, t6853, t6854, t6855, t6856, 
            t6857, t6858, t6859, t6860, t6861, t6862, t6863, t6864, 
            t6865, t6866, t6867, t6868, t6869, t6870, t6871, t6872, 
            t6873, t6874, t6875, t6876, t6877, t6878, t6879, t6880, 
            t6881, t6882, t6883, t6884, t6885, t6886, t6887, t6888, 
            t6889, t6890, t6891, t6892, t6893, t6894, t6895, t6896;
    uint128_t s2080, s2081, s2082, s2083, s2084, s2085, s2086, s2087, 
            s2088, s2089, s2090, s2091, s2092, s2093, s2094, s2095, 
            s2096, s2097, s2098, s2099, s2100, s2101, s2102, s2103, 
            s2104;
    for(int i5 = 0; i5 <= 63; i5++) {
        a28927 = (128*i5);
        a28928 = (threadIdx.x + a28927);
        a28929 = (a28928 + 8192);
        a28930 = (a28929 % 4096);
        a28931 = (4096 + a28930);
        /* Begin of MPModMul 256 */
        a28932 = (2*a28931);
        a28933 = (a28932 + 1);
        a28934 = (2*a28929);
        a28935 = (a28934 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28936 = (2*a28932);
        a28937 = (a28936 + 1);
        /* MPAssignDD 64 */
        a28938 = (2*a28937);
        t10576 = twiddles[a28938];
        a28939 = (a28938 + 1);
        t10577 = twiddles[a28939];
        /* MPAssignDD 128 */
        a28940 = (2*a28933);
        /* MPAssignDD 64 */
        a28941 = (2*a28940);
        t10578 = twiddles[a28941];
        a28942 = (a28941 + 1);
        t10579 = twiddles[a28942];
        a28943 = (a28940 + 1);
        /* MPAssignDD 64 */
        a28944 = (2*a28943);
        t10580 = twiddles[a28944];
        a28945 = (a28944 + 1);
        t10581 = twiddles[a28945];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a28946 = (2*a28934);
        a28947 = (a28946 + 1);
        /* MPAssignDD 64 */
        a28948 = (2*a28947);
        t10582 = P2[a28948];
        a28949 = (a28948 + 1);
        t10583 = P2[a28949];
        /* MPAssignDD 128 */
        a28950 = (2*a28935);
        /* MPAssignDD 64 */
        a28951 = (2*a28950);
        t10584 = P2[a28951];
        a28952 = (a28951 + 1);
        t10585 = P2[a28952];
        a28953 = (a28950 + 1);
        /* MPAssignDD 64 */
        a28954 = (2*a28953);
        t10586 = P2[a28954];
        a28955 = (a28954 + 1);
        t10587 = P2[a28955];
        MPMulQDD_L3_2(t6883, t6884, t6881, t6882, t6887, t6888, t6885, t6886, 
    t6891, t6892, t6889, t6890, t6895, t6896, t6893, t6894, 
    0, 0, t10576, t10577, t10578, t10579, t10580, t10581, 
    0, 0, t10582, t10583, t10584, t10585, t10586, t10587);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10588 = (t6891 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a28956 = (t6891 << 6);
        a28957 = (t6892 >> 58);
        t10589 = (((a28956)|(a28957)));
        t10590 = (t6892 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10591 = (t6889 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10592 = (((t10590)|(t10591)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1577 = ((int) 1);
        t10593 = (288230376151711744 - b1577);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10594 = (((t6881)&(t10593)));
        t10595 = (((t6882)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a28958 = (t10594 << 6);
        a28959 = (t10595 >> 58);
        t10596 = (((a28958)|(a28959)));
        t10597 = (t10595 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10598 = (t6887 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a28960 = (t6887 << 6);
        a28961 = (t6888 >> 58);
        t10599 = (((a28960)|(a28961)));
        t10600 = (t6888 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10601 = (t6885 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10602 = (((t10600)|(t10601)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10603 = (((t10597)|(t10598)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a28962 = (t6885 << 6);
        a28963 = (t6886 >> 58);
        t10604 = (((a28962)|(a28963)));
        t10605 = (t6886 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10606 = (((t10605)|(t10588)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a23530 = mu[2];
        a23531 = mu[3];
        a23532 = mu[4];
        a23533 = mu[5];
        a23534 = mu[6];
        a23535 = mu[7];
        MPMulQDD_L3_1(t6851, t6852, t6849, t6850, t6855, t6856, t6853, t6854, 
    t6859, t6860, t6857, t6858, t6863, t6864, t6861, t6862, 
    t10596, t10603, t10599, t10602, t10604, t10606, t10589, t10592, 
    0, 0, a23530, a23531, a23532, a23533, a23534, a23535);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10607 = (t6859 >> 1);
        a28964 = (t6859 << 63);
        a28965 = (t6860 >> 1);
        t10608 = (((a28964)|(a28965)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t10609 = (0 - b1577);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2012 = (2 - b1577);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10612 = (((t6852)&(d2012)));
        /* MPBinAndD 64 */
        t10613 = (((t6849)&(t10609)));
        t10614 = (((t6850)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10615 = (t10612 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10616 = (t10613 >> 1);
        a28967 = (t10613 << 63);
        a28968 = (t10614 >> 1);
        t10617 = (((a28967)|(a28968)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10618 = (((t10615)|(t10616)));
        /* Begin of MPShiftLeft1D */
        t10619 = (t10614 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10620 = (t6855 >> 1);
        a28969 = (t6855 << 63);
        a28970 = (t6856 >> 1);
        t10621 = (((a28969)|(a28970)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10622 = (((t10619)|(t10620)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10623 = (t6856 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10624 = (t6853 >> 1);
        a28971 = (t6853 << 63);
        a28972 = (t6854 >> 1);
        t10625 = (((a28971)|(a28972)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10626 = (((t10623)|(t10624)));
        /* Begin of MPShiftLeft1D */
        t10627 = (t6854 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10628 = (((t10627)|(t10607)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a23635 = modulus[2];
        a23636 = modulus[3];
        a23637 = modulus[4];
        a23638 = modulus[5];
        a23639 = modulus[6];
        a23640 = modulus[7];
        MPMulQDD_L3_1(t6867, t6868, t6865, t6866, t6871, t6872, t6869, t6870, 
    t6875, t6876, t6873, t6874, t6879, t6880, t6877, t6878, 
    t10618, t10617, t10622, t10621, t10626, t10625, t10628, t10608, 
    0, 0, a23635, a23636, a23637, a23638, a23639, a23640);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2013 = (t6894 - t6878);
        b1579 = ((t6894 < t6878));
        d2014 = (t6893 - t6877);
        d2015 = (d2014 - b1579);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28974 = ((t6893 < t6877));
        a28975 = ((t6893 == t6877));
        a28976 = ((a28975) && (b1579));
        b1580 = ((a28974) || (a28976));
        /* Begin of MPSubDDD 64 */
        d2016 = (t6896 - t6880);
        b1581 = ((t6896 < t6880));
        d2017 = (t6895 - t6879);
        d2018 = (d2017 - b1581);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2019 = (d2016 - b1580);
        b1582 = ((d2016 < b1580));
        t10629 = (d2018 - b1582);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a28980 = ((t6895 < t6879));
        a28981 = ((t6895 == t6879));
        a28982 = ((a28981) && (b1581));
        a28983 = ((a28980) || (a28982));
        /* MPEqual 64 */
        a28984 = ((t6896 == t6880));
        a28985 = ((a28981) && (a28984));
        /* MPLessThan 64 */
        a28986 = ((a28985) && (b1580));
        b1583 = ((a28983) || (a28986));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2020 = (t6890 - t6874);
        b1584 = ((t6890 < t6874));
        d2021 = (t6889 - t6873);
        d2022 = (d2021 - b1584);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a28989 = ((t6889 < t6873));
        a28990 = ((t6889 == t6873));
        a28991 = ((a28990) && (b1584));
        b1585 = ((a28989) || (a28991));
        /* Begin of MPSubDDD 64 */
        d2023 = (t6892 - t6876);
        b1586 = ((t6892 < t6876));
        d2024 = (t6891 - t6875);
        d2025 = (d2024 - b1586);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2026 = (d2023 - b1585);
        b1587 = ((d2023 < b1585));
        t10630 = (d2025 - b1587);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2027 = (d2020 - b1583);
        b1588 = ((d2020 < b1583));
        t10631 = (d2022 - b1588);
        /* MPLessThanDI 64 */
        a28996 = ((d2022 == 0));
        b1589 = ((a28996) && (b1588));
        /* MPSubDDI 64 */
        d2028 = (d2026 - b1589);
        b1590 = ((d2026 < b1589));
        t10632 = (t10630 - b1590);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2029 = (d2013 - a23640);
        b1591 = ((d2013 < a23640));
        d2030 = (d2015 - a23639);
        d2031 = (d2030 - b1591);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29000 = ((d2015 < a23639));
        a29001 = ((d2015 == a23639));
        a29002 = ((a29001) && (b1591));
        b1592 = ((a29000) || (a29002));
        /* Begin of MPSubDDD 64 */
        d2032 = (d2019 - a23638);
        b1593 = ((d2019 < a23638));
        d2033 = (t10629 - a23637);
        d2034 = (d2033 - b1593);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2035 = (d2032 - b1592);
        b1594 = ((d2032 < b1592));
        t10633 = (d2034 - b1594);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29006 = ((t10629 < a23637));
        a29007 = ((t10629 == a23637));
        a29008 = ((a29007) && (b1593));
        a29009 = ((a29006) || (a29008));
        /* MPEqual 64 */
        a29010 = ((d2019 == a23638));
        a29011 = ((a29007) && (a29010));
        /* MPLessThan 64 */
        a29012 = ((a29011) && (b1592));
        b1595 = ((a29009) || (a29012));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2036 = (d2027 - a23636);
        b1596 = ((d2027 < a23636));
        d2037 = (t10631 - a23635);
        d2038 = (d2037 - b1596);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29015 = ((t10631 < a23635));
        a29016 = ((t10631 == a23635));
        a29017 = ((a29016) && (b1596));
        b1597 = ((a29015) || (a29017));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2039 = (d2028 - b1597);
        b1598 = ((d2028 < b1597));
        t10634 = (t10632 - b1598);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2040 = (d2036 - b1595);
        b1599 = ((d2036 < b1595));
        t10635 = (d2038 - b1599);
        /* MPLessThanDI 64 */
        a29021 = ((d2038 == 0));
        b1600 = ((a29021) && (b1599));
        /* MPSubDDI 64 */
        d2041 = (d2039 - b1600);
        b1601 = ((d2039 < b1600));
        t10636 = (t10634 - b1601);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a29024 = ((t10632 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a29025 = ((d2028 == 0));
        a29026 = ((a29024) && (a29025));
        /* MPLessThan 64 */
        a29027 = ((a29026) && (b1597));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a29028 = ((d2027 == a23636));
        a29029 = ((a29016) && (a29028));
        a29030 = ((a29026) && (a29029));
        /* MPLessThan 128 */
        a29031 = ((a29030) && (b1595));
        i492 = ((a29027) || (a29031));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10637 = ((i492) ? (t10632) : (t10636));
        t10638 = ((i492) ? (d2028) : (d2041));
        /* MPCondD 64 */
        t10639 = ((i492) ? (t10631) : (t10635));
        t10640 = ((i492) ? (d2027) : (d2040));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10641 = ((i492) ? (t10629) : (t10633));
        t10642 = ((i492) ? (d2019) : (d2035));
        /* MPCondD 64 */
        t10643 = ((i492) ? (d2015) : (d2031));
        t10644 = ((i492) ? (d2013) : (d2029));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a29032 = (2*threadIdx.x);
        a29033 = (256*i5);
        a29034 = (a29032 + a29033);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a29035 = (2*a28928);
        a29036 = (a29035 + 1);
        /* MPAssignDD 128 */
        a29037 = (2*a29036);
        /* MPAssignDD 64 */
        a29038 = (2*a29037);
        t10645 = P2[a29038];
        a29039 = (a29038 + 1);
        t10646 = P2[a29039];
        a29040 = (a29037 + 1);
        /* MPAssignDD 64 */
        a29041 = (2*a29040);
        t10647 = P2[a29041];
        a29042 = (a29041 + 1);
        t10648 = P2[a29042];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2080 = (((uint128_t ) t10648) + ((uint128_t ) t10644));
        t10649 = ((uint64_t ) s2080);
        c1145 = (s2080 >> 64);
        s2081 = (((uint128_t ) t10647) + ((uint128_t ) t10643));
        s2082 = (((uint128_t ) s2081) + ((uint128_t ) c1145));
        t10650 = ((uint64_t ) s2082);
        c1146 = (s2082 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2083 = (((uint128_t ) t10646) + ((uint128_t ) t10642));
        t10651 = ((uint64_t ) s2083);
        c1147 = (s2083 >> 64);
        s2084 = (((uint128_t ) t10645) + ((uint128_t ) t10641));
        s2085 = (((uint128_t ) s2084) + ((uint128_t ) c1147));
        t10652 = ((uint64_t ) s2085);
        c1148 = (s2085 >> 64);
        /* MPPropagateCarry 64 */
        t10653 = (t10651 + c1146);
        a29043 = ((t10653 == 0));
        a29044 = (t10652 + c1146);
        t10654 = ((a29043) ? (a29044) : (t10652));
        a29045 = ((t10654 == 0));
        a29046 = ((a29045) && (a29043));
        a29047 = (c1148 + c1146);
        t10655 = ((a29046) ? (a29047) : (c1148));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a29051 = (2*a29035);
        a29052 = (a29051 + 1);
        /* MPAssignDD 64 */
        a29053 = (2*a29052);
        t10657 = P2[a29053];
        a29054 = (a29053 + 1);
        t10658 = P2[a29054];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2086 = (((uint128_t ) t10658) + ((uint128_t ) t10640));
        t10659 = ((uint64_t ) s2086);
        c1149 = (s2086 >> 64);
        s2087 = (((uint128_t ) t10657) + ((uint128_t ) t10639));
        s2088 = (((uint128_t ) s2087) + ((uint128_t ) c1149));
        t10660 = ((uint64_t ) s2088);
        c1150 = (s2088 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t10661 = ((uint64_t ) t10638);
        c1151 = (t10638 >> 64);
        s2089 = (((uint128_t ) t10637) + ((uint128_t ) c1151));
        t10662 = ((uint64_t ) s2089);
        /* MPPropagateCarry 64 */
        t10663 = (t10661 + c1150);
        a29055 = ((t10663 == 0));
        a29056 = (t10662 + c1150);
        t10664 = ((a29055) ? (a29056) : (t10662));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2090 = (((uint128_t ) t10659) + ((uint128_t ) t10655));
        t10667 = ((uint64_t ) s2090);
        c1153 = (s2090 >> 64);
        s2091 = (((uint128_t ) t10660) + ((uint128_t ) c1153));
        t10668 = ((uint64_t ) s2091);
        /* MPEqualDI 64 */
        a29063 = ((t10668 == 0));
        a29064 = ((t10667 == 0));
        a29065 = ((a29063) && (a29064));
        /* MPAddDDI 64 */
        s2092 = (((uint128_t ) t10663) + ((uint128_t ) t10655));
        t10669 = ((uint64_t ) s2092);
        c1154 = (s2092 >> 64);
        s2093 = (((uint128_t ) t10664) + ((uint128_t ) c1154));
        t10670 = ((uint64_t ) s2093);
        /* MPCondD 64 */
        t10671 = ((a29065) ? (t10670) : (t10664));
        t10672 = ((a29065) ? (t10669) : (t10663));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a29066 = ((0 < t10671));
        a29067 = ((0 == t10671));
        a29068 = ((0 < t10672));
        a29069 = ((a29067) && (a29068));
        a29070 = ((a29066) || (a29069));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a29071 = ((0 == t10672));
        a29072 = ((a29067) && (a29071));
        /* MPLessThan 64 */
        a29073 = ((a23635 < t10668));
        a29074 = ((a23635 == t10668));
        a29075 = ((a23636 < t10667));
        a29076 = ((a29074) && (a29075));
        a29077 = ((a29073) || (a29076));
        a29078 = ((a29072) && (a29077));
        a29079 = ((a29070) || (a29078));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a29080 = ((a23636 == t10667));
        a29081 = ((a29074) && (a29080));
        a29082 = ((a29072) && (a29081));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29083 = ((a23637 < t10654));
        a29084 = ((a23637 == t10654));
        a29085 = ((a23638 < t10653));
        a29086 = ((a29084) && (a29085));
        a29087 = ((a29083) || (a29086));
        /* MPEqual 64 */
        a29088 = ((a23638 == t10653));
        a29089 = ((a29084) && (a29088));
        /* MPLessThan 64 */
        a29090 = ((a23639 < t10650));
        a29091 = ((a23639 == t10650));
        a29092 = ((a23640 < t10649));
        a29093 = ((a29091) && (a29092));
        a29094 = ((a29090) || (a29093));
        a29095 = ((a29089) && (a29094));
        a29096 = ((a29087) || (a29095));
        a29097 = ((a29082) && (a29096));
        i493 = ((a29079) || (a29097));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2042 = (t10649 - a23640);
        b1602 = ((t10649 < a23640));
        d2043 = (t10650 - a23639);
        d2044 = (d2043 - b1602);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29099 = ((t10650 < a23639));
        a29100 = ((t10650 == a23639));
        a29101 = ((a29100) && (b1602));
        b1603 = ((a29099) || (a29101));
        /* Begin of MPSubDDD 64 */
        d2045 = (t10653 - a23638);
        b1604 = ((t10653 < a23638));
        d2046 = (t10654 - a23637);
        d2047 = (d2046 - b1604);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2048 = (d2045 - b1603);
        b1605 = ((d2045 < b1603));
        t10673 = (d2047 - b1605);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29105 = ((t10654 < a23637));
        a29106 = ((t10654 == a23637));
        a29107 = ((a29106) && (b1604));
        a29108 = ((a29105) || (a29107));
        /* MPEqual 64 */
        a29109 = ((t10653 == a23638));
        a29110 = ((a29106) && (a29109));
        /* MPLessThan 64 */
        a29111 = ((a29110) && (b1603));
        b1606 = ((a29108) || (a29111));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2049 = (t10667 - a23636);
        b1607 = ((t10667 < a23636));
        d2050 = (t10668 - a23635);
        d2051 = (d2050 - b1607);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2052 = (d2049 - b1606);
        b1608 = ((d2049 < b1606));
        t10674 = (d2051 - b1608);
        /* End of MPSubDDD 256 */
        a29115 = (2*a29034);
        /* MPCondD 128 */
        a29116 = (2*a29115);
        a29117 = (a29116 + 1);
        /* MPCondD 64 */
        a29118 = (2*a29117);
        P1[a29118] = ((i493) ? (t10674) : (t10668));
        a29119 = (a29118 + 1);
        P1[a29119] = ((i493) ? (d2052) : (t10667));
        a29120 = (a29115 + 1);
        /* MPCondD 128 */
        a29121 = (2*a29120);
        /* MPCondD 64 */
        a29122 = (2*a29121);
        P1[a29122] = ((i493) ? (t10673) : (t10654));
        a29123 = (a29122 + 1);
        P1[a29123] = ((i493) ? (d2048) : (t10653));
        a29124 = (a29121 + 1);
        /* MPCondD 64 */
        a29125 = (2*a29124);
        P1[a29125] = ((i493) ? (d2044) : (t10650));
        a29126 = (a29125 + 1);
        P1[a29126] = ((i493) ? (d2042) : (t10649));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        a29127 = (a29034 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2053 = (t10648 - t10644);
        b1609 = ((t10648 < t10644));
        d2054 = (t10647 - t10643);
        d2055 = (d2054 - b1609);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29129 = ((t10647 < t10643));
        a29130 = ((t10647 == t10643));
        a29131 = ((a29130) && (b1609));
        b1610 = ((a29129) || (a29131));
        /* Begin of MPSubDDD 64 */
        d2056 = (t10646 - t10642);
        b1611 = ((t10646 < t10642));
        d2057 = (t10645 - t10641);
        d2058 = (d2057 - b1611);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2059 = (d2056 - b1610);
        b1612 = ((d2056 < b1610));
        t10675 = (d2058 - b1612);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29135 = ((t10645 < t10641));
        a29136 = ((t10645 == t10641));
        a29137 = ((a29136) && (b1611));
        a29138 = ((a29135) || (a29137));
        /* MPEqual 64 */
        a29139 = ((t10646 == t10642));
        a29140 = ((a29136) && (a29139));
        /* MPLessThan 64 */
        a29141 = ((a29140) && (b1610));
        b1613 = ((a29138) || (a29141));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2060 = (t10658 - t10640);
        b1614 = ((t10658 < t10640));
        d2061 = (t10657 - t10639);
        d2062 = (d2061 - b1614);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2063 = (d2060 - b1613);
        b1615 = ((d2060 < b1613));
        t10676 = (d2062 - b1615);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2094 = (((uint128_t ) d2053) + ((uint128_t ) a23640));
        t10677 = ((uint64_t ) s2094);
        c1155 = (s2094 >> 64);
        s2095 = (((uint128_t ) d2055) + ((uint128_t ) a23639));
        s2096 = (((uint128_t ) s2095) + ((uint128_t ) c1155));
        t10678 = ((uint64_t ) s2096);
        c1156 = (s2096 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2097 = (((uint128_t ) d2059) + ((uint128_t ) a23638));
        t10679 = ((uint64_t ) s2097);
        c1157 = (s2097 >> 64);
        s2098 = (((uint128_t ) t10675) + ((uint128_t ) a23637));
        s2099 = (((uint128_t ) s2098) + ((uint128_t ) c1157));
        t10680 = ((uint64_t ) s2099);
        c1158 = (s2099 >> 64);
        /* MPPropagateCarry 64 */
        t10681 = (t10679 + c1156);
        a29145 = ((t10681 == 0));
        a29146 = (t10680 + c1156);
        t10682 = ((a29145) ? (a29146) : (t10680));
        a29147 = ((t10682 == 0));
        a29148 = ((a29147) && (a29145));
        a29149 = (c1158 + c1156);
        t10683 = ((a29148) ? (a29149) : (c1158));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2100 = (((uint128_t ) d2063) + ((uint128_t ) a23636));
        t10685 = ((uint64_t ) s2100);
        c1159 = (s2100 >> 64);
        s2101 = (((uint128_t ) t10676) + ((uint128_t ) a23635));
        s2102 = (((uint128_t ) s2101) + ((uint128_t ) c1159));
        t10686 = ((uint64_t ) s2102);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2103 = (((uint128_t ) t10685) + ((uint128_t ) t10683));
        t10687 = ((uint64_t ) s2103);
        c1161 = (s2103 >> 64);
        s2104 = (((uint128_t ) t10686) + ((uint128_t ) c1161));
        t10688 = ((uint64_t ) s2104);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29153 = ((0 < t10637));
        a29154 = ((0 == t10637));
        a29155 = ((0 < t10638));
        a29156 = ((a29154) && (a29155));
        a29157 = ((a29153) || (a29156));
        /* MPEqual 64 */
        a29158 = ((0 == t10638));
        a29159 = ((a29154) && (a29158));
        /* MPLessThan 64 */
        a29160 = ((t10657 < t10639));
        a29161 = ((t10657 == t10639));
        a29162 = ((a29161) && (b1614));
        a29163 = ((a29160) || (a29162));
        a29164 = ((a29159) && (a29163));
        a29165 = ((a29157) || (a29164));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a29166 = ((t10658 == t10640));
        a29167 = ((a29161) && (a29166));
        a29168 = ((a29159) && (a29167));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a29169 = ((a29168) && (b1613));
        i494 = ((a29165) || (a29169));
        a29170 = (2*a29127);
        /* MPCondD 128 */
        a29171 = (2*a29170);
        a29172 = (a29171 + 1);
        /* MPCondD 64 */
        a29173 = (2*a29172);
        P1[a29173] = ((i494) ? (t10688) : (t10676));
        a29174 = (a29173 + 1);
        P1[a29174] = ((i494) ? (t10687) : (d2063));
        a29175 = (a29170 + 1);
        /* MPCondD 128 */
        a29176 = (2*a29175);
        /* MPCondD 64 */
        a29177 = (2*a29176);
        P1[a29177] = ((i494) ? (t10682) : (t10675));
        a29178 = (a29177 + 1);
        P1[a29178] = ((i494) ? (t10681) : (d2059));
        a29179 = (a29176 + 1);
        /* MPCondD 64 */
        a29180 = (2*a29179);
        P1[a29180] = ((i494) ? (t10678) : (d2055));
        a29181 = (a29180 + 1);
        P1[a29181] = ((i494) ? (t10677) : (d2053));
        /* End of MPModSub 256 */
    }
}

__global__ void ker_code13(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a29182, a29183, a29184, a29185, a29186, a29187, a29188, a29189, 
            a29190, a29191, a29192, a29193, a29194, a29195, a29196, a29197, 
            a29198, a29199, a29200, a29201, a29202, a29203, a29204, a29205, 
            a29206, a29207, a29208, a29209, a29210, a29229, a29230, a29231, 
            a29235, a29236, a29237, a29238, a29239, a29240, a29241, a29244, 
            a29245, a29246, a29251, a29255, a29256, a29257, a29261, a29262, 
            a29263, a29264, a29265, a29266, a29267, a29270, a29271, a29272, 
            a29276, a29279, a29280, a29281, a29282, a29283, a29284, a29285, 
            a29286, a29287, a29288, a29289, a29290, a29291, a29292, a29293, 
            a29294, a29295, a29296, a29297, a29298, a29299, a29301, a29302, 
            a29307, a29308, a29309, a29310, a29311, a29319, a29320, a29321, 
            a29322, a29323, a29324, a29325, a29326, a29327, a29328, a29329, 
            a29330, a29331, a29332, a29333, a29334, a29335, a29336, a29337, 
            a29338, a29339, a29340, a29341, a29342, a29343, a29344, a29345, 
            a29346, a29347, a29348, a29349, a29350, a29351, a29352, a29353, 
            a29355, a29356, a29357, a29361, a29362, a29363, a29364, a29365, 
            a29366, a29367, a29371, a29372, a29373, a29374, a29375, a29376, 
            a29377, a29378, a29379, a29380, a29381, a29382, a29383, a29385, 
            a29386, a29387, a29391, a29392, a29393, a29394, a29395, a29396, 
            a29397, a29401, a29403, a29404, a29409, a29410, a29411, a29412, 
            a29413, a29414, a29415, a29416, a29417, a29418, a29419, a29420, 
            a29421, a29422, a29423, a29424, a29425, a29426, a29427, a29428, 
            a29429, a29430, a29431, a29432, a29433, a29434, a29435, a29436, 
            a29437, b1616, b1617, b1619, b1620, b1621, b1622, b1623, 
            b1624, b1625, b1626, b1627, b1628, b1629, b1630, b1631, 
            b1632, b1633, b1634, b1635, b1636, b1637, b1638, b1639, 
            b1640, b1641, b1642, b1643, b1644, b1645, b1646, b1647, 
            b1648, b1649, b1650, b1651, b1652, b1653, b1654, b1655, 
            b1656, c1162, c1163, c1164, c1165, c1166, c1167, c1168, 
            c1170, c1171, c1172, c1173, c1174, c1175, c1176, c1178, 
            i495, i496, i497;
    uint64_t a24441, a24442, a24443, a24444, a24445, a24446, a24546, a24547, 
            a24548, a24549, a24550, a24551, a29211, a29212, a29213, a29214, 
            a29215, a29216, a29217, a29218, a29219, a29220, a29222, a29223, 
            a29224, a29225, a29226, a29227, a29300, a29303, a29312, a29402, 
            a29405, d2064, d2065, d2066, d2067, d2068, d2069, d2070, 
            d2071, d2072, d2073, d2074, d2075, d2076, d2077, d2078, 
            d2079, d2080, d2081, d2082, d2083, d2084, d2085, d2086, 
            d2087, d2088, d2089, d2090, d2091, d2092, d2093, d2094, 
            d2095, d2096, d2097, d2098, d2099, d2100, d2101, d2102, 
            d2103, d2104, d2105, d2106, d2107, d2108, d2109, d2110, 
            d2111, d2112, d2113, d2114, d2115, t10689, t10690, t10691, 
            t10692, t10693, t10694, t10695, t10696, t10697, t10698, t10699, 
            t10700, t10701, t10702, t10703, t10704, t10705, t10706, t10707, 
            t10708, t10709, t10710, t10711, t10712, t10713, t10714, t10715, 
            t10716, t10717, t10718, t10719, t10720, t10721, t10722, t10725, 
            t10726, t10727, t10728, t10729, t10730, t10731, t10732, t10733, 
            t10734, t10735, t10736, t10737, t10738, t10739, t10740, t10741, 
            t10742, t10743, t10744, t10745, t10746, t10747, t10748, t10749, 
            t10750, t10751, t10752, t10753, t10754, t10755, t10756, t10757, 
            t10758, t10759, t10760, t10761, t10762, t10763, t10764, t10765, 
            t10766, t10767, t10768, t10770, t10771, t10772, t10773, t10774, 
            t10775, t10776, t10777, t10780, t10781, t10782, t10783, t10784, 
            t10785, t10786, t10787, t10788, t10789, t10790, t10791, t10792, 
            t10793, t10794, t10795, t10796, t10798, t10799, t10800, t10801, 
            t6785, t6786, t6787, t6788, t6789, t6790, t6791, t6792, 
            t6793, t6794, t6795, t6796, t6797, t6798, t6799, t6800, 
            t6801, t6802, t6803, t6804, t6805, t6806, t6807, t6808, 
            t6809, t6810, t6811, t6812, t6813, t6814, t6815, t6816, 
            t6817, t6818, t6819, t6820, t6821, t6822, t6823, t6824, 
            t6825, t6826, t6827, t6828, t6829, t6830, t6831, t6832;
    uint128_t s2105, s2106, s2107, s2108, s2109, s2110, s2111, s2112, 
            s2113, s2114, s2115, s2116, s2117, s2118, s2119, s2120, 
            s2121, s2122, s2123, s2124, s2125, s2126, s2127, s2128, 
            s2129;
    for(int i3 = 0; i3 <= 63; i3++) {
        a29182 = (128*i3);
        a29183 = (a29182 + threadIdx.x);
        b1616 = (threadIdx.x + a29182);
        a29184 = (b1616 + 8192);
        a29185 = (a29184 % 8192);
        a29186 = (8192 + a29185);
        /* Begin of MPModMul 256 */
        a29187 = (2*a29186);
        a29188 = (a29187 + 1);
        a29189 = (2*a29184);
        a29190 = (a29189 + 1);
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a29191 = (2*a29187);
        a29192 = (a29191 + 1);
        /* MPAssignDD 64 */
        a29193 = (2*a29192);
        t10689 = twiddles[a29193];
        a29194 = (a29193 + 1);
        t10690 = twiddles[a29194];
        /* MPAssignDD 128 */
        a29195 = (2*a29188);
        /* MPAssignDD 64 */
        a29196 = (2*a29195);
        t10691 = twiddles[a29196];
        a29197 = (a29196 + 1);
        t10692 = twiddles[a29197];
        a29198 = (a29195 + 1);
        /* MPAssignDD 64 */
        a29199 = (2*a29198);
        t10693 = twiddles[a29199];
        a29200 = (a29199 + 1);
        t10694 = twiddles[a29200];
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a29201 = (2*a29189);
        a29202 = (a29201 + 1);
        /* MPAssignDD 64 */
        a29203 = (2*a29202);
        t10695 = P1[a29203];
        a29204 = (a29203 + 1);
        t10696 = P1[a29204];
        /* MPAssignDD 128 */
        a29205 = (2*a29190);
        /* MPAssignDD 64 */
        a29206 = (2*a29205);
        t10697 = P1[a29206];
        a29207 = (a29206 + 1);
        t10698 = P1[a29207];
        a29208 = (a29205 + 1);
        /* MPAssignDD 64 */
        a29209 = (2*a29208);
        t10699 = P1[a29209];
        a29210 = (a29209 + 1);
        t10700 = P1[a29210];
        MPMulQDD_L3_2(t6819, t6820, t6817, t6818, t6823, t6824, t6821, t6822, 
    t6827, t6828, t6825, t6826, t6831, t6832, t6829, t6830, 
    0, 0, t10689, t10690, t10691, t10692, t10693, t10694, 
    0, 0, t10695, t10696, t10697, t10698, t10699, t10700);
        /* Begin of MPModDQ */
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10701 = (t6827 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a29211 = (t6827 << 6);
        a29212 = (t6828 >> 58);
        t10702 = (((a29211)|(a29212)));
        t10703 = (t6828 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10704 = (t6825 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10705 = (((t10703)|(t10704)));
        /* End of MPShiftRight2D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        b1617 = ((int) 1);
        t10706 = (288230376151711744 - b1617);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10707 = (((t6817)&(t10706)));
        t10708 = (((t6818)&((-1))));
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a29213 = (t10707 << 6);
        a29214 = (t10708 >> 58);
        t10709 = (((a29213)|(a29214)));
        t10710 = (t10708 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        /* Begin of MPShiftRight1D */
        t10711 = (t6823 >> 58);
        /* End of MPShiftRight1D */
        /* Begin of MPShiftLeft2D */
        a29215 = (t6823 << 6);
        a29216 = (t6824 >> 58);
        t10712 = (((a29215)|(a29216)));
        t10713 = (t6824 << 6);
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        t10714 = (t6821 >> 58);
        /* End of MPShiftRight1D */
        /* MPBinOrD 64 */
        t10715 = (((t10713)|(t10714)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10716 = (((t10710)|(t10711)));
        /* MPBinOrD 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        a29217 = (t6821 << 6);
        a29218 = (t6822 >> 58);
        t10717 = (((a29217)|(a29218)));
        t10718 = (t6822 << 6);
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        t10719 = (((t10718)|(t10701)));
        /* MPBinOrD 64 */
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a24441 = mu[2];
        a24442 = mu[3];
        a24443 = mu[4];
        a24444 = mu[5];
        a24445 = mu[6];
        a24446 = mu[7];
        MPMulQDD_L3_1(t6787, t6788, t6785, t6786, t6791, t6792, t6789, t6790, 
    t6795, t6796, t6793, t6794, t6799, t6800, t6797, t6798, 
    t10709, t10716, t10712, t10715, t10717, t10719, t10702, t10705, 
    0, 0, a24441, a24442, a24443, a24444, a24445, a24446);
        /* Begin of MPShiftRight3 */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10720 = (t6795 >> 1);
        a29219 = (t6795 << 63);
        a29220 = (t6796 >> 1);
        t10721 = (((a29219)|(a29220)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPTypeCastDI 128 */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftLeft1D */
        /* Begin of MPShiftLeft2D */
        /* End of MPShiftLeft2D */
        /* MPTypeCastDI 64 */
        /* End of MPShiftLeft1D */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        t10722 = (0 - b1617);
        /* MPLessThanDI 64 */
        /* MPSubDDI 64 */
        d2064 = (2 - b1617);
        /* MPBinAndD 128 */
        /* MPBinAndD 64 */
        t10725 = (((t6788)&(d2064)));
        /* MPBinAndD 64 */
        t10726 = (((t6785)&(t10722)));
        t10727 = (((t6786)&((-1))));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10728 = (t10725 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10729 = (t10726 >> 1);
        a29222 = (t10726 << 63);
        a29223 = (t10727 >> 1);
        t10730 = (((a29222)|(a29223)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10731 = (((t10728)|(t10729)));
        /* Begin of MPShiftLeft1D */
        t10732 = (t10727 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* Begin of MPShiftRight1D */
        /* MPTypeCastDI 64 */
        /* Begin of MPShiftRight2D */
        t10733 = (t6791 >> 1);
        a29224 = (t6791 << 63);
        a29225 = (t6792 >> 1);
        t10734 = (((a29224)|(a29225)));
        /* End of MPShiftRight2D */
        /* End of MPShiftRight1D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10735 = (((t10732)|(t10733)));
        /* Begin of MPShiftLeft2D */
        /* Begin of MPShiftLeft1D */
        t10736 = (t6792 << 63);
        /* End of MPShiftLeft1D */
        /* Begin of MPShiftRight2D */
        t10737 = (t6789 >> 1);
        a29226 = (t6789 << 63);
        a29227 = (t6790 >> 1);
        t10738 = (((a29226)|(a29227)));
        /* End of MPShiftRight2D */
        /* MPBinOrD 64 */
        t10739 = (((t10736)|(t10737)));
        /* Begin of MPShiftLeft1D */
        t10740 = (t6790 << 63);
        /* End of MPShiftLeft1D */
        /* End of MPShiftLeft2D */
        /* MPBinOrD 128 */
        /* MPBinOrD 64 */
        /* MPBinOrD 64 */
        t10741 = (((t10740)|(t10720)));
        /* End of MPShiftRight3 */
        /* MPTypeCastDI 64 */
        a24546 = modulus[2];
        a24547 = modulus[3];
        a24548 = modulus[4];
        a24549 = modulus[5];
        a24550 = modulus[6];
        a24551 = modulus[7];
        MPMulQDD_L3_1(t6803, t6804, t6801, t6802, t6807, t6808, t6805, t6806, 
    t6811, t6812, t6809, t6810, t6815, t6816, t6813, t6814, 
    t10731, t10730, t10735, t10734, t10739, t10738, t10741, t10721, 
    0, 0, a24546, a24547, a24548, a24549, a24550, a24551);
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2065 = (t6830 - t6814);
        b1619 = ((t6830 < t6814));
        d2066 = (t6829 - t6813);
        d2067 = (d2066 - b1619);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29229 = ((t6829 < t6813));
        a29230 = ((t6829 == t6813));
        a29231 = ((a29230) && (b1619));
        b1620 = ((a29229) || (a29231));
        /* Begin of MPSubDDD 64 */
        d2068 = (t6832 - t6816);
        b1621 = ((t6832 < t6816));
        d2069 = (t6831 - t6815);
        d2070 = (d2069 - b1621);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2071 = (d2068 - b1620);
        b1622 = ((d2068 < b1620));
        t10742 = (d2070 - b1622);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29235 = ((t6831 < t6815));
        a29236 = ((t6831 == t6815));
        a29237 = ((a29236) && (b1621));
        a29238 = ((a29235) || (a29237));
        /* MPEqual 64 */
        a29239 = ((t6832 == t6816));
        a29240 = ((a29236) && (a29239));
        /* MPLessThan 64 */
        a29241 = ((a29240) && (b1620));
        b1623 = ((a29238) || (a29241));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2072 = (t6826 - t6810);
        b1624 = ((t6826 < t6810));
        d2073 = (t6825 - t6809);
        d2074 = (d2073 - b1624);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29244 = ((t6825 < t6809));
        a29245 = ((t6825 == t6809));
        a29246 = ((a29245) && (b1624));
        b1625 = ((a29244) || (a29246));
        /* Begin of MPSubDDD 64 */
        d2075 = (t6828 - t6812);
        b1626 = ((t6828 < t6812));
        d2076 = (t6827 - t6811);
        d2077 = (d2076 - b1626);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2078 = (d2075 - b1625);
        b1627 = ((d2075 < b1625));
        t10743 = (d2077 - b1627);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2079 = (d2072 - b1623);
        b1628 = ((d2072 < b1623));
        t10744 = (d2074 - b1628);
        /* MPLessThanDI 64 */
        a29251 = ((d2074 == 0));
        b1629 = ((a29251) && (b1628));
        /* MPSubDDI 64 */
        d2080 = (d2078 - b1629);
        b1630 = ((d2078 < b1629));
        t10745 = (t10743 - b1630);
        /* End of MPSubDDD 256 */
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2081 = (d2065 - a24551);
        b1631 = ((d2065 < a24551));
        d2082 = (d2067 - a24550);
        d2083 = (d2082 - b1631);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29255 = ((d2067 < a24550));
        a29256 = ((d2067 == a24550));
        a29257 = ((a29256) && (b1631));
        b1632 = ((a29255) || (a29257));
        /* Begin of MPSubDDD 64 */
        d2084 = (d2071 - a24549);
        b1633 = ((d2071 < a24549));
        d2085 = (t10742 - a24548);
        d2086 = (d2085 - b1633);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2087 = (d2084 - b1632);
        b1634 = ((d2084 < b1632));
        t10746 = (d2086 - b1634);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29261 = ((t10742 < a24548));
        a29262 = ((t10742 == a24548));
        a29263 = ((a29262) && (b1633));
        a29264 = ((a29261) || (a29263));
        /* MPEqual 64 */
        a29265 = ((d2071 == a24549));
        a29266 = ((a29262) && (a29265));
        /* MPLessThan 64 */
        a29267 = ((a29266) && (b1632));
        b1635 = ((a29264) || (a29267));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2088 = (d2079 - a24547);
        b1636 = ((d2079 < a24547));
        d2089 = (t10744 - a24546);
        d2090 = (d2089 - b1636);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29270 = ((t10744 < a24546));
        a29271 = ((t10744 == a24546));
        a29272 = ((a29271) && (b1636));
        b1637 = ((a29270) || (a29272));
        /* MPTypeCastDI 64 */
        /* Begin of MPSubDDD 64 */
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2091 = (d2080 - b1637);
        b1638 = ((d2080 < b1637));
        t10747 = (t10745 - b1638);
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2092 = (d2088 - b1635);
        b1639 = ((d2088 < b1635));
        t10748 = (d2090 - b1639);
        /* MPLessThanDI 64 */
        a29276 = ((d2090 == 0));
        b1640 = ((a29276) && (b1639));
        /* MPSubDDI 64 */
        d2093 = (d2091 - b1640);
        b1641 = ((d2091 < b1640));
        t10749 = (t10747 - b1641);
        /* End of MPSubDDD 256 */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a29279 = ((t10745 == 0));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a29280 = ((d2080 == 0));
        a29281 = ((a29279) && (a29280));
        /* MPLessThan 64 */
        a29282 = ((a29281) && (b1637));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a29283 = ((d2079 == a24547));
        a29284 = ((a29271) && (a29283));
        a29285 = ((a29281) && (a29284));
        /* MPLessThan 128 */
        a29286 = ((a29285) && (b1635));
        i495 = ((a29282) || (a29286));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10750 = ((i495) ? (t10745) : (t10749));
        t10751 = ((i495) ? (d2080) : (d2093));
        /* MPCondD 64 */
        t10752 = ((i495) ? (t10744) : (t10748));
        t10753 = ((i495) ? (d2079) : (d2092));
        /* MPCondD 128 */
        /* MPCondD 64 */
        t10754 = ((i495) ? (t10742) : (t10746));
        t10755 = ((i495) ? (d2071) : (d2087));
        /* MPCondD 64 */
        t10756 = ((i495) ? (d2067) : (d2083));
        t10757 = ((i495) ? (d2065) : (d2081));
        /* End of MPModDQ */
        /* End of MPModMul 256 */
        a29287 = (16384*blockIdx.x);
        a29288 = (2*threadIdx.x);
        a29289 = (256*i3);
        b1642 = (a29287 + a29288);
        a29290 = (b1642 + a29289);
        /* Begin of MPModAdd 256 */
        /* MPAddDDD 256 */
        a29291 = (2*a29183);
        a29292 = (a29291 + 1);
        /* MPAssignDD 128 */
        a29293 = (2*a29292);
        /* MPAssignDD 64 */
        a29294 = (2*a29293);
        t10758 = P1[a29294];
        a29295 = (a29294 + 1);
        t10759 = P1[a29295];
        a29296 = (a29293 + 1);
        /* MPAssignDD 64 */
        a29297 = (2*a29296);
        t10760 = P1[a29297];
        a29298 = (a29297 + 1);
        t10761 = P1[a29298];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2105 = (((uint128_t ) t10761) + ((uint128_t ) t10757));
        t10762 = ((uint64_t ) s2105);
        c1162 = (s2105 >> 64);
        s2106 = (((uint128_t ) t10760) + ((uint128_t ) t10756));
        s2107 = (((uint128_t ) s2106) + ((uint128_t ) c1162));
        t10763 = ((uint64_t ) s2107);
        c1163 = (s2107 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2108 = (((uint128_t ) t10759) + ((uint128_t ) t10755));
        t10764 = ((uint64_t ) s2108);
        c1164 = (s2108 >> 64);
        s2109 = (((uint128_t ) t10758) + ((uint128_t ) t10754));
        s2110 = (((uint128_t ) s2109) + ((uint128_t ) c1164));
        t10765 = ((uint64_t ) s2110);
        c1165 = (s2110 >> 64);
        /* MPPropagateCarry 64 */
        t10766 = (t10764 + c1163);
        a29299 = ((t10766 == 0));
        a29300 = (t10765 + c1163);
        t10767 = ((a29299) ? (a29300) : (t10765));
        a29301 = ((t10767 == 0));
        a29302 = ((a29301) && (a29299));
        a29303 = (c1165 + c1163);
        t10768 = ((a29302) ? (a29303) : (c1165));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        a29307 = (2*a29291);
        a29308 = (a29307 + 1);
        /* MPAssignDD 64 */
        a29309 = (2*a29308);
        t10770 = P1[a29309];
        a29310 = (a29309 + 1);
        t10771 = P1[a29310];
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2111 = (((uint128_t ) t10771) + ((uint128_t ) t10753));
        t10772 = ((uint64_t ) s2111);
        c1166 = (s2111 >> 64);
        s2112 = (((uint128_t ) t10770) + ((uint128_t ) t10752));
        s2113 = (((uint128_t ) s2112) + ((uint128_t ) c1166));
        t10773 = ((uint64_t ) s2113);
        c1167 = (s2113 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        t10774 = ((uint64_t ) t10751);
        c1168 = (t10751 >> 64);
        s2114 = (((uint128_t ) t10750) + ((uint128_t ) c1168));
        t10775 = ((uint64_t ) s2114);
        /* MPPropagateCarry 64 */
        t10776 = (t10774 + c1167);
        a29311 = ((t10776 == 0));
        a29312 = (t10775 + c1167);
        t10777 = ((a29311) ? (a29312) : (t10775));
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2115 = (((uint128_t ) t10772) + ((uint128_t ) t10768));
        t10780 = ((uint64_t ) s2115);
        c1170 = (s2115 >> 64);
        s2116 = (((uint128_t ) t10773) + ((uint128_t ) c1170));
        t10781 = ((uint64_t ) s2116);
        /* MPEqualDI 64 */
        a29319 = ((t10781 == 0));
        a29320 = ((t10780 == 0));
        a29321 = ((a29319) && (a29320));
        /* MPAddDDI 64 */
        s2117 = (((uint128_t ) t10776) + ((uint128_t ) t10768));
        t10782 = ((uint64_t ) s2117);
        c1171 = (s2117 >> 64);
        s2118 = (((uint128_t ) t10777) + ((uint128_t ) c1171));
        t10783 = ((uint64_t ) s2118);
        /* MPCondD 64 */
        t10784 = ((a29321) ? (t10783) : (t10777));
        t10785 = ((a29321) ? (t10782) : (t10776));
        /* MPExtractLow 128 */
        /* Begin of MPModDD */
        /* MPLessThan 256 */
        /* MPLessThan 128 */
        /* MPTypeCastDI 64 */
        /* MPLessThan 64 */
        a29322 = ((0 < t10784));
        a29323 = ((0 == t10784));
        a29324 = ((0 < t10785));
        a29325 = ((a29323) && (a29324));
        a29326 = ((a29322) || (a29325));
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        a29327 = ((0 == t10785));
        a29328 = ((a29323) && (a29327));
        /* MPLessThan 64 */
        a29329 = ((a24546 < t10781));
        a29330 = ((a24546 == t10781));
        a29331 = ((a24547 < t10780));
        a29332 = ((a29330) && (a29331));
        a29333 = ((a29329) || (a29332));
        a29334 = ((a29328) && (a29333));
        a29335 = ((a29326) || (a29334));
        /* MPEqual 128 */
        /* MPTypeCastDI 64 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a29336 = ((a24547 == t10780));
        a29337 = ((a29330) && (a29336));
        a29338 = ((a29328) && (a29337));
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29339 = ((a24548 < t10767));
        a29340 = ((a24548 == t10767));
        a29341 = ((a24549 < t10766));
        a29342 = ((a29340) && (a29341));
        a29343 = ((a29339) || (a29342));
        /* MPEqual 64 */
        a29344 = ((a24549 == t10766));
        a29345 = ((a29340) && (a29344));
        /* MPLessThan 64 */
        a29346 = ((a24550 < t10763));
        a29347 = ((a24550 == t10763));
        a29348 = ((a24551 < t10762));
        a29349 = ((a29347) && (a29348));
        a29350 = ((a29346) || (a29349));
        a29351 = ((a29345) && (a29350));
        a29352 = ((a29343) || (a29351));
        a29353 = ((a29338) && (a29352));
        i496 = ((a29335) || (a29353));
        /* Begin of MPSubDDD 256 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2094 = (t10762 - a24551);
        b1643 = ((t10762 < a24551));
        d2095 = (t10763 - a24550);
        d2096 = (d2095 - b1643);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29355 = ((t10763 < a24550));
        a29356 = ((t10763 == a24550));
        a29357 = ((a29356) && (b1643));
        b1644 = ((a29355) || (a29357));
        /* Begin of MPSubDDD 64 */
        d2097 = (t10766 - a24549);
        b1645 = ((t10766 < a24549));
        d2098 = (t10767 - a24548);
        d2099 = (d2098 - b1645);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2100 = (d2097 - b1644);
        b1646 = ((d2097 < b1644));
        t10786 = (d2099 - b1646);
        /* End of MPSubDDD 128 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29361 = ((t10767 < a24548));
        a29362 = ((t10767 == a24548));
        a29363 = ((a29362) && (b1645));
        a29364 = ((a29361) || (a29363));
        /* MPEqual 64 */
        a29365 = ((t10766 == a24549));
        a29366 = ((a29362) && (a29365));
        /* MPLessThan 64 */
        a29367 = ((a29366) && (b1644));
        b1647 = ((a29364) || (a29367));
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2101 = (t10780 - a24547);
        b1648 = ((t10780 < a24547));
        d2102 = (t10781 - a24546);
        d2103 = (d2102 - b1648);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2104 = (d2101 - b1647);
        b1649 = ((d2101 < b1647));
        t10787 = (d2103 - b1649);
        /* End of MPSubDDD 256 */
        a29371 = (2*a29290);
        /* MPCondD 128 */
        a29372 = (2*a29371);
        a29373 = (a29372 + 1);
        /* MPCondD 64 */
        a29374 = (2*a29373);
        Y[a29374] = ((i496) ? (t10787) : (t10781));
        a29375 = (a29374 + 1);
        Y[a29375] = ((i496) ? (d2104) : (t10780));
        a29376 = (a29371 + 1);
        /* MPCondD 128 */
        a29377 = (2*a29376);
        /* MPCondD 64 */
        a29378 = (2*a29377);
        Y[a29378] = ((i496) ? (t10786) : (t10767));
        a29379 = (a29378 + 1);
        Y[a29379] = ((i496) ? (d2100) : (t10766));
        a29380 = (a29377 + 1);
        /* MPCondD 64 */
        a29381 = (2*a29380);
        Y[a29381] = ((i496) ? (d2096) : (t10763));
        a29382 = (a29381 + 1);
        Y[a29382] = ((i496) ? (d2094) : (t10762));
        /* End of MPModDD */
        /* End of MPModAdd 256 */
        a29383 = (a29290 + 1);
        /* Begin of MPModSub 256 */
        /* Begin of MPSubDDD 256 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2105 = (t10761 - t10757);
        b1650 = ((t10761 < t10757));
        d2106 = (t10760 - t10756);
        d2107 = (d2106 - b1650);
        /* End of MPSubDDD 64 */
        /* MPLessThan 64 */
        a29385 = ((t10760 < t10756));
        a29386 = ((t10760 == t10756));
        a29387 = ((a29386) && (b1650));
        b1651 = ((a29385) || (a29387));
        /* Begin of MPSubDDD 64 */
        d2108 = (t10759 - t10755);
        b1652 = ((t10759 < t10755));
        d2109 = (t10758 - t10754);
        d2110 = (d2109 - b1652);
        /* End of MPSubDDD 64 */
        /* MPSubDDI 64 */
        d2111 = (d2108 - b1651);
        b1653 = ((d2108 < b1651));
        t10788 = (d2110 - b1653);
        /* End of MPSubDDD 128 */
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29391 = ((t10758 < t10754));
        a29392 = ((t10758 == t10754));
        a29393 = ((a29392) && (b1652));
        a29394 = ((a29391) || (a29393));
        /* MPEqual 64 */
        a29395 = ((t10759 == t10755));
        a29396 = ((a29392) && (a29395));
        /* MPLessThan 64 */
        a29397 = ((a29396) && (b1651));
        b1654 = ((a29394) || (a29397));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* Begin of MPSubDDD 128 */
        /* Begin of MPSubDDD 64 */
        d2112 = (t10771 - t10753);
        b1655 = ((t10771 < t10753));
        d2113 = (t10770 - t10752);
        d2114 = (d2113 - b1655);
        /* End of MPSubDDD 64 */
        /* End of MPSubDDD 128 */
        /* MPSubDDI 128 */
        /* MPSubDDI 64 */
        d2115 = (d2112 - b1654);
        b1656 = ((d2112 < b1654));
        t10789 = (d2114 - b1656);
        /* End of MPSubDDD 256 */
        /* MPAddDDD 256 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2119 = (((uint128_t ) d2105) + ((uint128_t ) a24551));
        t10790 = ((uint64_t ) s2119);
        c1172 = (s2119 >> 64);
        s2120 = (((uint128_t ) d2107) + ((uint128_t ) a24550));
        s2121 = (((uint128_t ) s2120) + ((uint128_t ) c1172));
        t10791 = ((uint64_t ) s2121);
        c1173 = (s2121 >> 64);
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPAddQDD 64 */
        s2122 = (((uint128_t ) d2111) + ((uint128_t ) a24549));
        t10792 = ((uint64_t ) s2122);
        c1174 = (s2122 >> 64);
        s2123 = (((uint128_t ) t10788) + ((uint128_t ) a24548));
        s2124 = (((uint128_t ) s2123) + ((uint128_t ) c1174));
        t10793 = ((uint64_t ) s2124);
        c1175 = (s2124 >> 64);
        /* MPPropagateCarry 64 */
        t10794 = (t10792 + c1173);
        a29401 = ((t10794 == 0));
        a29402 = (t10793 + c1173);
        t10795 = ((a29401) ? (a29402) : (t10793));
        a29403 = ((t10795 == 0));
        a29404 = ((a29403) && (a29401));
        a29405 = (c1175 + c1173);
        t10796 = ((a29404) ? (a29405) : (c1175));
        /* MPExtractLow 64 */
        /* MPExtractCarry 64 */
        /* MPExtractLow 128 */
        /* MPExtractCarry 128 */
        /* MPAddQDD 128 */
        /* MPAddQDD 64 */
        s2125 = (((uint128_t ) d2115) + ((uint128_t ) a24547));
        t10798 = ((uint64_t ) s2125);
        c1176 = (s2125 >> 64);
        s2126 = (((uint128_t ) t10789) + ((uint128_t ) a24546));
        s2127 = (((uint128_t ) s2126) + ((uint128_t ) c1176));
        t10799 = ((uint64_t ) s2127);
        /* MPExtractLow 64 */
        /* MPPropagateCarry 128 */
        /* MPAddDDI 64 */
        s2128 = (((uint128_t ) t10798) + ((uint128_t ) t10796));
        t10800 = ((uint64_t ) s2128);
        c1178 = (s2128 >> 64);
        s2129 = (((uint128_t ) t10799) + ((uint128_t ) c1178));
        t10801 = ((uint64_t ) s2129);
        /* MPExtractLow 128 */
        /* MPLessThan 256 */
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        a29409 = ((0 < t10750));
        a29410 = ((0 == t10750));
        a29411 = ((0 < t10751));
        a29412 = ((a29410) && (a29411));
        a29413 = ((a29409) || (a29412));
        /* MPEqual 64 */
        a29414 = ((0 == t10751));
        a29415 = ((a29410) && (a29414));
        /* MPLessThan 64 */
        a29416 = ((t10770 < t10752));
        a29417 = ((t10770 == t10752));
        a29418 = ((a29417) && (b1655));
        a29419 = ((a29416) || (a29418));
        a29420 = ((a29415) && (a29419));
        a29421 = ((a29413) || (a29420));
        /* MPAssignDD 128 */
        /* MPTypeCastDI 64 */
        /* MPAssignDD 64 */
        /* MPEqual 128 */
        /* MPEqual 64 */
        /* MPEqual 64 */
        a29422 = ((t10771 == t10753));
        a29423 = ((a29417) && (a29422));
        a29424 = ((a29415) && (a29423));
        /* MPAssignDD 128 */
        /* MPAssignDD 64 */
        /* MPAssignDD 64 */
        /* MPLessThan 128 */
        /* MPLessThan 64 */
        /* MPEqual 64 */
        /* MPLessThan 64 */
        a29425 = ((a29424) && (b1654));
        i497 = ((a29421) || (a29425));
        a29426 = (2*a29383);
        /* MPCondD 128 */
        a29427 = (2*a29426);
        a29428 = (a29427 + 1);
        /* MPCondD 64 */
        a29429 = (2*a29428);
        Y[a29429] = ((i497) ? (t10801) : (t10789));
        a29430 = (a29429 + 1);
        Y[a29430] = ((i497) ? (t10800) : (d2115));
        a29431 = (a29426 + 1);
        /* MPCondD 128 */
        a29432 = (2*a29431);
        /* MPCondD 64 */
        a29433 = (2*a29432);
        Y[a29433] = ((i497) ? (t10795) : (t10788));
        a29434 = (a29433 + 1);
        Y[a29434] = ((i497) ? (t10794) : (d2111));
        a29435 = (a29432 + 1);
        /* MPCondD 64 */
        a29436 = (2*a29435);
        Y[a29436] = ((i497) ? (t10791) : (d2107));
        a29437 = (a29436 + 1);
        Y[a29437] = ((i497) ? (t10790) : (d2105));
        /* End of MPModSub 256 */
    }
}

void nttmpcuda(uint64_t  *Y, uint64_t  *X, uint64_t modulus[2], uint64_t  *twiddles, uint64_t mu[2]) {
    dim3 b68(128, 1, 1), b69(128, 1, 1), b70(128, 1, 1), b71(128, 1, 1), b72(128, 1, 1), b73(128, 1, 1), b74(128, 1, 1), b75(128, 1, 1), 
    b76(128, 1, 1), b77(128, 1, 1), b78(128, 1, 1), b79(128, 1, 1), b80(128, 1, 1), b81(128, 1, 1), g1(2, 1, 1), g10(2, 1, 1), 
    g11(2, 1, 1), g12(2, 1, 1), g13(2, 1, 1), g14(2, 1, 1), g2(2, 1, 1), g3(2, 1, 1), g4(2, 1, 1), g5(2, 1, 1), 
    g6(2, 1, 1), g7(2, 1, 1), g8(2, 1, 1), g9(2, 1, 1);
    ker_code0<<<g1, b68>>>(X, Y, modulus, twiddles, mu);
    ker_code1<<<g2, b69>>>(X, Y, modulus, twiddles, mu);
    ker_code2<<<g3, b70>>>(X, Y, modulus, twiddles, mu);
    ker_code3<<<g4, b71>>>(X, Y, modulus, twiddles, mu);
    ker_code4<<<g5, b72>>>(X, Y, modulus, twiddles, mu);
    ker_code5<<<g6, b73>>>(X, Y, modulus, twiddles, mu);
    ker_code6<<<g7, b74>>>(X, Y, modulus, twiddles, mu);
    ker_code7<<<g8, b75>>>(X, Y, modulus, twiddles, mu);
    ker_code8<<<g9, b76>>>(X, Y, modulus, twiddles, mu);
    ker_code9<<<g10, b77>>>(X, Y, modulus, twiddles, mu);
    ker_code10<<<g11, b78>>>(X, Y, modulus, twiddles, mu);
    ker_code11<<<g12, b79>>>(X, Y, modulus, twiddles, mu);
    ker_code12<<<g13, b80>>>(X, Y, modulus, twiddles, mu);
    ker_code13<<<g14, b81>>>(X, Y, modulus, twiddles, mu);
}

void destroy_nttmpcuda() {
    /* skip */
}
