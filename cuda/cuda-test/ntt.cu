
/*
 * This code was generated by Spiral 8.5.1, www.spiral.net
 */

#include <stdint.h>
__device__ uint64_t P1[64];
__device__ uint64_t P2[64];

__device__ void MPMulQDD_L2(uint64_t &t308, uint64_t &t309, uint64_t &t300, uint64_t &t301, uint64_t &t292, uint64_t &t289, uint64_t &t284, uint64_t &t285, uint64_t t719, uint64_t t720, uint64_t t721, uint64_t t722, uint64_t t723, uint64_t t724, uint64_t t725, uint64_t t726) {
    int a2175, a2177, a2178, a2188, a2190, a2191, a2196, c68, 
            c69, c70, c71, c72, c73, c74, c75, c76, 
            c77, c78, c79, c80, c81, c82, c83, c84, 
            c85, c86, c87, c88, c89, c90, c91, c92;
    uint64_t a2176, a2179, a2189, a2192, a2197, t757, t758, t759, 
            t760, t761, t762, t763, t764, t765, t766, t767, 
            t768, t769, t770, t771, t772, t773, t774, t775, 
            t776, t777, t778, t779, t780, t781, t782, t783, 
            t784, t785, t786, t787, t788, t789, t790, t791, 
            t792, t793, t794, t795, t796, t797, t798, t799, 
            t800, t801, t802, t803, t804, t805, t806, t807, 
            t808, t809, t810, t811, t812, t813, t814, t815, 
            t816, t817, t818, t819, t821, t822, t823, t824, 
            t826, t827;
    uint128_t a2159, a2160, a2161, a2162, a2163, a2164, a2165, a2166, 
            a2167, a2168, a2169, a2170, a2171, a2172, a2173, a2174, 
            s161, s162, s163, s164, s165, s166, s167, s168, 
            s169, s170, s171, s172, s173, s174, s175, s176, 
            s177, s178, s179, s180, s181, s182, s183, s184, 
            s185, s186, s187, s188, s189, s190, s191, s192, 
            s193, s194, s195, s196, s197, s198, s199, s200, 
            s201, s202, s203, s204, s205, s206;
    /* Begin of MPMulQDD_Schoolbook_Full */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a2159 = (((uint128_t ) t722)*((uint128_t ) t726));
    t757 = (a2159 >> 64);
    t758 = ((uint64_t ) a2159);
    a2160 = (((uint128_t ) t721)*((uint128_t ) t725));
    t759 = (a2160 >> 64);
    t760 = ((uint64_t ) a2160);
    a2161 = (((uint128_t ) t721)*((uint128_t ) t726));
    t761 = (a2161 >> 64);
    t762 = ((uint64_t ) a2161);
    a2162 = (((uint128_t ) t722)*((uint128_t ) t725));
    t763 = (a2162 >> 64);
    t764 = ((uint64_t ) a2162);
    /* MPAddQDD 64 */
    s161 = (((uint128_t ) t762) + ((uint128_t ) t764));
    t765 = ((uint64_t ) s161);
    c68 = (s161 >> 64);
    s162 = (((uint128_t ) t761) + ((uint128_t ) t763));
    s163 = (((uint128_t ) s162) + ((uint128_t ) c68));
    t766 = ((uint64_t ) s163);
    c69 = (s163 >> 64);
    /* Begin of MPAddQQQ 64 */
    t767 = ((uint64_t ) t758);
    s164 = (((uint128_t ) t757) + ((uint128_t ) t765));
    t768 = ((uint64_t ) s164);
    c70 = (s164 >> 64);
    s165 = (((uint128_t ) t760) + ((uint128_t ) t766));
    s166 = (((uint128_t ) s165) + ((uint128_t ) c70));
    t769 = ((uint64_t ) s166);
    c71 = (s166 >> 64);
    s167 = (((uint128_t ) t759) + ((uint128_t ) c69));
    s168 = (((uint128_t ) s167) + ((uint128_t ) c71));
    t770 = ((uint64_t ) s168);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a2163 = (((uint128_t ) t720)*((uint128_t ) t724));
    t771 = (a2163 >> 64);
    t772 = ((uint64_t ) a2163);
    a2164 = (((uint128_t ) t719)*((uint128_t ) t723));
    t773 = (a2164 >> 64);
    t774 = ((uint64_t ) a2164);
    a2165 = (((uint128_t ) t719)*((uint128_t ) t724));
    t775 = (a2165 >> 64);
    t776 = ((uint64_t ) a2165);
    a2166 = (((uint128_t ) t720)*((uint128_t ) t723));
    t777 = (a2166 >> 64);
    t778 = ((uint64_t ) a2166);
    /* MPAddQDD 64 */
    s169 = (((uint128_t ) t776) + ((uint128_t ) t778));
    t779 = ((uint64_t ) s169);
    c72 = (s169 >> 64);
    s170 = (((uint128_t ) t775) + ((uint128_t ) t777));
    s171 = (((uint128_t ) s170) + ((uint128_t ) c72));
    t780 = ((uint64_t ) s171);
    c73 = (s171 >> 64);
    /* Begin of MPAddQQQ 64 */
    t781 = ((uint64_t ) t772);
    s172 = (((uint128_t ) t771) + ((uint128_t ) t779));
    t782 = ((uint64_t ) s172);
    c74 = (s172 >> 64);
    s173 = (((uint128_t ) t774) + ((uint128_t ) t780));
    s174 = (((uint128_t ) s173) + ((uint128_t ) c74));
    t783 = ((uint64_t ) s174);
    c75 = (s174 >> 64);
    s175 = (((uint128_t ) t773) + ((uint128_t ) c73));
    s176 = (((uint128_t ) s175) + ((uint128_t ) c75));
    t784 = ((uint64_t ) s176);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a2167 = (((uint128_t ) t720)*((uint128_t ) t726));
    t785 = (a2167 >> 64);
    t786 = ((uint64_t ) a2167);
    a2168 = (((uint128_t ) t719)*((uint128_t ) t725));
    t787 = (a2168 >> 64);
    t788 = ((uint64_t ) a2168);
    a2169 = (((uint128_t ) t719)*((uint128_t ) t726));
    t789 = (a2169 >> 64);
    t790 = ((uint64_t ) a2169);
    a2170 = (((uint128_t ) t720)*((uint128_t ) t725));
    t791 = (a2170 >> 64);
    t792 = ((uint64_t ) a2170);
    /* MPAddQDD 64 */
    s177 = (((uint128_t ) t790) + ((uint128_t ) t792));
    t793 = ((uint64_t ) s177);
    c76 = (s177 >> 64);
    s178 = (((uint128_t ) t789) + ((uint128_t ) t791));
    s179 = (((uint128_t ) s178) + ((uint128_t ) c76));
    t794 = ((uint64_t ) s179);
    c77 = (s179 >> 64);
    /* Begin of MPAddQQQ 64 */
    t795 = ((uint64_t ) t786);
    s180 = (((uint128_t ) t785) + ((uint128_t ) t793));
    t796 = ((uint64_t ) s180);
    c78 = (s180 >> 64);
    s181 = (((uint128_t ) t788) + ((uint128_t ) t794));
    s182 = (((uint128_t ) s181) + ((uint128_t ) c78));
    t797 = ((uint64_t ) s182);
    c79 = (s182 >> 64);
    s183 = (((uint128_t ) t787) + ((uint128_t ) c77));
    s184 = (((uint128_t ) s183) + ((uint128_t ) c79));
    t798 = ((uint64_t ) s184);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* Begin of MPMulQDD_Schoolbook_Full */
    a2171 = (((uint128_t ) t722)*((uint128_t ) t724));
    t799 = (a2171 >> 64);
    t800 = ((uint64_t ) a2171);
    a2172 = (((uint128_t ) t721)*((uint128_t ) t723));
    t801 = (a2172 >> 64);
    t802 = ((uint64_t ) a2172);
    a2173 = (((uint128_t ) t721)*((uint128_t ) t724));
    t803 = (a2173 >> 64);
    t804 = ((uint64_t ) a2173);
    a2174 = (((uint128_t ) t722)*((uint128_t ) t723));
    t805 = (a2174 >> 64);
    t806 = ((uint64_t ) a2174);
    /* MPAddQDD 64 */
    s185 = (((uint128_t ) t804) + ((uint128_t ) t806));
    t807 = ((uint64_t ) s185);
    c80 = (s185 >> 64);
    s186 = (((uint128_t ) t803) + ((uint128_t ) t805));
    s187 = (((uint128_t ) s186) + ((uint128_t ) c80));
    t808 = ((uint64_t ) s187);
    c81 = (s187 >> 64);
    /* Begin of MPAddQQQ 64 */
    t809 = ((uint64_t ) t800);
    s188 = (((uint128_t ) t799) + ((uint128_t ) t807));
    t810 = ((uint64_t ) s188);
    c82 = (s188 >> 64);
    s189 = (((uint128_t ) t802) + ((uint128_t ) t808));
    s190 = (((uint128_t ) s189) + ((uint128_t ) c82));
    t811 = ((uint64_t ) s190);
    c83 = (s190 >> 64);
    s191 = (((uint128_t ) t801) + ((uint128_t ) c81));
    s192 = (((uint128_t ) s191) + ((uint128_t ) c83));
    t812 = ((uint64_t ) s192);
    /* End of MPAddQQQ 64 */
    /* End of MPMulQDD_Schoolbook_Full */
    /* MPExtractHigh 64 */
    /* MPExtractLow 64 */
    /* MPAddQDD 128 */
    /* MPAddQDD 64 */
    s193 = (((uint128_t ) t795) + ((uint128_t ) t809));
    t813 = ((uint64_t ) s193);
    c84 = (s193 >> 64);
    s194 = (((uint128_t ) t796) + ((uint128_t ) t810));
    s195 = (((uint128_t ) s194) + ((uint128_t ) c84));
    t814 = ((uint64_t ) s195);
    c85 = (s195 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s196 = (((uint128_t ) t797) + ((uint128_t ) t811));
    t815 = ((uint64_t ) s196);
    c86 = (s196 >> 64);
    s197 = (((uint128_t ) t798) + ((uint128_t ) t812));
    s198 = (((uint128_t ) s197) + ((uint128_t ) c86));
    t816 = ((uint64_t ) s198);
    c87 = (s198 >> 64);
    /* MPPropagateCarry 64 */
    t817 = (t815 + c85);
    a2175 = ((t817 == 0));
    a2176 = (t816 + c85);
    t818 = ((a2175) ? (a2176) : (t816));
    a2177 = ((t818 == 0));
    a2178 = ((a2177) && (a2175));
    a2179 = (c87 + c85);
    t819 = ((a2178) ? (a2179) : (c87));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPTypeCastDI 64 */
    /* Begin of MPAddQQQ 128 */
    /* MPAddQDD 64 */
    t285 = ((uint64_t ) t767);
    t284 = ((uint64_t ) t768);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s199 = (((uint128_t ) t769) + ((uint128_t ) t813));
    t289 = ((uint64_t ) s199);
    c88 = (s199 >> 64);
    s200 = (((uint128_t ) t770) + ((uint128_t ) t814));
    s201 = (((uint128_t ) s200) + ((uint128_t ) c88));
    t821 = ((uint64_t ) s201);
    c89 = (s201 >> 64);
    /* MPPropagateCarry 64 */
    t292 = t821;
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s202 = (((uint128_t ) t781) + ((uint128_t ) t817));
    t822 = ((uint64_t ) s202);
    c90 = (s202 >> 64);
    s203 = (((uint128_t ) t782) + ((uint128_t ) t818));
    s204 = (((uint128_t ) s203) + ((uint128_t ) c90));
    t823 = ((uint64_t ) s204);
    c91 = (s204 >> 64);
    /* MPPropagateCarry 64 */
    t301 = (t822 + c89);
    a2188 = ((t301 == 0));
    a2189 = (t823 + c89);
    t300 = ((a2188) ? (a2189) : (t823));
    a2190 = ((t300 == 0));
    a2191 = ((a2190) && (a2188));
    a2192 = (c91 + c89);
    t824 = ((a2191) ? (a2192) : (c91));
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQID 64 */
    s205 = (((uint128_t ) t783) + ((uint128_t ) t819));
    t826 = ((uint64_t ) s205);
    c92 = (s205 >> 64);
    s206 = (((uint128_t ) t784) + ((uint128_t ) c92));
    t827 = ((uint64_t ) s206);
    /* MPPropagateCarry 64 */
    t309 = (t826 + t824);
    a2196 = ((t309 == 0));
    a2197 = (t827 + t824);
    t308 = ((a2196) ? (a2197) : (t827));
    /* MPExtractLow 64 */
    /* End of MPAddQQQ 128 */
    /* End of MPMulQDD_Schoolbook_Full */
}

void init_nttmpcuda() {
    /* skip */
}

__global__ void ker_code0(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a2203, a2204, a2205, a2206, a2207, a2208, a2209, a2210, 
            a2211, a2221, a2222, a2223, a2228, a2229, a2230, a2234, 
            a2235, a2236, a2237, a2238, a2239, a2240, a2241, a2242, 
            a2243, a2244, a2245, a2246, a2247, a2248, a2256, a2257, 
            a2258, a2259, a2260, a2261, a2262, a2263, a2264, a2265, 
            a2266, a2267, a2268, a2270, a2271, a2272, a2276, a2277, 
            a2278, a2279, a2280, a2281, a2282, a2284, a2285, a2286, 
            a2290, a2298, a2299, a2300, a2301, a2302, a2303, a2304, 
            a2305, a2306, a2307, a2308, a2309, a2310, b69, b70, 
            b71, b72, b73, b74, b75, b76, b77, b78, 
            b79, b80, b81, b82, b83, b84, b85, c100, 
            c94, c95, c96, c98, c99, i70, i71, i72;
    uint64_t a1011, a1012, a1013, a1014, a2212, a2213, a2214, a2215, 
            a2216, a2217, a2218, a2219, a2249, a2291, a980, a981, 
            a982, a983, d124, d125, d126, d127, d128, d129, 
            d130, d131, d132, d133, d134, d135, d136, d137, 
            d138, d139, d140, d141, d142, d143, d144, d145, 
            d146, d147, d148, d149, d150, d151, t599, t600, 
            t601, t602, t603, t604, t605, t606, t607, t608, 
            t609, t610, t611, t612, t613, t614, t615, t616, 
            t617, t618, t619, t620, t621, t622, t830, t831, 
            t832, t833, t834, t835, t836, t837, t838, t839, 
            t840, t841, t842, t843, t844, t845, t846, t847, 
            t848, t849, t850, t851, t852, t853, t854, t855, 
            t856, t857, t858, t859, t860, t861, t862, t863, 
            t864, t865, t866, t869, t870, t871, t872, t873, 
            t874, t875, t876;
    uint128_t s207, s208, s209, s210, s211, s212, s213, s214, 
            s215, s216, s217, s218;
    a2203 = (8*blockIdx.x);
    a2204 = (a2203 + threadIdx.x);
    a2205 = (a2204 + 4);
    /* Begin of MPModMul 128 */
    a2206 = (2*a2205);
    a2207 = (a2206 + 1);
    /* MPAssignDD 64 */
    /* MPAssignDD 64 */
    /* MPAssignDD 64 */
    a2208 = (2*a2206);
    t830 = X[a2208];
    a2209 = (a2208 + 1);
    t831 = X[a2209];
    /* MPAssignDD 64 */
    a2210 = (2*a2207);
    t832 = X[a2210];
    a2211 = (a2210 + 1);
    t833 = X[a2211];
    MPMulQDD_L2(t599, t600, t601, t602, t603, t604, t605, t606, 
    twiddles[4], twiddles[5], twiddles[6], twiddles[7], t830, t831, t832, t833);
    /* Begin of MPModDQ */
    /* Begin of MPShiftRight3 */
    /* Begin of MPShiftRight1D */
    t834 = (t603 >> 58);
    /* End of MPShiftRight1D */
    /* MPTypeCastDI 64 */
    /* Begin of MPShiftLeft1D */
    /* End of MPShiftLeft1D */
    /* MPSubDDI 64 */
    b69 = ((int) 1);
    t835 = (288230376151711744 - b69);
    /* MPBinAndD 64 */
    t836 = (((t599)&(t835)));
    t837 = (((t600)&((-1))));
    /* Begin of MPShiftLeft2D */
    a2212 = (t836 << 6);
    a2213 = (t837 >> 58);
    t838 = (((a2212)|(a2213)));
    t839 = (t837 << 6);
    /* End of MPShiftLeft2D */
    /* Begin of MPShiftRight1D */
    t840 = (t601 >> 58);
    /* End of MPShiftRight1D */
    /* MPBinOrD 64 */
    t841 = (((t839)|(t840)));
    /* Begin of MPShiftLeft2D */
    a2214 = (t601 << 6);
    a2215 = (t602 >> 58);
    t842 = (((a2214)|(a2215)));
    t843 = (t602 << 6);
    /* End of MPShiftLeft2D */
    /* MPBinOrD 64 */
    t844 = (((t843)|(t834)));
    /* End of MPShiftRight3 */
    a980 = mu[0];
    a981 = mu[1];
    a982 = mu[2];
    a983 = mu[3];
    MPMulQDD_L2(t615, t616, t617, t618, t619, t620, t621, t622, 
    t838, t841, t842, t844, a980, a981, a982, a983);
    /* Begin of MPShiftRight2 */
    /* Begin of MPShiftRight2D */
    t845 = (t615 >> 1);
    a2216 = (t615 << 63);
    a2217 = (t616 >> 1);
    t846 = (((a2216)|(a2217)));
    /* End of MPShiftRight2D */
    /* Begin of MPShiftLeft1D */
    t847 = (t616 << 63);
    /* End of MPShiftLeft1D */
    /* Begin of MPShiftRight2D */
    t848 = (t617 >> 1);
    a2218 = (t617 << 63);
    a2219 = (t618 >> 1);
    t849 = (((a2218)|(a2219)));
    /* End of MPShiftRight2D */
    /* MPBinOrD 64 */
    t850 = (((t847)|(t848)));
    /* End of MPShiftRight2 */
    a1011 = modulus[0];
    a1012 = modulus[1];
    a1013 = modulus[2];
    a1014 = modulus[3];
    MPMulQDD_L2(t607, t608, t609, t610, t611, t612, t613, t614, 
    t845, t846, t850, t849, a1011, a1012, a1013, a1014);
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d124 = (t606 - t614);
    b70 = ((t606 < t614));
    d125 = (t605 - t613);
    d126 = (d125 - b70);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2221 = ((t605 < t613));
    a2222 = ((t605 == t613));
    a2223 = ((a2222) && (b70));
    b71 = ((a2221) || (a2223));
    /* Begin of MPSubDDD 64 */
    d127 = (t604 - t612);
    b72 = ((t604 < t612));
    d128 = (t603 - t611);
    d129 = (d128 - b72);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d130 = (d127 - b71);
    b73 = ((d127 < b71));
    t851 = (d129 - b73);
    /* End of MPSubDDD 128 */
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d131 = (d124 - a1014);
    b74 = ((d124 < a1014));
    d132 = (d126 - a1013);
    d133 = (d132 - b74);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2228 = ((d126 < a1013));
    a2229 = ((d126 == a1013));
    a2230 = ((a2229) && (b74));
    b75 = ((a2228) || (a2230));
    /* Begin of MPSubDDD 64 */
    d134 = (d130 - a1012);
    b76 = ((d130 < a1012));
    d135 = (t851 - a1011);
    d136 = (d135 - b76);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d137 = (d134 - b75);
    b77 = ((d134 < b75));
    t852 = (d136 - b77);
    /* End of MPSubDDD 128 */
    /* MPLessThan 128 */
    /* MPLessThan 64 */
    a2234 = ((t851 < a1011));
    a2235 = ((t851 == a1011));
    a2236 = ((a2235) && (b76));
    a2237 = ((a2234) || (a2236));
    /* MPEqual 64 */
    a2238 = ((d130 == a1012));
    a2239 = ((a2235) && (a2238));
    /* MPLessThan 64 */
    a2240 = ((a2239) && (b75));
    i70 = ((a2237) || (a2240));
    /* MPCondD 64 */
    t853 = ((i70) ? (t851) : (t852));
    t854 = ((i70) ? (d130) : (d137));
    /* MPCondD 64 */
    t855 = ((i70) ? (d126) : (d133));
    t856 = ((i70) ? (d124) : (d131));
    /* End of MPModDQ */
    /* End of MPModMul 128 */
    a2241 = (2*threadIdx.x);
    /* Begin of MPModAdd 128 */
    /* MPAddDDD 128 */
    a2242 = (2*a2204);
    a2243 = (a2242 + 1);
    /* MPAssignDD 64 */
    a2244 = (2*a2243);
    t857 = X[a2244];
    a2245 = (a2244 + 1);
    t858 = X[a2245];
    /* MPAddQDD 64 */
    s207 = (((uint128_t ) t858) + ((uint128_t ) t856));
    t859 = ((uint64_t ) s207);
    c94 = (s207 >> 64);
    s208 = (((uint128_t ) t857) + ((uint128_t ) t855));
    s209 = (((uint128_t ) s208) + ((uint128_t ) c94));
    t860 = ((uint64_t ) s209);
    c95 = (s209 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAssignDD 64 */
    a2246 = (2*a2242);
    t861 = X[a2246];
    a2247 = (a2246 + 1);
    t862 = X[a2247];
    /* MPAddQDD 64 */
    s210 = (((uint128_t ) t862) + ((uint128_t ) t854));
    t863 = ((uint64_t ) s210);
    c96 = (s210 >> 64);
    s211 = (((uint128_t ) t861) + ((uint128_t ) t853));
    s212 = (((uint128_t ) s211) + ((uint128_t ) c96));
    t864 = ((uint64_t ) s212);
    /* MPPropagateCarry 64 */
    t865 = (t863 + c95);
    a2248 = ((t865 == 0));
    a2249 = (t864 + c95);
    t866 = ((a2248) ? (a2249) : (t864));
    /* MPExtractLow 64 */
    /* Begin of MPModDD */
    /* MPLessThan 128 */
    /* MPLessThan 64 */
    a2256 = ((a1011 < t866));
    a2257 = ((a1011 == t866));
    a2258 = ((a1012 < t865));
    a2259 = ((a2257) && (a2258));
    a2260 = ((a2256) || (a2259));
    /* MPEqual 64 */
    a2261 = ((a1012 == t865));
    a2262 = ((a2257) && (a2261));
    /* MPLessThan 64 */
    a2263 = ((a1013 < t860));
    a2264 = ((a1013 == t860));
    a2265 = ((a1014 < t859));
    a2266 = ((a2264) && (a2265));
    a2267 = ((a2263) || (a2266));
    a2268 = ((a2262) && (a2267));
    i71 = ((a2260) || (a2268));
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d138 = (t859 - a1014);
    b78 = ((t859 < a1014));
    d139 = (t860 - a1013);
    d140 = (d139 - b78);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2270 = ((t860 < a1013));
    a2271 = ((t860 == a1013));
    a2272 = ((a2271) && (b78));
    b79 = ((a2270) || (a2272));
    /* Begin of MPSubDDD 64 */
    d141 = (t865 - a1012);
    b80 = ((t865 < a1012));
    d142 = (t866 - a1011);
    d143 = (d142 - b80);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d144 = (d141 - b79);
    b81 = ((d141 < b79));
    t869 = (d143 - b81);
    /* End of MPSubDDD 128 */
    a2276 = (2*a2241);
    /* MPCondD 64 */
    a2277 = (2*a2276);
    P1[a2277] = ((i71) ? (t869) : (t866));
    a2278 = (a2277 + 1);
    P1[a2278] = ((i71) ? (d144) : (t865));
    a2279 = (a2276 + 1);
    /* MPCondD 64 */
    a2280 = (2*a2279);
    P1[a2280] = ((i71) ? (d140) : (t860));
    a2281 = (a2280 + 1);
    P1[a2281] = ((i71) ? (d138) : (t859));
    /* End of MPModDD */
    /* End of MPModAdd 128 */
    a2282 = (a2241 + 1);
    /* Begin of MPModSub 128 */
    /* Begin of MPSubDDD 128 */
    /* MPAssignDD 64 */
    /* Begin of MPSubDDD 64 */
    d145 = (t858 - t856);
    b82 = ((t858 < t856));
    d146 = (t857 - t855);
    d147 = (d146 - b82);
    /* End of MPSubDDD 64 */
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2284 = ((t857 < t855));
    a2285 = ((t857 == t855));
    a2286 = ((a2285) && (b82));
    b83 = ((a2284) || (a2286));
    /* MPAssignDD 64 */
    /* Begin of MPSubDDD 64 */
    d148 = (t862 - t854);
    b84 = ((t862 < t854));
    d149 = (t861 - t853);
    d150 = (d149 - b84);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d151 = (d148 - b83);
    b85 = ((d148 < b83));
    t870 = (d150 - b85);
    /* End of MPSubDDD 128 */
    /* MPAddDDD 128 */
    /* MPAddQDD 64 */
    s213 = (((uint128_t ) d145) + ((uint128_t ) a1014));
    t871 = ((uint64_t ) s213);
    c98 = (s213 >> 64);
    s214 = (((uint128_t ) d147) + ((uint128_t ) a1013));
    s215 = (((uint128_t ) s214) + ((uint128_t ) c98));
    t872 = ((uint64_t ) s215);
    c99 = (s215 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s216 = (((uint128_t ) d151) + ((uint128_t ) a1012));
    t873 = ((uint64_t ) s216);
    c100 = (s216 >> 64);
    s217 = (((uint128_t ) t870) + ((uint128_t ) a1011));
    s218 = (((uint128_t ) s217) + ((uint128_t ) c100));
    t874 = ((uint64_t ) s218);
    /* MPPropagateCarry 64 */
    t875 = (t873 + c99);
    a2290 = ((t875 == 0));
    a2291 = (t874 + c99);
    t876 = ((a2290) ? (a2291) : (t874));
    /* MPExtractLow 64 */
    /* MPLessThan 128 */
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2298 = ((t861 < t853));
    a2299 = ((t861 == t853));
    a2300 = ((a2299) && (b84));
    a2301 = ((a2298) || (a2300));
    /* MPAssignDD 64 */
    /* MPEqual 64 */
    a2302 = ((t862 == t854));
    a2303 = ((a2299) && (a2302));
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2304 = ((a2303) && (b83));
    i72 = ((a2301) || (a2304));
    a2305 = (2*a2282);
    /* MPCondD 64 */
    a2306 = (2*a2305);
    P1[a2306] = ((i72) ? (t876) : (t870));
    a2307 = (a2306 + 1);
    P1[a2307] = ((i72) ? (t875) : (d151));
    a2308 = (a2305 + 1);
    /* MPCondD 64 */
    a2309 = (2*a2308);
    P1[a2309] = ((i72) ? (t872) : (d147));
    a2310 = (a2309 + 1);
    P1[a2310] = ((i72) ? (t871) : (d145));
    /* End of MPModSub 128 */
}

__global__ void ker_code1(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a2311, a2312, a2313, a2314, a2315, a2316, a2317, a2318, 
            a2319, a2320, a2321, a2322, a2323, a2324, a2325, a2335, 
            a2336, a2337, a2342, a2343, a2344, a2348, a2349, a2350, 
            a2351, a2352, a2353, a2354, a2355, a2356, a2357, a2358, 
            a2359, a2360, a2361, a2369, a2370, a2371, a2372, a2373, 
            a2374, a2375, a2376, a2377, a2378, a2379, a2380, a2381, 
            a2383, a2384, a2385, a2389, a2390, a2391, a2392, a2394, 
            a2395, a2396, a2400, a2408, a2409, a2410, a2411, a2412, 
            a2413, a2414, a2415, a2416, a2417, a2418, b100, b101, 
            b102, b86, b87, b88, b89, b90, b91, b92, 
            b93, b94, b95, b96, b97, b98, b99, c102, 
            c103, c104, c106, c107, c108, i73, i74, i75;
    uint64_t a1396, a1397, a1398, a1399, a1427, a1428, a1429, a1430, 
            a2326, a2327, a2328, a2329, a2330, a2331, a2332, a2333, 
            a2362, a2401, d152, d153, d154, d155, d156, d157, 
            d158, d159, d160, d161, d162, d163, d164, d165, 
            d166, d167, d168, d169, d170, d171, d172, d173, 
            d174, d175, d176, d177, d178, d179, t631, t632, 
            t633, t634, t635, t636, t637, t638, t639, t640, 
            t641, t642, t643, t644, t645, t646, t647, t648, 
            t649, t650, t651, t652, t653, t654, t879, t880, 
            t881, t882, t883, t884, t885, t886, t887, t888, 
            t889, t890, t891, t892, t893, t894, t895, t896, 
            t897, t898, t899, t900, t901, t902, t903, t904, 
            t905, t906, t907, t908, t909, t910, t911, t912, 
            t913, t914, t915, t916, t917, t918, t919, t922, 
            t923, t924, t925, t926, t927, t928, t929;
    uint128_t s219, s220, s221, s222, s223, s224, s225, s226, 
            s227, s228, s229, s230;
    a2311 = (threadIdx.x + 4);
    a2312 = (a2311 % 2);
    a2313 = (2 + a2312);
    /* Begin of MPModMul 128 */
    a2314 = (2*a2313);
    a2315 = (a2314 + 1);
    a2316 = (2*a2311);
    a2317 = (a2316 + 1);
    /* MPAssignDD 64 */
    a2318 = (2*a2314);
    t879 = twiddles[a2318];
    a2319 = (a2318 + 1);
    t880 = twiddles[a2319];
    /* MPAssignDD 64 */
    a2320 = (2*a2315);
    t881 = twiddles[a2320];
    a2321 = (a2320 + 1);
    t882 = twiddles[a2321];
    /* MPAssignDD 64 */
    a2322 = (2*a2316);
    t883 = P1[a2322];
    a2323 = (a2322 + 1);
    t884 = P1[a2323];
    /* MPAssignDD 64 */
    a2324 = (2*a2317);
    t885 = P1[a2324];
    a2325 = (a2324 + 1);
    t886 = P1[a2325];
    MPMulQDD_L2(t631, t632, t633, t634, t635, t636, t637, t638, 
    t879, t880, t881, t882, t883, t884, t885, t886);
    /* Begin of MPModDQ */
    /* Begin of MPShiftRight3 */
    /* Begin of MPShiftRight1D */
    t887 = (t635 >> 58);
    /* End of MPShiftRight1D */
    /* MPTypeCastDI 64 */
    /* Begin of MPShiftLeft1D */
    /* End of MPShiftLeft1D */
    /* MPSubDDI 64 */
    b86 = ((int) 1);
    t888 = (288230376151711744 - b86);
    /* MPBinAndD 64 */
    t889 = (((t631)&(t888)));
    t890 = (((t632)&((-1))));
    /* Begin of MPShiftLeft2D */
    a2326 = (t889 << 6);
    a2327 = (t890 >> 58);
    t891 = (((a2326)|(a2327)));
    t892 = (t890 << 6);
    /* End of MPShiftLeft2D */
    /* Begin of MPShiftRight1D */
    t893 = (t633 >> 58);
    /* End of MPShiftRight1D */
    /* MPBinOrD 64 */
    t894 = (((t892)|(t893)));
    /* Begin of MPShiftLeft2D */
    a2328 = (t633 << 6);
    a2329 = (t634 >> 58);
    t895 = (((a2328)|(a2329)));
    t896 = (t634 << 6);
    /* End of MPShiftLeft2D */
    /* MPBinOrD 64 */
    t897 = (((t896)|(t887)));
    /* End of MPShiftRight3 */
    a1396 = mu[0];
    a1397 = mu[1];
    a1398 = mu[2];
    a1399 = mu[3];
    MPMulQDD_L2(t647, t648, t649, t650, t651, t652, t653, t654, 
    t891, t894, t895, t897, a1396, a1397, a1398, a1399);
    /* Begin of MPShiftRight2 */
    /* Begin of MPShiftRight2D */
    t898 = (t647 >> 1);
    a2330 = (t647 << 63);
    a2331 = (t648 >> 1);
    t899 = (((a2330)|(a2331)));
    /* End of MPShiftRight2D */
    /* Begin of MPShiftLeft1D */
    t900 = (t648 << 63);
    /* End of MPShiftLeft1D */
    /* Begin of MPShiftRight2D */
    t901 = (t649 >> 1);
    a2332 = (t649 << 63);
    a2333 = (t650 >> 1);
    t902 = (((a2332)|(a2333)));
    /* End of MPShiftRight2D */
    /* MPBinOrD 64 */
    t903 = (((t900)|(t901)));
    /* End of MPShiftRight2 */
    a1427 = modulus[0];
    a1428 = modulus[1];
    a1429 = modulus[2];
    a1430 = modulus[3];
    MPMulQDD_L2(t639, t640, t641, t642, t643, t644, t645, t646, 
    t898, t899, t903, t902, a1427, a1428, a1429, a1430);
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d152 = (t638 - t646);
    b87 = ((t638 < t646));
    d153 = (t637 - t645);
    d154 = (d153 - b87);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2335 = ((t637 < t645));
    a2336 = ((t637 == t645));
    a2337 = ((a2336) && (b87));
    b88 = ((a2335) || (a2337));
    /* Begin of MPSubDDD 64 */
    d155 = (t636 - t644);
    b89 = ((t636 < t644));
    d156 = (t635 - t643);
    d157 = (d156 - b89);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d158 = (d155 - b88);
    b90 = ((d155 < b88));
    t904 = (d157 - b90);
    /* End of MPSubDDD 128 */
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d159 = (d152 - a1430);
    b91 = ((d152 < a1430));
    d160 = (d154 - a1429);
    d161 = (d160 - b91);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2342 = ((d154 < a1429));
    a2343 = ((d154 == a1429));
    a2344 = ((a2343) && (b91));
    b92 = ((a2342) || (a2344));
    /* Begin of MPSubDDD 64 */
    d162 = (d158 - a1428);
    b93 = ((d158 < a1428));
    d163 = (t904 - a1427);
    d164 = (d163 - b93);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d165 = (d162 - b92);
    b94 = ((d162 < b92));
    t905 = (d164 - b94);
    /* End of MPSubDDD 128 */
    /* MPLessThan 128 */
    /* MPLessThan 64 */
    a2348 = ((t904 < a1427));
    a2349 = ((t904 == a1427));
    a2350 = ((a2349) && (b93));
    a2351 = ((a2348) || (a2350));
    /* MPEqual 64 */
    a2352 = ((d158 == a1428));
    a2353 = ((a2349) && (a2352));
    /* MPLessThan 64 */
    a2354 = ((a2353) && (b92));
    i73 = ((a2351) || (a2354));
    /* MPCondD 64 */
    t906 = ((i73) ? (t904) : (t905));
    t907 = ((i73) ? (d158) : (d165));
    /* MPCondD 64 */
    t908 = ((i73) ? (d154) : (d161));
    t909 = ((i73) ? (d152) : (d159));
    /* End of MPModDQ */
    /* End of MPModMul 128 */
    a2355 = (2*threadIdx.x);
    /* Begin of MPModAdd 128 */
    /* MPAddDDD 128 */
    a2356 = (a2355 + 1);
    /* MPAssignDD 64 */
    a2357 = (2*a2356);
    t910 = P1[a2357];
    a2358 = (a2357 + 1);
    t911 = P1[a2358];
    /* MPAddQDD 64 */
    s219 = (((uint128_t ) t911) + ((uint128_t ) t909));
    t912 = ((uint64_t ) s219);
    c102 = (s219 >> 64);
    s220 = (((uint128_t ) t910) + ((uint128_t ) t908));
    s221 = (((uint128_t ) s220) + ((uint128_t ) c102));
    t913 = ((uint64_t ) s221);
    c103 = (s221 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAssignDD 64 */
    a2359 = (2*a2355);
    t914 = P1[a2359];
    a2360 = (a2359 + 1);
    t915 = P1[a2360];
    /* MPAddQDD 64 */
    s222 = (((uint128_t ) t915) + ((uint128_t ) t907));
    t916 = ((uint64_t ) s222);
    c104 = (s222 >> 64);
    s223 = (((uint128_t ) t914) + ((uint128_t ) t906));
    s224 = (((uint128_t ) s223) + ((uint128_t ) c104));
    t917 = ((uint64_t ) s224);
    /* MPPropagateCarry 64 */
    t918 = (t916 + c103);
    a2361 = ((t918 == 0));
    a2362 = (t917 + c103);
    t919 = ((a2361) ? (a2362) : (t917));
    /* MPExtractLow 64 */
    /* Begin of MPModDD */
    /* MPLessThan 128 */
    /* MPLessThan 64 */
    a2369 = ((a1427 < t919));
    a2370 = ((a1427 == t919));
    a2371 = ((a1428 < t918));
    a2372 = ((a2370) && (a2371));
    a2373 = ((a2369) || (a2372));
    /* MPEqual 64 */
    a2374 = ((a1428 == t918));
    a2375 = ((a2370) && (a2374));
    /* MPLessThan 64 */
    a2376 = ((a1429 < t913));
    a2377 = ((a1429 == t913));
    a2378 = ((a1430 < t912));
    a2379 = ((a2377) && (a2378));
    a2380 = ((a2376) || (a2379));
    a2381 = ((a2375) && (a2380));
    i74 = ((a2373) || (a2381));
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d166 = (t912 - a1430);
    b95 = ((t912 < a1430));
    d167 = (t913 - a1429);
    d168 = (d167 - b95);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2383 = ((t913 < a1429));
    a2384 = ((t913 == a1429));
    a2385 = ((a2384) && (b95));
    b96 = ((a2383) || (a2385));
    /* Begin of MPSubDDD 64 */
    d169 = (t918 - a1428);
    b97 = ((t918 < a1428));
    d170 = (t919 - a1427);
    d171 = (d170 - b97);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d172 = (d169 - b96);
    b98 = ((d169 < b96));
    t922 = (d171 - b98);
    /* End of MPSubDDD 128 */
    /* MPCondD 64 */
    a2389 = (2*a2359);
    P2[a2389] = ((i74) ? (t922) : (t919));
    a2390 = (a2389 + 1);
    P2[a2390] = ((i74) ? (d172) : (t918));
    /* MPCondD 64 */
    a2391 = (2*a2360);
    P2[a2391] = ((i74) ? (d168) : (t913));
    a2392 = (a2391 + 1);
    P2[a2392] = ((i74) ? (d166) : (t912));
    /* End of MPModDD */
    /* End of MPModAdd 128 */
    /* Begin of MPModSub 128 */
    /* Begin of MPSubDDD 128 */
    /* MPAssignDD 64 */
    /* Begin of MPSubDDD 64 */
    d173 = (t911 - t909);
    b99 = ((t911 < t909));
    d174 = (t910 - t908);
    d175 = (d174 - b99);
    /* End of MPSubDDD 64 */
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2394 = ((t910 < t908));
    a2395 = ((t910 == t908));
    a2396 = ((a2395) && (b99));
    b100 = ((a2394) || (a2396));
    /* MPAssignDD 64 */
    /* Begin of MPSubDDD 64 */
    d176 = (t915 - t907);
    b101 = ((t915 < t907));
    d177 = (t914 - t906);
    d178 = (d177 - b101);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d179 = (d176 - b100);
    b102 = ((d176 < b100));
    t923 = (d178 - b102);
    /* End of MPSubDDD 128 */
    /* MPAddDDD 128 */
    /* MPAddQDD 64 */
    s225 = (((uint128_t ) d173) + ((uint128_t ) a1430));
    t924 = ((uint64_t ) s225);
    c106 = (s225 >> 64);
    s226 = (((uint128_t ) d175) + ((uint128_t ) a1429));
    s227 = (((uint128_t ) s226) + ((uint128_t ) c106));
    t925 = ((uint64_t ) s227);
    c107 = (s227 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s228 = (((uint128_t ) d179) + ((uint128_t ) a1428));
    t926 = ((uint64_t ) s228);
    c108 = (s228 >> 64);
    s229 = (((uint128_t ) t923) + ((uint128_t ) a1427));
    s230 = (((uint128_t ) s229) + ((uint128_t ) c108));
    t927 = ((uint64_t ) s230);
    /* MPPropagateCarry 64 */
    t928 = (t926 + c107);
    a2400 = ((t928 == 0));
    a2401 = (t927 + c107);
    t929 = ((a2400) ? (a2401) : (t927));
    /* MPExtractLow 64 */
    /* MPLessThan 128 */
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2408 = ((t914 < t906));
    a2409 = ((t914 == t906));
    a2410 = ((a2409) && (b101));
    a2411 = ((a2408) || (a2410));
    /* MPAssignDD 64 */
    /* MPEqual 64 */
    a2412 = ((t915 == t907));
    a2413 = ((a2409) && (a2412));
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2414 = ((a2413) && (b100));
    i75 = ((a2411) || (a2414));
    /* MPCondD 64 */
    a2415 = (2*a2357);
    P2[a2415] = ((i75) ? (t929) : (t923));
    a2416 = (a2415 + 1);
    P2[a2416] = ((i75) ? (t928) : (d179));
    /* MPCondD 64 */
    a2417 = (2*a2358);
    P2[a2417] = ((i75) ? (t925) : (d175));
    a2418 = (a2417 + 1);
    P2[a2418] = ((i75) ? (t924) : (d173));
    /* End of MPModSub 128 */
}

__global__ void ker_code2(uint64_t  *X, uint64_t  *Y, uint64_t *modulus, uint64_t  *twiddles, uint64_t *mu) {
    int a2419, a2420, a2421, a2422, a2423, a2424, a2425, a2426, 
            a2427, a2428, a2429, a2430, a2431, a2432, a2433, a2443, 
            a2444, a2445, a2450, a2451, a2452, a2456, a2457, a2458, 
            a2459, a2460, a2461, a2462, a2463, a2464, a2465, a2466, 
            a2467, a2468, a2469, a2470, a2471, a2479, a2480, a2481, 
            a2482, a2483, a2484, a2485, a2486, a2487, a2488, a2489, 
            a2490, a2491, a2493, a2494, a2495, a2499, a2500, a2501, 
            a2502, a2503, a2504, a2505, a2507, a2508, a2509, a2513, 
            a2521, a2522, a2523, a2524, a2525, a2526, a2527, a2528, 
            a2529, a2530, a2531, a2532, a2533, b103, b104, b105, 
            b106, b107, b108, b109, b110, b111, b112, b113, 
            b114, b115, b116, b117, b118, b119, c110, c111, 
            c112, c114, c115, c116, i76, i77, i78;
    uint64_t a1812, a1813, a1814, a1815, a1843, a1844, a1845, a1846, 
            a2434, a2435, a2436, a2437, a2438, a2439, a2440, a2441, 
            a2472, a2514, d180, d181, d182, d183, d184, d185, 
            d186, d187, d188, d189, d190, d191, d192, d193, 
            d194, d195, d196, d197, d198, d199, d200, d201, 
            d202, d203, d204, d205, d206, d207, t663, t664, 
            t665, t666, t667, t668, t669, t670, t671, t672, 
            t673, t674, t675, t676, t677, t678, t679, t680, 
            t681, t682, t683, t684, t685, t686, t932, t933, 
            t934, t935, t936, t937, t938, t939, t940, t941, 
            t942, t943, t944, t945, t946, t947, t948, t949, 
            t950, t951, t952, t953, t954, t955, t956, t957, 
            t958, t959, t960, t961, t962, t963, t964, t965, 
            t966, t967, t968, t969, t970, t971, t972, t975, 
            t976, t977, t978, t979, t980, t981, t982;
    uint128_t s231, s232, s233, s234, s235, s236, s237, s238, 
            s239, s240, s241, s242;
    a2419 = (threadIdx.x + 4);
    a2420 = (a2419 % 4);
    a2421 = (4 + a2420);
    /* Begin of MPModMul 128 */
    a2422 = (2*a2421);
    a2423 = (a2422 + 1);
    a2424 = (2*a2419);
    a2425 = (a2424 + 1);
    /* MPAssignDD 64 */
    a2426 = (2*a2422);
    t932 = twiddles[a2426];
    a2427 = (a2426 + 1);
    t933 = twiddles[a2427];
    /* MPAssignDD 64 */
    a2428 = (2*a2423);
    t934 = twiddles[a2428];
    a2429 = (a2428 + 1);
    t935 = twiddles[a2429];
    /* MPAssignDD 64 */
    a2430 = (2*a2424);
    t936 = P2[a2430];
    a2431 = (a2430 + 1);
    t937 = P2[a2431];
    /* MPAssignDD 64 */
    a2432 = (2*a2425);
    t938 = P2[a2432];
    a2433 = (a2432 + 1);
    t939 = P2[a2433];
    MPMulQDD_L2(t663, t664, t665, t666, t667, t668, t669, t670, 
    t932, t933, t934, t935, t936, t937, t938, t939);
    /* Begin of MPModDQ */
    /* Begin of MPShiftRight3 */
    /* Begin of MPShiftRight1D */
    t940 = (t667 >> 58);
    /* End of MPShiftRight1D */
    /* MPTypeCastDI 64 */
    /* Begin of MPShiftLeft1D */
    /* End of MPShiftLeft1D */
    /* MPSubDDI 64 */
    b103 = ((int) 1);
    t941 = (288230376151711744 - b103);
    /* MPBinAndD 64 */
    t942 = (((t663)&(t941)));
    t943 = (((t664)&((-1))));
    /* Begin of MPShiftLeft2D */
    a2434 = (t942 << 6);
    a2435 = (t943 >> 58);
    t944 = (((a2434)|(a2435)));
    t945 = (t943 << 6);
    /* End of MPShiftLeft2D */
    /* Begin of MPShiftRight1D */
    t946 = (t665 >> 58);
    /* End of MPShiftRight1D */
    /* MPBinOrD 64 */
    t947 = (((t945)|(t946)));
    /* Begin of MPShiftLeft2D */
    a2436 = (t665 << 6);
    a2437 = (t666 >> 58);
    t948 = (((a2436)|(a2437)));
    t949 = (t666 << 6);
    /* End of MPShiftLeft2D */
    /* MPBinOrD 64 */
    t950 = (((t949)|(t940)));
    /* End of MPShiftRight3 */
    a1812 = mu[0];
    a1813 = mu[1];
    a1814 = mu[2];
    a1815 = mu[3];
    MPMulQDD_L2(t679, t680, t681, t682, t683, t684, t685, t686, 
    t944, t947, t948, t950, a1812, a1813, a1814, a1815);
    /* Begin of MPShiftRight2 */
    /* Begin of MPShiftRight2D */
    t951 = (t679 >> 1);
    a2438 = (t679 << 63);
    a2439 = (t680 >> 1);
    t952 = (((a2438)|(a2439)));
    /* End of MPShiftRight2D */
    /* Begin of MPShiftLeft1D */
    t953 = (t680 << 63);
    /* End of MPShiftLeft1D */
    /* Begin of MPShiftRight2D */
    t954 = (t681 >> 1);
    a2440 = (t681 << 63);
    a2441 = (t682 >> 1);
    t955 = (((a2440)|(a2441)));
    /* End of MPShiftRight2D */
    /* MPBinOrD 64 */
    t956 = (((t953)|(t954)));
    /* End of MPShiftRight2 */
    a1843 = modulus[0];
    a1844 = modulus[1];
    a1845 = modulus[2];
    a1846 = modulus[3];
    MPMulQDD_L2(t671, t672, t673, t674, t675, t676, t677, t678, 
    t951, t952, t956, t955, a1843, a1844, a1845, a1846);
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d180 = (t670 - t678);
    b104 = ((t670 < t678));
    d181 = (t669 - t677);
    d182 = (d181 - b104);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2443 = ((t669 < t677));
    a2444 = ((t669 == t677));
    a2445 = ((a2444) && (b104));
    b105 = ((a2443) || (a2445));
    /* Begin of MPSubDDD 64 */
    d183 = (t668 - t676);
    b106 = ((t668 < t676));
    d184 = (t667 - t675);
    d185 = (d184 - b106);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d186 = (d183 - b105);
    b107 = ((d183 < b105));
    t957 = (d185 - b107);
    /* End of MPSubDDD 128 */
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d187 = (d180 - a1846);
    b108 = ((d180 < a1846));
    d188 = (d182 - a1845);
    d189 = (d188 - b108);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2450 = ((d182 < a1845));
    a2451 = ((d182 == a1845));
    a2452 = ((a2451) && (b108));
    b109 = ((a2450) || (a2452));
    /* Begin of MPSubDDD 64 */
    d190 = (d186 - a1844);
    b110 = ((d186 < a1844));
    d191 = (t957 - a1843);
    d192 = (d191 - b110);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d193 = (d190 - b109);
    b111 = ((d190 < b109));
    t958 = (d192 - b111);
    /* End of MPSubDDD 128 */
    /* MPLessThan 128 */
    /* MPLessThan 64 */
    a2456 = ((t957 < a1843));
    a2457 = ((t957 == a1843));
    a2458 = ((a2457) && (b110));
    a2459 = ((a2456) || (a2458));
    /* MPEqual 64 */
    a2460 = ((d186 == a1844));
    a2461 = ((a2457) && (a2460));
    /* MPLessThan 64 */
    a2462 = ((a2461) && (b109));
    i76 = ((a2459) || (a2462));
    /* MPCondD 64 */
    t959 = ((i76) ? (t957) : (t958));
    t960 = ((i76) ? (d186) : (d193));
    /* MPCondD 64 */
    t961 = ((i76) ? (d182) : (d189));
    t962 = ((i76) ? (d180) : (d187));
    /* End of MPModDQ */
    /* End of MPModMul 128 */
    a2463 = (8*blockIdx.x);
    a2464 = (2*threadIdx.x);
    a2465 = (a2463 + a2464);
    /* Begin of MPModAdd 128 */
    /* MPAddDDD 128 */
    a2466 = (a2464 + 1);
    /* MPAssignDD 64 */
    a2467 = (2*a2466);
    t963 = P2[a2467];
    a2468 = (a2467 + 1);
    t964 = P2[a2468];
    /* MPAddQDD 64 */
    s231 = (((uint128_t ) t964) + ((uint128_t ) t962));
    t965 = ((uint64_t ) s231);
    c110 = (s231 >> 64);
    s232 = (((uint128_t ) t963) + ((uint128_t ) t961));
    s233 = (((uint128_t ) s232) + ((uint128_t ) c110));
    t966 = ((uint64_t ) s233);
    c111 = (s233 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAssignDD 64 */
    a2469 = (2*a2464);
    t967 = P2[a2469];
    a2470 = (a2469 + 1);
    t968 = P2[a2470];
    /* MPAddQDD 64 */
    s234 = (((uint128_t ) t968) + ((uint128_t ) t960));
    t969 = ((uint64_t ) s234);
    c112 = (s234 >> 64);
    s235 = (((uint128_t ) t967) + ((uint128_t ) t959));
    s236 = (((uint128_t ) s235) + ((uint128_t ) c112));
    t970 = ((uint64_t ) s236);
    /* MPPropagateCarry 64 */
    t971 = (t969 + c111);
    a2471 = ((t971 == 0));
    a2472 = (t970 + c111);
    t972 = ((a2471) ? (a2472) : (t970));
    /* MPExtractLow 64 */
    /* Begin of MPModDD */
    /* MPLessThan 128 */
    /* MPLessThan 64 */
    a2479 = ((a1843 < t972));
    a2480 = ((a1843 == t972));
    a2481 = ((a1844 < t971));
    a2482 = ((a2480) && (a2481));
    a2483 = ((a2479) || (a2482));
    /* MPEqual 64 */
    a2484 = ((a1844 == t971));
    a2485 = ((a2480) && (a2484));
    /* MPLessThan 64 */
    a2486 = ((a1845 < t966));
    a2487 = ((a1845 == t966));
    a2488 = ((a1846 < t965));
    a2489 = ((a2487) && (a2488));
    a2490 = ((a2486) || (a2489));
    a2491 = ((a2485) && (a2490));
    i77 = ((a2483) || (a2491));
    /* Begin of MPSubDDD 128 */
    /* Begin of MPSubDDD 64 */
    d194 = (t965 - a1846);
    b112 = ((t965 < a1846));
    d195 = (t966 - a1845);
    d196 = (d195 - b112);
    /* End of MPSubDDD 64 */
    /* MPLessThan 64 */
    a2493 = ((t966 < a1845));
    a2494 = ((t966 == a1845));
    a2495 = ((a2494) && (b112));
    b113 = ((a2493) || (a2495));
    /* Begin of MPSubDDD 64 */
    d197 = (t971 - a1844);
    b114 = ((t971 < a1844));
    d198 = (t972 - a1843);
    d199 = (d198 - b114);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d200 = (d197 - b113);
    b115 = ((d197 < b113));
    t975 = (d199 - b115);
    /* End of MPSubDDD 128 */
    a2499 = (2*a2465);
    /* MPCondD 64 */
    a2500 = (2*a2499);
    Y[a2500] = ((i77) ? (t975) : (t972));
    a2501 = (a2500 + 1);
    Y[a2501] = ((i77) ? (d200) : (t971));
    a2502 = (a2499 + 1);
    /* MPCondD 64 */
    a2503 = (2*a2502);
    Y[a2503] = ((i77) ? (d196) : (t966));
    a2504 = (a2503 + 1);
    Y[a2504] = ((i77) ? (d194) : (t965));
    /* End of MPModDD */
    /* End of MPModAdd 128 */
    a2505 = (a2465 + 1);
    /* Begin of MPModSub 128 */
    /* Begin of MPSubDDD 128 */
    /* MPAssignDD 64 */
    /* Begin of MPSubDDD 64 */
    d201 = (t964 - t962);
    b116 = ((t964 < t962));
    d202 = (t963 - t961);
    d203 = (d202 - b116);
    /* End of MPSubDDD 64 */
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2507 = ((t963 < t961));
    a2508 = ((t963 == t961));
    a2509 = ((a2508) && (b116));
    b117 = ((a2507) || (a2509));
    /* MPAssignDD 64 */
    /* Begin of MPSubDDD 64 */
    d204 = (t968 - t960);
    b118 = ((t968 < t960));
    d205 = (t967 - t959);
    d206 = (d205 - b118);
    /* End of MPSubDDD 64 */
    /* MPSubDDI 64 */
    d207 = (d204 - b117);
    b119 = ((d204 < b117));
    t976 = (d206 - b119);
    /* End of MPSubDDD 128 */
    /* MPAddDDD 128 */
    /* MPAddQDD 64 */
    s237 = (((uint128_t ) d201) + ((uint128_t ) a1846));
    t977 = ((uint64_t ) s237);
    c114 = (s237 >> 64);
    s238 = (((uint128_t ) d203) + ((uint128_t ) a1845));
    s239 = (((uint128_t ) s238) + ((uint128_t ) c114));
    t978 = ((uint64_t ) s239);
    c115 = (s239 >> 64);
    /* MPExtractLow 64 */
    /* MPExtractCarry 64 */
    /* MPAddQDD 64 */
    s240 = (((uint128_t ) d207) + ((uint128_t ) a1844));
    t979 = ((uint64_t ) s240);
    c116 = (s240 >> 64);
    s241 = (((uint128_t ) t976) + ((uint128_t ) a1843));
    s242 = (((uint128_t ) s241) + ((uint128_t ) c116));
    t980 = ((uint64_t ) s242);
    /* MPPropagateCarry 64 */
    t981 = (t979 + c115);
    a2513 = ((t981 == 0));
    a2514 = (t980 + c115);
    t982 = ((a2513) ? (a2514) : (t980));
    /* MPExtractLow 64 */
    /* MPLessThan 128 */
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2521 = ((t967 < t959));
    a2522 = ((t967 == t959));
    a2523 = ((a2522) && (b118));
    a2524 = ((a2521) || (a2523));
    /* MPAssignDD 64 */
    /* MPEqual 64 */
    a2525 = ((t968 == t960));
    a2526 = ((a2522) && (a2525));
    /* MPAssignDD 64 */
    /* MPLessThan 64 */
    a2527 = ((a2526) && (b117));
    i78 = ((a2524) || (a2527));
    a2528 = (2*a2505);
    /* MPCondD 64 */
    a2529 = (2*a2528);
    Y[a2529] = ((i78) ? (t982) : (t976));
    a2530 = (a2529 + 1);
    Y[a2530] = ((i78) ? (t981) : (d207));
    a2531 = (a2528 + 1);
    /* MPCondD 64 */
    a2532 = (2*a2531);
    Y[a2532] = ((i78) ? (t978) : (d203));
    a2533 = (a2532 + 1);
    Y[a2533] = ((i78) ? (t977) : (d201));
    /* End of MPModSub 128 */
}

void nttmpcuda(uint64_t  *Y, uint64_t  *X, uint64_t modulus[2], uint64_t  *twiddles, uint64_t mu[2]) {
    dim3 b3(4, 1, 1), b4(4, 1, 1), b5(4, 1, 1), g1(2, 1, 1), g2(2, 1, 1), g3(2, 1, 1);
    ker_code0<<<g1, b3>>>(X, Y, modulus, twiddles, mu);
    ker_code1<<<g2, b4>>>(X, Y, modulus, twiddles, mu);
    ker_code2<<<g3, b5>>>(X, Y, modulus, twiddles, mu);
}

void destroy_nttmpcuda() {
    /* skip */
}
